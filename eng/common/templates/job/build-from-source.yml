parameters:
  jobNamePrefix: 'sourcebuild'      # Override for prefix for job names
  managedOnly: 'false'              # Specifies whether source is managed only. If so, one build platform is sufficient
  prebuiltCheck: 'true'             # Specifies whether to enforce prebuilt checking and fail if new prebuilts are introduced

jobs:
- template: /eng/common/templates/jobs/jobs.yml
  parameters:
    enablePublishUsingPipelines: true
    enablePublishBuildArtifacts: true
    enablePublishBuildAssets: true
    artifacts:
      publish:
        artifacts: true
        manifests: true
    jobs:
    - job: sourcebuild
      strategy:
        matrix:
          fedora32:
            containerResource: mcr.microsoft.com/dotnet-buildtools/prereqs:fedora-32-20200512010618-163ed2a
            jobNameSuffix: _fedora32
          centos71:
            containerResource: mcr.microsoft.com/dotnet-buildtools/prereqs:centos-7-3e800f1-20190501005343
            jobNameSuffix: _centos71
            condition: eq(parameters.managedOnly, 'false')
      displayName: ${{ parameters.jobNamePrefix }}$( variables['jobNameSuffix'] )
      workspace:
        clean: all
      container: $[ variables['containerResource'] ]
      variables:
      - name: _BuildConfig
        value: Release
      - name: _InternalBuildArgs
        value: ''
      - ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
        - name: _InternalBuildArgs
          value: >-
            /p:DotNetPublishUsingPipelines=true
            /p:OfficialBuildId=$(BUILD.BUILDNUMBER)
      steps:

      - script: |
          set -x
          df -h
          ./build.sh --ci \
            --configuration $(_BuildConfig) \
            --restore --build --pack --publish \
            $(_InternalBuildArgs) \
            /p:ArcadeBuildFromSource=true
        displayName: Build

      # Upload build logs for diagnosis.
      - task: CopyFiles@2
        displayName: Prepare BuildLogs staging directory
        inputs:
          SourceFolder: '$(Build.SourcesDirectory)'
          Contents: |
            **/*.log
            **/*.binlog
          TargetFolder: '$(Build.StagingDirectory)/BuildLogs'
          CleanTargetFolder: true
        continueOnError: true
        condition: succeededOrFailed()

      - task: PublishPipelineArtifact@1
        displayName: Publish BuildLogs
        inputs:
          targetPath: '$(Build.StagingDirectory)/BuildLogs'
          artifactName: BuildLogs
        continueOnError: true
        condition: succeededOrFailed()

# Based on - https://github.com/dotnet/arcade/blob/9b3f304c7bc9fd4d11be9ca0b466b83e98d2a191/Documentation/CorePackages/Publishing.md#moving-away-from-the-legacy-pushtoblobfeed-task
- ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
  - template: /eng/common/templates/post-build/post-build.yml
    parameters:
      enableSourceLinkValidation: true
      #Nuget and Signing Validation are not needed as we only produce a transport package.
      enableSigningValidation: false
      enableNugetValidation: false
