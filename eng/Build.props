<Project>

  <UsingTask TaskName="Microsoft.DotNet.Arcade.Sdk.SourceBuild.AddSourceToNuGetConfig" AssemblyFile="$(MSBuildProjectDirectory)/netcoreapp3.1/Microsoft.DotNet.Arcade.Sdk.dll" />

  <ItemGroup Condition=" '$(GeneratePackageSource)' == 'true' ">
    <ProjectToBuild Include="$(RepoRoot)src/referencePackageSourceGenerator/Tasks/GenerateProjectsTask.csproj" />
    <ProjectToBuild Include="$(RepoRoot)src/referencePackageSourceGenerator/GenerateSource/GenerateSource.proj" />
    <ProjectToBuild Include="$(Reporoot)src/referencePackageSourceGenerator/GenerateProjects/GenerateProjects.proj" />
  </ItemGroup>
  <ItemGroup Condition=" '$(GeneratePackageSource)' != 'true' ">
    <!--
      The following DependencyPackageProjects are ones on which other packages depend.  Adding them
      to this ItemGroup will ensure that they get built first and in order of inclusion.  Also,
      packages included here will be added to the source-build package cache when building with
      source-build to allow them to be considered in prebuilt reporting.

      Format:
      <DependencyPackageProjects Include="$(RepoRoot)src\referencePackages\src\**\Microsoft.Extensions.Options.5.0.0.csproj" />
    -->
    <DependencyPackageProjects Include="$(RepoRoot)src\referencePackages\src\**\Microsoft.Build.Framework.16.5.0.csproj" />
    <DependencyPackageProjects Include="$(RepoRoot)src\referencePackages\src\**\Microsoft.Build.Utilities.Core.16.5.0.csproj" />

    <DependencyPackageProjects Include="$(RepoRoot)src\textOnlyPackages\src\**\Microsoft.NETCore.Targets.1.1.3.csproj" />
    <DependencyPackageProjects Include="$(RepoRoot)src\referencePackages\src\**\System.Runtime.Extensions.4.3.1.csproj" />
    <DependencyPackageProjects Include="$(RepoRoot)src\referencePackages\src\**\System.Runtime.4.3.1.csproj" />
    <DependencyPackageProjects Include="$(RepoRoot)src\referencePackages\src\**\System.Text.RegularExpressions.4.3.1.csproj" />

    <DependencyPackageProjects Include="$(RepoRoot)src\referencePackages\src\**\System.Diagnostics.DiagnosticSource.5.0.0.csproj" />

    <TargetingPackageProject Include="$(RepoRoot)src\targetPacks\ILsrc\**\*.csproj" />
    <ProjectToBuild Include="@(TargetingPackageProject)" />

    <TextOnlyPackageProject Include="$(RepoRoot)src\textOnlyPackages\src\*\*\*.csproj" />
    <ProjectToBuild Include="@(TextOnlyPackageProject)" />

    <ReferencePackageProject Include="$(RepoRoot)src\referencePackages\src\**\*.csproj" />
    <ProjectToBuild Include="@(ReferencePackageProject)" />

    <ProjectToBuild Remove="@(DependencyPackageProjects)" />
  </ItemGroup>

  <!--
    Build each dependency project one at a time and then copy it's nupkg to the package feed so that dependent projects will reference
    the SBRP packages vs online packages. Specifing `Outputs` is what enables this vs building all projects at once.
  -->
  <Target Name="BuildDependencyPackageProjects"
          BeforeTargets="Execute"
          Condition="'$(GeneratePackageSource)' != 'true' and ('$(ArcadeBuildFromSource)' != 'true' or '$(ArcadeInnerBuildFromSource)' == 'true')"
          Outputs="%(DependencyPackageProjects.Identity)">

    <MSBuild
      Condition="'@(DependencyPackageProjects)' != ''"
      Projects="@(DependencyPackageProjects)"
      Targets="Restore;Build;Pack" />

    <!-- Copy packages into package cache if building with source-build -->
    <Copy
      Condition="'$(CurrentRepoSourceBuiltNupkgCacheDir)' != ''"
      SourceFiles="@(DependencyPackageProjects->'$(ArtifactsShippingPackagesDir)%(FileName).nupkg')"
      DestinationFolder="$(CurrentRepoSourceBuiltNupkgCacheDir)" />
  </Target>

  <!--
    Adding the local package cache to the NuGet.config must be done explicitly before BuildDependencyPackageProjects.
    This normally gets done by the Arcade tool.proj which doesn't have a mechanism for BuildDependencyPackageProjects
    to hook into.
  -->
  <Target Name="InitializeNuGetConfig"
          BeforeTargets="BuildDependencyPackageProjects"
          Condition="'$(GeneratePackageSource)' != 'true' and '$(ArcadeInnerBuildFromSource)' == 'true'">

      <AddSourceToNuGetConfig
        NuGetConfigFile="$(CurrentRepoSourceBuildSourceDir)NuGet.config"
        SourceName="source-build-int-nupkg-cache"
        SourcePath="$(CurrentRepoSourceBuiltNupkgCacheDir)" />

      <MakeDir Directories="$(CurrentRepoSourceBuiltNupkgCacheDir)"/>
  </Target>

  <!--
    Adding new projects is somewhat copy-paste heavy and may result in project name overlaps. Catch
    that early, as it may cause binclash otherwise.
  -->
  <Target Name="EnsureUniqueProjectNames"
          BeforeTargets="Execute">
    <ItemGroup>
      <ProjectToBuildName Include="@(ProjectToBuild -> '%(Filename)%(Extension)')" />
      <DistinctProjectToBuildName Include="@(ProjectToBuildName->Distinct())" />
    </ItemGroup>

    <Error
      Condition="@(ProjectToBuildName->Count()) != @(DistinctProjectToBuildName->Count())"
      Text="A project name is duplicated. Every project name must be distinct to have separate output directories." />
  </Target>

</Project>
