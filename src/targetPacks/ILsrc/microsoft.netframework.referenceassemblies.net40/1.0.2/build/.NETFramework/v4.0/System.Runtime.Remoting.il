
//  Microsoft (R) .NET IL Disassembler.  Version 5.0.0


// ----- DOS Header:
// Magic:                      0x5a4d
// Bytes on last page:         0x0090
// Pages in file:              0x0003
// Relocations:                0x0000
// Size of header (paragraphs):0x0004
// Min extra paragraphs:       0x0000
// Max extra paragraphs:       0xffff
// Initial (relative) SS:      0x0000
// Initial SP:                 0x00b8
// Checksum:                   0x0000
// Initial IP:                 0x0000
// Initial (relative) CS:      0x0000
// File addr. of reloc table:  0x0040
// Overlay number:             0x0000
// OEM identifier:             0x0000
// OEM info:                   0x0000
// File addr. of COFF header:  0x0080
// ----- COFF/PE Headers:
// Signature:                  0x00004550
// ----- COFF Header:
// Machine:                    0x014c
// Number of sections:         0x0003
// Time-date stamp:            0x4ba1df80
// Ptr to symbol table:        0x00000000
// Number of symbols:          0x00000000
// Size of optional header:    0x00e0
// Characteristics:            0x2022
// ----- PE Optional Header (32 bit):
// Magic:                          0x010b
// Major linker version:           0x08
// Minor linker version:           0x00
// Size of code:                   0x00011600
// Size of init.data:              0x00000800
// Size of uninit.data:            0x00000000
// Addr. of entry point:           0x0001359a
// Base of code:                   0x00002000
// Base of data:                   0x00014000
// Image base:                     0x66380000
// Section alignment:              0x00002000
// File alignment:                 0x00000200
// Major OS version:               0x0004
// Minor OS version:               0x0000
// Major image version:            0x0000
// Minor image version:            0x0000
// Major subsystem version:        0x0004
// Minor subsystem version:        0x0000
// Size of image:                  0x00018000
// Size of headers:                0x00000200
// Checksum:                       0x000166ef
// Subsystem:                      0x0003
// DLL characteristics:            0x8540
// Size of stack reserve:          0x00100000
// Size of stack commit:           0x00001000
// Size of heap reserve:           0x00100000
// Size of heap commit:            0x00001000
// Loader flags:                   0x00000000
// Directories:                    0x00000010
// 0x00000000 [0x00000000] address [size] of Export Directory:          
// 0x00013548 [0x0000004f] address [size] of Import Directory:          
// 0x00014000 [0x00000494] address [size] of Resource Directory:        
// 0x00000000 [0x00000000] address [size] of Exception Directory:       
// 0x00012000 [0x00001770] address [size] of Security Directory:        
// 0x00016000 [0x0000000c] address [size] of Base Relocation Table:     
// 0x00000000 [0x00000000] address [size] of Debug Directory:           
// 0x00000000 [0x00000000] address [size] of Architecture Specific:     
// 0x00000000 [0x00000000] address [size] of Global Pointer:            
// 0x00000000 [0x00000000] address [size] of TLS Directory:             
// 0x00000000 [0x00000000] address [size] of Load Config Directory:     
// 0x00000000 [0x00000000] address [size] of Bound Import Directory:    
// 0x00002000 [0x00000008] address [size] of Import Address Table:      
// 0x00000000 [0x00000000] address [size] of Delay Load IAT:            
// 0x00002008 [0x00000048] address [size] of CLR Header:                


// Image sections:
//              .text
//              0x000115a0 Virtual Size
//              0x00002000 Virtual Address
//              0x00011600 Size of Raw Data
//              0x00000200 Pointer to Raw Data
//              0x00000000 Pointer to Relocations
//              0x00000000 Pointer to Linenumbers
//                  0x0000 Number of Relocations
//                  0x0000 Number of Linenumbers
//              0x60000020 Characteristics
//                         CNT_CODE
//                         MEM_EXECUTE
//                         MEM_READ

//              .rsrc
//              0x00000494 Virtual Size
//              0x00014000 Virtual Address
//              0x00000600 Size of Raw Data
//              0x00011800 Pointer to Raw Data
//              0x00000000 Pointer to Relocations
//              0x00000000 Pointer to Linenumbers
//                  0x0000 Number of Relocations
//                  0x0000 Number of Linenumbers
//              0x40000040 Characteristics
//                         CNT_INITIALIZED_DATA
//                         MEM_READ

//              .reloc
//              0x0000000c Virtual Size
//              0x00016000 Virtual Address
//              0x00000200 Size of Raw Data
//              0x00011e00 Pointer to Raw Data
//              0x00000000 Pointer to Relocations
//              0x00000000 Pointer to Linenumbers
//                  0x0000 Number of Relocations
//                  0x0000 Number of Linenumbers
//              0x42000040 Characteristics
//                         CNT_INITIALIZED_DATA
//                         MEM_DISCARDABLE
//                         MEM_READ

// Base Relocation Table
//              0x00013000 Page RVA
//              0x0000000c Block Size
//              0x00000002 Number of Entries
//              Entry 1: Type 0x3 Offset 0x0000059c
//              Entry 2: Type 0x0 Offset 0x00000000

// Import Address Table
//     DLL : mscoree.dll
//              0x00002000 Import Address Table
//              0x0001358a Import Name Table
//              0          Time Date Stamp
//              0          Index of First Forwarder Reference
//
//              0x0000  _CorDllMain

// Delay Load Import Address Table
// No data.

// Entry point code:
//FF 25 00 20 38 66 


// ----- CLR Header:
// Header size:                        0x00000048
// Major runtime version:              0x0002
// Minor runtime version:              0x0005
// 0x00002160 [0x0000d580] address [size] of Metadata Directory:        
// Flags:                              0x00000009
// Entry point token:                  0x00000000
// 0x0000f6e0 [0x00003de8] address [size] of Resources Directory:       
// 0x000134c8 [0x00000080] address [size] of Strong Name Signature:     
// 0x00000000 [0x00000000] address [size] of CodeManager Table:         
// 0x00000000 [0x00000000] address [size] of VTableFixups Directory:    
// 0x00000000 [0x00000000] address [size] of Export Address Table:      
// 0x00000000 [0x00000000] address [size] of Precompile Header:         

// Metadata Header
//    Storage Signature:
//              0x424a5342 Signature
//                  0x0001 Major Version
//                  0x0001 Minor Version
//              0x00000000 Extra Data Offset
//              0x0000000c Version String Length
//              'v4.0.30319' Version String
//    Storage Header:
//                    0x00 Flags
//                  0x0005 Number of Streams
//    Stream 1:
//              0x0000006c Offset
//              0x00002a48 Size
//              '#~' Name
//    Stream 2:
//              0x00002ab4 Offset
//              0x000019a8 Size
//              '#Strings' Name
//    Stream 3:
//              0x0000445c Offset
//              0x000061a4 Size
//              '#US' Name
//    Stream 4:
//              0x0000a600 Offset
//              0x00000010 Size
//              '#GUID' Name
//    Stream 5:
//              0x0000a610 Offset
//              0x00002f70 Size
//              '#Blob' Name

//    Metadata Stream Header:
//              0x00000000 Reserved
//                    0x02 Major
//                    0x00 Minor
//                    0x00 Heaps
//                    0x01 Rid
//      0x0000030905a05f57 MaskValid
//      0x000016003301fa00 Sorted

// Code Manager Table:
//  default


// Export Address Table Jumps:
// No data.

// File size            : 79728
// PE header size       : 512 (496 used)    ( 0.64%)
// PE additional info   : 7343              ( 9.21%)
// Num.of PE sections   : 3
// CLR header size     : 72                 ( 0.09%)
// CLR meta-data size  : 54656              (68.55%)
// CLR additional info : 15976              (20.04%)
// CLR method headers  : 271                ( 0.34%)
// Managed code         : 0                 ( 0.00%)
// Data                 : 2048              ( 2.57%)
// Unaccounted          : -1150             (-1.44%)

// Num.of PE sections   : 3
//   .text    - 71168
//   .rsrc    - 1536
//   .reloc   - 512

// CLR meta-data size  : 54656
//   Module        -    1 (10 bytes)
//   TypeDef       -   38 (532 bytes)     1 interfaces, 0 explicit layout
//   TypeRef       -   71 (426 bytes)
//   MethodDef     -  273 (3822 bytes)    2 abstract, 0 native, 271 bodies
//   FieldDef      -   99 (594 bytes)     0 constant
//   MemberRef     -   23 (138 bytes)
//   ParamDef      -  330 (1980 bytes)
//   Constant      -   84 (504 bytes)
//   CustomAttribute-   30 (180 bytes)
//   InterfaceImpl -   56 (224 bytes)
//   PropertyMap   -   23 (92 bytes)
//   Property      -   87 (522 bytes)
//   MethodSemantic-  121 (726 bytes)
//   Security      -  134 (804 bytes)
//   ModuleRef     -    2 (4 bytes)
//   Assembly      -    1 (22 bytes)
//   AssemblyRef   -    6 (120 bytes)
//   ManifestResource-    1 (12 bytes)
//   NestedClass   -    2 (8 bytes)
//   Strings       -  6566 bytes
//   Blobs         - 12144 bytes
//   UserStrings   - 24996 bytes
//   Guids         -    16 bytes
//   Uncategorized -   214 bytes

// CLR additional info : 15976
//   Resources         - 15848

// CLR method headers : 271
//   Num.of method bodies  - 271
//   Num.of fat headers    - 0
//   Num.of tiny headers   - 271

// Managed code : 0
//   Ave method size - 0
// Classes defined in this module:
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Class FXAssembly                     (abstract) (auto) (ansi) (sealed) 
// Class ThisAssembly                   (abstract) (auto) (ansi) (sealed) 
// Class AssemblyRef                    (abstract) (auto) (ansi) (sealed) 
// Class CommonTransportKeys            (public) (auto) (ansi) 
// Class SocketCachePolicy              (public) (auto) (ansi) (sealed) 
// Interface IAuthorizeRemotingConnection   (public) (abstract) (auto) (ansi) 
// Class HttpChannel                    (public) (auto) (ansi) 
// Class HttpClientChannel              (public) (auto) (ansi) 
// Class HttpServerChannel              (public) (auto) (ansi) 
// Class HttpRemotingHandler            (public) (auto) (ansi) 
// Class HttpRemotingHandlerFactory     (public) (auto) (ansi) 
// Class TcpChannel                     (public) (auto) (ansi) 
// Class TcpClientChannel               (public) (auto) (ansi) 
// Class TcpServerChannel               (public) (auto) (ansi) 
// Class IpcChannel                     (public) (auto) (ansi) 
// Class IpcServerChannel               (public) (auto) (ansi) 
// Class IpcClientChannel               (public) (auto) (ansi) 
// Class BinaryClientFormatterSinkProvider (public) (auto) (ansi) 
// Class BinaryClientFormatterSink      (public) (auto) (ansi) 
// Class BinaryServerFormatterSinkProvider (public) (auto) (ansi) 
// Class BinaryServerFormatterSink      (public) (auto) (ansi) 
// Class Protocol                       (auto) (ansi) (sealed) (nested public) 
// Class SoapClientFormatterSinkProvider (public) (auto) (ansi) 
// Class SoapClientFormatterSink        (public) (auto) (ansi) 
// Class SoapServerFormatterSinkProvider (public) (auto) (ansi) 
// Class SoapServerFormatterSink        (public) (auto) (ansi) 
// Class Protocol                       (auto) (ansi) (sealed) (nested public) 
// Class MetaData                       (public) (auto) (ansi) 
// Class ServiceType                    (public) (auto) (ansi) 
// Class SdlChannelSinkProvider         (public) (auto) (ansi) 
// Class SdlChannelSink                 (public) (auto) (ansi) 
// Class SUDSParserException            (public) (auto) (ansi) 
// Class SUDSGeneratorException         (public) (auto) (ansi) 
// Class SdlType                        (public) (auto) (ansi) (sealed) 
// Class RemotingClientProxy            (public) (abstract) (auto) (ansi) 
// Class RemotingService                (public) (auto) (ansi) 
// Class <PrivateImplementationDetails>{04D68D05-8B2D-4F4B-BE4D-04DF27415058} (auto) (ansi) 
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


// Metadata version: v4.0.30319
.module extern advapi32.dll /*1A000001*/
.module extern kernel32.dll /*1A000002*/
.assembly extern /*23000001*/ mscorlib
{
  .publickeytoken = (B7 7A 5C 56 19 34 E0 89 )                         // .z\V.4..
  .ver 4:0:0:0
}
.assembly extern /*23000002*/ System
{
  .publickeytoken = (B7 7A 5C 56 19 34 E0 89 )                         // .z\V.4..
  .ver 4:0:0:0
}
.assembly extern /*23000003*/ System.Web
{
  .publickeytoken = (B0 3F 5F 7F 11 D5 0A 3A )                         // .?_....:
  .ver 4:0:0:0
}
.assembly extern /*23000004*/ System.Runtime.Serialization.Formatters.Soap
{
  .publickeytoken = (B0 3F 5F 7F 11 D5 0A 3A )                         // .?_....:
  .ver 4:0:0:0
}
.assembly extern /*23000005*/ System.Xml
{
  .publickeytoken = (B7 7A 5C 56 19 34 E0 89 )                         // .z\V.4..
  .ver 4:0:0:0
}
.assembly extern /*23000006*/ System.DirectoryServices
{
  .publickeytoken = (B0 3F 5F 7F 11 D5 0A 3A )                         // .?_....:
  .ver 4:0:0:0
}
.assembly /*20000001*/ noplatform System.Runtime.Remoting
{
  .custom /*0C000002:0A000001*/ instance void [mscorlib/*23000001*/]System.Runtime.CompilerServices.CompilationRelaxationsAttribute/*01000030*/::.ctor(int32) /* 0A000001 */ = ( 01 00 08 00 00 00 00 00 ) 
  .custom /*0C000003:0A000002*/ instance void [mscorlib/*23000001*/]System.Runtime.CompilerServices.RuntimeCompatibilityAttribute/*01000031*/::.ctor() /* 0A000002 */ = ( 01 00 01 00 54 02 16 57 72 61 70 4E 6F 6E 45 78   // ....T..WrapNonEx
                                                                                                                                                                          63 65 70 74 69 6F 6E 54 68 72 6F 77 73 01 )       // ceptionThrows.
  .custom /*0C000004:0A000003*/ instance void [mscorlib/*23000001*/]System.Runtime.InteropServices.ComCompatibleVersionAttribute/*01000032*/::.ctor(int32,
                                                                                                                                                    int32,
                                                                                                                                                    int32,
                                                                                                                                                    int32) /* 0A000003 */ = ( 01 00 01 00 00 00 00 00 00 00 E4 0C 00 00 00 00 
                                                                                                                                                                              00 00 00 00 ) 
  .custom /*0C000005:0A000004*/ instance void [mscorlib/*23000001*/]System.Runtime.InteropServices.TypeLibVersionAttribute/*01000033*/::.ctor(int32,
                                                                                                                                              int32) /* 0A000004 */ = ( 01 00 04 00 00 00 00 00 00 00 00 00 ) 
  .custom /*0C000006:0A000005*/ instance void [mscorlib/*23000001*/]System.Runtime.InteropServices.ComVisibleAttribute/*01000034*/::.ctor(bool) /* 0A000005 */ = ( 01 00 00 00 00 ) 
  .custom /*0C000007:0A000006*/ instance void [mscorlib/*23000001*/]System.CLSCompliantAttribute/*01000035*/::.ctor(bool) /* 0A000006 */ = ( 01 00 00 00 00 ) 
  .custom /*0C000008:0A000007*/ instance void [mscorlib/*23000001*/]System.Reflection.AssemblyTitleAttribute/*01000036*/::.ctor(string) /* 0A000007 */ = ( 01 00 1B 53 79 73 74 65 6D 2E 52 75 6E 74 69 6D   // ...System.Runtim
                                                                                                                                                           65 2E 52 65 6D 6F 74 69 6E 67 2E 64 6C 6C 00 00 ) // e.Remoting.dll..
  .custom /*0C000009:0A000008*/ instance void [mscorlib/*23000001*/]System.Reflection.AssemblyDescriptionAttribute/*01000037*/::.ctor(string) /* 0A000008 */ = ( 01 00 1B 53 79 73 74 65 6D 2E 52 75 6E 74 69 6D   // ...System.Runtim
                                                                                                                                                                 65 2E 52 65 6D 6F 74 69 6E 67 2E 64 6C 6C 00 00 ) // e.Remoting.dll..
  .custom /*0C00000A:0A000009*/ instance void [mscorlib/*23000001*/]System.Reflection.AssemblyDefaultAliasAttribute/*01000038*/::.ctor(string) /* 0A000009 */ = ( 01 00 1B 53 79 73 74 65 6D 2E 52 75 6E 74 69 6D   // ...System.Runtim
                                                                                                                                                                  65 2E 52 65 6D 6F 74 69 6E 67 2E 64 6C 6C 00 00 ) // e.Remoting.dll..
  .custom /*0C00000B:0A00000A*/ instance void [mscorlib/*23000001*/]System.Reflection.AssemblyCompanyAttribute/*01000039*/::.ctor(string) /* 0A00000A */ = ( 01 00 15 4D 69 63 72 6F 73 6F 66 74 20 43 6F 72   // ...Microsoft Cor
                                                                                                                                                             70 6F 72 61 74 69 6F 6E 00 00 )                   // poration..
  .custom /*0C00000C:0A00000B*/ instance void [mscorlib/*23000001*/]System.Reflection.AssemblyProductAttribute/*0100003A*/::.ctor(string) /* 0A00000B */ = ( 01 00 1A 4D 69 63 72 6F 73 6F 66 74 C2 AE 20 2E   // ...Microsoft.. .
                                                                                                                                                             4E 45 54 20 46 72 61 6D 65 77 6F 72 6B 00 00 )    // NET Framework..
  .custom /*0C00000D:0A00000C*/ instance void [mscorlib/*23000001*/]System.Reflection.AssemblyCopyrightAttribute/*0100003B*/::.ctor(string) /* 0A00000C */ = ( 01 00 2F C2 A9 20 4D 69 63 72 6F 73 6F 66 74 20   // ../.. Microsoft 
                                                                                                                                                               43 6F 72 70 6F 72 61 74 69 6F 6E 2E 20 20 41 6C   // Corporation.  Al
                                                                                                                                                               6C 20 72 69 67 68 74 73 20 72 65 73 65 72 76 65   // l rights reserve
                                                                                                                                                               64 2E 00 00 )                                     // d...
  .custom /*0C00000E:0A00000D*/ instance void [mscorlib/*23000001*/]System.Reflection.AssemblyFileVersionAttribute/*0100003C*/::.ctor(string) /* 0A00000D */ = ( 01 00 0B 34 2E 30 2E 33 30 33 31 39 2E 31 00 00 ) // ...4.0.30319.1..
  .custom /*0C00000F:0A00000E*/ instance void [mscorlib/*23000001*/]System.Reflection.AssemblyInformationalVersionAttribute/*0100003D*/::.ctor(string) /* 0A00000E */ = ( 01 00 0B 34 2E 30 2E 33 30 33 31 39 2E 31 00 00 ) // ...4.0.30319.1..
  .custom /*0C000010:0A00000F*/ instance void [mscorlib/*23000001*/]System.Resources.SatelliteContractVersionAttribute/*0100003E*/::.ctor(string) /* 0A00000F */ = ( 01 00 07 34 2E 30 2E 30 2E 30 00 00 )             // ...4.0.0.0..
  .custom /*0C000011:0A000010*/ instance void [mscorlib/*23000001*/]System.Resources.NeutralResourcesLanguageAttribute/*0100003F*/::.ctor(string) /* 0A000010 */ = ( 01 00 05 65 6E 2D 55 53 00 00 )                   // ...en-US..
  .custom /*0C000012:0A000011*/ instance void [mscorlib/*23000001*/]System.Reflection.AssemblyDelaySignAttribute/*01000040*/::.ctor(bool) /* 0A000011 */ = ( 01 00 01 00 00 ) 
  .custom /*0C000013:0A000012*/ instance void [mscorlib/*23000001*/]System.Reflection.AssemblyKeyFileAttribute/*01000041*/::.ctor(string) /* 0A000012 */ = ( 01 00 24 66 3A 5C 64 64 5C 54 6F 6F 6C 73 5C 64   // ..$f:\dd\Tools\d
                                                                                                                                                             65 76 64 69 76 5C 65 63 6D 61 70 75 62 6C 69 63   // evdiv\ecmapublic
                                                                                                                                                             6B 65 79 2E 73 6E 6B 00 00 )                      // key.snk..

  // --- The following custom attribute is added automatically, do not uncomment -------
  //  .custom /*0C000014:0A000013*/ instance void [mscorlib/*23000001*/]System.Diagnostics.DebuggableAttribute/*01000042*/::.ctor(valuetype [mscorlib/*23000001*/]System.Diagnostics.DebuggableAttribute/*01000042*//DebuggingModes/*01000043*/) /* 0A000013 */ = ( 01 00 02 00 00 00 00 00 ) 

  .custom /*0C000015:0A000014*/ instance void [mscorlib/*23000001*/]System.Runtime.CompilerServices.ReferenceAssemblyAttribute/*01000044*/::.ctor() /* 0A000014 */ = ( 01 00 00 00 ) 
  .permissionset reqmin
             = {class 'System.Security.Permissions.SecurityPermissionAttribute, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089' = {property bool 'SkipVerification' = bool(true)}}
  .publickey = (00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 ) 
  .hash algorithm 0x00008004
  .ver 4:0:0:0
}
.module System.Runtime.Remoting.dll
// MVID: {fefabeaf-8021-4f46-a089-661ae8ab8452}
.custom /*0C000001:0A000015*/ instance void [mscorlib/*23000001*/]System.Security.UnverifiableCodeAttribute/*01000045*/::.ctor() /* 0A000015 */ = ( 01 00 00 00 ) 
.imagebase 0x66380000
.file alignment 0x00000200
.stackreserve 0x00100000
.subsystem 0x0003       // WINDOWS_CUI
.corflags 0x00000009    //  ILONLY
// Image base: 0x00007FED679F6000


// =============== CLASS MEMBERS DECLARATION ===================

.class /*02000002*/ private abstract auto ansi sealed beforefieldinit FXAssembly
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
{
  .field /*04000001*/ static assembly literal string Version = "4.0.0.0"
} // end of class FXAssembly

.class /*02000003*/ private abstract auto ansi sealed beforefieldinit ThisAssembly
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
{
  .field /*04000002*/ static assembly literal string Title = "System.Runtime.Remoting.dll"
  .field /*04000003*/ static assembly literal string Description = "System.Runtime.Remoting.dll"
  .field /*04000004*/ static assembly literal string DefaultAlias = "System.Runtime.Remoting.dll"
  .field /*04000005*/ static assembly literal string Copyright = bytearray (A9 00 20 00 4D 00 69 00 63 00 72 00 6F 00 73 00   // .. .M.i.c.r.o.s.
                                                                            6F 00 66 00 74 00 20 00 43 00 6F 00 72 00 70 00   // o.f.t. .C.o.r.p.
                                                                            6F 00 72 00 61 00 74 00 69 00 6F 00 6E 00 2E 00   // o.r.a.t.i.o.n...
                                                                            20 00 20 00 41 00 6C 00 6C 00 20 00 72 00 69 00   //  . .A.l.l. .r.i.
                                                                            67 00 68 00 74 00 73 00 20 00 72 00 65 00 73 00   // g.h.t.s. .r.e.s.
                                                                            65 00 72 00 76 00 65 00 64 00 2E 00 )             // e.r.v.e.d...
  .field /*04000006*/ static assembly literal string Version = "4.0.0.0"
  .field /*04000007*/ static assembly literal string InformationalVersion = "4.0.30319.1"
  .field /*04000008*/ static assembly literal string DailyBuildNumberStr = "30319"
  .field /*04000009*/ static assembly literal string BuildRevisionStr = "1"
  .field /*0400000A*/ static assembly literal int32 DailyBuildNumber = int32(0x0000766F)
} // end of class ThisAssembly

.class /*02000004*/ private abstract auto ansi sealed beforefieldinit AssemblyRef
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
{
  .field /*0400000B*/ static assembly literal string EcmaPublicKey = "b77a5c561934e089"
  .field /*0400000C*/ static assembly literal string EcmaPublicKeyToken = "b77a5c561934e089"
  .field /*0400000D*/ static assembly literal string EcmaPublicKeyFull = "00000000000000000400000000000000"
  .field /*0400000E*/ static assembly literal string SilverlightPublicKey = "31bf3856ad364e35"
  .field /*0400000F*/ static assembly literal string SilverlightPublicKeyToken = "31bf3856ad364e35"
  .field /*04000010*/ static assembly literal string SilverlightPublicKeyFull = "00240000048000009400000006020000002400005253413100"
  + "04000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA"
  + "31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC365"
  + "2BF5C308055DA9"
  .field /*04000011*/ static assembly literal string SilverlightPlatformPublicKey = "7cec85d7bea7798e"
  .field /*04000012*/ static assembly literal string SilverlightPlatformPublicKeyToken = "7cec85d7bea7798e"
  .field /*04000013*/ static assembly literal string SilverlightPlatformPublicKeyFull = "00240000048000009400000006020000002400005253413100"
  + "040000010001008D56C76F9E8649383049F383C44BE0EC204181822A6C31CF5EB7EF486944D032188EA1D3920763712CCB12D75FB77E9811149E6148E5D32FBAAB37611C"
  + "1878DDC19E20EF135D0CB2CFF2BFEC3D115810C3D9069638FE4BE215DBF795861920E5AB6F7DB2E2CEEF136AC23D5DD2BF031700AEC232F6C6B1C785B4305C123B37AB"
  .field /*04000014*/ static assembly literal string PlatformPublicKey = "b77a5c561934e089"
  .field /*04000015*/ static assembly literal string PlatformPublicKeyToken = "b77a5c561934e089"
  .field /*04000016*/ static assembly literal string PlatformPublicKeyFull = "00000000000000000400000000000000"
  .field /*04000017*/ static assembly literal string Mscorlib = "mscorlib, Version=4.0.0.0, Culture=neutral, Public"
  + "KeyToken=b77a5c561934e089"
  .field /*04000018*/ static assembly literal string SystemData = "System.Data, Version=4.0.0.0, Culture=neutral, Pub"
  + "licKeyToken=b77a5c561934e089"
  .field /*04000019*/ static assembly literal string SystemDataOracleClient = "System.Data.OracleClient, Version=4.0.0.0, Culture"
  + "=neutral, PublicKeyToken=b77a5c561934e089"
  .field /*0400001A*/ static assembly literal string System = "System, Version=4.0.0.0, Culture=neutral, PublicKe"
  + "yToken=b77a5c561934e089"
  .field /*0400001B*/ static assembly literal string SystemCore = "System.Core, Version=4.0.0.0, Culture=neutral, Pub"
  + "licKeyToken=b77a5c561934e089"
  .field /*0400001C*/ static assembly literal string SystemNumerics = "System.Numerics, Version=4.0.0.0, Culture=neutral,"
  + " PublicKeyToken=b77a5c561934e089"
  .field /*0400001D*/ static assembly literal string SystemRuntimeRemoting = "System.Runtime.Remoting, Version=4.0.0.0, Culture="
  + "neutral, PublicKeyToken=b77a5c561934e089"
  .field /*0400001E*/ static assembly literal string SystemWindowsForms = "System.Windows.Forms, Version=4.0.0.0, Culture=neu"
  + "tral, PublicKeyToken=b77a5c561934e089"
  .field /*0400001F*/ static assembly literal string SystemXml = "System.Xml, Version=4.0.0.0, Culture=neutral, Publ"
  + "icKeyToken=b77a5c561934e089"
  .field /*04000020*/ static assembly literal string MicrosoftPublicKey = "b03f5f7f11d50a3a"
  .field /*04000021*/ static assembly literal string MicrosoftPublicKeyToken = "b03f5f7f11d50a3a"
  .field /*04000022*/ static assembly literal string MicrosoftPublicKeyFull = "00240000048000009400000006020000002400005253413100"
  + "0400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4"
  + "E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518"
  + "206DC093344D5AD293"
  .field /*04000023*/ static assembly literal string SharedLibPublicKey = "31bf3856ad364e35"
  .field /*04000024*/ static assembly literal string SharedLibPublicKeyToken = "31bf3856ad364e35"
  .field /*04000025*/ static assembly literal string SharedLibPublicKeyFull = "00240000048000009400000006020000002400005253413100"
  + "04000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718"
  + "EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247AD"
  + "C3652BF5C308055DA9"
  .field /*04000026*/ static assembly literal string SystemComponentModelDataAnnotations = "System.ComponentModel.DataAnnotations, Version=4.0"
  + ".0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
  .field /*04000027*/ static assembly literal string SystemConfiguration = "System.Configuration, Version=4.0.0.0, Culture=neu"
  + "tral, PublicKeyToken=b03f5f7f11d50a3a"
  .field /*04000028*/ static assembly literal string SystemConfigurationInstall = "System.Configuration.Install, Version=4.0.0.0, Cul"
  + "ture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
  .field /*04000029*/ static assembly literal string SystemDeployment = "System.Deployment, Version=4.0.0.0, Culture=neutra"
  + "l, PublicKeyToken=b03f5f7f11d50a3a"
  .field /*0400002A*/ static assembly literal string SystemDesign = "System.Design, Version=4.0.0.0, Culture=neutral, P"
  + "ublicKeyToken=b03f5f7f11d50a3a"
  .field /*0400002B*/ static assembly literal string SystemDirectoryServices = "System.DirectoryServices, Version=4.0.0.0, Culture"
  + "=neutral, PublicKeyToken=b03f5f7f11d50a3a"
  .field /*0400002C*/ static assembly literal string SystemDrawingDesign = "System.Drawing.Design, Version=4.0.0.0, Culture=ne"
  + "utral, PublicKeyToken=b03f5f7f11d50a3a"
  .field /*0400002D*/ static assembly literal string SystemDrawing = "System.Drawing, Version=4.0.0.0, Culture=neutral, "
  + "PublicKeyToken=b03f5f7f11d50a3a"
  .field /*0400002E*/ static assembly literal string SystemEnterpriseServices = "System.EnterpriseServices, Version=4.0.0.0, Cultur"
  + "e=neutral, PublicKeyToken=b03f5f7f11d50a3a"
  .field /*0400002F*/ static assembly literal string SystemManagement = "System.Management, Version=4.0.0.0, Culture=neutra"
  + "l, PublicKeyToken=b03f5f7f11d50a3a"
  .field /*04000030*/ static assembly literal string SystemMessaging = "System.Messaging, Version=4.0.0.0, Culture=neutral"
  + ", PublicKeyToken=b03f5f7f11d50a3a"
  .field /*04000031*/ static assembly literal string SystemRuntimeSerializationFormattersSoap = "System.Runtime.Serialization.Formatters.Soap, Vers"
  + "ion=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
  .field /*04000032*/ static assembly literal string SystemSecurity = "System.Security, Version=4.0.0.0, Culture=neutral,"
  + " PublicKeyToken=b03f5f7f11d50a3a"
  .field /*04000033*/ static assembly literal string SystemServiceProcess = "System.ServiceProcess, Version=4.0.0.0, Culture=ne"
  + "utral, PublicKeyToken=b03f5f7f11d50a3a"
  .field /*04000034*/ static assembly literal string SystemWeb = "System.Web, Version=4.0.0.0, Culture=neutral, Publ"
  + "icKeyToken=b03f5f7f11d50a3a"
  .field /*04000035*/ static assembly literal string SystemWebAbstractions = "System.Web.Abstractions, Version=4.0.0.0, Culture="
  + "neutral, PublicKeyToken=31bf3856ad364e35"
  .field /*04000036*/ static assembly literal string SystemWebDynamicData = "System.Web.DynamicData, Version=4.0.0.0, Culture=n"
  + "eutral, PublicKeyToken=31bf3856ad364e35"
  .field /*04000037*/ static assembly literal string SystemWebDynamicDataDesign = "System.Web.DynamicData.Design, Version=4.0.0.0, Cu"
  + "lture=neutral, PublicKeyToken=31bf3856ad364e35"
  .field /*04000038*/ static assembly literal string SystemWebEntityDesign = "System.Web.Entity.Design, Version=4.0.0.0, Culture"
  + "=neutral, PublicKeyToken=b77a5c561934e089"
  .field /*04000039*/ static assembly literal string SystemWebExtensions = "System.Web.Extensions, Version=4.0.0.0, Culture=ne"
  + "utral, PublicKeyToken=31bf3856ad364e35"
  .field /*0400003A*/ static assembly literal string SystemWebExtensionsDesign = "System.Web.Extensions.Design, Version=4.0.0.0, Cul"
  + "ture=neutral, PublicKeyToken=31bf3856ad364e35"
  .field /*0400003B*/ static assembly literal string SystemWebMobile = "System.Web.Mobile, Version=4.0.0.0, Culture=neutra"
  + "l, PublicKeyToken=b03f5f7f11d50a3a"
  .field /*0400003C*/ static assembly literal string SystemWebRegularExpressions = "System.Web.RegularExpressions, Version=4.0.0.0, Cu"
  + "lture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
  .field /*0400003D*/ static assembly literal string SystemWebRouting = "System.Web.Routing, Version=4.0.0.0, Culture=neutr"
  + "al, PublicKeyToken=31bf3856ad364e35"
  .field /*0400003E*/ static assembly literal string SystemWebServices = "System.Web.Services, Version=4.0.0.0, Culture=neut"
  + "ral, PublicKeyToken=b03f5f7f11d50a3a"
  .field /*0400003F*/ static assembly literal string WindowsBase = "WindowsBase, Version=4.0.0.0, Culture=neutral, Pub"
  + "licKeyToken=31bf3856ad364e35"
  .field /*04000040*/ static assembly literal string MicrosoftVisualStudio = "Microsoft.VisualStudio, Version=4.0.0.0, Culture=n"
  + "eutral, PublicKeyToken=b03f5f7f11d50a3a"
  .field /*04000041*/ static assembly literal string MicrosoftVisualStudioWindowsForms = "Microsoft.VisualStudio.Windows.Forms, Version=4.0."
  + "0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
  .field /*04000042*/ static assembly literal string VJSharpCodeProvider = "VJSharpCodeProvider, Version=4.0.0.0, Culture=neut"
  + "ral, PublicKeyToken=b03f5f7f11d50a3a"
  .field /*04000043*/ static assembly literal string ASPBrowserCapsPublicKey = "b7bd7678b977bd8f"
  .field /*04000044*/ static assembly literal string ASPBrowserCapsFactory = "ASP.BrowserCapsFactory, Version=4.0.0.0, Culture=n"
  + "eutral, PublicKeyToken=b7bd7678b977bd8f"
  .field /*04000045*/ static assembly literal string MicrosoftVSDesigner = "Microsoft.VSDesigner, Version=10.0.0.0, Culture=ne"
  + "utral, PublicKeyToken=b03f5f7f11d50a3a"
  .field /*04000046*/ static assembly literal string MicrosoftVisualStudioWeb = "Microsoft.VisualStudio.Web, Version=10.0.0.0, Cult"
  + "ure=neutral, PublicKeyToken=b03f5f7f11d50a3a"
  .field /*04000047*/ static assembly literal string MicrosoftWebDesign = "Microsoft.Web.Design.Client, Version=10.0.0.0, Cul"
  + "ture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
  .field /*04000048*/ static assembly literal string MicrosoftVSDesignerMobile = "Microsoft.VSDesigner.Mobile, Version=8.0.0.0, Cult"
  + "ure=neutral, PublicKeyToken=b03f5f7f11d50a3a"
  .field /*04000049*/ static assembly literal string MicrosoftJScript = "Microsoft.JScript, Version=8.0.0.0, Culture=neutra"
  + "l, PublicKeyToken=b03f5f7f11d50a3a"
} // end of class AssemblyRef

.class /*02000005*/ public auto ansi beforefieldinit System.Runtime.Remoting.Channels.CommonTransportKeys
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
{
  .field /*0400004A*/ public static literal string IPAddress = "__IPAddress"
  .field /*0400004B*/ public static literal string ConnectionId = "__ConnectionId"
  .field /*0400004C*/ public static literal string RequestUri = "__RequestUri"
  .method /*06000001*/ public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x2050
    // Code size       0 (0x0)
  } // end of method CommonTransportKeys::.ctor

} // end of class System.Runtime.Remoting.Channels.CommonTransportKeys

.class /*02000006*/ public auto ansi sealed System.Runtime.Remoting.Channels.SocketCachePolicy
       extends [mscorlib/*23000001*/]System.Enum/*01000002*/
{
  .field /*0400004D*/ public specialname rtspecialname int32 value__
  .field /*0400004E*/ public static literal valuetype System.Runtime.Remoting.Channels.SocketCachePolicy/*02000006*/ Default = int32(0x00000000)
  .field /*0400004F*/ public static literal valuetype System.Runtime.Remoting.Channels.SocketCachePolicy/*02000006*/ AbsoluteTimeout = int32(0x00000001)
} // end of class System.Runtime.Remoting.Channels.SocketCachePolicy

.class /*02000007*/ interface public abstract auto ansi System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection
{
  .method /*06000002*/ public hidebysig newslot abstract virtual 
          instance bool  IsConnectingEndPointAuthorized(class [System/*23000002*/]System.Net.EndPoint/*01000003*/ endPoint) cil managed
  // SIG: 20 01 02 12 0D
  {
    // Method begins at RVA 0x0
  } // end of method IAuthorizeRemotingConnection::IsConnectingEndPointAuthorized

  .method /*06000003*/ public hidebysig newslot abstract virtual 
          instance bool  IsConnectingIdentityAuthorized(class [mscorlib/*23000001*/]System.Security.Principal.IIdentity/*01000004*/ identity) cil managed
  // SIG: 20 01 02 12 11
  {
    // Method begins at RVA 0x0
  } // end of method IAuthorizeRemotingConnection::IsConnectingIdentityAuthorized

} // end of class System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection

.class /*02000008*/ public auto ansi beforefieldinit System.Runtime.Remoting.Channels.Http.HttpChannel
       extends [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.BaseChannelWithProperties/*01000005*/
       implements [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IChannelReceiver/*01000006*/,
                  [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IChannelSender/*01000007*/,
                  [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IChannel/*01000008*/,
                  [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IChannelReceiverHook/*01000009*/,
                  [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.ISecurableChannel/*0100000A*/
{
  .custom /*0C000016:0A000016*/ instance void [mscorlib/*23000001*/]System.Reflection.DefaultMemberAttribute/*01000046*/::.ctor(string) /* 0A000016 */ = ( 01 00 04 49 74 65 6D 00 00 )                      // ...Item..
  .method /*06000004*/ public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x2051
    // Code size       0 (0x0)
  } // end of method HttpChannel::.ctor

  .method /*06000005*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(int32 port) cil managed
  // SIG: 20 01 01 08
  {
    // Method begins at RVA 0x2052
    // Code size       0 (0x0)
  } // end of method HttpChannel::.ctor

  .method /*06000006*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib/*23000001*/]System.Collections.IDictionary/*0100000B*/ properties,
                               class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IClientChannelSinkProvider/*0100000C*/ clientSinkProvider,
                               class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSinkProvider/*0100000D*/ serverSinkProvider) cil managed
  // SIG: 20 03 01 12 2D 12 31 12 35
  {
    // Method begins at RVA 0x2053
    // Code size       0 (0x0)
  } // end of method HttpChannel::.ctor

  .method /*06000007*/ public hidebysig newslot specialname virtual final 
          instance bool  get_IsSecured() cil managed
  // SIG: 20 00 02
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x2054
    // Code size       0 (0x0)
  } // end of method HttpChannel::get_IsSecured

  .method /*06000008*/ public hidebysig newslot specialname virtual final 
          instance void  set_IsSecured(bool 'value') cil managed
  // SIG: 20 01 01 02
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x2055
    // Code size       0 (0x0)
  } // end of method HttpChannel::set_IsSecured

  .method /*06000009*/ public hidebysig newslot specialname virtual final 
          instance int32  get_ChannelPriority() cil managed
  // SIG: 20 00 08
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x2056
    // Code size       0 (0x0)
  } // end of method HttpChannel::get_ChannelPriority

  .method /*0600000A*/ public hidebysig newslot specialname virtual final 
          instance string  get_ChannelName() cil managed
  // SIG: 20 00 0E
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x2057
    // Code size       0 (0x0)
  } // end of method HttpChannel::get_ChannelName

  .method /*0600000B*/ public hidebysig newslot virtual final 
          instance string  Parse(string url,
                                 [out] string& objectURI) cil managed
  // SIG: 20 02 0E 0E 10 0E
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x2058
    // Code size       0 (0x0)
  } // end of method HttpChannel::Parse

  .method /*0600000C*/ public hidebysig newslot virtual final 
          instance class [mscorlib/*23000001*/]System.Runtime.Remoting.Messaging.IMessageSink/*0100000E*/ 
          CreateMessageSink(string url,
                            object remoteChannelData,
                            [out] string& objectURI) cil managed
  // SIG: 20 03 12 39 0E 1C 10 0E
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x2059
    // Code size       0 (0x0)
  } // end of method HttpChannel::CreateMessageSink

  .method /*0600000D*/ public hidebysig newslot specialname virtual final 
          instance object  get_ChannelData() cil managed
  // SIG: 20 00 1C
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x205a
    // Code size       0 (0x0)
  } // end of method HttpChannel::get_ChannelData

  .method /*0600000E*/ public hidebysig newslot virtual final 
          instance string[]  GetUrlsForUri(string objectURI) cil managed
  // SIG: 20 01 1D 0E 0E
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x205b
    // Code size       0 (0x0)
  } // end of method HttpChannel::GetUrlsForUri

  .method /*0600000F*/ public hidebysig newslot virtual final 
          instance void  StartListening(object data) cil managed
  // SIG: 20 01 01 1C
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x205c
    // Code size       0 (0x0)
  } // end of method HttpChannel::StartListening

  .method /*06000010*/ public hidebysig newslot virtual final 
          instance void  StopListening(object data) cil managed
  // SIG: 20 01 01 1C
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x205d
    // Code size       0 (0x0)
  } // end of method HttpChannel::StopListening

  .method /*06000011*/ public hidebysig newslot specialname virtual final 
          instance string  get_ChannelScheme() cil managed
  // SIG: 20 00 0E
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x205e
    // Code size       0 (0x0)
  } // end of method HttpChannel::get_ChannelScheme

  .method /*06000012*/ public hidebysig newslot specialname virtual final 
          instance bool  get_WantsToListen() cil managed
  // SIG: 20 00 02
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x205f
    // Code size       0 (0x0)
  } // end of method HttpChannel::get_WantsToListen

  .method /*06000013*/ public hidebysig specialname 
          instance void  set_WantsToListen(bool 'value') cil managed
  // SIG: 20 01 01 02
  {
    // Method begins at RVA 0x2060
    // Code size       0 (0x0)
  } // end of method HttpChannel::set_WantsToListen

  .method /*06000014*/ public hidebysig newslot specialname virtual final 
          instance class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSink/*0100000F*/ 
          get_ChannelSinkChain() cil managed
  // SIG: 20 00 12 3D
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x2061
    // Code size       0 (0x0)
  } // end of method HttpChannel::get_ChannelSinkChain

  .method /*06000015*/ public hidebysig newslot virtual final 
          instance void  AddHookChannelUri(string channelUri) cil managed
  // SIG: 20 01 01 0E
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x2062
    // Code size       0 (0x0)
  } // end of method HttpChannel::AddHookChannelUri

  .method /*06000016*/ public hidebysig specialname virtual 
          instance class [mscorlib/*23000001*/]System.Collections.IDictionary/*0100000B*/ 
          get_Properties() cil managed
  // SIG: 20 00 12 2D
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x2063
    // Code size       0 (0x0)
  } // end of method HttpChannel::get_Properties

  .method /*06000017*/ public hidebysig specialname virtual 
          instance object  get_Item(object key) cil managed
  // SIG: 20 01 1C 1C
  {
    // Method begins at RVA 0x2064
    // Code size       0 (0x0)
  } // end of method HttpChannel::get_Item

  .method /*06000018*/ public hidebysig specialname virtual 
          instance void  set_Item(object key,
                                  object 'value') cil managed
  // SIG: 20 02 01 1C 1C
  {
    // Method begins at RVA 0x2065
    // Code size       0 (0x0)
  } // end of method HttpChannel::set_Item

  .method /*06000019*/ public hidebysig specialname virtual 
          instance class [mscorlib/*23000001*/]System.Collections.ICollection/*01000010*/ 
          get_Keys() cil managed
  // SIG: 20 00 12 41
  {
    // Method begins at RVA 0x2066
    // Code size       0 (0x0)
  } // end of method HttpChannel::get_Keys

  .method /*0600001A*/ private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  // SIG: 00 00 01
  {
    // Method begins at RVA 0x2067
    // Code size       0 (0x0)
  } // end of method HttpChannel::.cctor

  .property /*17000001*/ instance callconv(8) bool
          IsSecured()
  {
    .get instance bool System.Runtime.Remoting.Channels.Http.HttpChannel/*02000008*/::get_IsSecured() /* 06000007 */
    .set instance void System.Runtime.Remoting.Channels.Http.HttpChannel/*02000008*/::set_IsSecured(bool) /* 06000008 */
  } // end of property HttpChannel::IsSecured
  .property /*17000002*/ instance callconv(8) int32
          ChannelPriority()
  {
    .get instance int32 System.Runtime.Remoting.Channels.Http.HttpChannel/*02000008*/::get_ChannelPriority() /* 06000009 */
  } // end of property HttpChannel::ChannelPriority
  .property /*17000003*/ instance callconv(8) string
          ChannelName()
  {
    .get instance string System.Runtime.Remoting.Channels.Http.HttpChannel/*02000008*/::get_ChannelName() /* 0600000A */
  } // end of property HttpChannel::ChannelName
  .property /*17000004*/ instance callconv(8) object
          ChannelData()
  {
    .get instance object System.Runtime.Remoting.Channels.Http.HttpChannel/*02000008*/::get_ChannelData() /* 0600000D */
  } // end of property HttpChannel::ChannelData
  .property /*17000005*/ instance callconv(8) string
          ChannelScheme()
  {
    .get instance string System.Runtime.Remoting.Channels.Http.HttpChannel/*02000008*/::get_ChannelScheme() /* 06000011 */
  } // end of property HttpChannel::ChannelScheme
  .property /*17000006*/ instance callconv(8) bool
          WantsToListen()
  {
    .get instance bool System.Runtime.Remoting.Channels.Http.HttpChannel/*02000008*/::get_WantsToListen() /* 06000012 */
    .set instance void System.Runtime.Remoting.Channels.Http.HttpChannel/*02000008*/::set_WantsToListen(bool) /* 06000013 */
  } // end of property HttpChannel::WantsToListen
  .property /*17000007*/ instance callconv(8) class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSink/*0100000F*/
          ChannelSinkChain()
  {
    .get instance class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSink/*0100000F*/ System.Runtime.Remoting.Channels.Http.HttpChannel/*02000008*/::get_ChannelSinkChain() /* 06000014 */
  } // end of property HttpChannel::ChannelSinkChain
  .property /*17000008*/ instance callconv(8) class [mscorlib/*23000001*/]System.Collections.IDictionary/*0100000B*/
          Properties()
  {
    .get instance class [mscorlib/*23000001*/]System.Collections.IDictionary/*0100000B*/ System.Runtime.Remoting.Channels.Http.HttpChannel/*02000008*/::get_Properties() /* 06000016 */
  } // end of property HttpChannel::Properties
  .property /*17000009*/ instance callconv(8) object
          Item(object)
  {
    .set instance void System.Runtime.Remoting.Channels.Http.HttpChannel/*02000008*/::set_Item(object,
                                                                                               object) /* 06000018 */
    .get instance object System.Runtime.Remoting.Channels.Http.HttpChannel/*02000008*/::get_Item(object) /* 06000017 */
  } // end of property HttpChannel::Item
  .property /*1700000A*/ instance callconv(8) class [mscorlib/*23000001*/]System.Collections.ICollection/*01000010*/
          Keys()
  {
    .get instance class [mscorlib/*23000001*/]System.Collections.ICollection/*01000010*/ System.Runtime.Remoting.Channels.Http.HttpChannel/*02000008*/::get_Keys() /* 06000019 */
  } // end of property HttpChannel::Keys
} // end of class System.Runtime.Remoting.Channels.Http.HttpChannel

.class /*02000009*/ public auto ansi beforefieldinit System.Runtime.Remoting.Channels.Http.HttpClientChannel
       extends [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.BaseChannelWithProperties/*01000005*/
       implements [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IChannelSender/*01000007*/,
                  [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IChannel/*01000008*/,
                  [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.ISecurableChannel/*0100000A*/
{
  .custom /*0C000017:0A000016*/ instance void [mscorlib/*23000001*/]System.Reflection.DefaultMemberAttribute/*01000046*/::.ctor(string) /* 0A000016 */ = ( 01 00 04 49 74 65 6D 00 00 )                      // ...Item..
  .method /*0600001B*/ public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x2068
    // Code size       0 (0x0)
  } // end of method HttpClientChannel::.ctor

  .method /*0600001C*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(string name,
                               class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IClientChannelSinkProvider/*0100000C*/ sinkProvider) cil managed
  // SIG: 20 02 01 0E 12 31
  {
    // Method begins at RVA 0x2069
    // Code size       0 (0x0)
  } // end of method HttpClientChannel::.ctor

  .method /*0600001D*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib/*23000001*/]System.Collections.IDictionary/*0100000B*/ properties,
                               class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IClientChannelSinkProvider/*0100000C*/ sinkProvider) cil managed
  // SIG: 20 02 01 12 2D 12 31
  {
    // Method begins at RVA 0x206a
    // Code size       0 (0x0)
  } // end of method HttpClientChannel::.ctor

  .method /*0600001E*/ public hidebysig newslot specialname virtual final 
          instance bool  get_IsSecured() cil managed
  // SIG: 20 00 02
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x206b
    // Code size       0 (0x0)
  } // end of method HttpClientChannel::get_IsSecured

  .method /*0600001F*/ public hidebysig newslot specialname virtual final 
          instance void  set_IsSecured(bool 'value') cil managed
  // SIG: 20 01 01 02
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x206c
    // Code size       0 (0x0)
  } // end of method HttpClientChannel::set_IsSecured

  .method /*06000020*/ public hidebysig newslot specialname virtual final 
          instance int32  get_ChannelPriority() cil managed
  // SIG: 20 00 08
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x206d
    // Code size       0 (0x0)
  } // end of method HttpClientChannel::get_ChannelPriority

  .method /*06000021*/ public hidebysig newslot specialname virtual final 
          instance string  get_ChannelName() cil managed
  // SIG: 20 00 0E
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x206e
    // Code size       0 (0x0)
  } // end of method HttpClientChannel::get_ChannelName

  .method /*06000022*/ public hidebysig newslot virtual final 
          instance string  Parse(string url,
                                 [out] string& objectURI) cil managed
  // SIG: 20 02 0E 0E 10 0E
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x206f
    // Code size       0 (0x0)
  } // end of method HttpClientChannel::Parse

  .method /*06000023*/ public hidebysig newslot virtual 
          instance class [mscorlib/*23000001*/]System.Runtime.Remoting.Messaging.IMessageSink/*0100000E*/ 
          CreateMessageSink(string url,
                            object remoteChannelData,
                            [out] string& objectURI) cil managed
  // SIG: 20 03 12 39 0E 1C 10 0E
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x2070
    // Code size       0 (0x0)
  } // end of method HttpClientChannel::CreateMessageSink

  .method /*06000024*/ public hidebysig specialname virtual 
          instance object  get_Item(object key) cil managed
  // SIG: 20 01 1C 1C
  {
    // Method begins at RVA 0x2071
    // Code size       0 (0x0)
  } // end of method HttpClientChannel::get_Item

  .method /*06000025*/ public hidebysig specialname virtual 
          instance void  set_Item(object key,
                                  object 'value') cil managed
  // SIG: 20 02 01 1C 1C
  {
    // Method begins at RVA 0x2072
    // Code size       0 (0x0)
  } // end of method HttpClientChannel::set_Item

  .method /*06000026*/ public hidebysig specialname virtual 
          instance class [mscorlib/*23000001*/]System.Collections.ICollection/*01000010*/ 
          get_Keys() cil managed
  // SIG: 20 00 12 41
  {
    // Method begins at RVA 0x2073
    // Code size       0 (0x0)
  } // end of method HttpClientChannel::get_Keys

  .method /*06000027*/ private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  // SIG: 00 00 01
  {
    // Method begins at RVA 0x2074
    // Code size       0 (0x0)
  } // end of method HttpClientChannel::.cctor

  .property /*1700000B*/ instance callconv(8) bool
          IsSecured()
  {
    .get instance bool System.Runtime.Remoting.Channels.Http.HttpClientChannel/*02000009*/::get_IsSecured() /* 0600001E */
    .set instance void System.Runtime.Remoting.Channels.Http.HttpClientChannel/*02000009*/::set_IsSecured(bool) /* 0600001F */
  } // end of property HttpClientChannel::IsSecured
  .property /*1700000C*/ instance callconv(8) int32
          ChannelPriority()
  {
    .get instance int32 System.Runtime.Remoting.Channels.Http.HttpClientChannel/*02000009*/::get_ChannelPriority() /* 06000020 */
  } // end of property HttpClientChannel::ChannelPriority
  .property /*1700000D*/ instance callconv(8) string
          ChannelName()
  {
    .get instance string System.Runtime.Remoting.Channels.Http.HttpClientChannel/*02000009*/::get_ChannelName() /* 06000021 */
  } // end of property HttpClientChannel::ChannelName
  .property /*1700000E*/ instance callconv(8) object
          Item(object)
  {
    .set instance void System.Runtime.Remoting.Channels.Http.HttpClientChannel/*02000009*/::set_Item(object,
                                                                                                     object) /* 06000025 */
    .get instance object System.Runtime.Remoting.Channels.Http.HttpClientChannel/*02000009*/::get_Item(object) /* 06000024 */
  } // end of property HttpClientChannel::Item
  .property /*1700000F*/ instance callconv(8) class [mscorlib/*23000001*/]System.Collections.ICollection/*01000010*/
          Keys()
  {
    .get instance class [mscorlib/*23000001*/]System.Collections.ICollection/*01000010*/ System.Runtime.Remoting.Channels.Http.HttpClientChannel/*02000009*/::get_Keys() /* 06000026 */
  } // end of property HttpClientChannel::Keys
} // end of class System.Runtime.Remoting.Channels.Http.HttpClientChannel

.class /*0200000A*/ public auto ansi beforefieldinit System.Runtime.Remoting.Channels.Http.HttpServerChannel
       extends [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.BaseChannelWithProperties/*01000005*/
       implements [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IChannelReceiver/*01000006*/,
                  [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IChannel/*01000008*/,
                  [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IChannelReceiverHook/*01000009*/
{
  .custom /*0C000018:0A000016*/ instance void [mscorlib/*23000001*/]System.Reflection.DefaultMemberAttribute/*01000046*/::.ctor(string) /* 0A000016 */ = ( 01 00 04 49 74 65 6D 00 00 )                      // ...Item..
  .method /*06000028*/ public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x2075
    // Code size       0 (0x0)
  } // end of method HttpServerChannel::.ctor

  .method /*06000029*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(int32 port) cil managed
  // SIG: 20 01 01 08
  {
    // Method begins at RVA 0x2076
    // Code size       0 (0x0)
  } // end of method HttpServerChannel::.ctor

  .method /*0600002A*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(string name,
                               int32 port) cil managed
  // SIG: 20 02 01 0E 08
  {
    // Method begins at RVA 0x2077
    // Code size       0 (0x0)
  } // end of method HttpServerChannel::.ctor

  .method /*0600002B*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(string name,
                               int32 port,
                               class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSinkProvider/*0100000D*/ sinkProvider) cil managed
  // SIG: 20 03 01 0E 08 12 35
  {
    // Method begins at RVA 0x2078
    // Code size       0 (0x0)
  } // end of method HttpServerChannel::.ctor

  .method /*0600002C*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib/*23000001*/]System.Collections.IDictionary/*0100000B*/ properties,
                               class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSinkProvider/*0100000D*/ sinkProvider) cil managed
  // SIG: 20 02 01 12 2D 12 35
  {
    // Method begins at RVA 0x2079
    // Code size       0 (0x0)
  } // end of method HttpServerChannel::.ctor

  .method /*0600002D*/ public hidebysig newslot specialname virtual final 
          instance int32  get_ChannelPriority() cil managed
  // SIG: 20 00 08
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x207a
    // Code size       0 (0x0)
  } // end of method HttpServerChannel::get_ChannelPriority

  .method /*0600002E*/ public hidebysig newslot specialname virtual final 
          instance string  get_ChannelName() cil managed
  // SIG: 20 00 0E
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x207b
    // Code size       0 (0x0)
  } // end of method HttpServerChannel::get_ChannelName

  .method /*0600002F*/ public hidebysig newslot virtual final 
          instance string  Parse(string url,
                                 [out] string& objectURI) cil managed
  // SIG: 20 02 0E 0E 10 0E
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x207c
    // Code size       0 (0x0)
  } // end of method HttpServerChannel::Parse

  .method /*06000030*/ public hidebysig newslot specialname virtual final 
          instance object  get_ChannelData() cil managed
  // SIG: 20 00 1C
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x207d
    // Code size       0 (0x0)
  } // end of method HttpServerChannel::get_ChannelData

  .method /*06000031*/ public hidebysig instance string 
          GetChannelUri() cil managed
  // SIG: 20 00 0E
  {
    // Method begins at RVA 0x207e
    // Code size       0 (0x0)
  } // end of method HttpServerChannel::GetChannelUri

  .method /*06000032*/ public hidebysig newslot virtual 
          instance string[]  GetUrlsForUri(string objectUri) cil managed
  // SIG: 20 01 1D 0E 0E
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x207f
    // Code size       0 (0x0)
  } // end of method HttpServerChannel::GetUrlsForUri

  .method /*06000033*/ public hidebysig newslot virtual final 
          instance void  StartListening(object data) cil managed
  // SIG: 20 01 01 1C
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x2080
    // Code size       0 (0x0)
  } // end of method HttpServerChannel::StartListening

  .method /*06000034*/ public hidebysig newslot virtual final 
          instance void  StopListening(object data) cil managed
  // SIG: 20 01 01 1C
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x2081
    // Code size       0 (0x0)
  } // end of method HttpServerChannel::StopListening

  .method /*06000035*/ public hidebysig newslot specialname virtual final 
          instance string  get_ChannelScheme() cil managed
  // SIG: 20 00 0E
  {
    .permissionset linkcheck
               = {class 'System.Security.Permissions.SecurityPermissionAttribute, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089' = {property enum class 'System.Security.Permissions.SecurityPermissionFlag, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089' 'Flags' = int32(4096)}}
    // Method begins at RVA 0x2082
    // Code size       0 (0x0)
  } // end of method HttpServerChannel::get_ChannelScheme

  .method /*06000036*/ public hidebysig newslot specialname virtual final 
          instance bool  get_WantsToListen() cil managed
  // SIG: 20 00 02
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x2083
    // Code size       0 (0x0)
  } // end of method HttpServerChannel::get_WantsToListen

  .method /*06000037*/ public hidebysig specialname 
          instance void  set_WantsToListen(bool 'value') cil managed
  // SIG: 20 01 01 02
  {
    // Method begins at RVA 0x2084
    // Code size       0 (0x0)
  } // end of method HttpServerChannel::set_WantsToListen

  .method /*06000038*/ public hidebysig newslot specialname virtual final 
          instance class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSink/*0100000F*/ 
          get_ChannelSinkChain() cil managed
  // SIG: 20 00 12 3D
  {
    .permissionset linkcheck
               = {class 'System.Security.Permissions.SecurityPermissionAttribute, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089' = {property enum class 'System.Security.Permissions.SecurityPermissionFlag, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089' 'Flags' = int32(4096)}}
    // Method begins at RVA 0x2085
    // Code size       0 (0x0)
  } // end of method HttpServerChannel::get_ChannelSinkChain

  .method /*06000039*/ public hidebysig newslot virtual final 
          instance void  AddHookChannelUri(string channelUri) cil managed
  // SIG: 20 01 01 0E
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x2086
    // Code size       0 (0x0)
  } // end of method HttpServerChannel::AddHookChannelUri

  .method /*0600003A*/ public hidebysig specialname virtual 
          instance object  get_Item(object key) cil managed
  // SIG: 20 01 1C 1C
  {
    // Method begins at RVA 0x2087
    // Code size       0 (0x0)
  } // end of method HttpServerChannel::get_Item

  .method /*0600003B*/ public hidebysig specialname virtual 
          instance void  set_Item(object key,
                                  object 'value') cil managed
  // SIG: 20 02 01 1C 1C
  {
    // Method begins at RVA 0x2088
    // Code size       0 (0x0)
  } // end of method HttpServerChannel::set_Item

  .method /*0600003C*/ public hidebysig specialname virtual 
          instance class [mscorlib/*23000001*/]System.Collections.ICollection/*01000010*/ 
          get_Keys() cil managed
  // SIG: 20 00 12 41
  {
    // Method begins at RVA 0x2089
    // Code size       0 (0x0)
  } // end of method HttpServerChannel::get_Keys

  .property /*17000010*/ instance callconv(8) int32
          ChannelPriority()
  {
    .get instance int32 System.Runtime.Remoting.Channels.Http.HttpServerChannel/*0200000A*/::get_ChannelPriority() /* 0600002D */
  } // end of property HttpServerChannel::ChannelPriority
  .property /*17000011*/ instance callconv(8) string
          ChannelName()
  {
    .get instance string System.Runtime.Remoting.Channels.Http.HttpServerChannel/*0200000A*/::get_ChannelName() /* 0600002E */
  } // end of property HttpServerChannel::ChannelName
  .property /*17000012*/ instance callconv(8) object
          ChannelData()
  {
    .get instance object System.Runtime.Remoting.Channels.Http.HttpServerChannel/*0200000A*/::get_ChannelData() /* 06000030 */
  } // end of property HttpServerChannel::ChannelData
  .property /*17000013*/ instance callconv(8) string
          ChannelScheme()
  {
    .get instance string System.Runtime.Remoting.Channels.Http.HttpServerChannel/*0200000A*/::get_ChannelScheme() /* 06000035 */
  } // end of property HttpServerChannel::ChannelScheme
  .property /*17000014*/ instance callconv(8) bool
          WantsToListen()
  {
    .set instance void System.Runtime.Remoting.Channels.Http.HttpServerChannel/*0200000A*/::set_WantsToListen(bool) /* 06000037 */
    .get instance bool System.Runtime.Remoting.Channels.Http.HttpServerChannel/*0200000A*/::get_WantsToListen() /* 06000036 */
  } // end of property HttpServerChannel::WantsToListen
  .property /*17000015*/ instance callconv(8) class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSink/*0100000F*/
          ChannelSinkChain()
  {
    .get instance class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSink/*0100000F*/ System.Runtime.Remoting.Channels.Http.HttpServerChannel/*0200000A*/::get_ChannelSinkChain() /* 06000038 */
  } // end of property HttpServerChannel::ChannelSinkChain
  .property /*17000016*/ instance callconv(8) object
          Item(object)
  {
    .get instance object System.Runtime.Remoting.Channels.Http.HttpServerChannel/*0200000A*/::get_Item(object) /* 0600003A */
    .set instance void System.Runtime.Remoting.Channels.Http.HttpServerChannel/*0200000A*/::set_Item(object,
                                                                                                     object) /* 0600003B */
  } // end of property HttpServerChannel::Item
  .property /*17000017*/ instance callconv(8) class [mscorlib/*23000001*/]System.Collections.ICollection/*01000010*/
          Keys()
  {
    .get instance class [mscorlib/*23000001*/]System.Collections.ICollection/*01000010*/ System.Runtime.Remoting.Channels.Http.HttpServerChannel/*0200000A*/::get_Keys() /* 0600003C */
  } // end of property HttpServerChannel::Keys
} // end of class System.Runtime.Remoting.Channels.Http.HttpServerChannel

.class /*0200000B*/ public auto ansi beforefieldinit System.Runtime.Remoting.Channels.Http.HttpRemotingHandler
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
       implements [System.Web/*23000003*/]System.Web.IHttpHandler/*01000011*/
{
  .method /*0600003D*/ public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x208a
    // Code size       0 (0x0)
  } // end of method HttpRemotingHandler::.ctor

  .method /*0600003E*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib/*23000001*/]System.Type/*01000012*/ 'type',
                               object srvID) cil managed
  // SIG: 20 02 01 12 49 1C
  {
    // Method begins at RVA 0x208b
    // Code size       0 (0x0)
  } // end of method HttpRemotingHandler::.ctor

  .method /*0600003F*/ public hidebysig newslot virtual final 
          instance void  ProcessRequest(class [System.Web/*23000003*/]System.Web.HttpContext/*01000013*/ context) cil managed
  // SIG: 20 01 01 12 4D
  {
    // Method begins at RVA 0x208c
    // Code size       0 (0x0)
  } // end of method HttpRemotingHandler::ProcessRequest

  .method /*06000040*/ public hidebysig newslot specialname virtual final 
          instance bool  get_IsReusable() cil managed
  // SIG: 20 00 02
  {
    // Method begins at RVA 0x208d
    // Code size       0 (0x0)
  } // end of method HttpRemotingHandler::get_IsReusable

  .method /*06000041*/ private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  // SIG: 00 00 01
  {
    // Method begins at RVA 0x208e
    // Code size       0 (0x0)
  } // end of method HttpRemotingHandler::.cctor

  .property /*17000018*/ instance callconv(8) bool
          IsReusable()
  {
    .get instance bool System.Runtime.Remoting.Channels.Http.HttpRemotingHandler/*0200000B*/::get_IsReusable() /* 06000040 */
  } // end of property HttpRemotingHandler::IsReusable
} // end of class System.Runtime.Remoting.Channels.Http.HttpRemotingHandler

.class /*0200000C*/ public auto ansi beforefieldinit System.Runtime.Remoting.Channels.Http.HttpRemotingHandlerFactory
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
       implements [System.Web/*23000003*/]System.Web.IHttpHandlerFactory/*01000014*/
{
  .method /*06000042*/ public hidebysig newslot virtual final 
          instance class [System.Web/*23000003*/]System.Web.IHttpHandler/*01000011*/ 
          GetHandler(class [System.Web/*23000003*/]System.Web.HttpContext/*01000013*/ context,
                     string verb,
                     string url,
                     string filePath) cil managed
  // SIG: 20 04 12 45 12 4D 0E 0E 0E
  {
    // Method begins at RVA 0x208f
    // Code size       0 (0x0)
  } // end of method HttpRemotingHandlerFactory::GetHandler

  .method /*06000043*/ public hidebysig newslot virtual final 
          instance void  ReleaseHandler(class [System.Web/*23000003*/]System.Web.IHttpHandler/*01000011*/ 'handler') cil managed
  // SIG: 20 01 01 12 45
  {
    // Method begins at RVA 0x2090
    // Code size       0 (0x0)
  } // end of method HttpRemotingHandlerFactory::ReleaseHandler

  .method /*06000044*/ public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x2091
    // Code size       0 (0x0)
  } // end of method HttpRemotingHandlerFactory::.ctor

  .method /*06000045*/ private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  // SIG: 00 00 01
  {
    // Method begins at RVA 0x2092
    // Code size       0 (0x0)
  } // end of method HttpRemotingHandlerFactory::.cctor

} // end of class System.Runtime.Remoting.Channels.Http.HttpRemotingHandlerFactory

.class /*0200000D*/ public auto ansi beforefieldinit System.Runtime.Remoting.Channels.Tcp.TcpChannel
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
       implements [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IChannelReceiver/*01000006*/,
                  [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IChannelSender/*01000007*/,
                  [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IChannel/*01000008*/,
                  [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.ISecurableChannel/*0100000A*/
{
  .method /*06000046*/ public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x2093
    // Code size       0 (0x0)
  } // end of method TcpChannel::.ctor

  .method /*06000047*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(int32 port) cil managed
  // SIG: 20 01 01 08
  {
    // Method begins at RVA 0x2094
    // Code size       0 (0x0)
  } // end of method TcpChannel::.ctor

  .method /*06000048*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib/*23000001*/]System.Collections.IDictionary/*0100000B*/ properties,
                               class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IClientChannelSinkProvider/*0100000C*/ clientSinkProvider,
                               class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSinkProvider/*0100000D*/ serverSinkProvider) cil managed
  // SIG: 20 03 01 12 2D 12 31 12 35
  {
    // Method begins at RVA 0x2095
    // Code size       0 (0x0)
  } // end of method TcpChannel::.ctor

  .method /*06000049*/ public hidebysig newslot specialname virtual final 
          instance bool  get_IsSecured() cil managed
  // SIG: 20 00 02
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x2096
    // Code size       0 (0x0)
  } // end of method TcpChannel::get_IsSecured

  .method /*0600004A*/ public hidebysig newslot specialname virtual final 
          instance void  set_IsSecured(bool 'value') cil managed
  // SIG: 20 01 01 02
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x2097
    // Code size       0 (0x0)
  } // end of method TcpChannel::set_IsSecured

  .method /*0600004B*/ public hidebysig newslot specialname virtual final 
          instance int32  get_ChannelPriority() cil managed
  // SIG: 20 00 08
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x2098
    // Code size       0 (0x0)
  } // end of method TcpChannel::get_ChannelPriority

  .method /*0600004C*/ public hidebysig newslot specialname virtual final 
          instance string  get_ChannelName() cil managed
  // SIG: 20 00 0E
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x2099
    // Code size       0 (0x0)
  } // end of method TcpChannel::get_ChannelName

  .method /*0600004D*/ public hidebysig newslot virtual final 
          instance string  Parse(string url,
                                 [out] string& objectURI) cil managed
  // SIG: 20 02 0E 0E 10 0E
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x209a
    // Code size       0 (0x0)
  } // end of method TcpChannel::Parse

  .method /*0600004E*/ public hidebysig newslot virtual final 
          instance class [mscorlib/*23000001*/]System.Runtime.Remoting.Messaging.IMessageSink/*0100000E*/ 
          CreateMessageSink(string url,
                            object remoteChannelData,
                            [out] string& objectURI) cil managed
  // SIG: 20 03 12 39 0E 1C 10 0E
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x209b
    // Code size       0 (0x0)
  } // end of method TcpChannel::CreateMessageSink

  .method /*0600004F*/ public hidebysig newslot specialname virtual final 
          instance object  get_ChannelData() cil managed
  // SIG: 20 00 1C
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x209c
    // Code size       0 (0x0)
  } // end of method TcpChannel::get_ChannelData

  .method /*06000050*/ public hidebysig newslot virtual final 
          instance string[]  GetUrlsForUri(string objectURI) cil managed
  // SIG: 20 01 1D 0E 0E
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x209d
    // Code size       0 (0x0)
  } // end of method TcpChannel::GetUrlsForUri

  .method /*06000051*/ public hidebysig newslot virtual final 
          instance void  StartListening(object data) cil managed
  // SIG: 20 01 01 1C
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x209e
    // Code size       0 (0x0)
  } // end of method TcpChannel::StartListening

  .method /*06000052*/ public hidebysig newslot virtual final 
          instance void  StopListening(object data) cil managed
  // SIG: 20 01 01 1C
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x209f
    // Code size       0 (0x0)
  } // end of method TcpChannel::StopListening

  .property /*17000019*/ instance callconv(8) bool
          IsSecured()
  {
    .get instance bool System.Runtime.Remoting.Channels.Tcp.TcpChannel/*0200000D*/::get_IsSecured() /* 06000049 */
    .set instance void System.Runtime.Remoting.Channels.Tcp.TcpChannel/*0200000D*/::set_IsSecured(bool) /* 0600004A */
  } // end of property TcpChannel::IsSecured
  .property /*1700001A*/ instance callconv(8) int32
          ChannelPriority()
  {
    .get instance int32 System.Runtime.Remoting.Channels.Tcp.TcpChannel/*0200000D*/::get_ChannelPriority() /* 0600004B */
  } // end of property TcpChannel::ChannelPriority
  .property /*1700001B*/ instance callconv(8) string
          ChannelName()
  {
    .get instance string System.Runtime.Remoting.Channels.Tcp.TcpChannel/*0200000D*/::get_ChannelName() /* 0600004C */
  } // end of property TcpChannel::ChannelName
  .property /*1700001C*/ instance callconv(8) object
          ChannelData()
  {
    .get instance object System.Runtime.Remoting.Channels.Tcp.TcpChannel/*0200000D*/::get_ChannelData() /* 0600004F */
  } // end of property TcpChannel::ChannelData
} // end of class System.Runtime.Remoting.Channels.Tcp.TcpChannel

.class /*0200000E*/ public auto ansi beforefieldinit System.Runtime.Remoting.Channels.Tcp.TcpClientChannel
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
       implements [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IChannelSender/*01000007*/,
                  [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IChannel/*01000008*/,
                  [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.ISecurableChannel/*0100000A*/
{
  .method /*06000053*/ public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x20a0
    // Code size       0 (0x0)
  } // end of method TcpClientChannel::.ctor

  .method /*06000054*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(string name,
                               class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IClientChannelSinkProvider/*0100000C*/ sinkProvider) cil managed
  // SIG: 20 02 01 0E 12 31
  {
    // Method begins at RVA 0x20a1
    // Code size       0 (0x0)
  } // end of method TcpClientChannel::.ctor

  .method /*06000055*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib/*23000001*/]System.Collections.IDictionary/*0100000B*/ properties,
                               class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IClientChannelSinkProvider/*0100000C*/ sinkProvider) cil managed
  // SIG: 20 02 01 12 2D 12 31
  {
    // Method begins at RVA 0x20a2
    // Code size       0 (0x0)
  } // end of method TcpClientChannel::.ctor

  .method /*06000056*/ public hidebysig newslot specialname virtual final 
          instance bool  get_IsSecured() cil managed
  // SIG: 20 00 02
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20a3
    // Code size       0 (0x0)
  } // end of method TcpClientChannel::get_IsSecured

  .method /*06000057*/ public hidebysig newslot specialname virtual final 
          instance void  set_IsSecured(bool 'value') cil managed
  // SIG: 20 01 01 02
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20a4
    // Code size       0 (0x0)
  } // end of method TcpClientChannel::set_IsSecured

  .method /*06000058*/ public hidebysig newslot specialname virtual final 
          instance int32  get_ChannelPriority() cil managed
  // SIG: 20 00 08
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20a5
    // Code size       0 (0x0)
  } // end of method TcpClientChannel::get_ChannelPriority

  .method /*06000059*/ public hidebysig newslot specialname virtual final 
          instance string  get_ChannelName() cil managed
  // SIG: 20 00 0E
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20a6
    // Code size       0 (0x0)
  } // end of method TcpClientChannel::get_ChannelName

  .method /*0600005A*/ public hidebysig newslot virtual final 
          instance string  Parse(string url,
                                 [out] string& objectURI) cil managed
  // SIG: 20 02 0E 0E 10 0E
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20a7
    // Code size       0 (0x0)
  } // end of method TcpClientChannel::Parse

  .method /*0600005B*/ public hidebysig newslot virtual 
          instance class [mscorlib/*23000001*/]System.Runtime.Remoting.Messaging.IMessageSink/*0100000E*/ 
          CreateMessageSink(string url,
                            object remoteChannelData,
                            [out] string& objectURI) cil managed
  // SIG: 20 03 12 39 0E 1C 10 0E
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20a8
    // Code size       0 (0x0)
  } // end of method TcpClientChannel::CreateMessageSink

  .property /*1700001D*/ instance callconv(8) bool
          IsSecured()
  {
    .get instance bool System.Runtime.Remoting.Channels.Tcp.TcpClientChannel/*0200000E*/::get_IsSecured() /* 06000056 */
    .set instance void System.Runtime.Remoting.Channels.Tcp.TcpClientChannel/*0200000E*/::set_IsSecured(bool) /* 06000057 */
  } // end of property TcpClientChannel::IsSecured
  .property /*1700001E*/ instance callconv(8) int32
          ChannelPriority()
  {
    .get instance int32 System.Runtime.Remoting.Channels.Tcp.TcpClientChannel/*0200000E*/::get_ChannelPriority() /* 06000058 */
  } // end of property TcpClientChannel::ChannelPriority
  .property /*1700001F*/ instance callconv(8) string
          ChannelName()
  {
    .get instance string System.Runtime.Remoting.Channels.Tcp.TcpClientChannel/*0200000E*/::get_ChannelName() /* 06000059 */
  } // end of property TcpClientChannel::ChannelName
} // end of class System.Runtime.Remoting.Channels.Tcp.TcpClientChannel

.class /*0200000F*/ public auto ansi beforefieldinit System.Runtime.Remoting.Channels.Tcp.TcpServerChannel
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
       implements [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IChannelReceiver/*01000006*/,
                  [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IChannel/*01000008*/,
                  [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.ISecurableChannel/*0100000A*/
{
  .method /*0600005C*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(int32 port) cil managed
  // SIG: 20 01 01 08
  {
    // Method begins at RVA 0x20a9
    // Code size       0 (0x0)
  } // end of method TcpServerChannel::.ctor

  .method /*0600005D*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(string name,
                               int32 port) cil managed
  // SIG: 20 02 01 0E 08
  {
    // Method begins at RVA 0x20aa
    // Code size       0 (0x0)
  } // end of method TcpServerChannel::.ctor

  .method /*0600005E*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(string name,
                               int32 port,
                               class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSinkProvider/*0100000D*/ sinkProvider) cil managed
  // SIG: 20 03 01 0E 08 12 35
  {
    // Method begins at RVA 0x20ab
    // Code size       0 (0x0)
  } // end of method TcpServerChannel::.ctor

  .method /*0600005F*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib/*23000001*/]System.Collections.IDictionary/*0100000B*/ properties,
                               class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSinkProvider/*0100000D*/ sinkProvider) cil managed
  // SIG: 20 02 01 12 2D 12 35
  {
    // Method begins at RVA 0x20ac
    // Code size       0 (0x0)
  } // end of method TcpServerChannel::.ctor

  .method /*06000060*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib/*23000001*/]System.Collections.IDictionary/*0100000B*/ properties,
                               class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSinkProvider/*0100000D*/ sinkProvider,
                               class System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection/*02000007*/ authorizeCallback) cil managed
  // SIG: 20 03 01 12 2D 12 35 12 1C
  {
    // Method begins at RVA 0x20ad
    // Code size       0 (0x0)
  } // end of method TcpServerChannel::.ctor

  .method /*06000061*/ public hidebysig newslot specialname virtual final 
          instance bool  get_IsSecured() cil managed
  // SIG: 20 00 02
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20ae
    // Code size       0 (0x0)
  } // end of method TcpServerChannel::get_IsSecured

  .method /*06000062*/ public hidebysig newslot specialname virtual final 
          instance void  set_IsSecured(bool 'value') cil managed
  // SIG: 20 01 01 02
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20af
    // Code size       0 (0x0)
  } // end of method TcpServerChannel::set_IsSecured

  .method /*06000063*/ public hidebysig newslot specialname virtual final 
          instance int32  get_ChannelPriority() cil managed
  // SIG: 20 00 08
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20b0
    // Code size       0 (0x0)
  } // end of method TcpServerChannel::get_ChannelPriority

  .method /*06000064*/ public hidebysig newslot specialname virtual final 
          instance string  get_ChannelName() cil managed
  // SIG: 20 00 0E
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20b1
    // Code size       0 (0x0)
  } // end of method TcpServerChannel::get_ChannelName

  .method /*06000065*/ public hidebysig newslot virtual final 
          instance string  Parse(string url,
                                 [out] string& objectURI) cil managed
  // SIG: 20 02 0E 0E 10 0E
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20b2
    // Code size       0 (0x0)
  } // end of method TcpServerChannel::Parse

  .method /*06000066*/ public hidebysig newslot specialname virtual final 
          instance object  get_ChannelData() cil managed
  // SIG: 20 00 1C
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20b3
    // Code size       0 (0x0)
  } // end of method TcpServerChannel::get_ChannelData

  .method /*06000067*/ public hidebysig instance string 
          GetChannelUri() cil managed
  // SIG: 20 00 0E
  {
    // Method begins at RVA 0x20b4
    // Code size       0 (0x0)
  } // end of method TcpServerChannel::GetChannelUri

  .method /*06000068*/ public hidebysig newslot virtual 
          instance string[]  GetUrlsForUri(string objectUri) cil managed
  // SIG: 20 01 1D 0E 0E
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20b5
    // Code size       0 (0x0)
  } // end of method TcpServerChannel::GetUrlsForUri

  .method /*06000069*/ public hidebysig newslot virtual final 
          instance void  StartListening(object data) cil managed
  // SIG: 20 01 01 1C
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20b6
    // Code size       0 (0x0)
  } // end of method TcpServerChannel::StartListening

  .method /*0600006A*/ public hidebysig newslot virtual final 
          instance void  StopListening(object data) cil managed
  // SIG: 20 01 01 1C
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20b7
    // Code size       0 (0x0)
  } // end of method TcpServerChannel::StopListening

  .property /*17000020*/ instance callconv(8) bool
          IsSecured()
  {
    .get instance bool System.Runtime.Remoting.Channels.Tcp.TcpServerChannel/*0200000F*/::get_IsSecured() /* 06000061 */
    .set instance void System.Runtime.Remoting.Channels.Tcp.TcpServerChannel/*0200000F*/::set_IsSecured(bool) /* 06000062 */
  } // end of property TcpServerChannel::IsSecured
  .property /*17000021*/ instance callconv(8) int32
          ChannelPriority()
  {
    .get instance int32 System.Runtime.Remoting.Channels.Tcp.TcpServerChannel/*0200000F*/::get_ChannelPriority() /* 06000063 */
  } // end of property TcpServerChannel::ChannelPriority
  .property /*17000022*/ instance callconv(8) string
          ChannelName()
  {
    .get instance string System.Runtime.Remoting.Channels.Tcp.TcpServerChannel/*0200000F*/::get_ChannelName() /* 06000064 */
  } // end of property TcpServerChannel::ChannelName
  .property /*17000023*/ instance callconv(8) object
          ChannelData()
  {
    .get instance object System.Runtime.Remoting.Channels.Tcp.TcpServerChannel/*0200000F*/::get_ChannelData() /* 06000066 */
  } // end of property TcpServerChannel::ChannelData
} // end of class System.Runtime.Remoting.Channels.Tcp.TcpServerChannel

.class /*02000010*/ public auto ansi beforefieldinit System.Runtime.Remoting.Channels.Ipc.IpcChannel
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
       implements [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IChannelReceiver/*01000006*/,
                  [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IChannelSender/*01000007*/,
                  [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IChannel/*01000008*/,
                  [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.ISecurableChannel/*0100000A*/
{
  .method /*0600006B*/ public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x20b8
    // Code size       0 (0x0)
  } // end of method IpcChannel::.ctor

  .method /*0600006C*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(string portName) cil managed
  // SIG: 20 01 01 0E
  {
    // Method begins at RVA 0x20b9
    // Code size       0 (0x0)
  } // end of method IpcChannel::.ctor

  .method /*0600006D*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib/*23000001*/]System.Collections.IDictionary/*0100000B*/ properties,
                               class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IClientChannelSinkProvider/*0100000C*/ clientSinkProvider,
                               class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSinkProvider/*0100000D*/ serverSinkProvider) cil managed
  // SIG: 20 03 01 12 2D 12 31 12 35
  {
    // Method begins at RVA 0x20ba
    // Code size       0 (0x0)
  } // end of method IpcChannel::.ctor

  .method /*0600006E*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib/*23000001*/]System.Collections.IDictionary/*0100000B*/ properties,
                               class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IClientChannelSinkProvider/*0100000C*/ clientSinkProvider,
                               class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSinkProvider/*0100000D*/ serverSinkProvider,
                               class [mscorlib/*23000001*/]System.Security.AccessControl.CommonSecurityDescriptor/*01000015*/ securityDescriptor) cil managed
  // SIG: 20 04 01 12 2D 12 31 12 35 12 55
  {
    // Method begins at RVA 0x20bb
    // Code size       0 (0x0)
  } // end of method IpcChannel::.ctor

  .method /*0600006F*/ public hidebysig newslot specialname virtual final 
          instance bool  get_IsSecured() cil managed
  // SIG: 20 00 02
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20bc
    // Code size       0 (0x0)
  } // end of method IpcChannel::get_IsSecured

  .method /*06000070*/ public hidebysig newslot specialname virtual final 
          instance void  set_IsSecured(bool 'value') cil managed
  // SIG: 20 01 01 02
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20bd
    // Code size       0 (0x0)
  } // end of method IpcChannel::set_IsSecured

  .method /*06000071*/ public hidebysig newslot specialname virtual final 
          instance int32  get_ChannelPriority() cil managed
  // SIG: 20 00 08
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20be
    // Code size       0 (0x0)
  } // end of method IpcChannel::get_ChannelPriority

  .method /*06000072*/ public hidebysig newslot specialname virtual final 
          instance string  get_ChannelName() cil managed
  // SIG: 20 00 0E
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20bf
    // Code size       0 (0x0)
  } // end of method IpcChannel::get_ChannelName

  .method /*06000073*/ public hidebysig newslot virtual final 
          instance string  Parse(string url,
                                 [out] string& objectURI) cil managed
  // SIG: 20 02 0E 0E 10 0E
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20c0
    // Code size       0 (0x0)
  } // end of method IpcChannel::Parse

  .method /*06000074*/ public hidebysig newslot virtual final 
          instance class [mscorlib/*23000001*/]System.Runtime.Remoting.Messaging.IMessageSink/*0100000E*/ 
          CreateMessageSink(string url,
                            object remoteChannelData,
                            [out] string& objectURI) cil managed
  // SIG: 20 03 12 39 0E 1C 10 0E
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20c1
    // Code size       0 (0x0)
  } // end of method IpcChannel::CreateMessageSink

  .method /*06000075*/ public hidebysig newslot specialname virtual final 
          instance object  get_ChannelData() cil managed
  // SIG: 20 00 1C
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20c2
    // Code size       0 (0x0)
  } // end of method IpcChannel::get_ChannelData

  .method /*06000076*/ public hidebysig newslot virtual final 
          instance string[]  GetUrlsForUri(string objectURI) cil managed
  // SIG: 20 01 1D 0E 0E
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20c3
    // Code size       0 (0x0)
  } // end of method IpcChannel::GetUrlsForUri

  .method /*06000077*/ public hidebysig newslot virtual final 
          instance void  StartListening(object data) cil managed
  // SIG: 20 01 01 1C
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20c4
    // Code size       0 (0x0)
  } // end of method IpcChannel::StartListening

  .method /*06000078*/ public hidebysig newslot virtual final 
          instance void  StopListening(object data) cil managed
  // SIG: 20 01 01 1C
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20c5
    // Code size       0 (0x0)
  } // end of method IpcChannel::StopListening

  .property /*17000024*/ instance callconv(8) bool
          IsSecured()
  {
    .get instance bool System.Runtime.Remoting.Channels.Ipc.IpcChannel/*02000010*/::get_IsSecured() /* 0600006F */
    .set instance void System.Runtime.Remoting.Channels.Ipc.IpcChannel/*02000010*/::set_IsSecured(bool) /* 06000070 */
  } // end of property IpcChannel::IsSecured
  .property /*17000025*/ instance callconv(8) int32
          ChannelPriority()
  {
    .get instance int32 System.Runtime.Remoting.Channels.Ipc.IpcChannel/*02000010*/::get_ChannelPriority() /* 06000071 */
  } // end of property IpcChannel::ChannelPriority
  .property /*17000026*/ instance callconv(8) string
          ChannelName()
  {
    .get instance string System.Runtime.Remoting.Channels.Ipc.IpcChannel/*02000010*/::get_ChannelName() /* 06000072 */
  } // end of property IpcChannel::ChannelName
  .property /*17000027*/ instance callconv(8) object
          ChannelData()
  {
    .get instance object System.Runtime.Remoting.Channels.Ipc.IpcChannel/*02000010*/::get_ChannelData() /* 06000075 */
  } // end of property IpcChannel::ChannelData
} // end of class System.Runtime.Remoting.Channels.Ipc.IpcChannel

.class /*02000011*/ public auto ansi beforefieldinit System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
       implements [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IChannelReceiver/*01000006*/,
                  [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IChannel/*01000008*/,
                  [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.ISecurableChannel/*0100000A*/
{
  .method /*06000079*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(string portName) cil managed
  // SIG: 20 01 01 0E
  {
    // Method begins at RVA 0x20c6
    // Code size       0 (0x0)
  } // end of method IpcServerChannel::.ctor

  .method /*0600007A*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(string name,
                               string portName) cil managed
  // SIG: 20 02 01 0E 0E
  {
    // Method begins at RVA 0x20c7
    // Code size       0 (0x0)
  } // end of method IpcServerChannel::.ctor

  .method /*0600007B*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(string name,
                               string portName,
                               class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSinkProvider/*0100000D*/ sinkProvider) cil managed
  // SIG: 20 03 01 0E 0E 12 35
  {
    // Method begins at RVA 0x20c8
    // Code size       0 (0x0)
  } // end of method IpcServerChannel::.ctor

  .method /*0600007C*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib/*23000001*/]System.Collections.IDictionary/*0100000B*/ properties,
                               class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSinkProvider/*0100000D*/ sinkProvider) cil managed
  // SIG: 20 02 01 12 2D 12 35
  {
    // Method begins at RVA 0x20c9
    // Code size       0 (0x0)
  } // end of method IpcServerChannel::.ctor

  .method /*0600007D*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib/*23000001*/]System.Collections.IDictionary/*0100000B*/ properties,
                               class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSinkProvider/*0100000D*/ sinkProvider,
                               class [mscorlib/*23000001*/]System.Security.AccessControl.CommonSecurityDescriptor/*01000015*/ securityDescriptor) cil managed
  // SIG: 20 03 01 12 2D 12 35 12 55
  {
    // Method begins at RVA 0x20ca
    // Code size       0 (0x0)
  } // end of method IpcServerChannel::.ctor

  .method /*0600007E*/ public hidebysig newslot specialname virtual final 
          instance bool  get_IsSecured() cil managed
  // SIG: 20 00 02
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20cb
    // Code size       0 (0x0)
  } // end of method IpcServerChannel::get_IsSecured

  .method /*0600007F*/ public hidebysig newslot specialname virtual final 
          instance void  set_IsSecured(bool 'value') cil managed
  // SIG: 20 01 01 02
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20cc
    // Code size       0 (0x0)
  } // end of method IpcServerChannel::set_IsSecured

  .method /*06000080*/ public hidebysig newslot specialname virtual final 
          instance int32  get_ChannelPriority() cil managed
  // SIG: 20 00 08
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20cd
    // Code size       0 (0x0)
  } // end of method IpcServerChannel::get_ChannelPriority

  .method /*06000081*/ public hidebysig newslot specialname virtual final 
          instance string  get_ChannelName() cil managed
  // SIG: 20 00 0E
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20ce
    // Code size       0 (0x0)
  } // end of method IpcServerChannel::get_ChannelName

  .method /*06000082*/ public hidebysig newslot virtual final 
          instance string  Parse(string url,
                                 [out] string& objectURI) cil managed
  // SIG: 20 02 0E 0E 10 0E
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20cf
    // Code size       0 (0x0)
  } // end of method IpcServerChannel::Parse

  .method /*06000083*/ public hidebysig newslot specialname virtual final 
          instance object  get_ChannelData() cil managed
  // SIG: 20 00 1C
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20d0
    // Code size       0 (0x0)
  } // end of method IpcServerChannel::get_ChannelData

  .method /*06000084*/ public hidebysig instance string 
          GetChannelUri() cil managed
  // SIG: 20 00 0E
  {
    // Method begins at RVA 0x20d1
    // Code size       0 (0x0)
  } // end of method IpcServerChannel::GetChannelUri

  .method /*06000085*/ public hidebysig newslot virtual 
          instance string[]  GetUrlsForUri(string objectUri) cil managed
  // SIG: 20 01 1D 0E 0E
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20d2
    // Code size       0 (0x0)
  } // end of method IpcServerChannel::GetUrlsForUri

  .method /*06000086*/ public hidebysig newslot virtual final 
          instance void  StartListening(object data) cil managed
  // SIG: 20 01 01 1C
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20d3
    // Code size       0 (0x0)
  } // end of method IpcServerChannel::StartListening

  .method /*06000087*/ public hidebysig newslot virtual final 
          instance void  StopListening(object data) cil managed
  // SIG: 20 01 01 1C
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20d4
    // Code size       0 (0x0)
  } // end of method IpcServerChannel::StopListening

  .property /*17000028*/ instance callconv(8) bool
          IsSecured()
  {
    .get instance bool System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/*02000011*/::get_IsSecured() /* 0600007E */
    .set instance void System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/*02000011*/::set_IsSecured(bool) /* 0600007F */
  } // end of property IpcServerChannel::IsSecured
  .property /*17000029*/ instance callconv(8) int32
          ChannelPriority()
  {
    .get instance int32 System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/*02000011*/::get_ChannelPriority() /* 06000080 */
  } // end of property IpcServerChannel::ChannelPriority
  .property /*1700002A*/ instance callconv(8) string
          ChannelName()
  {
    .get instance string System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/*02000011*/::get_ChannelName() /* 06000081 */
  } // end of property IpcServerChannel::ChannelName
  .property /*1700002B*/ instance callconv(8) object
          ChannelData()
  {
    .get instance object System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/*02000011*/::get_ChannelData() /* 06000083 */
  } // end of property IpcServerChannel::ChannelData
} // end of class System.Runtime.Remoting.Channels.Ipc.IpcServerChannel

.class /*02000012*/ public auto ansi beforefieldinit System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
       implements [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IChannelSender/*01000007*/,
                  [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IChannel/*01000008*/,
                  [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.ISecurableChannel/*0100000A*/
{
  .method /*06000088*/ public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x20d5
    // Code size       0 (0x0)
  } // end of method IpcClientChannel::.ctor

  .method /*06000089*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(string name,
                               class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IClientChannelSinkProvider/*0100000C*/ sinkProvider) cil managed
  // SIG: 20 02 01 0E 12 31
  {
    // Method begins at RVA 0x20d6
    // Code size       0 (0x0)
  } // end of method IpcClientChannel::.ctor

  .method /*0600008A*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib/*23000001*/]System.Collections.IDictionary/*0100000B*/ properties,
                               class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IClientChannelSinkProvider/*0100000C*/ sinkProvider) cil managed
  // SIG: 20 02 01 12 2D 12 31
  {
    // Method begins at RVA 0x20d7
    // Code size       0 (0x0)
  } // end of method IpcClientChannel::.ctor

  .method /*0600008B*/ public hidebysig newslot specialname virtual final 
          instance bool  get_IsSecured() cil managed
  // SIG: 20 00 02
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20d8
    // Code size       0 (0x0)
  } // end of method IpcClientChannel::get_IsSecured

  .method /*0600008C*/ public hidebysig newslot specialname virtual final 
          instance void  set_IsSecured(bool 'value') cil managed
  // SIG: 20 01 01 02
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20d9
    // Code size       0 (0x0)
  } // end of method IpcClientChannel::set_IsSecured

  .method /*0600008D*/ public hidebysig newslot specialname virtual final 
          instance int32  get_ChannelPriority() cil managed
  // SIG: 20 00 08
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20da
    // Code size       0 (0x0)
  } // end of method IpcClientChannel::get_ChannelPriority

  .method /*0600008E*/ public hidebysig newslot specialname virtual final 
          instance string  get_ChannelName() cil managed
  // SIG: 20 00 0E
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20db
    // Code size       0 (0x0)
  } // end of method IpcClientChannel::get_ChannelName

  .method /*0600008F*/ public hidebysig newslot virtual final 
          instance string  Parse(string url,
                                 [out] string& objectURI) cil managed
  // SIG: 20 02 0E 0E 10 0E
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20dc
    // Code size       0 (0x0)
  } // end of method IpcClientChannel::Parse

  .method /*06000090*/ public hidebysig newslot virtual 
          instance class [mscorlib/*23000001*/]System.Runtime.Remoting.Messaging.IMessageSink/*0100000E*/ 
          CreateMessageSink(string url,
                            object remoteChannelData,
                            [out] string& objectURI) cil managed
  // SIG: 20 03 12 39 0E 1C 10 0E
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20dd
    // Code size       0 (0x0)
  } // end of method IpcClientChannel::CreateMessageSink

  .property /*1700002C*/ instance callconv(8) bool
          IsSecured()
  {
    .set instance void System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/*02000012*/::set_IsSecured(bool) /* 0600008C */
    .get instance bool System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/*02000012*/::get_IsSecured() /* 0600008B */
  } // end of property IpcClientChannel::IsSecured
  .property /*1700002D*/ instance callconv(8) int32
          ChannelPriority()
  {
    .get instance int32 System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/*02000012*/::get_ChannelPriority() /* 0600008D */
  } // end of property IpcClientChannel::ChannelPriority
  .property /*1700002E*/ instance callconv(8) string
          ChannelName()
  {
    .get instance string System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/*02000012*/::get_ChannelName() /* 0600008E */
  } // end of property IpcClientChannel::ChannelName
} // end of class System.Runtime.Remoting.Channels.Ipc.IpcClientChannel

.class /*02000013*/ public auto ansi beforefieldinit System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
       implements [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IClientFormatterSinkProvider/*01000016*/,
                  [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IClientChannelSinkProvider/*0100000C*/
{
  .method /*06000091*/ public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x20de
    // Code size       0 (0x0)
  } // end of method BinaryClientFormatterSinkProvider::.ctor

  .method /*06000092*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib/*23000001*/]System.Collections.IDictionary/*0100000B*/ properties,
                               class [mscorlib/*23000001*/]System.Collections.ICollection/*01000010*/ providerData) cil managed
  // SIG: 20 02 01 12 2D 12 41
  {
    // Method begins at RVA 0x20df
    // Code size       0 (0x0)
  } // end of method BinaryClientFormatterSinkProvider::.ctor

  .method /*06000093*/ public hidebysig newslot virtual final 
          instance class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IClientChannelSink/*01000017*/ 
          CreateSink(class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IChannelSender/*01000007*/ channel,
                     string url,
                     object remoteChannelData) cil managed
  // SIG: 20 03 12 5D 12 1D 0E 1C
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20e0
    // Code size       0 (0x0)
  } // end of method BinaryClientFormatterSinkProvider::CreateSink

  .method /*06000094*/ public hidebysig newslot specialname virtual final 
          instance class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IClientChannelSinkProvider/*0100000C*/ 
          get_Next() cil managed
  // SIG: 20 00 12 31
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20e1
    // Code size       0 (0x0)
  } // end of method BinaryClientFormatterSinkProvider::get_Next

  .method /*06000095*/ public hidebysig newslot specialname virtual final 
          instance void  set_Next(class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IClientChannelSinkProvider/*0100000C*/ 'value') cil managed
  // SIG: 20 01 01 12 31
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20e2
    // Code size       0 (0x0)
  } // end of method BinaryClientFormatterSinkProvider::set_Next

  .property /*1700002F*/ instance callconv(8) class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IClientChannelSinkProvider/*0100000C*/
          Next()
  {
    .get instance class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IClientChannelSinkProvider/*0100000C*/ System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider/*02000013*/::get_Next() /* 06000094 */
    .set instance void System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider/*02000013*/::set_Next(class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IClientChannelSinkProvider/*0100000C*/) /* 06000095 */
  } // end of property BinaryClientFormatterSinkProvider::Next
} // end of class System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider

.class /*02000014*/ public auto ansi beforefieldinit System.Runtime.Remoting.Channels.BinaryClientFormatterSink
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
       implements [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IClientFormatterSink/*01000018*/,
                  [mscorlib/*23000001*/]System.Runtime.Remoting.Messaging.IMessageSink/*0100000E*/,
                  [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IClientChannelSink/*01000017*/,
                  [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IChannelSinkBase/*01000019*/
{
  .method /*06000096*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IClientChannelSink/*01000017*/ nextSink) cil managed
  // SIG: 20 01 01 12 5D
  {
    // Method begins at RVA 0x20e3
    // Code size       0 (0x0)
  } // end of method BinaryClientFormatterSink::.ctor

  .method /*06000097*/ public hidebysig newslot specialname virtual final 
          instance class [mscorlib/*23000001*/]System.Runtime.Remoting.Messaging.IMessageSink/*0100000E*/ 
          get_NextSink() cil managed
  // SIG: 20 00 12 39
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20e4
    // Code size       0 (0x0)
  } // end of method BinaryClientFormatterSink::get_NextSink

  .method /*06000098*/ public hidebysig newslot virtual final 
          instance class [mscorlib/*23000001*/]System.Runtime.Remoting.Messaging.IMessage/*0100001A*/ 
          SyncProcessMessage(class [mscorlib/*23000001*/]System.Runtime.Remoting.Messaging.IMessage/*0100001A*/ msg) cil managed
  // SIG: 20 01 12 69 12 69
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20e5
    // Code size       0 (0x0)
  } // end of method BinaryClientFormatterSink::SyncProcessMessage

  .method /*06000099*/ public hidebysig newslot virtual final 
          instance class [mscorlib/*23000001*/]System.Runtime.Remoting.Messaging.IMessageCtrl/*0100001B*/ 
          AsyncProcessMessage(class [mscorlib/*23000001*/]System.Runtime.Remoting.Messaging.IMessage/*0100001A*/ msg,
                              class [mscorlib/*23000001*/]System.Runtime.Remoting.Messaging.IMessageSink/*0100000E*/ replySink) cil managed
  // SIG: 20 02 12 6D 12 69 12 39
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20e6
    // Code size       0 (0x0)
  } // end of method BinaryClientFormatterSink::AsyncProcessMessage

  .method /*0600009A*/ public hidebysig newslot virtual final 
          instance void  ProcessMessage(class [mscorlib/*23000001*/]System.Runtime.Remoting.Messaging.IMessage/*0100001A*/ msg,
                                        class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.ITransportHeaders/*0100001C*/ requestHeaders,
                                        class [mscorlib/*23000001*/]System.IO.Stream/*0100001D*/ requestStream,
                                        [out] class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.ITransportHeaders/*0100001C*/& responseHeaders,
                                        [out] class [mscorlib/*23000001*/]System.IO.Stream/*0100001D*/& responseStream) cil managed
  // SIG: 20 05 01 12 69 12 71 12 75 10 12 71 10 12 75
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20e7
    // Code size       0 (0x0)
  } // end of method BinaryClientFormatterSink::ProcessMessage

  .method /*0600009B*/ public hidebysig newslot virtual final 
          instance void  AsyncProcessRequest(class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IClientChannelSinkStack/*0100001E*/ sinkStack,
                                             class [mscorlib/*23000001*/]System.Runtime.Remoting.Messaging.IMessage/*0100001A*/ msg,
                                             class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.ITransportHeaders/*0100001C*/ headers,
                                             class [mscorlib/*23000001*/]System.IO.Stream/*0100001D*/ 'stream') cil managed
  // SIG: 20 04 01 12 79 12 69 12 71 12 75
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20e8
    // Code size       0 (0x0)
  } // end of method BinaryClientFormatterSink::AsyncProcessRequest

  .method /*0600009C*/ public hidebysig newslot virtual final 
          instance void  AsyncProcessResponse(class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack/*0100001F*/ sinkStack,
                                              object state,
                                              class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.ITransportHeaders/*0100001C*/ headers,
                                              class [mscorlib/*23000001*/]System.IO.Stream/*0100001D*/ 'stream') cil managed
  // SIG: 20 04 01 12 7D 1C 12 71 12 75
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20e9
    // Code size       0 (0x0)
  } // end of method BinaryClientFormatterSink::AsyncProcessResponse

  .method /*0600009D*/ public hidebysig newslot virtual final 
          instance class [mscorlib/*23000001*/]System.IO.Stream/*0100001D*/ 
          GetRequestStream(class [mscorlib/*23000001*/]System.Runtime.Remoting.Messaging.IMessage/*0100001A*/ msg,
                           class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.ITransportHeaders/*0100001C*/ headers) cil managed
  // SIG: 20 02 12 75 12 69 12 71
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20ea
    // Code size       0 (0x0)
  } // end of method BinaryClientFormatterSink::GetRequestStream

  .method /*0600009E*/ public hidebysig newslot specialname virtual final 
          instance class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IClientChannelSink/*01000017*/ 
          get_NextChannelSink() cil managed
  // SIG: 20 00 12 5D
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20eb
    // Code size       0 (0x0)
  } // end of method BinaryClientFormatterSink::get_NextChannelSink

  .method /*0600009F*/ public hidebysig newslot specialname virtual final 
          instance class [mscorlib/*23000001*/]System.Collections.IDictionary/*0100000B*/ 
          get_Properties() cil managed
  // SIG: 20 00 12 2D
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20ec
    // Code size       0 (0x0)
  } // end of method BinaryClientFormatterSink::get_Properties

  .property /*17000030*/ instance callconv(8) class [mscorlib/*23000001*/]System.Runtime.Remoting.Messaging.IMessageSink/*0100000E*/
          NextSink()
  {
    .get instance class [mscorlib/*23000001*/]System.Runtime.Remoting.Messaging.IMessageSink/*0100000E*/ System.Runtime.Remoting.Channels.BinaryClientFormatterSink/*02000014*/::get_NextSink() /* 06000097 */
  } // end of property BinaryClientFormatterSink::NextSink
  .property /*17000031*/ instance callconv(8) class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IClientChannelSink/*01000017*/
          NextChannelSink()
  {
    .get instance class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IClientChannelSink/*01000017*/ System.Runtime.Remoting.Channels.BinaryClientFormatterSink/*02000014*/::get_NextChannelSink() /* 0600009E */
  } // end of property BinaryClientFormatterSink::NextChannelSink
  .property /*17000032*/ instance callconv(8) class [mscorlib/*23000001*/]System.Collections.IDictionary/*0100000B*/
          Properties()
  {
    .get instance class [mscorlib/*23000001*/]System.Collections.IDictionary/*0100000B*/ System.Runtime.Remoting.Channels.BinaryClientFormatterSink/*02000014*/::get_Properties() /* 0600009F */
  } // end of property BinaryClientFormatterSink::Properties
} // end of class System.Runtime.Remoting.Channels.BinaryClientFormatterSink

.class /*02000015*/ public auto ansi beforefieldinit System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
       implements [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerFormatterSinkProvider/*01000020*/,
                  [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSinkProvider/*0100000D*/
{
  .method /*060000A0*/ public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x20ed
    // Code size       0 (0x0)
  } // end of method BinaryServerFormatterSinkProvider::.ctor

  .method /*060000A1*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib/*23000001*/]System.Collections.IDictionary/*0100000B*/ properties,
                               class [mscorlib/*23000001*/]System.Collections.ICollection/*01000010*/ providerData) cil managed
  // SIG: 20 02 01 12 2D 12 41
  {
    // Method begins at RVA 0x20ee
    // Code size       0 (0x0)
  } // end of method BinaryServerFormatterSinkProvider::.ctor

  .method /*060000A2*/ public hidebysig newslot virtual final 
          instance void  GetChannelData(class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IChannelDataStore/*01000021*/ channelData) cil managed
  // SIG: 20 01 01 12 80 85
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20ef
    // Code size       0 (0x0)
  } // end of method BinaryServerFormatterSinkProvider::GetChannelData

  .method /*060000A3*/ public hidebysig newslot virtual final 
          instance class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSink/*0100000F*/ 
          CreateSink(class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IChannelReceiver/*01000006*/ channel) cil managed
  // SIG: 20 01 12 3D 12 19
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20f0
    // Code size       0 (0x0)
  } // end of method BinaryServerFormatterSinkProvider::CreateSink

  .method /*060000A4*/ public hidebysig newslot specialname virtual final 
          instance class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSinkProvider/*0100000D*/ 
          get_Next() cil managed
  // SIG: 20 00 12 35
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20f1
    // Code size       0 (0x0)
  } // end of method BinaryServerFormatterSinkProvider::get_Next

  .method /*060000A5*/ public hidebysig newslot specialname virtual final 
          instance void  set_Next(class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSinkProvider/*0100000D*/ 'value') cil managed
  // SIG: 20 01 01 12 35
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20f2
    // Code size       0 (0x0)
  } // end of method BinaryServerFormatterSinkProvider::set_Next

  .method /*060000A6*/ public hidebysig specialname 
          instance valuetype [mscorlib/*23000001*/]System.Runtime.Serialization.Formatters.TypeFilterLevel/*01000022*/ 
          get_TypeFilterLevel() cil managed
  // SIG: 20 00 11 80 89
  {
    // Method begins at RVA 0x20f3
    // Code size       0 (0x0)
  } // end of method BinaryServerFormatterSinkProvider::get_TypeFilterLevel

  .method /*060000A7*/ public hidebysig specialname 
          instance void  set_TypeFilterLevel(valuetype [mscorlib/*23000001*/]System.Runtime.Serialization.Formatters.TypeFilterLevel/*01000022*/ 'value') cil managed
  // SIG: 20 01 01 11 80 89
  {
    // Method begins at RVA 0x20f4
    // Code size       0 (0x0)
  } // end of method BinaryServerFormatterSinkProvider::set_TypeFilterLevel

  .property /*17000033*/ instance callconv(8) class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSinkProvider/*0100000D*/
          Next()
  {
    .get instance class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSinkProvider/*0100000D*/ System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider/*02000015*/::get_Next() /* 060000A4 */
    .set instance void System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider/*02000015*/::set_Next(class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSinkProvider/*0100000D*/) /* 060000A5 */
  } // end of property BinaryServerFormatterSinkProvider::Next
  .property /*17000034*/ instance callconv(8) valuetype [mscorlib/*23000001*/]System.Runtime.Serialization.Formatters.TypeFilterLevel/*01000022*/
          TypeFilterLevel()
  {
    .custom /*0C00001B:0A000005*/ instance void [mscorlib/*23000001*/]System.Runtime.InteropServices.ComVisibleAttribute/*01000034*/::.ctor(bool) /* 0A000005 */ = ( 01 00 00 00 00 ) 
    .set instance void System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider/*02000015*/::set_TypeFilterLevel(valuetype [mscorlib/*23000001*/]System.Runtime.Serialization.Formatters.TypeFilterLevel/*01000022*/) /* 060000A7 */
    .get instance valuetype [mscorlib/*23000001*/]System.Runtime.Serialization.Formatters.TypeFilterLevel/*01000022*/ System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider/*02000015*/::get_TypeFilterLevel() /* 060000A6 */
  } // end of property BinaryServerFormatterSinkProvider::TypeFilterLevel
} // end of class System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider

.class /*02000016*/ public auto ansi beforefieldinit System.Runtime.Remoting.Channels.BinaryServerFormatterSink
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
       implements [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSink/*0100000F*/,
                  [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IChannelSinkBase/*01000019*/
{
  .class /*02000017*/ auto ansi serializable sealed nested public Protocol
         extends [mscorlib/*23000001*/]System.Enum/*01000002*/
  {
    .field /*04000050*/ public specialname rtspecialname int32 value__
    .field /*04000051*/ public static literal valuetype System.Runtime.Remoting.Channels.BinaryServerFormatterSink/*02000016*//Protocol/*02000017*/ Http = int32(0x00000000)
    .field /*04000052*/ public static literal valuetype System.Runtime.Remoting.Channels.BinaryServerFormatterSink/*02000016*//Protocol/*02000017*/ Other = int32(0x00000001)
  } // end of class Protocol

  .method /*060000A8*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(valuetype System.Runtime.Remoting.Channels.BinaryServerFormatterSink/*02000016*//Protocol/*02000017*/ protocol,
                               class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSink/*0100000F*/ nextSink,
                               class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IChannelReceiver/*01000006*/ receiver) cil managed
  // SIG: 20 03 01 11 5C 12 3D 12 19
  {
    // Method begins at RVA 0x20f5
    // Code size       0 (0x0)
  } // end of method BinaryServerFormatterSink::.ctor

  .method /*060000A9*/ public hidebysig specialname 
          instance valuetype [mscorlib/*23000001*/]System.Runtime.Serialization.Formatters.TypeFilterLevel/*01000022*/ 
          get_TypeFilterLevel() cil managed
  // SIG: 20 00 11 80 89
  {
    // Method begins at RVA 0x20f6
    // Code size       0 (0x0)
  } // end of method BinaryServerFormatterSink::get_TypeFilterLevel

  .method /*060000AA*/ public hidebysig specialname 
          instance void  set_TypeFilterLevel(valuetype [mscorlib/*23000001*/]System.Runtime.Serialization.Formatters.TypeFilterLevel/*01000022*/ 'value') cil managed
  // SIG: 20 01 01 11 80 89
  {
    // Method begins at RVA 0x20f7
    // Code size       0 (0x0)
  } // end of method BinaryServerFormatterSink::set_TypeFilterLevel

  .method /*060000AB*/ public hidebysig newslot virtual final 
          instance valuetype [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.ServerProcessing/*01000023*/ 
          ProcessMessage(class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSinkStack/*01000024*/ sinkStack,
                         class [mscorlib/*23000001*/]System.Runtime.Remoting.Messaging.IMessage/*0100001A*/ requestMsg,
                         class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.ITransportHeaders/*0100001C*/ requestHeaders,
                         class [mscorlib/*23000001*/]System.IO.Stream/*0100001D*/ requestStream,
                         [out] class [mscorlib/*23000001*/]System.Runtime.Remoting.Messaging.IMessage/*0100001A*/& responseMsg,
                         [out] class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.ITransportHeaders/*0100001C*/& responseHeaders,
                         [out] class [mscorlib/*23000001*/]System.IO.Stream/*0100001D*/& responseStream) cil managed
  // SIG: 20 07 11 80 8D 12 80 91 12 69 12 71 12 75 10 12 69 10 12 71 10 12 75
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20f8
    // Code size       0 (0x0)
  } // end of method BinaryServerFormatterSink::ProcessMessage

  .method /*060000AC*/ public hidebysig newslot virtual final 
          instance void  AsyncProcessResponse(class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack/*01000025*/ sinkStack,
                                              object state,
                                              class [mscorlib/*23000001*/]System.Runtime.Remoting.Messaging.IMessage/*0100001A*/ msg,
                                              class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.ITransportHeaders/*0100001C*/ headers,
                                              class [mscorlib/*23000001*/]System.IO.Stream/*0100001D*/ 'stream') cil managed
  // SIG: 20 05 01 12 80 95 1C 12 69 12 71 12 75
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20f9
    // Code size       0 (0x0)
  } // end of method BinaryServerFormatterSink::AsyncProcessResponse

  .method /*060000AD*/ public hidebysig newslot virtual final 
          instance class [mscorlib/*23000001*/]System.IO.Stream/*0100001D*/ 
          GetResponseStream(class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack/*01000025*/ sinkStack,
                            object state,
                            class [mscorlib/*23000001*/]System.Runtime.Remoting.Messaging.IMessage/*0100001A*/ msg,
                            class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.ITransportHeaders/*0100001C*/ headers) cil managed
  // SIG: 20 04 12 75 12 80 95 1C 12 69 12 71
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20fa
    // Code size       0 (0x0)
  } // end of method BinaryServerFormatterSink::GetResponseStream

  .method /*060000AE*/ public hidebysig newslot specialname virtual final 
          instance class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSink/*0100000F*/ 
          get_NextChannelSink() cil managed
  // SIG: 20 00 12 3D
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20fb
    // Code size       0 (0x0)
  } // end of method BinaryServerFormatterSink::get_NextChannelSink

  .method /*060000AF*/ public hidebysig newslot specialname virtual final 
          instance class [mscorlib/*23000001*/]System.Collections.IDictionary/*0100000B*/ 
          get_Properties() cil managed
  // SIG: 20 00 12 2D
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20fc
    // Code size       0 (0x0)
  } // end of method BinaryServerFormatterSink::get_Properties

  .property /*17000035*/ instance callconv(8) valuetype [mscorlib/*23000001*/]System.Runtime.Serialization.Formatters.TypeFilterLevel/*01000022*/
          TypeFilterLevel()
  {
    .custom /*0C00001C:0A000005*/ instance void [mscorlib/*23000001*/]System.Runtime.InteropServices.ComVisibleAttribute/*01000034*/::.ctor(bool) /* 0A000005 */ = ( 01 00 00 00 00 ) 
    .get instance valuetype [mscorlib/*23000001*/]System.Runtime.Serialization.Formatters.TypeFilterLevel/*01000022*/ System.Runtime.Remoting.Channels.BinaryServerFormatterSink/*02000016*/::get_TypeFilterLevel() /* 060000A9 */
    .set instance void System.Runtime.Remoting.Channels.BinaryServerFormatterSink/*02000016*/::set_TypeFilterLevel(valuetype [mscorlib/*23000001*/]System.Runtime.Serialization.Formatters.TypeFilterLevel/*01000022*/) /* 060000AA */
  } // end of property BinaryServerFormatterSink::TypeFilterLevel
  .property /*17000036*/ instance callconv(8) class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSink/*0100000F*/
          NextChannelSink()
  {
    .get instance class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSink/*0100000F*/ System.Runtime.Remoting.Channels.BinaryServerFormatterSink/*02000016*/::get_NextChannelSink() /* 060000AE */
  } // end of property BinaryServerFormatterSink::NextChannelSink
  .property /*17000037*/ instance callconv(8) class [mscorlib/*23000001*/]System.Collections.IDictionary/*0100000B*/
          Properties()
  {
    .get instance class [mscorlib/*23000001*/]System.Collections.IDictionary/*0100000B*/ System.Runtime.Remoting.Channels.BinaryServerFormatterSink/*02000016*/::get_Properties() /* 060000AF */
  } // end of property BinaryServerFormatterSink::Properties
} // end of class System.Runtime.Remoting.Channels.BinaryServerFormatterSink

.class /*02000018*/ public auto ansi beforefieldinit System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
       implements [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IClientFormatterSinkProvider/*01000016*/,
                  [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IClientChannelSinkProvider/*0100000C*/
{
  .method /*060000B0*/ public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x20fd
    // Code size       0 (0x0)
  } // end of method SoapClientFormatterSinkProvider::.ctor

  .method /*060000B1*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib/*23000001*/]System.Collections.IDictionary/*0100000B*/ properties,
                               class [mscorlib/*23000001*/]System.Collections.ICollection/*01000010*/ providerData) cil managed
  // SIG: 20 02 01 12 2D 12 41
  {
    // Method begins at RVA 0x20fe
    // Code size       0 (0x0)
  } // end of method SoapClientFormatterSinkProvider::.ctor

  .method /*060000B2*/ public hidebysig newslot virtual final 
          instance class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IClientChannelSink/*01000017*/ 
          CreateSink(class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IChannelSender/*01000007*/ channel,
                     string url,
                     object remoteChannelData) cil managed
  // SIG: 20 03 12 5D 12 1D 0E 1C
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x20ff
    // Code size       0 (0x0)
  } // end of method SoapClientFormatterSinkProvider::CreateSink

  .method /*060000B3*/ public hidebysig newslot specialname virtual final 
          instance class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IClientChannelSinkProvider/*0100000C*/ 
          get_Next() cil managed
  // SIG: 20 00 12 31
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x2100
    // Code size       0 (0x0)
  } // end of method SoapClientFormatterSinkProvider::get_Next

  .method /*060000B4*/ public hidebysig newslot specialname virtual final 
          instance void  set_Next(class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IClientChannelSinkProvider/*0100000C*/ 'value') cil managed
  // SIG: 20 01 01 12 31
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x2101
    // Code size       0 (0x0)
  } // end of method SoapClientFormatterSinkProvider::set_Next

  .property /*17000038*/ instance callconv(8) class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IClientChannelSinkProvider/*0100000C*/
          Next()
  {
    .set instance void System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider/*02000018*/::set_Next(class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IClientChannelSinkProvider/*0100000C*/) /* 060000B4 */
    .get instance class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IClientChannelSinkProvider/*0100000C*/ System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider/*02000018*/::get_Next() /* 060000B3 */
  } // end of property SoapClientFormatterSinkProvider::Next
} // end of class System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider

.class /*02000019*/ public auto ansi beforefieldinit System.Runtime.Remoting.Channels.SoapClientFormatterSink
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
       implements [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IClientFormatterSink/*01000018*/,
                  [mscorlib/*23000001*/]System.Runtime.Remoting.Messaging.IMessageSink/*0100000E*/,
                  [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IClientChannelSink/*01000017*/,
                  [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IChannelSinkBase/*01000019*/
{
  .method /*060000B5*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IClientChannelSink/*01000017*/ nextSink) cil managed
  // SIG: 20 01 01 12 5D
  {
    // Method begins at RVA 0x2102
    // Code size       0 (0x0)
  } // end of method SoapClientFormatterSink::.ctor

  .method /*060000B6*/ public hidebysig newslot specialname virtual final 
          instance class [mscorlib/*23000001*/]System.Runtime.Remoting.Messaging.IMessageSink/*0100000E*/ 
          get_NextSink() cil managed
  // SIG: 20 00 12 39
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x2103
    // Code size       0 (0x0)
  } // end of method SoapClientFormatterSink::get_NextSink

  .method /*060000B7*/ public hidebysig newslot virtual final 
          instance class [mscorlib/*23000001*/]System.Runtime.Remoting.Messaging.IMessage/*0100001A*/ 
          SyncProcessMessage(class [mscorlib/*23000001*/]System.Runtime.Remoting.Messaging.IMessage/*0100001A*/ msg) cil managed
  // SIG: 20 01 12 69 12 69
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x2104
    // Code size       0 (0x0)
  } // end of method SoapClientFormatterSink::SyncProcessMessage

  .method /*060000B8*/ public hidebysig newslot virtual final 
          instance class [mscorlib/*23000001*/]System.Runtime.Remoting.Messaging.IMessageCtrl/*0100001B*/ 
          AsyncProcessMessage(class [mscorlib/*23000001*/]System.Runtime.Remoting.Messaging.IMessage/*0100001A*/ msg,
                              class [mscorlib/*23000001*/]System.Runtime.Remoting.Messaging.IMessageSink/*0100000E*/ replySink) cil managed
  // SIG: 20 02 12 6D 12 69 12 39
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x2105
    // Code size       0 (0x0)
  } // end of method SoapClientFormatterSink::AsyncProcessMessage

  .method /*060000B9*/ public hidebysig newslot virtual final 
          instance void  ProcessMessage(class [mscorlib/*23000001*/]System.Runtime.Remoting.Messaging.IMessage/*0100001A*/ msg,
                                        class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.ITransportHeaders/*0100001C*/ requestHeaders,
                                        class [mscorlib/*23000001*/]System.IO.Stream/*0100001D*/ requestStream,
                                        [out] class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.ITransportHeaders/*0100001C*/& responseHeaders,
                                        [out] class [mscorlib/*23000001*/]System.IO.Stream/*0100001D*/& responseStream) cil managed
  // SIG: 20 05 01 12 69 12 71 12 75 10 12 71 10 12 75
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x2106
    // Code size       0 (0x0)
  } // end of method SoapClientFormatterSink::ProcessMessage

  .method /*060000BA*/ public hidebysig newslot virtual final 
          instance void  AsyncProcessRequest(class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IClientChannelSinkStack/*0100001E*/ sinkStack,
                                             class [mscorlib/*23000001*/]System.Runtime.Remoting.Messaging.IMessage/*0100001A*/ msg,
                                             class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.ITransportHeaders/*0100001C*/ headers,
                                             class [mscorlib/*23000001*/]System.IO.Stream/*0100001D*/ 'stream') cil managed
  // SIG: 20 04 01 12 79 12 69 12 71 12 75
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x2107
    // Code size       0 (0x0)
  } // end of method SoapClientFormatterSink::AsyncProcessRequest

  .method /*060000BB*/ public hidebysig newslot virtual final 
          instance void  AsyncProcessResponse(class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack/*0100001F*/ sinkStack,
                                              object state,
                                              class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.ITransportHeaders/*0100001C*/ headers,
                                              class [mscorlib/*23000001*/]System.IO.Stream/*0100001D*/ 'stream') cil managed
  // SIG: 20 04 01 12 7D 1C 12 71 12 75
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x2108
    // Code size       0 (0x0)
  } // end of method SoapClientFormatterSink::AsyncProcessResponse

  .method /*060000BC*/ public hidebysig newslot virtual final 
          instance class [mscorlib/*23000001*/]System.IO.Stream/*0100001D*/ 
          GetRequestStream(class [mscorlib/*23000001*/]System.Runtime.Remoting.Messaging.IMessage/*0100001A*/ msg,
                           class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.ITransportHeaders/*0100001C*/ headers) cil managed
  // SIG: 20 02 12 75 12 69 12 71
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x2109
    // Code size       0 (0x0)
  } // end of method SoapClientFormatterSink::GetRequestStream

  .method /*060000BD*/ public hidebysig newslot specialname virtual final 
          instance class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IClientChannelSink/*01000017*/ 
          get_NextChannelSink() cil managed
  // SIG: 20 00 12 5D
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x210a
    // Code size       0 (0x0)
  } // end of method SoapClientFormatterSink::get_NextChannelSink

  .method /*060000BE*/ public hidebysig newslot specialname virtual final 
          instance class [mscorlib/*23000001*/]System.Collections.IDictionary/*0100000B*/ 
          get_Properties() cil managed
  // SIG: 20 00 12 2D
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x210b
    // Code size       0 (0x0)
  } // end of method SoapClientFormatterSink::get_Properties

  .property /*17000039*/ instance callconv(8) class [mscorlib/*23000001*/]System.Runtime.Remoting.Messaging.IMessageSink/*0100000E*/
          NextSink()
  {
    .get instance class [mscorlib/*23000001*/]System.Runtime.Remoting.Messaging.IMessageSink/*0100000E*/ System.Runtime.Remoting.Channels.SoapClientFormatterSink/*02000019*/::get_NextSink() /* 060000B6 */
  } // end of property SoapClientFormatterSink::NextSink
  .property /*1700003A*/ instance callconv(8) class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IClientChannelSink/*01000017*/
          NextChannelSink()
  {
    .get instance class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IClientChannelSink/*01000017*/ System.Runtime.Remoting.Channels.SoapClientFormatterSink/*02000019*/::get_NextChannelSink() /* 060000BD */
  } // end of property SoapClientFormatterSink::NextChannelSink
  .property /*1700003B*/ instance callconv(8) class [mscorlib/*23000001*/]System.Collections.IDictionary/*0100000B*/
          Properties()
  {
    .get instance class [mscorlib/*23000001*/]System.Collections.IDictionary/*0100000B*/ System.Runtime.Remoting.Channels.SoapClientFormatterSink/*02000019*/::get_Properties() /* 060000BE */
  } // end of property SoapClientFormatterSink::Properties
} // end of class System.Runtime.Remoting.Channels.SoapClientFormatterSink

.class /*0200001A*/ public auto ansi beforefieldinit System.Runtime.Remoting.Channels.SoapServerFormatterSinkProvider
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
       implements [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerFormatterSinkProvider/*01000020*/,
                  [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSinkProvider/*0100000D*/
{
  .method /*060000BF*/ public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x210c
    // Code size       0 (0x0)
  } // end of method SoapServerFormatterSinkProvider::.ctor

  .method /*060000C0*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib/*23000001*/]System.Collections.IDictionary/*0100000B*/ properties,
                               class [mscorlib/*23000001*/]System.Collections.ICollection/*01000010*/ providerData) cil managed
  // SIG: 20 02 01 12 2D 12 41
  {
    // Method begins at RVA 0x210d
    // Code size       0 (0x0)
  } // end of method SoapServerFormatterSinkProvider::.ctor

  .method /*060000C1*/ public hidebysig newslot virtual final 
          instance void  GetChannelData(class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IChannelDataStore/*01000021*/ channelData) cil managed
  // SIG: 20 01 01 12 80 85
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x210e
    // Code size       0 (0x0)
  } // end of method SoapServerFormatterSinkProvider::GetChannelData

  .method /*060000C2*/ public hidebysig newslot virtual final 
          instance class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSink/*0100000F*/ 
          CreateSink(class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IChannelReceiver/*01000006*/ channel) cil managed
  // SIG: 20 01 12 3D 12 19
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x210f
    // Code size       0 (0x0)
  } // end of method SoapServerFormatterSinkProvider::CreateSink

  .method /*060000C3*/ public hidebysig newslot specialname virtual final 
          instance class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSinkProvider/*0100000D*/ 
          get_Next() cil managed
  // SIG: 20 00 12 35
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x2110
    // Code size       0 (0x0)
  } // end of method SoapServerFormatterSinkProvider::get_Next

  .method /*060000C4*/ public hidebysig newslot specialname virtual final 
          instance void  set_Next(class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSinkProvider/*0100000D*/ 'value') cil managed
  // SIG: 20 01 01 12 35
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x2111
    // Code size       0 (0x0)
  } // end of method SoapServerFormatterSinkProvider::set_Next

  .method /*060000C5*/ public hidebysig specialname 
          instance valuetype [mscorlib/*23000001*/]System.Runtime.Serialization.Formatters.TypeFilterLevel/*01000022*/ 
          get_TypeFilterLevel() cil managed
  // SIG: 20 00 11 80 89
  {
    // Method begins at RVA 0x2112
    // Code size       0 (0x0)
  } // end of method SoapServerFormatterSinkProvider::get_TypeFilterLevel

  .method /*060000C6*/ public hidebysig specialname 
          instance void  set_TypeFilterLevel(valuetype [mscorlib/*23000001*/]System.Runtime.Serialization.Formatters.TypeFilterLevel/*01000022*/ 'value') cil managed
  // SIG: 20 01 01 11 80 89
  {
    // Method begins at RVA 0x2113
    // Code size       0 (0x0)
  } // end of method SoapServerFormatterSinkProvider::set_TypeFilterLevel

  .property /*1700003C*/ instance callconv(8) class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSinkProvider/*0100000D*/
          Next()
  {
    .set instance void System.Runtime.Remoting.Channels.SoapServerFormatterSinkProvider/*0200001A*/::set_Next(class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSinkProvider/*0100000D*/) /* 060000C4 */
    .get instance class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSinkProvider/*0100000D*/ System.Runtime.Remoting.Channels.SoapServerFormatterSinkProvider/*0200001A*/::get_Next() /* 060000C3 */
  } // end of property SoapServerFormatterSinkProvider::Next
  .property /*1700003D*/ instance callconv(8) valuetype [mscorlib/*23000001*/]System.Runtime.Serialization.Formatters.TypeFilterLevel/*01000022*/
          TypeFilterLevel()
  {
    .custom /*0C00001D:0A000005*/ instance void [mscorlib/*23000001*/]System.Runtime.InteropServices.ComVisibleAttribute/*01000034*/::.ctor(bool) /* 0A000005 */ = ( 01 00 00 00 00 ) 
    .get instance valuetype [mscorlib/*23000001*/]System.Runtime.Serialization.Formatters.TypeFilterLevel/*01000022*/ System.Runtime.Remoting.Channels.SoapServerFormatterSinkProvider/*0200001A*/::get_TypeFilterLevel() /* 060000C5 */
    .set instance void System.Runtime.Remoting.Channels.SoapServerFormatterSinkProvider/*0200001A*/::set_TypeFilterLevel(valuetype [mscorlib/*23000001*/]System.Runtime.Serialization.Formatters.TypeFilterLevel/*01000022*/) /* 060000C6 */
  } // end of property SoapServerFormatterSinkProvider::TypeFilterLevel
} // end of class System.Runtime.Remoting.Channels.SoapServerFormatterSinkProvider

.class /*0200001B*/ public auto ansi beforefieldinit System.Runtime.Remoting.Channels.SoapServerFormatterSink
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
       implements [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSink/*0100000F*/,
                  [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IChannelSinkBase/*01000019*/
{
  .class /*0200001C*/ auto ansi serializable sealed nested public Protocol
         extends [mscorlib/*23000001*/]System.Enum/*01000002*/
  {
    .field /*04000053*/ public specialname rtspecialname int32 value__
    .field /*04000054*/ public static literal valuetype System.Runtime.Remoting.Channels.SoapServerFormatterSink/*0200001B*//Protocol/*0200001C*/ Http = int32(0x00000000)
    .field /*04000055*/ public static literal valuetype System.Runtime.Remoting.Channels.SoapServerFormatterSink/*0200001B*//Protocol/*0200001C*/ Other = int32(0x00000001)
  } // end of class Protocol

  .method /*060000C7*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(valuetype System.Runtime.Remoting.Channels.SoapServerFormatterSink/*0200001B*//Protocol/*0200001C*/ protocol,
                               class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSink/*0100000F*/ nextSink,
                               class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IChannelReceiver/*01000006*/ receiver) cil managed
  // SIG: 20 03 01 11 70 12 3D 12 19
  {
    // Method begins at RVA 0x2114
    // Code size       0 (0x0)
  } // end of method SoapServerFormatterSink::.ctor

  .method /*060000C8*/ public hidebysig specialname 
          instance valuetype [mscorlib/*23000001*/]System.Runtime.Serialization.Formatters.TypeFilterLevel/*01000022*/ 
          get_TypeFilterLevel() cil managed
  // SIG: 20 00 11 80 89
  {
    // Method begins at RVA 0x2115
    // Code size       0 (0x0)
  } // end of method SoapServerFormatterSink::get_TypeFilterLevel

  .method /*060000C9*/ public hidebysig specialname 
          instance void  set_TypeFilterLevel(valuetype [mscorlib/*23000001*/]System.Runtime.Serialization.Formatters.TypeFilterLevel/*01000022*/ 'value') cil managed
  // SIG: 20 01 01 11 80 89
  {
    // Method begins at RVA 0x2116
    // Code size       0 (0x0)
  } // end of method SoapServerFormatterSink::set_TypeFilterLevel

  .method /*060000CA*/ public hidebysig newslot virtual final 
          instance valuetype [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.ServerProcessing/*01000023*/ 
          ProcessMessage(class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSinkStack/*01000024*/ sinkStack,
                         class [mscorlib/*23000001*/]System.Runtime.Remoting.Messaging.IMessage/*0100001A*/ requestMsg,
                         class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.ITransportHeaders/*0100001C*/ requestHeaders,
                         class [mscorlib/*23000001*/]System.IO.Stream/*0100001D*/ requestStream,
                         [out] class [mscorlib/*23000001*/]System.Runtime.Remoting.Messaging.IMessage/*0100001A*/& responseMsg,
                         [out] class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.ITransportHeaders/*0100001C*/& responseHeaders,
                         [out] class [mscorlib/*23000001*/]System.IO.Stream/*0100001D*/& responseStream) cil managed
  // SIG: 20 07 11 80 8D 12 80 91 12 69 12 71 12 75 10 12 69 10 12 71 10 12 75
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x2117
    // Code size       0 (0x0)
  } // end of method SoapServerFormatterSink::ProcessMessage

  .method /*060000CB*/ public hidebysig newslot virtual final 
          instance void  AsyncProcessResponse(class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack/*01000025*/ sinkStack,
                                              object state,
                                              class [mscorlib/*23000001*/]System.Runtime.Remoting.Messaging.IMessage/*0100001A*/ msg,
                                              class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.ITransportHeaders/*0100001C*/ headers,
                                              class [mscorlib/*23000001*/]System.IO.Stream/*0100001D*/ 'stream') cil managed
  // SIG: 20 05 01 12 80 95 1C 12 69 12 71 12 75
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x2118
    // Code size       0 (0x0)
  } // end of method SoapServerFormatterSink::AsyncProcessResponse

  .method /*060000CC*/ public hidebysig newslot virtual final 
          instance class [mscorlib/*23000001*/]System.IO.Stream/*0100001D*/ 
          GetResponseStream(class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack/*01000025*/ sinkStack,
                            object state,
                            class [mscorlib/*23000001*/]System.Runtime.Remoting.Messaging.IMessage/*0100001A*/ msg,
                            class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.ITransportHeaders/*0100001C*/ headers) cil managed
  // SIG: 20 04 12 75 12 80 95 1C 12 69 12 71
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x2119
    // Code size       0 (0x0)
  } // end of method SoapServerFormatterSink::GetResponseStream

  .method /*060000CD*/ public hidebysig newslot specialname virtual final 
          instance class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSink/*0100000F*/ 
          get_NextChannelSink() cil managed
  // SIG: 20 00 12 3D
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x211a
    // Code size       0 (0x0)
  } // end of method SoapServerFormatterSink::get_NextChannelSink

  .method /*060000CE*/ public hidebysig newslot specialname virtual final 
          instance class [mscorlib/*23000001*/]System.Collections.IDictionary/*0100000B*/ 
          get_Properties() cil managed
  // SIG: 20 00 12 2D
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x211b
    // Code size       0 (0x0)
  } // end of method SoapServerFormatterSink::get_Properties

  .property /*1700003E*/ instance callconv(8) valuetype [mscorlib/*23000001*/]System.Runtime.Serialization.Formatters.TypeFilterLevel/*01000022*/
          TypeFilterLevel()
  {
    .custom /*0C00001E:0A000005*/ instance void [mscorlib/*23000001*/]System.Runtime.InteropServices.ComVisibleAttribute/*01000034*/::.ctor(bool) /* 0A000005 */ = ( 01 00 00 00 00 ) 
    .get instance valuetype [mscorlib/*23000001*/]System.Runtime.Serialization.Formatters.TypeFilterLevel/*01000022*/ System.Runtime.Remoting.Channels.SoapServerFormatterSink/*0200001B*/::get_TypeFilterLevel() /* 060000C8 */
    .set instance void System.Runtime.Remoting.Channels.SoapServerFormatterSink/*0200001B*/::set_TypeFilterLevel(valuetype [mscorlib/*23000001*/]System.Runtime.Serialization.Formatters.TypeFilterLevel/*01000022*/) /* 060000C9 */
  } // end of property SoapServerFormatterSink::TypeFilterLevel
  .property /*1700003F*/ instance callconv(8) class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSink/*0100000F*/
          NextChannelSink()
  {
    .get instance class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSink/*0100000F*/ System.Runtime.Remoting.Channels.SoapServerFormatterSink/*0200001B*/::get_NextChannelSink() /* 060000CD */
  } // end of property SoapServerFormatterSink::NextChannelSink
  .property /*17000040*/ instance callconv(8) class [mscorlib/*23000001*/]System.Collections.IDictionary/*0100000B*/
          Properties()
  {
    .get instance class [mscorlib/*23000001*/]System.Collections.IDictionary/*0100000B*/ System.Runtime.Remoting.Channels.SoapServerFormatterSink/*0200001B*/::get_Properties() /* 060000CE */
  } // end of property SoapServerFormatterSink::Properties
} // end of class System.Runtime.Remoting.Channels.SoapServerFormatterSink

.class /*0200001D*/ public auto ansi beforefieldinit System.Runtime.Remoting.MetadataServices.MetaData
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
{
  .method /*060000CF*/ public hidebysig static 
          void  ConvertTypesToSchemaToFile(class [mscorlib/*23000001*/]System.Type/*01000012*/[] types,
                                           valuetype System.Runtime.Remoting.MetadataServices.SdlType/*02000023*/ sdlType,
                                           string path) cil managed
  // SIG: 00 03 01 1D 12 49 11 80 8C 0E
  {
    // Method begins at RVA 0x211c
    // Code size       0 (0x0)
  } // end of method MetaData::ConvertTypesToSchemaToFile

  .method /*060000D0*/ public hidebysig static 
          void  ConvertTypesToSchemaToStream(class [mscorlib/*23000001*/]System.Type/*01000012*/[] types,
                                             valuetype System.Runtime.Remoting.MetadataServices.SdlType/*02000023*/ sdlType,
                                             class [mscorlib/*23000001*/]System.IO.Stream/*0100001D*/ outputStream) cil managed
  // SIG: 00 03 01 1D 12 49 11 80 8C 12 75
  {
    // Method begins at RVA 0x211d
    // Code size       0 (0x0)
  } // end of method MetaData::ConvertTypesToSchemaToStream

  .method /*060000D1*/ public hidebysig static 
          void  ConvertTypesToSchemaToFile(class System.Runtime.Remoting.MetadataServices.ServiceType/*0200001E*/[] types,
                                           valuetype System.Runtime.Remoting.MetadataServices.SdlType/*02000023*/ sdlType,
                                           string path) cil managed
  // SIG: 00 03 01 1D 12 78 11 80 8C 0E
  {
    // Method begins at RVA 0x211e
    // Code size       0 (0x0)
  } // end of method MetaData::ConvertTypesToSchemaToFile

  .method /*060000D2*/ public hidebysig static 
          void  ConvertTypesToSchemaToStream(class System.Runtime.Remoting.MetadataServices.ServiceType/*0200001E*/[] serviceTypes,
                                             valuetype System.Runtime.Remoting.MetadataServices.SdlType/*02000023*/ sdlType,
                                             class [mscorlib/*23000001*/]System.IO.Stream/*0100001D*/ outputStream) cil managed
  // SIG: 00 03 01 1D 12 78 11 80 8C 12 75
  {
    // Method begins at RVA 0x211f
    // Code size       0 (0x0)
  } // end of method MetaData::ConvertTypesToSchemaToStream

  .method /*060000D3*/ public hidebysig static 
          void  RetrieveSchemaFromUrlToStream(string url,
                                              class [mscorlib/*23000001*/]System.IO.Stream/*0100001D*/ outputStream) cil managed
  // SIG: 00 02 01 0E 12 75
  {
    // Method begins at RVA 0x2120
    // Code size       0 (0x0)
  } // end of method MetaData::RetrieveSchemaFromUrlToStream

  .method /*060000D4*/ public hidebysig static 
          void  RetrieveSchemaFromUrlToFile(string url,
                                            string path) cil managed
  // SIG: 00 02 01 0E 0E
  {
    // Method begins at RVA 0x2121
    // Code size       0 (0x0)
  } // end of method MetaData::RetrieveSchemaFromUrlToFile

  .method /*060000D5*/ public hidebysig static 
          void  ConvertSchemaStreamToCodeSourceStream(bool clientProxy,
                                                      string outputDirectory,
                                                      class [mscorlib/*23000001*/]System.IO.Stream/*0100001D*/ inputStream,
                                                      class [mscorlib/*23000001*/]System.Collections.ArrayList/*01000026*/ outCodeStreamList,
                                                      string proxyUrl,
                                                      string proxyNamespace) cil managed
  // SIG: 00 06 01 02 0E 12 75 12 80 99 0E 0E
  {
    // Method begins at RVA 0x2122
    // Code size       0 (0x0)
  } // end of method MetaData::ConvertSchemaStreamToCodeSourceStream

  .method /*060000D6*/ public hidebysig static 
          void  ConvertSchemaStreamToCodeSourceStream(bool clientProxy,
                                                      string outputDirectory,
                                                      class [mscorlib/*23000001*/]System.IO.Stream/*0100001D*/ inputStream,
                                                      class [mscorlib/*23000001*/]System.Collections.ArrayList/*01000026*/ outCodeStreamList,
                                                      string proxyUrl) cil managed
  // SIG: 00 05 01 02 0E 12 75 12 80 99 0E
  {
    // Method begins at RVA 0x2123
    // Code size       0 (0x0)
  } // end of method MetaData::ConvertSchemaStreamToCodeSourceStream

  .method /*060000D7*/ public hidebysig static 
          void  ConvertSchemaStreamToCodeSourceStream(bool clientProxy,
                                                      string outputDirectory,
                                                      class [mscorlib/*23000001*/]System.IO.Stream/*0100001D*/ inputStream,
                                                      class [mscorlib/*23000001*/]System.Collections.ArrayList/*01000026*/ outCodeStreamList) cil managed
  // SIG: 00 04 01 02 0E 12 75 12 80 99
  {
    // Method begins at RVA 0x2124
    // Code size       0 (0x0)
  } // end of method MetaData::ConvertSchemaStreamToCodeSourceStream

  .method /*060000D8*/ public hidebysig static 
          void  ConvertCodeSourceStreamToAssemblyFile(class [mscorlib/*23000001*/]System.Collections.ArrayList/*01000026*/ outCodeStreamList,
                                                      string assemblyPath,
                                                      string strongNameFilename) cil managed
  // SIG: 00 03 01 12 80 99 0E 0E
  {
    // Method begins at RVA 0x2125
    // Code size       0 (0x0)
  } // end of method MetaData::ConvertCodeSourceStreamToAssemblyFile

  .method /*060000D9*/ public hidebysig static 
          void  ConvertCodeSourceFileToAssemblyFile(string codePath,
                                                    string assemblyPath,
                                                    string strongNameFilename) cil managed
  // SIG: 00 03 01 0E 0E 0E
  {
    // Method begins at RVA 0x2126
    // Code size       0 (0x0)
  } // end of method MetaData::ConvertCodeSourceFileToAssemblyFile

  .method /*060000DA*/ public hidebysig static 
          void  SaveStreamToFile(class [mscorlib/*23000001*/]System.IO.Stream/*0100001D*/ inputStream,
                                 string path) cil managed
  // SIG: 00 02 01 12 75 0E
  {
    // Method begins at RVA 0x2127
    // Code size       0 (0x0)
  } // end of method MetaData::SaveStreamToFile

  .method /*060000DB*/ public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x2128
    // Code size       0 (0x0)
  } // end of method MetaData::.ctor

} // end of class System.Runtime.Remoting.MetadataServices.MetaData

.class /*0200001E*/ public auto ansi beforefieldinit System.Runtime.Remoting.MetadataServices.ServiceType
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
{
  .method /*060000DC*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib/*23000001*/]System.Type/*01000012*/ 'type') cil managed
  // SIG: 20 01 01 12 49
  {
    // Method begins at RVA 0x2129
    // Code size       0 (0x0)
  } // end of method ServiceType::.ctor

  .method /*060000DD*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib/*23000001*/]System.Type/*01000012*/ 'type',
                               string url) cil managed
  // SIG: 20 02 01 12 49 0E
  {
    // Method begins at RVA 0x212a
    // Code size       0 (0x0)
  } // end of method ServiceType::.ctor

  .method /*060000DE*/ public hidebysig specialname 
          instance class [mscorlib/*23000001*/]System.Type/*01000012*/ 
          get_ObjectType() cil managed
  // SIG: 20 00 12 49
  {
    // Method begins at RVA 0x212b
    // Code size       0 (0x0)
  } // end of method ServiceType::get_ObjectType

  .method /*060000DF*/ public hidebysig specialname 
          instance string  get_Url() cil managed
  // SIG: 20 00 0E
  {
    // Method begins at RVA 0x212c
    // Code size       0 (0x0)
  } // end of method ServiceType::get_Url

  .property /*17000041*/ instance callconv(8) class [mscorlib/*23000001*/]System.Type/*01000012*/
          ObjectType()
  {
    .get instance class [mscorlib/*23000001*/]System.Type/*01000012*/ System.Runtime.Remoting.MetadataServices.ServiceType/*0200001E*/::get_ObjectType() /* 060000DE */
  } // end of property ServiceType::ObjectType
  .property /*17000042*/ instance callconv(8) string
          Url()
  {
    .get instance string System.Runtime.Remoting.MetadataServices.ServiceType/*0200001E*/::get_Url() /* 060000DF */
  } // end of property ServiceType::Url
} // end of class System.Runtime.Remoting.MetadataServices.ServiceType

.class /*0200001F*/ public auto ansi beforefieldinit System.Runtime.Remoting.MetadataServices.SdlChannelSinkProvider
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
       implements [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSinkProvider/*0100000D*/
{
  .method /*060000E0*/ public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x212d
    // Code size       0 (0x0)
  } // end of method SdlChannelSinkProvider::.ctor

  .method /*060000E1*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib/*23000001*/]System.Collections.IDictionary/*0100000B*/ properties,
                               class [mscorlib/*23000001*/]System.Collections.ICollection/*01000010*/ providerData) cil managed
  // SIG: 20 02 01 12 2D 12 41
  {
    // Method begins at RVA 0x212e
    // Code size       0 (0x0)
  } // end of method SdlChannelSinkProvider::.ctor

  .method /*060000E2*/ public hidebysig newslot virtual final 
          instance void  GetChannelData(class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IChannelDataStore/*01000021*/ localChannelData) cil managed
  // SIG: 20 01 01 12 80 85
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x212f
    // Code size       0 (0x0)
  } // end of method SdlChannelSinkProvider::GetChannelData

  .method /*060000E3*/ public hidebysig newslot virtual final 
          instance class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSink/*0100000F*/ 
          CreateSink(class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IChannelReceiver/*01000006*/ channel) cil managed
  // SIG: 20 01 12 3D 12 19
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x2130
    // Code size       0 (0x0)
  } // end of method SdlChannelSinkProvider::CreateSink

  .method /*060000E4*/ public hidebysig newslot specialname virtual final 
          instance class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSinkProvider/*0100000D*/ 
          get_Next() cil managed
  // SIG: 20 00 12 35
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x2131
    // Code size       0 (0x0)
  } // end of method SdlChannelSinkProvider::get_Next

  .method /*060000E5*/ public hidebysig newslot specialname virtual final 
          instance void  set_Next(class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSinkProvider/*0100000D*/ 'value') cil managed
  // SIG: 20 01 01 12 35
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x2132
    // Code size       0 (0x0)
  } // end of method SdlChannelSinkProvider::set_Next

  .property /*17000043*/ instance callconv(8) class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSinkProvider/*0100000D*/
          Next()
  {
    .get instance class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSinkProvider/*0100000D*/ System.Runtime.Remoting.MetadataServices.SdlChannelSinkProvider/*0200001F*/::get_Next() /* 060000E4 */
    .set instance void System.Runtime.Remoting.MetadataServices.SdlChannelSinkProvider/*0200001F*/::set_Next(class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSinkProvider/*0100000D*/) /* 060000E5 */
  } // end of property SdlChannelSinkProvider::Next
} // end of class System.Runtime.Remoting.MetadataServices.SdlChannelSinkProvider

.class /*02000020*/ public auto ansi beforefieldinit System.Runtime.Remoting.MetadataServices.SdlChannelSink
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
       implements [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSink/*0100000F*/,
                  [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IChannelSinkBase/*01000019*/
{
  .method /*060000E6*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IChannelReceiver/*01000006*/ receiver,
                               class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSink/*0100000F*/ nextSink) cil managed
  // SIG: 20 02 01 12 19 12 3D
  {
    // Method begins at RVA 0x2133
    // Code size       0 (0x0)
  } // end of method SdlChannelSink::.ctor

  .method /*060000E7*/ public hidebysig newslot virtual final 
          instance valuetype [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.ServerProcessing/*01000023*/ 
          ProcessMessage(class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSinkStack/*01000024*/ sinkStack,
                         class [mscorlib/*23000001*/]System.Runtime.Remoting.Messaging.IMessage/*0100001A*/ requestMsg,
                         class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.ITransportHeaders/*0100001C*/ requestHeaders,
                         class [mscorlib/*23000001*/]System.IO.Stream/*0100001D*/ requestStream,
                         [out] class [mscorlib/*23000001*/]System.Runtime.Remoting.Messaging.IMessage/*0100001A*/& responseMsg,
                         [out] class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.ITransportHeaders/*0100001C*/& responseHeaders,
                         [out] class [mscorlib/*23000001*/]System.IO.Stream/*0100001D*/& responseStream) cil managed
  // SIG: 20 07 11 80 8D 12 80 91 12 69 12 71 12 75 10 12 69 10 12 71 10 12 75
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x2134
    // Code size       0 (0x0)
  } // end of method SdlChannelSink::ProcessMessage

  .method /*060000E8*/ public hidebysig newslot virtual final 
          instance void  AsyncProcessResponse(class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack/*01000025*/ sinkStack,
                                              object state,
                                              class [mscorlib/*23000001*/]System.Runtime.Remoting.Messaging.IMessage/*0100001A*/ msg,
                                              class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.ITransportHeaders/*0100001C*/ headers,
                                              class [mscorlib/*23000001*/]System.IO.Stream/*0100001D*/ 'stream') cil managed
  // SIG: 20 05 01 12 80 95 1C 12 69 12 71 12 75
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x2135
    // Code size       0 (0x0)
  } // end of method SdlChannelSink::AsyncProcessResponse

  .method /*060000E9*/ public hidebysig newslot virtual final 
          instance class [mscorlib/*23000001*/]System.IO.Stream/*0100001D*/ 
          GetResponseStream(class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack/*01000025*/ sinkStack,
                            object state,
                            class [mscorlib/*23000001*/]System.Runtime.Remoting.Messaging.IMessage/*0100001A*/ msg,
                            class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.ITransportHeaders/*0100001C*/ headers) cil managed
  // SIG: 20 04 12 75 12 80 95 1C 12 69 12 71
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x2136
    // Code size       0 (0x0)
  } // end of method SdlChannelSink::GetResponseStream

  .method /*060000EA*/ public hidebysig newslot specialname virtual final 
          instance class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSink/*0100000F*/ 
          get_NextChannelSink() cil managed
  // SIG: 20 00 12 3D
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x2137
    // Code size       0 (0x0)
  } // end of method SdlChannelSink::get_NextChannelSink

  .method /*060000EB*/ public hidebysig newslot specialname virtual final 
          instance class [mscorlib/*23000001*/]System.Collections.IDictionary/*0100000B*/ 
          get_Properties() cil managed
  // SIG: 20 00 12 2D
  {
    .permissionset linkcheck
              bytearray (2E 01 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72   // ....System.Secur
                         69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E   // ity.Permissions.
                         53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69   // SecurityPermissi
                         6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63   // onAttribute, msc
                         6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 34   // orlib, Version=4
                         2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D   // .0.0.0, Culture=
                         6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B   // neutral, PublicK
                         65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36   // eyToken=b77a5c56
                         31 39 33 34 65 30 38 39 80 9F 02 54 55 7F 53 79   // 1934e089...TU.Sy
                         73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65   // stem.Security.Pe
                         72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69   // rmissions.Securi
                         74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67   // tyPermissionFlag
                         2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73   // , mscorlib, Vers
                         69 6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C   // ion=4.0.0.0, Cul
                         74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75   // ture=neutral, Pu
                         62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37   // blicKeyToken=b77
                         61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C   // a5c561934e089.Fl
                         61 67 73 00 10 00 00 54 02 0E 49 6E 66 72 61 73   // ags....T..Infras
                         74 72 75 63 74 75 72 65 01 )                      // tructure.
    // Method begins at RVA 0x2138
    // Code size       0 (0x0)
  } // end of method SdlChannelSink::get_Properties

  .property /*17000044*/ instance callconv(8) class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSink/*0100000F*/
          NextChannelSink()
  {
    .get instance class [mscorlib/*23000001*/]System.Runtime.Remoting.Channels.IServerChannelSink/*0100000F*/ System.Runtime.Remoting.MetadataServices.SdlChannelSink/*02000020*/::get_NextChannelSink() /* 060000EA */
  } // end of property SdlChannelSink::NextChannelSink
  .property /*17000045*/ instance callconv(8) class [mscorlib/*23000001*/]System.Collections.IDictionary/*0100000B*/
          Properties()
  {
    .get instance class [mscorlib/*23000001*/]System.Collections.IDictionary/*0100000B*/ System.Runtime.Remoting.MetadataServices.SdlChannelSink/*02000020*/::get_Properties() /* 060000EB */
  } // end of property SdlChannelSink::Properties
} // end of class System.Runtime.Remoting.MetadataServices.SdlChannelSink

.class /*02000021*/ public auto ansi serializable beforefieldinit System.Runtime.Remoting.MetadataServices.SUDSParserException
       extends [mscorlib/*23000001*/]System.Exception/*01000027*/
{
  .method /*060000EC*/ assembly hidebysig specialname rtspecialname 
          instance void  .ctor(string message) cil managed
  // SIG: 20 01 01 0E
  {
    // Method begins at RVA 0x2139
    // Code size       0 (0x0)
  } // end of method SUDSParserException::.ctor

  .method /*060000ED*/ family hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib/*23000001*/]System.Runtime.Serialization.SerializationInfo/*01000028*/ info,
                               valuetype [mscorlib/*23000001*/]System.Runtime.Serialization.StreamingContext/*01000029*/ context) cil managed
  // SIG: 20 02 01 12 80 A1 11 80 A5
  {
    // Method begins at RVA 0x213a
    // Code size       0 (0x0)
  } // end of method SUDSParserException::.ctor

} // end of class System.Runtime.Remoting.MetadataServices.SUDSParserException

.class /*02000022*/ public auto ansi serializable beforefieldinit System.Runtime.Remoting.MetadataServices.SUDSGeneratorException
       extends [mscorlib/*23000001*/]System.Exception/*01000027*/
{
  .method /*060000EE*/ assembly hidebysig specialname rtspecialname 
          instance void  .ctor(string msg) cil managed
  // SIG: 20 01 01 0E
  {
    // Method begins at RVA 0x213b
    // Code size       0 (0x0)
  } // end of method SUDSGeneratorException::.ctor

  .method /*060000EF*/ family hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib/*23000001*/]System.Runtime.Serialization.SerializationInfo/*01000028*/ info,
                               valuetype [mscorlib/*23000001*/]System.Runtime.Serialization.StreamingContext/*01000029*/ context) cil managed
  // SIG: 20 02 01 12 80 A1 11 80 A5
  {
    // Method begins at RVA 0x213c
    // Code size       0 (0x0)
  } // end of method SUDSGeneratorException::.ctor

} // end of class System.Runtime.Remoting.MetadataServices.SUDSGeneratorException

.class /*02000023*/ public auto ansi serializable sealed System.Runtime.Remoting.MetadataServices.SdlType
       extends [mscorlib/*23000001*/]System.Enum/*01000002*/
{
  .field /*04000056*/ public specialname rtspecialname int32 value__
  .field /*04000057*/ public static literal valuetype System.Runtime.Remoting.MetadataServices.SdlType/*02000023*/ Sdl = int32(0x00000000)
  .field /*04000058*/ public static literal valuetype System.Runtime.Remoting.MetadataServices.SdlType/*02000023*/ Wsdl = int32(0x00000001)
} // end of class System.Runtime.Remoting.MetadataServices.SdlType

.class /*02000024*/ public abstract auto ansi beforefieldinit System.Runtime.Remoting.Services.RemotingClientProxy
       extends [System/*23000002*/]System.ComponentModel.Component/*0100002A*/
{
  .custom /*0C000019:0A000005*/ instance void [mscorlib/*23000001*/]System.Runtime.InteropServices.ComVisibleAttribute/*01000034*/::.ctor(bool) /* 0A000005 */ = ( 01 00 01 00 00 ) 
  .field /*04000059*/ family class [mscorlib/*23000001*/]System.Type/*01000012*/ _type
  .field /*0400005A*/ family object _tp
  .field /*0400005B*/ family string _url
  .method /*060000F0*/ family hidebysig instance void 
          ConfigureProxy(class [mscorlib/*23000001*/]System.Type/*01000012*/ 'type',
                         string url) cil managed
  // SIG: 20 02 01 12 49 0E
  {
    // Method begins at RVA 0x213d
    // Code size       0 (0x0)
  } // end of method RemotingClientProxy::ConfigureProxy

  .method /*060000F1*/ family hidebysig instance void 
          ConnectProxy() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x213e
    // Code size       0 (0x0)
  } // end of method RemotingClientProxy::ConnectProxy

  .method /*060000F2*/ public hidebysig specialname 
          instance bool  get_AllowAutoRedirect() cil managed
  // SIG: 20 00 02
  {
    // Method begins at RVA 0x213f
    // Code size       0 (0x0)
  } // end of method RemotingClientProxy::get_AllowAutoRedirect

  .method /*060000F3*/ public hidebysig specialname 
          instance void  set_AllowAutoRedirect(bool 'value') cil managed
  // SIG: 20 01 01 02
  {
    // Method begins at RVA 0x2140
    // Code size       0 (0x0)
  } // end of method RemotingClientProxy::set_AllowAutoRedirect

  .method /*060000F4*/ public hidebysig specialname 
          instance object  get_Cookies() cil managed
  // SIG: 20 00 1C
  {
    // Method begins at RVA 0x2141
    // Code size       0 (0x0)
  } // end of method RemotingClientProxy::get_Cookies

  .method /*060000F5*/ public hidebysig specialname 
          instance bool  get_EnableCookies() cil managed
  // SIG: 20 00 02
  {
    // Method begins at RVA 0x2142
    // Code size       0 (0x0)
  } // end of method RemotingClientProxy::get_EnableCookies

  .method /*060000F6*/ public hidebysig specialname 
          instance void  set_EnableCookies(bool 'value') cil managed
  // SIG: 20 01 01 02
  {
    // Method begins at RVA 0x2143
    // Code size       0 (0x0)
  } // end of method RemotingClientProxy::set_EnableCookies

  .method /*060000F7*/ public hidebysig specialname 
          instance bool  get_PreAuthenticate() cil managed
  // SIG: 20 00 02
  {
    // Method begins at RVA 0x2144
    // Code size       0 (0x0)
  } // end of method RemotingClientProxy::get_PreAuthenticate

  .method /*060000F8*/ public hidebysig specialname 
          instance void  set_PreAuthenticate(bool 'value') cil managed
  // SIG: 20 01 01 02
  {
    // Method begins at RVA 0x2145
    // Code size       0 (0x0)
  } // end of method RemotingClientProxy::set_PreAuthenticate

  .method /*060000F9*/ public hidebysig specialname 
          instance string  get_Path() cil managed
  // SIG: 20 00 0E
  {
    // Method begins at RVA 0x2146
    // Code size       0 (0x0)
  } // end of method RemotingClientProxy::get_Path

  .method /*060000FA*/ public hidebysig specialname 
          instance void  set_Path(string 'value') cil managed
  // SIG: 20 01 01 0E
  {
    // Method begins at RVA 0x2147
    // Code size       0 (0x0)
  } // end of method RemotingClientProxy::set_Path

  .method /*060000FB*/ public hidebysig specialname 
          instance int32  get_Timeout() cil managed
  // SIG: 20 00 08
  {
    // Method begins at RVA 0x2148
    // Code size       0 (0x0)
  } // end of method RemotingClientProxy::get_Timeout

  .method /*060000FC*/ public hidebysig specialname 
          instance void  set_Timeout(int32 'value') cil managed
  // SIG: 20 01 01 08
  {
    // Method begins at RVA 0x2149
    // Code size       0 (0x0)
  } // end of method RemotingClientProxy::set_Timeout

  .method /*060000FD*/ public hidebysig specialname 
          instance string  get_Url() cil managed
  // SIG: 20 00 0E
  {
    // Method begins at RVA 0x214a
    // Code size       0 (0x0)
  } // end of method RemotingClientProxy::get_Url

  .method /*060000FE*/ public hidebysig specialname 
          instance void  set_Url(string 'value') cil managed
  // SIG: 20 01 01 0E
  {
    // Method begins at RVA 0x214b
    // Code size       0 (0x0)
  } // end of method RemotingClientProxy::set_Url

  .method /*060000FF*/ public hidebysig specialname 
          instance string  get_UserAgent() cil managed
  // SIG: 20 00 0E
  {
    // Method begins at RVA 0x214c
    // Code size       0 (0x0)
  } // end of method RemotingClientProxy::get_UserAgent

  .method /*06000100*/ public hidebysig specialname 
          instance void  set_UserAgent(string 'value') cil managed
  // SIG: 20 01 01 0E
  {
    // Method begins at RVA 0x214d
    // Code size       0 (0x0)
  } // end of method RemotingClientProxy::set_UserAgent

  .method /*06000101*/ public hidebysig specialname 
          instance string  get_Username() cil managed
  // SIG: 20 00 0E
  {
    // Method begins at RVA 0x214e
    // Code size       0 (0x0)
  } // end of method RemotingClientProxy::get_Username

  .method /*06000102*/ public hidebysig specialname 
          instance void  set_Username(string 'value') cil managed
  // SIG: 20 01 01 0E
  {
    // Method begins at RVA 0x214f
    // Code size       0 (0x0)
  } // end of method RemotingClientProxy::set_Username

  .method /*06000103*/ public hidebysig specialname 
          instance string  get_Password() cil managed
  // SIG: 20 00 0E
  {
    // Method begins at RVA 0x2150
    // Code size       0 (0x0)
  } // end of method RemotingClientProxy::get_Password

  .method /*06000104*/ public hidebysig specialname 
          instance void  set_Password(string 'value') cil managed
  // SIG: 20 01 01 0E
  {
    // Method begins at RVA 0x2151
    // Code size       0 (0x0)
  } // end of method RemotingClientProxy::set_Password

  .method /*06000105*/ public hidebysig specialname 
          instance string  get_Domain() cil managed
  // SIG: 20 00 0E
  {
    // Method begins at RVA 0x2152
    // Code size       0 (0x0)
  } // end of method RemotingClientProxy::get_Domain

  .method /*06000106*/ public hidebysig specialname 
          instance void  set_Domain(string 'value') cil managed
  // SIG: 20 01 01 0E
  {
    // Method begins at RVA 0x2153
    // Code size       0 (0x0)
  } // end of method RemotingClientProxy::set_Domain

  .method /*06000107*/ public hidebysig specialname 
          instance string  get_ProxyName() cil managed
  // SIG: 20 00 0E
  {
    // Method begins at RVA 0x2154
    // Code size       0 (0x0)
  } // end of method RemotingClientProxy::get_ProxyName

  .method /*06000108*/ public hidebysig specialname 
          instance void  set_ProxyName(string 'value') cil managed
  // SIG: 20 01 01 0E
  {
    // Method begins at RVA 0x2155
    // Code size       0 (0x0)
  } // end of method RemotingClientProxy::set_ProxyName

  .method /*06000109*/ public hidebysig specialname 
          instance int32  get_ProxyPort() cil managed
  // SIG: 20 00 08
  {
    // Method begins at RVA 0x2156
    // Code size       0 (0x0)
  } // end of method RemotingClientProxy::get_ProxyPort

  .method /*0600010A*/ public hidebysig specialname 
          instance void  set_ProxyPort(int32 'value') cil managed
  // SIG: 20 01 01 08
  {
    // Method begins at RVA 0x2157
    // Code size       0 (0x0)
  } // end of method RemotingClientProxy::set_ProxyPort

  .method /*0600010B*/ family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x2158
    // Code size       0 (0x0)
  } // end of method RemotingClientProxy::.ctor

  .property /*17000046*/ instance callconv(8) bool
          AllowAutoRedirect()
  {
    .get instance bool System.Runtime.Remoting.Services.RemotingClientProxy/*02000024*/::get_AllowAutoRedirect() /* 060000F2 */
    .set instance void System.Runtime.Remoting.Services.RemotingClientProxy/*02000024*/::set_AllowAutoRedirect(bool) /* 060000F3 */
  } // end of property RemotingClientProxy::AllowAutoRedirect
  .property /*17000047*/ instance callconv(8) object
          Cookies()
  {
    .get instance object System.Runtime.Remoting.Services.RemotingClientProxy/*02000024*/::get_Cookies() /* 060000F4 */
  } // end of property RemotingClientProxy::Cookies
  .property /*17000048*/ instance callconv(8) bool
          EnableCookies()
  {
    .get instance bool System.Runtime.Remoting.Services.RemotingClientProxy/*02000024*/::get_EnableCookies() /* 060000F5 */
    .set instance void System.Runtime.Remoting.Services.RemotingClientProxy/*02000024*/::set_EnableCookies(bool) /* 060000F6 */
  } // end of property RemotingClientProxy::EnableCookies
  .property /*17000049*/ instance callconv(8) bool
          PreAuthenticate()
  {
    .set instance void System.Runtime.Remoting.Services.RemotingClientProxy/*02000024*/::set_PreAuthenticate(bool) /* 060000F8 */
    .get instance bool System.Runtime.Remoting.Services.RemotingClientProxy/*02000024*/::get_PreAuthenticate() /* 060000F7 */
  } // end of property RemotingClientProxy::PreAuthenticate
  .property /*1700004A*/ instance callconv(8) string
          Path()
  {
    .get instance string System.Runtime.Remoting.Services.RemotingClientProxy/*02000024*/::get_Path() /* 060000F9 */
    .set instance void System.Runtime.Remoting.Services.RemotingClientProxy/*02000024*/::set_Path(string) /* 060000FA */
  } // end of property RemotingClientProxy::Path
  .property /*1700004B*/ instance callconv(8) int32
          Timeout()
  {
    .get instance int32 System.Runtime.Remoting.Services.RemotingClientProxy/*02000024*/::get_Timeout() /* 060000FB */
    .set instance void System.Runtime.Remoting.Services.RemotingClientProxy/*02000024*/::set_Timeout(int32) /* 060000FC */
  } // end of property RemotingClientProxy::Timeout
  .property /*1700004C*/ instance callconv(8) string
          Url()
  {
    .set instance void System.Runtime.Remoting.Services.RemotingClientProxy/*02000024*/::set_Url(string) /* 060000FE */
    .get instance string System.Runtime.Remoting.Services.RemotingClientProxy/*02000024*/::get_Url() /* 060000FD */
  } // end of property RemotingClientProxy::Url
  .property /*1700004D*/ instance callconv(8) string
          UserAgent()
  {
    .get instance string System.Runtime.Remoting.Services.RemotingClientProxy/*02000024*/::get_UserAgent() /* 060000FF */
    .set instance void System.Runtime.Remoting.Services.RemotingClientProxy/*02000024*/::set_UserAgent(string) /* 06000100 */
  } // end of property RemotingClientProxy::UserAgent
  .property /*1700004E*/ instance callconv(8) string
          Username()
  {
    .set instance void System.Runtime.Remoting.Services.RemotingClientProxy/*02000024*/::set_Username(string) /* 06000102 */
    .get instance string System.Runtime.Remoting.Services.RemotingClientProxy/*02000024*/::get_Username() /* 06000101 */
  } // end of property RemotingClientProxy::Username
  .property /*1700004F*/ instance callconv(8) string
          Password()
  {
    .set instance void System.Runtime.Remoting.Services.RemotingClientProxy/*02000024*/::set_Password(string) /* 06000104 */
    .get instance string System.Runtime.Remoting.Services.RemotingClientProxy/*02000024*/::get_Password() /* 06000103 */
  } // end of property RemotingClientProxy::Password
  .property /*17000050*/ instance callconv(8) string
          Domain()
  {
    .get instance string System.Runtime.Remoting.Services.RemotingClientProxy/*02000024*/::get_Domain() /* 06000105 */
    .set instance void System.Runtime.Remoting.Services.RemotingClientProxy/*02000024*/::set_Domain(string) /* 06000106 */
  } // end of property RemotingClientProxy::Domain
  .property /*17000051*/ instance callconv(8) string
          ProxyName()
  {
    .set instance void System.Runtime.Remoting.Services.RemotingClientProxy/*02000024*/::set_ProxyName(string) /* 06000108 */
    .get instance string System.Runtime.Remoting.Services.RemotingClientProxy/*02000024*/::get_ProxyName() /* 06000107 */
  } // end of property RemotingClientProxy::ProxyName
  .property /*17000052*/ instance callconv(8) int32
          ProxyPort()
  {
    .get instance int32 System.Runtime.Remoting.Services.RemotingClientProxy/*02000024*/::get_ProxyPort() /* 06000109 */
    .set instance void System.Runtime.Remoting.Services.RemotingClientProxy/*02000024*/::set_ProxyPort(int32) /* 0600010A */
  } // end of property RemotingClientProxy::ProxyPort
} // end of class System.Runtime.Remoting.Services.RemotingClientProxy

.class /*02000025*/ public auto ansi beforefieldinit System.Runtime.Remoting.Services.RemotingService
       extends [System/*23000002*/]System.ComponentModel.Component/*0100002A*/
{
  .method /*0600010C*/ public hidebysig specialname 
          instance class [System.Web/*23000003*/]System.Web.HttpApplicationState/*0100002B*/ 
          get_Application() cil managed
  // SIG: 20 00 12 80 AD
  {
    // Method begins at RVA 0x2159
    // Code size       0 (0x0)
  } // end of method RemotingService::get_Application

  .method /*0600010D*/ public hidebysig specialname 
          instance class [System.Web/*23000003*/]System.Web.HttpContext/*01000013*/ 
          get_Context() cil managed
  // SIG: 20 00 12 4D
  {
    // Method begins at RVA 0x215a
    // Code size       0 (0x0)
  } // end of method RemotingService::get_Context

  .method /*0600010E*/ public hidebysig specialname 
          instance class [System.Web/*23000003*/]System.Web.SessionState.HttpSessionState/*0100002C*/ 
          get_Session() cil managed
  // SIG: 20 00 12 80 B1
  {
    // Method begins at RVA 0x215b
    // Code size       0 (0x0)
  } // end of method RemotingService::get_Session

  .method /*0600010F*/ public hidebysig specialname 
          instance class [System.Web/*23000003*/]System.Web.HttpServerUtility/*0100002D*/ 
          get_Server() cil managed
  // SIG: 20 00 12 80 B5
  {
    // Method begins at RVA 0x215c
    // Code size       0 (0x0)
  } // end of method RemotingService::get_Server

  .method /*06000110*/ public hidebysig specialname 
          instance class [mscorlib/*23000001*/]System.Security.Principal.IPrincipal/*0100002E*/ 
          get_User() cil managed
  // SIG: 20 00 12 80 B9
  {
    // Method begins at RVA 0x215d
    // Code size       0 (0x0)
  } // end of method RemotingService::get_User

  .method /*06000111*/ public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x215e
    // Code size       0 (0x0)
  } // end of method RemotingService::.ctor

  .property /*17000053*/ instance callconv(8) class [System.Web/*23000003*/]System.Web.HttpApplicationState/*0100002B*/
          Application()
  {
    .get instance class [System.Web/*23000003*/]System.Web.HttpApplicationState/*0100002B*/ System.Runtime.Remoting.Services.RemotingService/*02000025*/::get_Application() /* 0600010C */
  } // end of property RemotingService::Application
  .property /*17000054*/ instance callconv(8) class [System.Web/*23000003*/]System.Web.HttpContext/*01000013*/
          Context()
  {
    .get instance class [System.Web/*23000003*/]System.Web.HttpContext/*01000013*/ System.Runtime.Remoting.Services.RemotingService/*02000025*/::get_Context() /* 0600010D */
  } // end of property RemotingService::Context
  .property /*17000055*/ instance callconv(8) class [System.Web/*23000003*/]System.Web.SessionState.HttpSessionState/*0100002C*/
          Session()
  {
    .get instance class [System.Web/*23000003*/]System.Web.SessionState.HttpSessionState/*0100002C*/ System.Runtime.Remoting.Services.RemotingService/*02000025*/::get_Session() /* 0600010E */
  } // end of property RemotingService::Session
  .property /*17000056*/ instance callconv(8) class [System.Web/*23000003*/]System.Web.HttpServerUtility/*0100002D*/
          Server()
  {
    .get instance class [System.Web/*23000003*/]System.Web.HttpServerUtility/*0100002D*/ System.Runtime.Remoting.Services.RemotingService/*02000025*/::get_Server() /* 0600010F */
  } // end of property RemotingService::Server
  .property /*17000057*/ instance callconv(8) class [mscorlib/*23000001*/]System.Security.Principal.IPrincipal/*0100002E*/
          User()
  {
    .get instance class [mscorlib/*23000001*/]System.Security.Principal.IPrincipal/*0100002E*/ System.Runtime.Remoting.Services.RemotingService/*02000025*/::get_User() /* 06000110 */
  } // end of property RemotingService::User
} // end of class System.Runtime.Remoting.Services.RemotingService

.class /*02000026*/ private auto ansi '<PrivateImplementationDetails>{04D68D05-8B2D-4F4B-BE4D-04DF27415058}'
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
{
  .custom /*0C00001A:0A000017*/ instance void [mscorlib/*23000001*/]System.Runtime.CompilerServices.CompilerGeneratedAttribute/*01000047*/::.ctor() /* 0A000017 */ = ( 01 00 00 00 ) 
  .field /*0400005C*/ static assembly class [mscorlib/*23000001*/]System.Collections.Generic.Dictionary`2/*0100002F*/<string,int32> '$$method0x6000125-1'
  .field /*0400005D*/ static assembly class [mscorlib/*23000001*/]System.Collections.Generic.Dictionary`2/*0100002F*/<string,int32> '$$method0x6000144-1'
  .field /*0400005E*/ static assembly class [mscorlib/*23000001*/]System.Collections.Generic.Dictionary`2/*0100002F*/<string,int32> '$$method0x6000145-1'
  .field /*0400005F*/ static assembly class [mscorlib/*23000001*/]System.Collections.Generic.Dictionary`2/*0100002F*/<string,int32> '$$method0x6000154-1'
  .field /*04000060*/ static assembly class [mscorlib/*23000001*/]System.Collections.Generic.Dictionary`2/*0100002F*/<string,int32> '$$method0x6000209-1'
  .field /*04000061*/ static assembly class [mscorlib/*23000001*/]System.Collections.Generic.Dictionary`2/*0100002F*/<string,int32> '$$method0x600020a-1'
  .field /*04000062*/ static assembly class [mscorlib/*23000001*/]System.Collections.Generic.Dictionary`2/*0100002F*/<string,int32> '$$method0x6000226-1'
  .field /*04000063*/ static assembly class [mscorlib/*23000001*/]System.Collections.Generic.Dictionary`2/*0100002F*/<string,int32> '$$method0x6000273-1'
} // end of class '<PrivateImplementationDetails>{04D68D05-8B2D-4F4B-BE4D-04DF27415058}'


// =============================================================

// *********** DISASSEMBLY COMPLETE ***********************
