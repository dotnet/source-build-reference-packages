
//  Microsoft (R) .NET IL Disassembler.  Version 5.0.0


// ----- DOS Header:
// Magic:                      0x5a4d
// Bytes on last page:         0x0090
// Pages in file:              0x0003
// Relocations:                0x0000
// Size of header (paragraphs):0x0004
// Min extra paragraphs:       0x0000
// Max extra paragraphs:       0xffff
// Initial (relative) SS:      0x0000
// Initial SP:                 0x00b8
// Checksum:                   0x0000
// Initial IP:                 0x0000
// Initial (relative) CS:      0x0000
// File addr. of reloc table:  0x0040
// Overlay number:             0x0000
// OEM identifier:             0x0000
// OEM info:                   0x0000
// File addr. of COFF header:  0x0080
// ----- COFF/PE Headers:
// Signature:                  0x00004550
// ----- COFF Header:
// Machine:                    0x014c
// Number of sections:         0x0003
// Time-date stamp:            0x81813544
// Ptr to symbol table:        0x00000000
// Number of symbols:          0x00000000
// Size of optional header:    0x00e0
// Characteristics:            0x2022
// ----- PE Optional Header (32 bit):
// Magic:                          0x010b
// Major linker version:           0x30
// Minor linker version:           0x00
// Size of code:                   0x00001c00
// Size of init.data:              0x00000800
// Size of uninit.data:            0x00000000
// Addr. of entry point:           0x00003a5a
// Base of code:                   0x00002000
// Base of data:                   0x00004000
// Image base:                     0x10000000
// Section alignment:              0x00002000
// File alignment:                 0x00000200
// Major OS version:               0x0004
// Minor OS version:               0x0000
// Major image version:            0x0000
// Minor image version:            0x0000
// Major subsystem version:        0x0004
// Minor subsystem version:        0x0000
// Size of image:                  0x00008000
// Size of headers:                0x00000200
// Checksum:                       0x000110c3
// Subsystem:                      0x0003
// DLL characteristics:            0x8560
// Size of stack reserve:          0x00100000
// Size of stack commit:           0x00001000
// Size of heap reserve:           0x00100000
// Size of heap commit:            0x00001000
// Loader flags:                   0x00000000
// Directories:                    0x00000010
// 0x00000000 [0x00000000] address [size] of Export Directory:          
// 0x00003a08 [0x0000004f] address [size] of Import Directory:          
// 0x00004000 [0x00000484] address [size] of Resource Directory:        
// 0x00000000 [0x00000000] address [size] of Exception Directory:       
// 0x00002600 [0x00002448] address [size] of Security Directory:        
// 0x00006000 [0x0000000c] address [size] of Base Relocation Table:     
// 0x00003920 [0x00000054] address [size] of Debug Directory:           
// 0x00000000 [0x00000000] address [size] of Architecture Specific:     
// 0x00000000 [0x00000000] address [size] of Global Pointer:            
// 0x00000000 [0x00000000] address [size] of TLS Directory:             
// 0x00000000 [0x00000000] address [size] of Load Config Directory:     
// 0x00000000 [0x00000000] address [size] of Bound Import Directory:    
// 0x00002000 [0x00000008] address [size] of Import Address Table:      
// 0x00000000 [0x00000000] address [size] of Delay Load IAT:            
// 0x00002008 [0x00000048] address [size] of CLR Header:                


// Image sections:
//              .text
//              0x00001a60 Virtual Size
//              0x00002000 Virtual Address
//              0x00001c00 Size of Raw Data
//              0x00000200 Pointer to Raw Data
//              0x00000000 Pointer to Relocations
//              0x00000000 Pointer to Linenumbers
//                  0x0000 Number of Relocations
//                  0x0000 Number of Linenumbers
//              0x60000020 Characteristics
//                         CNT_CODE
//                         MEM_EXECUTE
//                         MEM_READ

//              .rsrc
//              0x00000484 Virtual Size
//              0x00004000 Virtual Address
//              0x00000600 Size of Raw Data
//              0x00001e00 Pointer to Raw Data
//              0x00000000 Pointer to Relocations
//              0x00000000 Pointer to Linenumbers
//                  0x0000 Number of Relocations
//                  0x0000 Number of Linenumbers
//              0x40000040 Characteristics
//                         CNT_INITIALIZED_DATA
//                         MEM_READ

//              .reloc
//              0x0000000c Virtual Size
//              0x00006000 Virtual Address
//              0x00000200 Size of Raw Data
//              0x00002400 Pointer to Raw Data
//              0x00000000 Pointer to Relocations
//              0x00000000 Pointer to Linenumbers
//                  0x0000 Number of Relocations
//                  0x0000 Number of Linenumbers
//              0x42000040 Characteristics
//                         CNT_INITIALIZED_DATA
//                         MEM_DISCARDABLE
//                         MEM_READ

// Base Relocation Table
//              0x00003000 Page RVA
//              0x0000000c Block Size
//              0x00000002 Number of Entries
//              Entry 1: Type 0x3 Offset 0x00000a5c
//              Entry 2: Type 0x0 Offset 0x00000000

// Import Address Table
//     DLL : mscoree.dll
//              0x00002000 Import Address Table
//              0x00003a4a Import Name Table
//              0          Time Date Stamp
//              0          Index of First Forwarder Reference
//
//              0x0000  _CorDllMain

// Delay Load Import Address Table
// No data.

// Entry point code:
//FF 25 00 20 00 10 


// ----- CLR Header:
// Header size:                        0x00000048
// Major runtime version:              0x0002
// Minor runtime version:              0x0005
// 0x00002118 [0x00001788] address [size] of Metadata Directory:        
// Flags:                              0x00000009
// Entry point token:                  0x00000000
// 0x00000000 [0x00000000] address [size] of Resources Directory:       
// 0x000038a0 [0x00000080] address [size] of Strong Name Signature:     
// 0x00000000 [0x00000000] address [size] of CodeManager Table:         
// 0x00000000 [0x00000000] address [size] of VTableFixups Directory:    
// 0x00000000 [0x00000000] address [size] of Export Address Table:      
// 0x00000000 [0x00000000] address [size] of Precompile Header:         

// Metadata Header
//    Storage Signature:
//              0x424a5342 Signature
//                  0x0001 Major Version
//                  0x0001 Minor Version
//              0x00000000 Extra Data Offset
//              0x0000000c Version String Length
//              'v4.0.30319' Version String
//    Storage Header:
//                    0x00 Flags
//                  0x0005 Number of Streams
//    Stream 1:
//              0x0000006c Offset
//              0x00000a68 Size
//              '#~' Name
//    Stream 2:
//              0x00000ad4 Offset
//              0x00000818 Size
//              '#Strings' Name
//    Stream 3:
//              0x000012ec Offset
//              0x00000004 Size
//              '#US' Name
//    Stream 4:
//              0x000012f0 Offset
//              0x00000010 Size
//              '#GUID' Name
//    Stream 5:
//              0x00001300 Offset
//              0x00000488 Size
//              '#Blob' Name

//    Metadata Stream Header:
//              0x00000000 Reserved
//                    0x02 Major
//                    0x00 Minor
//                    0x00 Heaps
//                    0x01 Rid
//      0x0000000909a01f57 MaskValid
//      0x000016003301fa00 Sorted

// Code Manager Table:
//  default


// Export Address Table Jumps:
// No data.

// File size            : 19016
// PE header size       : 512 (496 used)    ( 2.69%)
// PE additional info   : 10699             (56.26%)
// Num.of PE sections   : 3
// CLR header size     : 72                 ( 0.38%)
// CLR meta-data size  : 6024               (31.68%)
// CLR additional info : 128                ( 0.67%)
// CLR method headers  : 50                 ( 0.26%)
// Managed code         : 147               ( 0.77%)
// Data                 : 2048              (10.77%)
// Unaccounted          : -664              (-3.49%)

// Num.of PE sections   : 3
//   .text    - 7168
//   .rsrc    - 1536
//   .reloc   - 512

// CLR meta-data size  : 6024
//   Module        -    1 (10 bytes)
//   TypeDef       -   14 (196 bytes)     1 interfaces, 0 explicit layout
//   TypeRef       -   36 (216 bytes)
//   MethodDef     -   65 (910 bytes)     15 abstract, 0 native, 50 bodies
//   FieldDef      -    3 (18 bytes)      0 constant
//   MemberRef     -   19 (114 bytes)
//   ParamDef      -   56 (336 bytes)
//   Constant      -   31 (186 bytes)
//   CustomAttribute-   26 (156 bytes)
//   InterfaceImpl -    1 (4 bytes)
//   PropertyMap   -    8 (32 bytes)
//   Property      -   26 (156 bytes)
//   MethodSemantic-   26 (156 bytes)
//   TypeSpec      -    1 (2 bytes)
//   Assembly      -    1 (22 bytes)
//   AssemblyRef   -    3 (60 bytes)
//   Strings       -  2071 bytes
//   Blobs         -  1160 bytes
//   UserStrings   -     4 bytes
//   Guids         -    16 bytes
//   Uncategorized -   199 bytes

// CLR additional info : 128

// CLR method headers : 50
//   Num.of method bodies  - 50
//   Num.of fat headers    - 0
//   Num.of tiny headers   - 50

// Managed code : 147
//   Ave method size - 2
// Classes defined in this module:
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Class EmbeddedAttribute              (auto) (ansi) (sealed) 
// Class IsReadOnlyAttribute            (auto) (ansi) (sealed) 
// Class FlushResult                    (public) (sequential) (ansi) (sealed) 
// Interface IDuplexPipe                    (public) (abstract) (auto) (ansi) 
// Class Pipe                           (public) (auto) (ansi) (sealed) 
// Class PipeOptions                    (public) (auto) (ansi) 
// Class PipeReader                     (public) (abstract) (auto) (ansi) 
// Class PipeScheduler                  (public) (abstract) (auto) (ansi) 
// Class PipeWriter                     (public) (abstract) (auto) (ansi) 
// Class ReadResult                     (public) (sequential) (ansi) (sealed) 
// Class StreamPipeExtensions           (public) (abstract) (auto) (ansi) (sealed) 
// Class StreamPipeReaderOptions        (public) (auto) (ansi) 
// Class StreamPipeWriterOptions        (public) (auto) (ansi) 
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


// Metadata version: v4.0.30319
.assembly extern /*23000001*/ netstandard
{
  .publickeytoken = (CC 7B 13 FF CD 2D DD 51 )                         // .{...-.Q
  .ver 2:0:0:0
}
.assembly extern /*23000002*/ System.Memory
{
  .publickeytoken = (CC 7B 13 FF CD 2D DD 51 )                         // .{...-.Q
  .ver 4:0:1:1
}
.assembly extern /*23000003*/ System.Threading.Tasks.Extensions
{
  .publickeytoken = (CC 7B 13 FF CD 2D DD 51 )                         // .{...-.Q
  .ver 4:2:0:0
}
.assembly /*20000001*/ noplatform System.IO.Pipelines
{
  .custom /*0C000001:0A000001*/ instance void [netstandard/*23000001*/]System.Runtime.CompilerServices.ExtensionAttribute/*01000001*/::.ctor() /* 0A000001 */ = ( 01 00 00 00 ) 
  .custom /*0C000002:0A000002*/ instance void [netstandard/*23000001*/]System.Runtime.CompilerServices.CompilationRelaxationsAttribute/*01000002*/::.ctor(int32) /* 0A000002 */ = ( 01 00 08 00 00 00 00 00 ) 
  .custom /*0C000003:0A000003*/ instance void [netstandard/*23000001*/]System.Runtime.CompilerServices.RuntimeCompatibilityAttribute/*01000003*/::.ctor() /* 0A000003 */ = ( 01 00 01 00 54 02 16 57 72 61 70 4E 6F 6E 45 78   // ....T..WrapNonEx
                                                                                                                                                                             63 65 70 74 69 6F 6E 54 68 72 6F 77 73 01 )       // ceptionThrows.

  // --- The following custom attribute is added automatically, do not uncomment -------
  //  .custom /*0C000004:0A000004*/ instance void [netstandard/*23000001*/]System.Diagnostics.DebuggableAttribute/*01000004*/::.ctor(valuetype [netstandard/*23000001*/]System.Diagnostics.DebuggableAttribute/*01000004*//DebuggingModes/*01000005*/) /* 0A000004 */ = ( 01 00 02 00 00 00 00 00 ) 

  .custom /*0C000005:0A000005*/ instance void [netstandard/*23000001*/]System.Reflection.AssemblyDefaultAliasAttribute/*01000006*/::.ctor(string) /* 0A000005 */ = ( 01 00 13 53 79 73 74 65 6D 2E 49 4F 2E 50 69 70   // ...System.IO.Pip
                                                                                                                                                                     65 6C 69 6E 65 73 00 00 )                         // elines..
  .custom /*0C000006:0A000006*/ instance void [netstandard/*23000001*/]System.Reflection.AssemblyMetadataAttribute/*01000007*/::.ctor(string,
                                                                                                                                      string) /* 0A000006 */ = ( 01 00 15 2E 4E 45 54 46 72 61 6D 65 77 6F 72 6B   // ....NETFramework
                                                                                                                                                                 41 73 73 65 6D 62 6C 79 00 00 00 )                // Assembly...
  .custom /*0C000007:0A000006*/ instance void [netstandard/*23000001*/]System.Reflection.AssemblyMetadataAttribute/*01000007*/::.ctor(string,
                                                                                                                                      string) /* 0A000006 */ = ( 01 00 0B 53 65 72 76 69 63 65 61 62 6C 65 04 54   // ...Serviceable.T
                                                                                                                                                                 72 75 65 00 00 )                                  // rue..
  .custom /*0C000008:0A000006*/ instance void [netstandard/*23000001*/]System.Reflection.AssemblyMetadataAttribute/*01000007*/::.ctor(string,
                                                                                                                                      string) /* 0A000006 */ = ( 01 00 0B 50 72 65 66 65 72 49 6E 62 6F 78 04 54   // ...PreferInbox.T
                                                                                                                                                                 72 75 65 00 00 )                                  // rue..
  .custom /*0C000009:0A000007*/ instance void [netstandard/*23000001*/]System.Reflection.AssemblyCompanyAttribute/*01000008*/::.ctor(string) /* 0A000007 */ = ( 01 00 15 4D 69 63 72 6F 73 6F 66 74 20 43 6F 72   // ...Microsoft Cor
                                                                                                                                                                70 6F 72 61 74 69 6F 6E 00 00 )                   // poration..
  .custom /*0C00000A:0A000008*/ instance void [netstandard/*23000001*/]System.Reflection.AssemblyCopyrightAttribute/*01000009*/::.ctor(string) /* 0A000008 */ = ( 01 00 2E C2 A9 20 4D 69 63 72 6F 73 6F 66 74 20   // ..... Microsoft 
                                                                                                                                                                  43 6F 72 70 6F 72 61 74 69 6F 6E 2E 20 41 6C 6C   // Corporation. All
                                                                                                                                                                  20 72 69 67 68 74 73 20 72 65 73 65 72 76 65 64   //  rights reserved
                                                                                                                                                                  2E 00 00 )                                        // ...
  .custom /*0C00000B:0A000009*/ instance void [netstandard/*23000001*/]System.Reflection.AssemblyDescriptionAttribute/*0100000A*/::.ctor(string) /* 0A000009 */ = ( 01 00 13 53 79 73 74 65 6D 2E 49 4F 2E 50 69 70   // ...System.IO.Pip
                                                                                                                                                                    65 6C 69 6E 65 73 00 00 )                         // elines..
  .custom /*0C00000C:0A00000A*/ instance void [netstandard/*23000001*/]System.Reflection.AssemblyFileVersionAttribute/*0100000B*/::.ctor(string) /* 0A00000A */ = ( 01 00 0E 34 2E 37 30 30 2E 31 39 2E 35 36 34 30   // ...4.700.19.5640
                                                                                                                                                                    34 00 00 )                                        // 4..
  .custom /*0C00000D:0A00000B*/ instance void [netstandard/*23000001*/]System.Reflection.AssemblyInformationalVersionAttribute/*0100000C*/::.ctor(string) /* 0A00000B */ = ( 01 00 2E 33 2E 31 2E 30 2B 30 66 37 66 33 38 63   // ...3.1.0+0f7f38c
                                                                                                                                                                             34 66 64 33 32 33 62 32 36 64 61 31 30 63 63 65   // 4fd323b26da10cce
                                                                                                                                                                             39 35 66 38 35 37 66 37 37 66 30 66 30 39 62 34   // 95f857f77f0f09b4
                                                                                                                                                                             38 00 00 )                                        // 8..
  .custom /*0C00000E:0A00000C*/ instance void [netstandard/*23000001*/]System.Reflection.AssemblyProductAttribute/*0100000D*/::.ctor(string) /* 0A00000C */ = ( 01 00 15 4D 69 63 72 6F 73 6F 66 74 C2 AE 20 2E   // ...Microsoft.. .
                                                                                                                                                                4E 45 54 20 43 6F 72 65 00 00 )                   // NET Core..
  .custom /*0C00000F:0A00000D*/ instance void [netstandard/*23000001*/]System.Reflection.AssemblyTitleAttribute/*0100000E*/::.ctor(string) /* 0A00000D */ = ( 01 00 13 53 79 73 74 65 6D 2E 49 4F 2E 50 69 70   // ...System.IO.Pip
                                                                                                                                                              65 6C 69 6E 65 73 00 00 )                         // elines..
  .custom /*0C000010:0A00000E*/ instance void [netstandard/*23000001*/]System.Runtime.CompilerServices.ReferenceAssemblyAttribute/*0100000F*/::.ctor() /* 0A00000E */ = ( 01 00 00 00 ) 
  .custom /*0C000011:0A00000F*/ instance void [netstandard/*23000001*/]System.CLSCompliantAttribute/*01000010*/::.ctor(bool) /* 0A00000F */ = ( 01 00 01 00 00 ) 
  .publickey = (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00   // .$..............
                00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00   // .$..RSA1........
                4B 86 C4 CB 78 54 9B 34 BA B6 1A 3B 18 00 E2 3B   // K...xT.4...;...;
                FE B5 B3 EC 39 00 74 04 15 36 A7 E3 CB D9 7F 5F   // ....9.t..6....._
                04 CF 0F 85 71 55 A8 92 8E AA 29 EB FD 11 CF BB   // ....qU....).....
                AD 3B A7 0E FE A7 BD A3 22 6C 6A 8D 37 0A 4C D3   // .;......"lj.7.L.
                03 F7 14 48 6B 6E BC 22 59 85 A6 38 47 1E 6E F5   // ...Hkn."Y..8G.n.
                71 CC 92 A4 61 3C 00 B8 FA 65 D6 1C CE E0 CB E5   // q...a<...e......
                F3 63 30 C9 A0 1F 41 83 55 9F 1B EF 24 CC 29 17   // .c0...A.U...$.).
                C6 D9 13 E3 A5 41 33 3A 1D 05 D9 BE D2 2B 38 CB ) // .....A3:.....+8.
  .hash algorithm 0x00008004
  .ver 4:0:2:0
}
.module System.IO.Pipelines.dll
// MVID: {c58777d9-7e2b-4dd2-9c8f-bd50a1d24c46}
.imagebase 0x10000000
.file alignment 0x00000200
.stackreserve 0x00100000
.subsystem 0x0003       // WINDOWS_CUI
.corflags 0x00000009    //  ILONLY
// Image base: 0x00007FB658533000


// =============== CLASS MEMBERS DECLARATION ===================

.class /*02000002*/ private auto ansi sealed beforefieldinit Microsoft.CodeAnalysis.EmbeddedAttribute
       extends [netstandard/*23000001*/]System.Attribute/*01000012*/
{
  .custom /*0C000012:0A000010*/ instance void [netstandard/*23000001*/]System.Runtime.CompilerServices.CompilerGeneratedAttribute/*01000011*/::.ctor() /* 0A000010 */ = ( 01 00 00 00 ) 
  .custom /*0C000013:06000001*/ instance void Microsoft.CodeAnalysis.EmbeddedAttribute/*02000002*/::.ctor() /* 06000001 */ = ( 01 00 00 00 ) 
  .method /*06000001*/ public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x2050
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  /* 02   |                  */ ldarg.0
    IL_0001:  /* 28   | (0A)000012       */ call       instance void [netstandard/*23000001*/]System.Attribute/*01000012*/::.ctor() /* 0A000012 */
    IL_0006:  /* 2A   |                  */ ret
  } // end of method EmbeddedAttribute::.ctor

} // end of class Microsoft.CodeAnalysis.EmbeddedAttribute

.class /*02000003*/ private auto ansi sealed beforefieldinit System.Runtime.CompilerServices.IsReadOnlyAttribute
       extends [netstandard/*23000001*/]System.Attribute/*01000012*/
{
  .custom /*0C000014:0A000010*/ instance void [netstandard/*23000001*/]System.Runtime.CompilerServices.CompilerGeneratedAttribute/*01000011*/::.ctor() /* 0A000010 */ = ( 01 00 00 00 ) 
  .custom /*0C000015:06000001*/ instance void Microsoft.CodeAnalysis.EmbeddedAttribute/*02000002*/::.ctor() /* 06000001 */ = ( 01 00 00 00 ) 
  .method /*06000002*/ public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x2058
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  /* 02   |                  */ ldarg.0
    IL_0001:  /* 28   | (0A)000012       */ call       instance void [netstandard/*23000001*/]System.Attribute/*01000012*/::.ctor() /* 0A000012 */
    IL_0006:  /* 2A   |                  */ ret
  } // end of method IsReadOnlyAttribute::.ctor

} // end of class System.Runtime.CompilerServices.IsReadOnlyAttribute

.class /*02000004*/ public sequential ansi sealed beforefieldinit System.IO.Pipelines.FlushResult
       extends [netstandard/*23000001*/]System.ValueType/*01000013*/
{
  .field /*04000001*/ private int32 _dummyPrimitive
  .method /*06000003*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(bool isCanceled,
                               bool isCompleted) cil managed
  // SIG: 20 02 01 02 02
  {
    // Method begins at RVA 0x2060
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method FlushResult::.ctor

  .method /*06000004*/ public hidebysig specialname 
          instance bool  get_IsCanceled() cil managed
  // SIG: 20 00 02
  {
    // Method begins at RVA 0x2063
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method FlushResult::get_IsCanceled

  .method /*06000005*/ public hidebysig specialname 
          instance bool  get_IsCompleted() cil managed
  // SIG: 20 00 02
  {
    // Method begins at RVA 0x2066
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method FlushResult::get_IsCompleted

  .property /*17000001*/ instance callconv(8) bool
          IsCanceled()
  {
    .get instance bool System.IO.Pipelines.FlushResult/*02000004*/::get_IsCanceled() /* 06000004 */
  } // end of property FlushResult::IsCanceled
  .property /*17000002*/ instance callconv(8) bool
          IsCompleted()
  {
    .get instance bool System.IO.Pipelines.FlushResult/*02000004*/::get_IsCompleted() /* 06000005 */
  } // end of property FlushResult::IsCompleted
} // end of class System.IO.Pipelines.FlushResult

.class /*02000005*/ interface public abstract auto ansi System.IO.Pipelines.IDuplexPipe
{
  .method /*06000006*/ public hidebysig newslot specialname abstract virtual 
          instance class System.IO.Pipelines.PipeReader/*02000008*/ 
          get_Input() cil managed
  // SIG: 20 00 12 20
  {
    // Method begins at RVA 0x0
  } // end of method IDuplexPipe::get_Input

  .method /*06000007*/ public hidebysig newslot specialname abstract virtual 
          instance class System.IO.Pipelines.PipeWriter/*0200000A*/ 
          get_Output() cil managed
  // SIG: 20 00 12 28
  {
    // Method begins at RVA 0x0
  } // end of method IDuplexPipe::get_Output

  .property /*17000003*/ instance callconv(8) class System.IO.Pipelines.PipeReader/*02000008*/
          Input()
  {
    .get instance class System.IO.Pipelines.PipeReader/*02000008*/ System.IO.Pipelines.IDuplexPipe/*02000005*/::get_Input() /* 06000006 */
  } // end of property IDuplexPipe::Input
  .property /*17000004*/ instance callconv(8) class System.IO.Pipelines.PipeWriter/*0200000A*/
          Output()
  {
    .get instance class System.IO.Pipelines.PipeWriter/*0200000A*/ System.IO.Pipelines.IDuplexPipe/*02000005*/::get_Output() /* 06000007 */
  } // end of property IDuplexPipe::Output
} // end of class System.IO.Pipelines.IDuplexPipe

.class /*02000006*/ public auto ansi sealed beforefieldinit System.IO.Pipelines.Pipe
       extends [netstandard/*23000001*/]System.Object/*01000014*/
{
  .method /*06000008*/ public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x2069
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  /* 02   |                  */ ldarg.0
    IL_0001:  /* 28   | (0A)000013       */ call       instance void [netstandard/*23000001*/]System.Object/*01000014*/::.ctor() /* 0A000013 */
    IL_0006:  /* 2A   |                  */ ret
  } // end of method Pipe::.ctor

  .method /*06000009*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(class System.IO.Pipelines.PipeOptions/*02000007*/ options) cil managed
  // SIG: 20 01 01 12 1C
  {
    // Method begins at RVA 0x2071
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  /* 02   |                  */ ldarg.0
    IL_0001:  /* 28   | (0A)000013       */ call       instance void [netstandard/*23000001*/]System.Object/*01000014*/::.ctor() /* 0A000013 */
    IL_0006:  /* 2A   |                  */ ret
  } // end of method Pipe::.ctor

  .method /*0600000A*/ public hidebysig specialname 
          instance class System.IO.Pipelines.PipeReader/*02000008*/ 
          get_Reader() cil managed
  // SIG: 20 00 12 20
  {
    // Method begins at RVA 0x2079
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Pipe::get_Reader

  .method /*0600000B*/ public hidebysig specialname 
          instance class System.IO.Pipelines.PipeWriter/*0200000A*/ 
          get_Writer() cil managed
  // SIG: 20 00 12 28
  {
    // Method begins at RVA 0x207c
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Pipe::get_Writer

  .method /*0600000C*/ public hidebysig instance void 
          Reset() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x207f
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Pipe::Reset

  .property /*17000005*/ instance callconv(8) class System.IO.Pipelines.PipeReader/*02000008*/
          Reader()
  {
    .get instance class System.IO.Pipelines.PipeReader/*02000008*/ System.IO.Pipelines.Pipe/*02000006*/::get_Reader() /* 0600000A */
  } // end of property Pipe::Reader
  .property /*17000006*/ instance callconv(8) class System.IO.Pipelines.PipeWriter/*0200000A*/
          Writer()
  {
    .get instance class System.IO.Pipelines.PipeWriter/*0200000A*/ System.IO.Pipelines.Pipe/*02000006*/::get_Writer() /* 0600000B */
  } // end of property Pipe::Writer
} // end of class System.IO.Pipelines.Pipe

.class /*02000007*/ public auto ansi beforefieldinit System.IO.Pipelines.PipeOptions
       extends [netstandard/*23000001*/]System.Object/*01000014*/
{
  .method /*0600000D*/ public hidebysig specialname rtspecialname 
          instance void  .ctor([opt] class [System.Memory/*23000002*/]System.Buffers.MemoryPool`1/*01000015*/<uint8> pool,
                               [opt] class System.IO.Pipelines.PipeScheduler/*02000009*/ readerScheduler,
                               [opt] class System.IO.Pipelines.PipeScheduler/*02000009*/ writerScheduler,
                               [opt] int64 pauseWriterThreshold,
                               [opt] int64 resumeWriterThreshold,
                               [opt] int32 minimumSegmentSize,
                               [opt] bool useSynchronizationContext) cil managed
  // SIG: 20 07 01 15 12 55 01 05 12 24 12 24 0A 0A 08 02
  {
    .param [1]/*08000004*/  = nullref
    .param [2]/*08000005*/  = nullref
    .param [3]/*08000006*/  = nullref
    .param [4]/*08000007*/  = int64(0xFFFFFFFFFFFFFFFF)
    .param [5]/*08000008*/  = int64(0xFFFFFFFFFFFFFFFF)
    .param [6]/*08000009*/  = int32(0xFFFFFFFF)
    .param [7]/*0800000A*/  = bool(true)
    // Method begins at RVA 0x2081
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  /* 02   |                  */ ldarg.0
    IL_0001:  /* 28   | (0A)000013       */ call       instance void [netstandard/*23000001*/]System.Object/*01000014*/::.ctor() /* 0A000013 */
    IL_0006:  /* 2A   |                  */ ret
  } // end of method PipeOptions::.ctor

  .method /*0600000E*/ public hidebysig specialname static 
          class System.IO.Pipelines.PipeOptions/*02000007*/ 
          get_Default() cil managed
  // SIG: 00 00 12 1C
  {
    // Method begins at RVA 0x2089
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method PipeOptions::get_Default

  .method /*0600000F*/ public hidebysig specialname 
          instance int32  get_MinimumSegmentSize() cil managed
  // SIG: 20 00 08
  {
    // Method begins at RVA 0x208c
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method PipeOptions::get_MinimumSegmentSize

  .method /*06000010*/ public hidebysig specialname 
          instance int64  get_PauseWriterThreshold() cil managed
  // SIG: 20 00 0A
  {
    // Method begins at RVA 0x208f
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method PipeOptions::get_PauseWriterThreshold

  .method /*06000011*/ public hidebysig specialname 
          instance class [System.Memory/*23000002*/]System.Buffers.MemoryPool`1/*01000015*/<uint8> 
          get_Pool() cil managed
  // SIG: 20 00 15 12 55 01 05
  {
    // Method begins at RVA 0x2092
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method PipeOptions::get_Pool

  .method /*06000012*/ public hidebysig specialname 
          instance class System.IO.Pipelines.PipeScheduler/*02000009*/ 
          get_ReaderScheduler() cil managed
  // SIG: 20 00 12 24
  {
    // Method begins at RVA 0x2095
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method PipeOptions::get_ReaderScheduler

  .method /*06000013*/ public hidebysig specialname 
          instance int64  get_ResumeWriterThreshold() cil managed
  // SIG: 20 00 0A
  {
    // Method begins at RVA 0x2098
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method PipeOptions::get_ResumeWriterThreshold

  .method /*06000014*/ public hidebysig specialname 
          instance bool  get_UseSynchronizationContext() cil managed
  // SIG: 20 00 02
  {
    // Method begins at RVA 0x209b
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method PipeOptions::get_UseSynchronizationContext

  .method /*06000015*/ public hidebysig specialname 
          instance class System.IO.Pipelines.PipeScheduler/*02000009*/ 
          get_WriterScheduler() cil managed
  // SIG: 20 00 12 24
  {
    // Method begins at RVA 0x209e
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method PipeOptions::get_WriterScheduler

  .property /*17000007*/ callconv(8) class System.IO.Pipelines.PipeOptions/*02000007*/
          Default()
  {
    .get class System.IO.Pipelines.PipeOptions/*02000007*/ System.IO.Pipelines.PipeOptions/*02000007*/::get_Default() /* 0600000E */
  } // end of property PipeOptions::Default
  .property /*17000008*/ instance callconv(8) int32
          MinimumSegmentSize()
  {
    .get instance int32 System.IO.Pipelines.PipeOptions/*02000007*/::get_MinimumSegmentSize() /* 0600000F */
  } // end of property PipeOptions::MinimumSegmentSize
  .property /*17000009*/ instance callconv(8) int64
          PauseWriterThreshold()
  {
    .get instance int64 System.IO.Pipelines.PipeOptions/*02000007*/::get_PauseWriterThreshold() /* 06000010 */
  } // end of property PipeOptions::PauseWriterThreshold
  .property /*1700000A*/ instance callconv(8) class [System.Memory/*23000002*/]System.Buffers.MemoryPool`1/*01000015*/<uint8>
          Pool()
  {
    .get instance class [System.Memory/*23000002*/]System.Buffers.MemoryPool`1/*01000015*/<uint8> System.IO.Pipelines.PipeOptions/*02000007*/::get_Pool() /* 06000011 */
  } // end of property PipeOptions::Pool
  .property /*1700000B*/ instance callconv(8) class System.IO.Pipelines.PipeScheduler/*02000009*/
          ReaderScheduler()
  {
    .get instance class System.IO.Pipelines.PipeScheduler/*02000009*/ System.IO.Pipelines.PipeOptions/*02000007*/::get_ReaderScheduler() /* 06000012 */
  } // end of property PipeOptions::ReaderScheduler
  .property /*1700000C*/ instance callconv(8) int64
          ResumeWriterThreshold()
  {
    .get instance int64 System.IO.Pipelines.PipeOptions/*02000007*/::get_ResumeWriterThreshold() /* 06000013 */
  } // end of property PipeOptions::ResumeWriterThreshold
  .property /*1700000D*/ instance callconv(8) bool
          UseSynchronizationContext()
  {
    .get instance bool System.IO.Pipelines.PipeOptions/*02000007*/::get_UseSynchronizationContext() /* 06000014 */
  } // end of property PipeOptions::UseSynchronizationContext
  .property /*1700000E*/ instance callconv(8) class System.IO.Pipelines.PipeScheduler/*02000009*/
          WriterScheduler()
  {
    .get instance class System.IO.Pipelines.PipeScheduler/*02000009*/ System.IO.Pipelines.PipeOptions/*02000007*/::get_WriterScheduler() /* 06000015 */
  } // end of property PipeOptions::WriterScheduler
} // end of class System.IO.Pipelines.PipeOptions

.class /*02000008*/ public abstract auto ansi beforefieldinit System.IO.Pipelines.PipeReader
       extends [netstandard/*23000001*/]System.Object/*01000014*/
{
  .method /*06000016*/ family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x20a1
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  /* 02   |                  */ ldarg.0
    IL_0001:  /* 28   | (0A)000013       */ call       instance void [netstandard/*23000001*/]System.Object/*01000014*/::.ctor() /* 0A000013 */
    IL_0006:  /* 2A   |                  */ ret
  } // end of method PipeReader::.ctor

  .method /*06000017*/ public hidebysig newslot abstract virtual 
          instance void  AdvanceTo(valuetype [System.Memory/*23000002*/]System.SequencePosition/*01000016*/ consumed) cil managed
  // SIG: 20 01 01 11 59
  {
    // Method begins at RVA 0x0
  } // end of method PipeReader::AdvanceTo

  .method /*06000018*/ public hidebysig newslot abstract virtual 
          instance void  AdvanceTo(valuetype [System.Memory/*23000002*/]System.SequencePosition/*01000016*/ consumed,
                                   valuetype [System.Memory/*23000002*/]System.SequencePosition/*01000016*/ examined) cil managed
  // SIG: 20 02 01 11 59 11 59
  {
    // Method begins at RVA 0x0
  } // end of method PipeReader::AdvanceTo

  .method /*06000019*/ public hidebysig newslot virtual 
          instance class [netstandard/*23000001*/]System.IO.Stream/*01000017*/ 
          AsStream([opt] bool leaveOpen) cil managed
  // SIG: 20 01 12 5D 02
  {
    .param [1]/*0800000E*/  = bool(false)
    // Method begins at RVA 0x20a9
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method PipeReader::AsStream

  .method /*0600001A*/ public hidebysig newslot abstract virtual 
          instance void  CancelPendingRead() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x0
  } // end of method PipeReader::CancelPendingRead

  .method /*0600001B*/ public hidebysig newslot abstract virtual 
          instance void  Complete([opt] class [netstandard/*23000001*/]System.Exception/*01000018*/ exception) cil managed
  // SIG: 20 01 01 12 61
  {
    .param [1]/*0800000F*/  = nullref
    // Method begins at RVA 0x0
  } // end of method PipeReader::Complete

  .method /*0600001C*/ public hidebysig newslot virtual 
          instance valuetype [System.Threading.Tasks.Extensions/*23000003*/]System.Threading.Tasks.ValueTask/*01000019*/ 
          CompleteAsync([opt] class [netstandard/*23000001*/]System.Exception/*01000018*/ exception) cil managed
  // SIG: 20 01 11 65 12 61
  {
    .param [1]/*08000010*/  = nullref
    // Method begins at RVA 0x20ac
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method PipeReader::CompleteAsync

  .method /*0600001D*/ public hidebysig newslot virtual 
          instance class [netstandard/*23000001*/]System.Threading.Tasks.Task/*0100001A*/ 
          CopyToAsync(class System.IO.Pipelines.PipeWriter/*0200000A*/ destination,
                      [opt] valuetype [netstandard/*23000001*/]System.Threading.CancellationToken/*0100001B*/ cancellationToken) cil managed
  // SIG: 20 02 12 69 12 28 11 6D
  {
    .param [2]/*08000012*/  = nullref
    // Method begins at RVA 0x20af
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method PipeReader::CopyToAsync

  .method /*0600001E*/ public hidebysig newslot virtual 
          instance class [netstandard/*23000001*/]System.Threading.Tasks.Task/*0100001A*/ 
          CopyToAsync(class [netstandard/*23000001*/]System.IO.Stream/*01000017*/ destination,
                      [opt] valuetype [netstandard/*23000001*/]System.Threading.CancellationToken/*0100001B*/ cancellationToken) cil managed
  // SIG: 20 02 12 69 12 5D 11 6D
  {
    .param [2]/*08000014*/  = nullref
    // Method begins at RVA 0x20b2
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method PipeReader::CopyToAsync

  .method /*0600001F*/ public hidebysig static 
          class System.IO.Pipelines.PipeReader/*02000008*/ 
          Create(class [netstandard/*23000001*/]System.IO.Stream/*01000017*/ 'stream',
                 [opt] class System.IO.Pipelines.StreamPipeReaderOptions/*0200000D*/ readerOptions) cil managed
  // SIG: 00 02 12 20 12 5D 12 34
  {
    .param [2]/*08000016*/  = nullref
    // Method begins at RVA 0x20b5
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method PipeReader::Create

  .method /*06000020*/ public hidebysig newslot virtual 
          instance void  OnWriterCompleted(class [netstandard/*23000001*/]System.Action`2/*0100001D*/<class [netstandard/*23000001*/]System.Exception/*01000018*/,object> callback,
                                           object state) cil managed
  // SIG: 20 02 01 15 12 75 02 12 61 1C 1C
  {
    .custom /*0C000018:0A000011*/ instance void [netstandard/*23000001*/]System.ObsoleteAttribute/*0100001C*/::.ctor(string) /* 0A000011 */ = ( 01 00 74 4F 6E 57 72 69 74 65 72 43 6F 6D 70 6C   // ..tOnWriterCompl
                                                                                                                                                65 74 65 64 20 6D 61 79 20 6E 6F 74 20 62 65 20   // eted may not be 
                                                                                                                                                69 6E 76 6F 6B 65 64 20 6F 6E 20 61 6C 6C 20 69   // invoked on all i
                                                                                                                                                6D 70 6C 65 6D 65 6E 74 61 74 69 6F 6E 73 20 6F   // mplementations o
                                                                                                                                                66 20 50 69 70 65 52 65 61 64 65 72 2E 20 54 68   // f PipeReader. Th
                                                                                                                                                69 73 20 77 69 6C 6C 20 62 65 20 72 65 6D 6F 76   // is will be remov
                                                                                                                                                65 64 20 69 6E 20 61 20 66 75 74 75 72 65 20 72   // ed in a future r
                                                                                                                                                65 6C 65 61 73 65 2E 00 00 )                      // elease...
    // Method begins at RVA 0x20b8
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method PipeReader::OnWriterCompleted

  .method /*06000021*/ public hidebysig newslot abstract virtual 
          instance valuetype [System.Threading.Tasks.Extensions/*23000003*/]System.Threading.Tasks.ValueTask`1/*0100001E*/<valuetype System.IO.Pipelines.ReadResult/*0200000B*/> 
          ReadAsync([opt] valuetype [netstandard/*23000001*/]System.Threading.CancellationToken/*0100001B*/ cancellationToken) cil managed
  // SIG: 20 01 15 11 79 01 11 2C 11 6D
  {
    .param [1]/*08000019*/  = nullref
    // Method begins at RVA 0x0
  } // end of method PipeReader::ReadAsync

  .method /*06000022*/ public hidebysig newslot abstract virtual 
          instance bool  TryRead([out] valuetype System.IO.Pipelines.ReadResult/*0200000B*/& result) cil managed
  // SIG: 20 01 02 10 11 2C
  {
    // Method begins at RVA 0x0
  } // end of method PipeReader::TryRead

} // end of class System.IO.Pipelines.PipeReader

.class /*02000009*/ public abstract auto ansi beforefieldinit System.IO.Pipelines.PipeScheduler
       extends [netstandard/*23000001*/]System.Object/*01000014*/
{
  .method /*06000023*/ family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x20ba
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  /* 02   |                  */ ldarg.0
    IL_0001:  /* 28   | (0A)000013       */ call       instance void [netstandard/*23000001*/]System.Object/*01000014*/::.ctor() /* 0A000013 */
    IL_0006:  /* 2A   |                  */ ret
  } // end of method PipeScheduler::.ctor

  .method /*06000024*/ public hidebysig specialname static 
          class System.IO.Pipelines.PipeScheduler/*02000009*/ 
          get_Inline() cil managed
  // SIG: 00 00 12 24
  {
    // Method begins at RVA 0x20c2
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method PipeScheduler::get_Inline

  .method /*06000025*/ public hidebysig specialname static 
          class System.IO.Pipelines.PipeScheduler/*02000009*/ 
          get_ThreadPool() cil managed
  // SIG: 00 00 12 24
  {
    // Method begins at RVA 0x20c5
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method PipeScheduler::get_ThreadPool

  .method /*06000026*/ public hidebysig newslot abstract virtual 
          instance void  Schedule(class [netstandard/*23000001*/]System.Action`1/*0100001F*/<object> action,
                                  object state) cil managed
  // SIG: 20 02 01 15 12 7D 01 1C 1C
  {
    // Method begins at RVA 0x0
  } // end of method PipeScheduler::Schedule

  .property /*1700000F*/ callconv(8) class System.IO.Pipelines.PipeScheduler/*02000009*/
          Inline()
  {
    .get class System.IO.Pipelines.PipeScheduler/*02000009*/ System.IO.Pipelines.PipeScheduler/*02000009*/::get_Inline() /* 06000024 */
  } // end of property PipeScheduler::Inline
  .property /*17000010*/ callconv(8) class System.IO.Pipelines.PipeScheduler/*02000009*/
          ThreadPool()
  {
    .get class System.IO.Pipelines.PipeScheduler/*02000009*/ System.IO.Pipelines.PipeScheduler/*02000009*/::get_ThreadPool() /* 06000025 */
  } // end of property PipeScheduler::ThreadPool
} // end of class System.IO.Pipelines.PipeScheduler

.class /*0200000A*/ public abstract auto ansi beforefieldinit System.IO.Pipelines.PipeWriter
       extends [netstandard/*23000001*/]System.Object/*01000014*/
       implements class [System.Memory/*23000002*/]System.Buffers.IBufferWriter`1/*01000020*/<uint8>/*1B000001*/
{
  .method /*06000027*/ family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x20c8
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  /* 02   |                  */ ldarg.0
    IL_0001:  /* 28   | (0A)000013       */ call       instance void [netstandard/*23000001*/]System.Object/*01000014*/::.ctor() /* 0A000013 */
    IL_0006:  /* 2A   |                  */ ret
  } // end of method PipeWriter::.ctor

  .method /*06000028*/ public hidebysig newslot abstract virtual 
          instance void  Advance(int32 bytes) cil managed
  // SIG: 20 01 01 08
  {
    // Method begins at RVA 0x0
  } // end of method PipeWriter::Advance

  .method /*06000029*/ public hidebysig newslot virtual 
          instance class [netstandard/*23000001*/]System.IO.Stream/*01000017*/ 
          AsStream([opt] bool leaveOpen) cil managed
  // SIG: 20 01 12 5D 02
  {
    .param [1]/*0800001E*/  = bool(false)
    // Method begins at RVA 0x20d0
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method PipeWriter::AsStream

  .method /*0600002A*/ public hidebysig newslot abstract virtual 
          instance void  CancelPendingFlush() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x0
  } // end of method PipeWriter::CancelPendingFlush

  .method /*0600002B*/ public hidebysig newslot abstract virtual 
          instance void  Complete([opt] class [netstandard/*23000001*/]System.Exception/*01000018*/ exception) cil managed
  // SIG: 20 01 01 12 61
  {
    .param [1]/*0800001F*/  = nullref
    // Method begins at RVA 0x0
  } // end of method PipeWriter::Complete

  .method /*0600002C*/ public hidebysig newslot virtual 
          instance valuetype [System.Threading.Tasks.Extensions/*23000003*/]System.Threading.Tasks.ValueTask/*01000019*/ 
          CompleteAsync([opt] class [netstandard/*23000001*/]System.Exception/*01000018*/ exception) cil managed
  // SIG: 20 01 11 65 12 61
  {
    .param [1]/*08000020*/  = nullref
    // Method begins at RVA 0x20d3
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method PipeWriter::CompleteAsync

  .method /*0600002D*/ famorassem hidebysig newslot virtual 
          instance class [netstandard/*23000001*/]System.Threading.Tasks.Task/*0100001A*/ 
          CopyFromAsync(class [netstandard/*23000001*/]System.IO.Stream/*01000017*/ source,
                        [opt] valuetype [netstandard/*23000001*/]System.Threading.CancellationToken/*0100001B*/ cancellationToken) cil managed
  // SIG: 20 02 12 69 12 5D 11 6D
  {
    .param [2]/*08000022*/  = nullref
    // Method begins at RVA 0x20d6
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method PipeWriter::CopyFromAsync

  .method /*0600002E*/ public hidebysig static 
          class System.IO.Pipelines.PipeWriter/*0200000A*/ 
          Create(class [netstandard/*23000001*/]System.IO.Stream/*01000017*/ 'stream',
                 [opt] class System.IO.Pipelines.StreamPipeWriterOptions/*0200000E*/ writerOptions) cil managed
  // SIG: 00 02 12 28 12 5D 12 38
  {
    .param [2]/*08000024*/  = nullref
    // Method begins at RVA 0x20d9
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method PipeWriter::Create

  .method /*0600002F*/ public hidebysig newslot abstract virtual 
          instance valuetype [System.Threading.Tasks.Extensions/*23000003*/]System.Threading.Tasks.ValueTask`1/*0100001E*/<valuetype System.IO.Pipelines.FlushResult/*02000004*/> 
          FlushAsync([opt] valuetype [netstandard/*23000001*/]System.Threading.CancellationToken/*0100001B*/ cancellationToken) cil managed
  // SIG: 20 01 15 11 79 01 11 10 11 6D
  {
    .param [1]/*08000025*/  = nullref
    // Method begins at RVA 0x0
  } // end of method PipeWriter::FlushAsync

  .method /*06000030*/ public hidebysig newslot abstract virtual 
          instance valuetype [System.Memory/*23000002*/]System.Memory`1/*01000021*/<uint8> 
          GetMemory([opt] int32 sizeHint) cil managed
  // SIG: 20 01 15 11 80 85 01 05 08
  {
    .param [1]/*08000026*/  = int32(0x00000000)
    // Method begins at RVA 0x0
  } // end of method PipeWriter::GetMemory

  .method /*06000031*/ public hidebysig newslot abstract virtual 
          instance valuetype [System.Memory/*23000002*/]System.Span`1/*01000022*/<uint8> 
          GetSpan([opt] int32 sizeHint) cil managed
  // SIG: 20 01 15 11 80 89 01 05 08
  {
    .param [1]/*08000027*/  = int32(0x00000000)
    // Method begins at RVA 0x0
  } // end of method PipeWriter::GetSpan

  .method /*06000032*/ public hidebysig newslot virtual 
          instance void  OnReaderCompleted(class [netstandard/*23000001*/]System.Action`2/*0100001D*/<class [netstandard/*23000001*/]System.Exception/*01000018*/,object> callback,
                                           object state) cil managed
  // SIG: 20 02 01 15 12 75 02 12 61 1C 1C
  {
    .custom /*0C000019:0A000011*/ instance void [netstandard/*23000001*/]System.ObsoleteAttribute/*0100001C*/::.ctor(string) /* 0A000011 */ = ( 01 00 74 4F 6E 52 65 61 64 65 72 43 6F 6D 70 6C   // ..tOnReaderCompl
                                                                                                                                                65 74 65 64 20 6D 61 79 20 6E 6F 74 20 62 65 20   // eted may not be 
                                                                                                                                                69 6E 76 6F 6B 65 64 20 6F 6E 20 61 6C 6C 20 69   // invoked on all i
                                                                                                                                                6D 70 6C 65 6D 65 6E 74 61 74 69 6F 6E 73 20 6F   // mplementations o
                                                                                                                                                66 20 50 69 70 65 57 72 69 74 65 72 2E 20 54 68   // f PipeWriter. Th
                                                                                                                                                69 73 20 77 69 6C 6C 20 62 65 20 72 65 6D 6F 76   // is will be remov
                                                                                                                                                65 64 20 69 6E 20 61 20 66 75 74 75 72 65 20 72   // ed in a future r
                                                                                                                                                65 6C 65 61 73 65 2E 00 00 )                      // elease...
    // Method begins at RVA 0x20dc
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method PipeWriter::OnReaderCompleted

  .method /*06000033*/ public hidebysig newslot virtual 
          instance valuetype [System.Threading.Tasks.Extensions/*23000003*/]System.Threading.Tasks.ValueTask`1/*0100001E*/<valuetype System.IO.Pipelines.FlushResult/*02000004*/> 
          WriteAsync(valuetype [System.Memory/*23000002*/]System.ReadOnlyMemory`1/*01000023*/<uint8> source,
                     [opt] valuetype [netstandard/*23000001*/]System.Threading.CancellationToken/*0100001B*/ cancellationToken) cil managed
  // SIG: 20 02 15 11 79 01 11 10 15 11 80 8D 01 05 11 6D
  {
    .param [2]/*0800002B*/  = nullref
    // Method begins at RVA 0x20de
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method PipeWriter::WriteAsync

} // end of class System.IO.Pipelines.PipeWriter

.class /*0200000B*/ public sequential ansi sealed beforefieldinit System.IO.Pipelines.ReadResult
       extends [netstandard/*23000001*/]System.ValueType/*01000013*/
{
  .custom /*0C000016:06000002*/ instance void System.Runtime.CompilerServices.IsReadOnlyAttribute/*02000003*/::.ctor() /* 06000002 */ = ( 01 00 00 00 ) 
  .field /*04000002*/ private initonly object _dummy
  .field /*04000003*/ private initonly int32 _dummyPrimitive
  .method /*06000034*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(valuetype [System.Memory/*23000002*/]System.Buffers.ReadOnlySequence`1/*01000024*/<uint8> buffer,
                               bool isCanceled,
                               bool isCompleted) cil managed
  // SIG: 20 03 01 15 11 80 91 01 05 02 02
  {
    // Method begins at RVA 0x20e1
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method ReadResult::.ctor

  .method /*06000035*/ public hidebysig specialname 
          instance valuetype [System.Memory/*23000002*/]System.Buffers.ReadOnlySequence`1/*01000024*/<uint8> 
          get_Buffer() cil managed
  // SIG: 20 00 15 11 80 91 01 05
  {
    // Method begins at RVA 0x20e4
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method ReadResult::get_Buffer

  .method /*06000036*/ public hidebysig specialname 
          instance bool  get_IsCanceled() cil managed
  // SIG: 20 00 02
  {
    // Method begins at RVA 0x20e7
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method ReadResult::get_IsCanceled

  .method /*06000037*/ public hidebysig specialname 
          instance bool  get_IsCompleted() cil managed
  // SIG: 20 00 02
  {
    // Method begins at RVA 0x20ea
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method ReadResult::get_IsCompleted

  .property /*17000011*/ instance callconv(8) valuetype [System.Memory/*23000002*/]System.Buffers.ReadOnlySequence`1/*01000024*/<uint8>
          Buffer()
  {
    .get instance valuetype [System.Memory/*23000002*/]System.Buffers.ReadOnlySequence`1/*01000024*/<uint8> System.IO.Pipelines.ReadResult/*0200000B*/::get_Buffer() /* 06000035 */
  } // end of property ReadResult::Buffer
  .property /*17000012*/ instance callconv(8) bool
          IsCanceled()
  {
    .get instance bool System.IO.Pipelines.ReadResult/*0200000B*/::get_IsCanceled() /* 06000036 */
  } // end of property ReadResult::IsCanceled
  .property /*17000013*/ instance callconv(8) bool
          IsCompleted()
  {
    .get instance bool System.IO.Pipelines.ReadResult/*0200000B*/::get_IsCompleted() /* 06000037 */
  } // end of property ReadResult::IsCompleted
} // end of class System.IO.Pipelines.ReadResult

.class /*0200000C*/ public abstract auto ansi sealed beforefieldinit System.IO.Pipelines.StreamPipeExtensions
       extends [netstandard/*23000001*/]System.Object/*01000014*/
{
  .custom /*0C000017:0A000001*/ instance void [netstandard/*23000001*/]System.Runtime.CompilerServices.ExtensionAttribute/*01000001*/::.ctor() /* 0A000001 */ = ( 01 00 00 00 ) 
  .method /*06000038*/ public hidebysig static 
          class [netstandard/*23000001*/]System.Threading.Tasks.Task/*0100001A*/ 
          CopyToAsync(class [netstandard/*23000001*/]System.IO.Stream/*01000017*/ source,
                      class System.IO.Pipelines.PipeWriter/*0200000A*/ destination,
                      [opt] valuetype [netstandard/*23000001*/]System.Threading.CancellationToken/*0100001B*/ cancellationToken) cil managed
  // SIG: 00 03 12 69 12 5D 12 28 11 6D
  {
    .custom /*0C00001A:0A000001*/ instance void [netstandard/*23000001*/]System.Runtime.CompilerServices.ExtensionAttribute/*01000001*/::.ctor() /* 0A000001 */ = ( 01 00 00 00 ) 
    .param [3]/*08000031*/  = nullref
    // Method begins at RVA 0x20ed
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method StreamPipeExtensions::CopyToAsync

} // end of class System.IO.Pipelines.StreamPipeExtensions

.class /*0200000D*/ public auto ansi beforefieldinit System.IO.Pipelines.StreamPipeReaderOptions
       extends [netstandard/*23000001*/]System.Object/*01000014*/
{
  .method /*06000039*/ public hidebysig specialname rtspecialname 
          instance void  .ctor([opt] class [System.Memory/*23000002*/]System.Buffers.MemoryPool`1/*01000015*/<uint8> pool,
                               [opt] int32 bufferSize,
                               [opt] int32 minimumReadSize,
                               [opt] bool leaveOpen) cil managed
  // SIG: 20 04 01 15 12 55 01 05 08 08 02
  {
    .param [1]/*08000032*/  = nullref
    .param [2]/*08000033*/  = int32(0xFFFFFFFF)
    .param [3]/*08000034*/  = int32(0xFFFFFFFF)
    .param [4]/*08000035*/  = bool(false)
    // Method begins at RVA 0x20f0
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  /* 02   |                  */ ldarg.0
    IL_0001:  /* 28   | (0A)000013       */ call       instance void [netstandard/*23000001*/]System.Object/*01000014*/::.ctor() /* 0A000013 */
    IL_0006:  /* 2A   |                  */ ret
  } // end of method StreamPipeReaderOptions::.ctor

  .method /*0600003A*/ public hidebysig specialname 
          instance int32  get_BufferSize() cil managed
  // SIG: 20 00 08
  {
    // Method begins at RVA 0x20f8
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method StreamPipeReaderOptions::get_BufferSize

  .method /*0600003B*/ public hidebysig specialname 
          instance bool  get_LeaveOpen() cil managed
  // SIG: 20 00 02
  {
    // Method begins at RVA 0x20fb
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method StreamPipeReaderOptions::get_LeaveOpen

  .method /*0600003C*/ public hidebysig specialname 
          instance int32  get_MinimumReadSize() cil managed
  // SIG: 20 00 08
  {
    // Method begins at RVA 0x20fe
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method StreamPipeReaderOptions::get_MinimumReadSize

  .method /*0600003D*/ public hidebysig specialname 
          instance class [System.Memory/*23000002*/]System.Buffers.MemoryPool`1/*01000015*/<uint8> 
          get_Pool() cil managed
  // SIG: 20 00 15 12 55 01 05
  {
    // Method begins at RVA 0x2101
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method StreamPipeReaderOptions::get_Pool

  .property /*17000014*/ instance callconv(8) int32
          BufferSize()
  {
    .get instance int32 System.IO.Pipelines.StreamPipeReaderOptions/*0200000D*/::get_BufferSize() /* 0600003A */
  } // end of property StreamPipeReaderOptions::BufferSize
  .property /*17000015*/ instance callconv(8) bool
          LeaveOpen()
  {
    .get instance bool System.IO.Pipelines.StreamPipeReaderOptions/*0200000D*/::get_LeaveOpen() /* 0600003B */
  } // end of property StreamPipeReaderOptions::LeaveOpen
  .property /*17000016*/ instance callconv(8) int32
          MinimumReadSize()
  {
    .get instance int32 System.IO.Pipelines.StreamPipeReaderOptions/*0200000D*/::get_MinimumReadSize() /* 0600003C */
  } // end of property StreamPipeReaderOptions::MinimumReadSize
  .property /*17000017*/ instance callconv(8) class [System.Memory/*23000002*/]System.Buffers.MemoryPool`1/*01000015*/<uint8>
          Pool()
  {
    .get instance class [System.Memory/*23000002*/]System.Buffers.MemoryPool`1/*01000015*/<uint8> System.IO.Pipelines.StreamPipeReaderOptions/*0200000D*/::get_Pool() /* 0600003D */
  } // end of property StreamPipeReaderOptions::Pool
} // end of class System.IO.Pipelines.StreamPipeReaderOptions

.class /*0200000E*/ public auto ansi beforefieldinit System.IO.Pipelines.StreamPipeWriterOptions
       extends [netstandard/*23000001*/]System.Object/*01000014*/
{
  .method /*0600003E*/ public hidebysig specialname rtspecialname 
          instance void  .ctor([opt] class [System.Memory/*23000002*/]System.Buffers.MemoryPool`1/*01000015*/<uint8> pool,
                               [opt] int32 minimumBufferSize,
                               [opt] bool leaveOpen) cil managed
  // SIG: 20 03 01 15 12 55 01 05 08 02
  {
    .param [1]/*08000036*/  = nullref
    .param [2]/*08000037*/  = int32(0xFFFFFFFF)
    .param [3]/*08000038*/  = bool(false)
    // Method begins at RVA 0x2104
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  /* 02   |                  */ ldarg.0
    IL_0001:  /* 28   | (0A)000013       */ call       instance void [netstandard/*23000001*/]System.Object/*01000014*/::.ctor() /* 0A000013 */
    IL_0006:  /* 2A   |                  */ ret
  } // end of method StreamPipeWriterOptions::.ctor

  .method /*0600003F*/ public hidebysig specialname 
          instance bool  get_LeaveOpen() cil managed
  // SIG: 20 00 02
  {
    // Method begins at RVA 0x210c
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method StreamPipeWriterOptions::get_LeaveOpen

  .method /*06000040*/ public hidebysig specialname 
          instance int32  get_MinimumBufferSize() cil managed
  // SIG: 20 00 08
  {
    // Method begins at RVA 0x210f
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method StreamPipeWriterOptions::get_MinimumBufferSize

  .method /*06000041*/ public hidebysig specialname 
          instance class [System.Memory/*23000002*/]System.Buffers.MemoryPool`1/*01000015*/<uint8> 
          get_Pool() cil managed
  // SIG: 20 00 15 12 55 01 05
  {
    // Method begins at RVA 0x2112
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method StreamPipeWriterOptions::get_Pool

  .property /*17000018*/ instance callconv(8) bool
          LeaveOpen()
  {
    .get instance bool System.IO.Pipelines.StreamPipeWriterOptions/*0200000E*/::get_LeaveOpen() /* 0600003F */
  } // end of property StreamPipeWriterOptions::LeaveOpen
  .property /*17000019*/ instance callconv(8) int32
          MinimumBufferSize()
  {
    .get instance int32 System.IO.Pipelines.StreamPipeWriterOptions/*0200000E*/::get_MinimumBufferSize() /* 06000040 */
  } // end of property StreamPipeWriterOptions::MinimumBufferSize
  .property /*1700001A*/ instance callconv(8) class [System.Memory/*23000002*/]System.Buffers.MemoryPool`1/*01000015*/<uint8>
          Pool()
  {
    .get instance class [System.Memory/*23000002*/]System.Buffers.MemoryPool`1/*01000015*/<uint8> System.IO.Pipelines.StreamPipeWriterOptions/*0200000E*/::get_Pool() /* 06000041 */
  } // end of property StreamPipeWriterOptions::Pool
} // end of class System.IO.Pipelines.StreamPipeWriterOptions


// =============================================================

// *********** DISASSEMBLY COMPLETE ***********************
