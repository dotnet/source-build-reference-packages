
//  Microsoft (R) .NET Framework IL Disassembler.  Version 4.5.30319.0


// ----- DOS Header:
// Magic:                      0x5a4d
// Bytes on last page:         0x0090
// Pages in file:              0x0003
// Relocations:                0x0000
// Size of header (paragraphs):0x0004
// Min extra paragraphs:       0x0000
// Max extra paragraphs:       0xffff
// Initial (relative) SS:      0x0000
// Initial SP:                 0x00b8
// Checksum:                   0x0000
// Initial IP:                 0x0000
// Initial (relative) CS:      0x0000
// File addr. of reloc table:  0x0040
// Overlay number:             0x0000
// OEM identifier:             0x0000
// OEM info:                   0x0000
// File addr. of COFF header:  0x0080
// ----- COFF/PE Headers:
// Signature:                  0x00004550
// ----- COFF Header:
// Machine:                    0x014c
// Number of sections:         0x0003
// Time-date stamp:            0x8bba6f40
// Ptr to symbol table:        0x00000000
// Number of symbols:          0x00000000
// Size of optional header:    0x00e0
// Characteristics:            0x2022
// ----- PE Optional Header (32 bit):
// Magic:                          0x010b
// Major linker version:           0x30
// Minor linker version:           0x00
// Size of code:                   0x00001200
// Size of init.data:              0x00000800
// Size of uninit.data:            0x00000000
// Addr. of entry point:           0x000031ae
// Base of code:                   0x00002000
// Base of data:                   0x00004000
// Image base:                     0x10000000
// Section alignment:              0x00002000
// File alignment:                 0x00000200
// Major OS version:               0x0004
// Minor OS version:               0x0000
// Major image version:            0x0000
// Minor image version:            0x0000
// Major subsystem version:        0x0004
// Minor subsystem version:        0x0000
// Size of image:                  0x00008000
// Size of headers:                0x00000200
// Checksum:                       0x00006b7f
// Subsystem:                      0x0003
// DLL characteristics:            0x8560
// Size of stack reserve:          0x00100000
// Size of stack commit:           0x00001000
// Size of heap reserve:           0x00100000
// Size of heap commit:            0x00001000
// Loader flags:                   0x00000000
// Directories:                    0x00000010
// 0x00000000 [0x00000000] address [size] of Export Directory:          
// 0x0000315a [0x0000004f] address [size] of Import Directory:          
// 0x00004000 [0x00000524] address [size] of Resource Directory:        
// 0x00000000 [0x00000000] address [size] of Exception Directory:       
// 0x00001c00 [0x00002378] address [size] of Security Directory:        
// 0x00006000 [0x0000000c] address [size] of Base Relocation Table:     
// 0x0000304c [0x00000054] address [size] of Debug Directory:           
// 0x00000000 [0x00000000] address [size] of Architecture Specific:     
// 0x00000000 [0x00000000] address [size] of Global Pointer:            
// 0x00000000 [0x00000000] address [size] of TLS Directory:             
// 0x00000000 [0x00000000] address [size] of Load Config Directory:     
// 0x00000000 [0x00000000] address [size] of Bound Import Directory:    
// 0x00002000 [0x00000008] address [size] of Import Address Table:      
// 0x00000000 [0x00000000] address [size] of Delay Load IAT:            
// 0x00002008 [0x00000048] address [size] of CLR Header:                


// Image sections:
//              .text
//              0x000011b4 Virtual Size
//              0x00002000 Virtual Address
//              0x00001200 Size of Raw Data
//              0x00000200 Pointer to Raw Data
//              0x00000000 Pointer to Relocations
//              0x00000000 Pointer to Linenumbers
//                  0x0000 Number of Relocations
//                  0x0000 Number of Linenumbers
//              0x60000020 Characteristics
//                         CNT_CODE
//                         MEM_EXECUTE
//                         MEM_READ

//              .rsrc
//              0x00000524 Virtual Size
//              0x00004000 Virtual Address
//              0x00000600 Size of Raw Data
//              0x00001400 Pointer to Raw Data
//              0x00000000 Pointer to Relocations
//              0x00000000 Pointer to Linenumbers
//                  0x0000 Number of Relocations
//                  0x0000 Number of Linenumbers
//              0x40000040 Characteristics
//                         CNT_INITIALIZED_DATA
//                         MEM_READ

//              .reloc
//              0x0000000c Virtual Size
//              0x00006000 Virtual Address
//              0x00000200 Size of Raw Data
//              0x00001a00 Pointer to Raw Data
//              0x00000000 Pointer to Relocations
//              0x00000000 Pointer to Linenumbers
//                  0x0000 Number of Relocations
//                  0x0000 Number of Linenumbers
//              0x42000040 Characteristics
//                         CNT_INITIALIZED_DATA
//                         MEM_DISCARDABLE
//                         MEM_READ

// Base Relocation Table
//              0x00003000 Page RVA
//              0x0000000c Block Size
//              0x00000002 Number of Entries
//              Entry 1: Type 0x3 Offset 0x000001b0
//              Entry 2: Type 0x0 Offset 0x00000000

// Import Address Table
//     DLL : mscoree.dll
//              0x00002000 Import Address Table
//              0x0000319c Import Name Table
//              0          Time Date Stamp
//              0          Index of First Forwarder Reference
//
//              0x0000  _CorDllMain

// Delay Load Import Address Table
// No data.

// Entry point code:
//FF 25 00 20 00 10 


// ----- CLR Header:
// Header size:                        0x00000048
// Major runtime version:              0x0002
// Minor runtime version:              0x0005
// 0x000020bc [0x00000f10] address [size] of Metadata Directory:        
// Flags:                              0x00000009
// Entry point token:                  0x00000000
// 0x00000000 [0x00000000] address [size] of Resources Directory:       
// 0x00002fcc [0x00000080] address [size] of Strong Name Signature:     
// 0x00000000 [0x00000000] address [size] of CodeManager Table:         
// 0x00000000 [0x00000000] address [size] of VTableFixups Directory:    
// 0x00000000 [0x00000000] address [size] of Export Address Table:      
// 0x00000000 [0x00000000] address [size] of Precompile Header:         

// Metadata Header
//    Storage Signature:
//              0x424a5342 Signature
//                  0x0001 Major Version
//                  0x0001 Minor Version
//              0x00000000 Extra Data Offset
//              0x0000000c Version String Length
//              'v4.0.30319' Version String
//    Storage Header:
//                    0x00 Flags
//                  0x0005 Number of Streams
//    Stream 1:
//              0x0000006c Offset
//              0x0000069c Size
//              '#~' Name
//    Stream 2:
//              0x00000708 Offset
//              0x00000460 Size
//              '#Strings' Name
//    Stream 3:
//              0x00000b68 Offset
//              0x00000004 Size
//              '#US' Name
//    Stream 4:
//              0x00000b6c Offset
//              0x00000010 Size
//              '#GUID' Name
//    Stream 5:
//              0x00000b7c Offset
//              0x00000394 Size
//              '#Blob' Name

//    Metadata Stream Header:
//              0x00000000 Reserved
//                    0x02 Major
//                    0x00 Minor
//                    0x00 Heaps
//                    0x01 Rid
//      0x0000140900005547 MaskValid
//      0x000016003301fa00 Sorted

// Code Manager Table:
//  default


// Export Address Table Jumps:
// No data.

// File size            : 16248
// PE header size       : 512 (496 used)    ( 3.15%)
// PE additional info   : 10651             (65.55%)
// Num.of PE sections   : 3
// CLR header size     : 72                 ( 0.44%)
// CLR meta-data size  : 3856               (23.73%)
// CLR additional info : 128                ( 0.79%)
// CLR method headers  : 37                 ( 0.23%)
// Managed code         : 71                ( 0.44%)
// Data                 : 2048              (12.60%)
// Unaccounted          : -1127             (-6.94%)

// Num.of PE sections   : 3
//   .text    - 4608
//   .rsrc    - 1536
//   .reloc   - 512

// CLR meta-data size  : 3856
//   Module        -    1 (10 bytes)
//   TypeDef       -    4 (56 bytes)      0 interfaces, 0 explicit layout
//   TypeRef       -   21 (126 bytes)
//   MethodDef     -   37 (518 bytes)     0 abstract, 0 native, 37 bodies
//   MemberRef     -   17 (102 bytes)
//   ParamDef      -   67 (402 bytes)
//   CustomAttribute-   21 (126 bytes)
//   Security      -    1 (6 bytes)
//   Assembly      -    1 (22 bytes)
//   AssemblyRef   -    1 (20 bytes)
//   GenericParam  -   28 (224 bytes)
//   GenericParamConstraint-    1 (4 bytes)
//   Strings       -  1118 bytes
//   Blobs         -   916 bytes
//   UserStrings   -     4 bytes
//   Guids         -    16 bytes
//   Uncategorized -   186 bytes

// CLR additional info : 128

// CLR method headers : 37
//   Num.of method bodies  - 37
//   Num.of fat headers    - 0
//   Num.of tiny headers   - 37

// Managed code : 71
//   Ave method size - 1
// Classes defined in this module:
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Class EmbeddedAttribute              (auto) (ansi) (sealed) 
// Class IsReadOnlyAttribute            (auto) (ansi) (sealed) 
// Class Unsafe                         (public) (abstract) (auto) (ansi) (sealed) 
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


// Metadata version: v4.0.30319
.assembly extern /*23000001*/ netstandard
{
  .publickeytoken = (CC 7B 13 FF CD 2D DD 51 )                         // .{...-.Q
  .ver 2:0:0:0
}
.assembly /*20000001*/ noplatform System.Runtime.CompilerServices.Unsafe
{
  .custom /*0C000002:0A000001*/ instance void [netstandard/*23000001*/]System.Runtime.CompilerServices.CompilationRelaxationsAttribute/*01000001*/::.ctor(int32) /* 0A000001 */ = ( 01 00 08 00 00 00 00 00 ) 
  .custom /*0C000003:0A000002*/ instance void [netstandard/*23000001*/]System.Runtime.CompilerServices.RuntimeCompatibilityAttribute/*01000002*/::.ctor() /* 0A000002 */ = ( 01 00 01 00 54 02 16 57 72 61 70 4E 6F 6E 45 78   // ....T..WrapNonEx
                                                                                                                                                                             63 65 70 74 69 6F 6E 54 68 72 6F 77 73 01 )       // ceptionThrows.

  // --- The following custom attribute is added automatically, do not uncomment -------
  //  .custom /*0C000004:0A000003*/ instance void [netstandard/*23000001*/]System.Diagnostics.DebuggableAttribute/*01000003*/::.ctor(valuetype [netstandard/*23000001*/]System.Diagnostics.DebuggableAttribute/*01000003*//DebuggingModes/*01000004*/) /* 0A000003 */ = ( 01 00 02 00 00 00 00 00 ) 

  .custom /*0C000005:0A000004*/ instance void [netstandard/*23000001*/]System.Reflection.AssemblyDefaultAliasAttribute/*01000005*/::.ctor(string) /* 0A000004 */ = ( 01 00 26 53 79 73 74 65 6D 2E 52 75 6E 74 69 6D   // ..&System.Runtim
                                                                                                                                                                     65 2E 43 6F 6D 70 69 6C 65 72 53 65 72 76 69 63   // e.CompilerServic
                                                                                                                                                                     65 73 2E 55 6E 73 61 66 65 00 00 )                // es.Unsafe..
  .custom /*0C000006:0A000005*/ instance void [netstandard/*23000001*/]System.Reflection.AssemblyMetadataAttribute/*01000006*/::.ctor(string,
                                                                                                                                      string) /* 0A000005 */ = ( 01 00 15 2E 4E 45 54 46 72 61 6D 65 77 6F 72 6B   // ....NETFramework
                                                                                                                                                                 41 73 73 65 6D 62 6C 79 00 00 00 )                // Assembly...
  .custom /*0C000007:0A000005*/ instance void [netstandard/*23000001*/]System.Reflection.AssemblyMetadataAttribute/*01000006*/::.ctor(string,
                                                                                                                                      string) /* 0A000005 */ = ( 01 00 0B 53 65 72 76 69 63 65 61 62 6C 65 04 54   // ...Serviceable.T
                                                                                                                                                                 72 75 65 00 00 )                                  // rue..
  .custom /*0C000008:0A000005*/ instance void [netstandard/*23000001*/]System.Reflection.AssemblyMetadataAttribute/*01000006*/::.ctor(string,
                                                                                                                                      string) /* 0A000005 */ = ( 01 00 0B 50 72 65 66 65 72 49 6E 62 6F 78 04 54   // ...PreferInbox.T
                                                                                                                                                                 72 75 65 00 00 )                                  // rue..
  .custom /*0C000009:0A000006*/ instance void [netstandard/*23000001*/]System.Reflection.AssemblyCompanyAttribute/*01000007*/::.ctor(string) /* 0A000006 */ = ( 01 00 15 4D 69 63 72 6F 73 6F 66 74 20 43 6F 72   // ...Microsoft Cor
                                                                                                                                                                70 6F 72 61 74 69 6F 6E 00 00 )                   // poration..
  .custom /*0C00000A:0A000007*/ instance void [netstandard/*23000001*/]System.Reflection.AssemblyCopyrightAttribute/*01000008*/::.ctor(string) /* 0A000007 */ = ( 01 00 2E C2 A9 20 4D 69 63 72 6F 73 6F 66 74 20   // ..... Microsoft 
                                                                                                                                                                  43 6F 72 70 6F 72 61 74 69 6F 6E 2E 20 41 6C 6C   // Corporation. All
                                                                                                                                                                  20 72 69 67 68 74 73 20 72 65 73 65 72 76 65 64   //  rights reserved
                                                                                                                                                                  2E 00 00 )                                        // ...
  .custom /*0C00000B:0A000008*/ instance void [netstandard/*23000001*/]System.Reflection.AssemblyDescriptionAttribute/*01000009*/::.ctor(string) /* 0A000008 */ = ( 01 00 26 53 79 73 74 65 6D 2E 52 75 6E 74 69 6D   // ..&System.Runtim
                                                                                                                                                                    65 2E 43 6F 6D 70 69 6C 65 72 53 65 72 76 69 63   // e.CompilerServic
                                                                                                                                                                    65 73 2E 55 6E 73 61 66 65 00 00 )                // es.Unsafe..
  .custom /*0C00000C:0A000009*/ instance void [netstandard/*23000001*/]System.Reflection.AssemblyFileVersionAttribute/*0100000A*/::.ctor(string) /* 0A000009 */ = ( 01 00 0E 34 2E 37 30 30 2E 31 39 2E 34 36 32 31   // ...4.700.19.4621
                                                                                                                                                                    34 00 00 )                                        // 4..
  .custom /*0C00000D:0A00000A*/ instance void [netstandard/*23000001*/]System.Reflection.AssemblyInformationalVersionAttribute/*0100000B*/::.ctor(string) /* 0A00000A */ = ( 01 00 2E 33 2E 30 2E 30 2B 34 61 63 34 63 30 33   // ...3.0.0+4ac4c03
                                                                                                                                                                             36 37 30 30 33 66 65 33 39 37 33 61 33 36 34 38   // 67003fe3973a3648
                                                                                                                                                                             65 62 30 37 31 35 64 64 62 30 65 33 62 62 63 65   // eb0715ddb0e3bbce
                                                                                                                                                                             61 00 00 )                                        // a..
  .custom /*0C00000E:0A00000B*/ instance void [netstandard/*23000001*/]System.Reflection.AssemblyProductAttribute/*0100000C*/::.ctor(string) /* 0A00000B */ = ( 01 00 15 4D 69 63 72 6F 73 6F 66 74 C2 AE 20 2E   // ...Microsoft.. .
                                                                                                                                                                4E 45 54 20 43 6F 72 65 00 00 )                   // NET Core..
  .custom /*0C00000F:0A00000C*/ instance void [netstandard/*23000001*/]System.Reflection.AssemblyTitleAttribute/*0100000D*/::.ctor(string) /* 0A00000C */ = ( 01 00 26 53 79 73 74 65 6D 2E 52 75 6E 74 69 6D   // ..&System.Runtim
                                                                                                                                                              65 2E 43 6F 6D 70 69 6C 65 72 53 65 72 76 69 63   // e.CompilerServic
                                                                                                                                                              65 73 2E 55 6E 73 61 66 65 00 00 )                // es.Unsafe..
  .custom /*0C000010:0A00000D*/ instance void [netstandard/*23000001*/]System.Runtime.CompilerServices.ReferenceAssemblyAttribute/*0100000E*/::.ctor() /* 0A00000D */ = ( 01 00 00 00 ) 
  .permissionset reqmin
             = {[netstandard/*23000001*/]System.Security.Permissions.SecurityPermissionAttribute/*01000010*/ = {property bool 'SkipVerification' = bool(true)}}
  .publickey = (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00   // .$..............
                00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00   // .$..RSA1........
                07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D   // ...W............
                E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E   // ...j.....vl.L...
                B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90   // .;.........6.!..
                0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F   // .r<......w....wO
                29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1   // ).2.......!.....
                64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D   // d\L.....(]b,.e,.
                FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D   // ..=t]o-..~^....=
                26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 ) // &...Ce. m..4MZ..
  .hash algorithm 0x00008004
  .ver 4:0:5:0
}
.module System.Runtime.CompilerServices.Unsafe.dll
// MVID: {a1d8c90b-737e-4b5a-be10-3d9098363e51}
.custom /*0C000001:0A00000F*/ instance void [netstandard/*23000001*/]System.Security.UnverifiableCodeAttribute/*01000011*/::.ctor() /* 0A00000F */ = ( 01 00 00 00 ) 
.imagebase 0x10000000
.file alignment 0x00000200
.stackreserve 0x00100000
.subsystem 0x0003       // WINDOWS_CUI
.corflags 0x00000009    //  ILONLY
// Image base: 0x00007F88741FE000


// =============== CLASS MEMBERS DECLARATION ===================

.class /*02000002*/ private auto ansi sealed beforefieldinit Microsoft.CodeAnalysis.EmbeddedAttribute
       extends [netstandard/*23000001*/]System.Attribute/*01000013*/
{
  .custom /*0C000011:0A000010*/ instance void [netstandard/*23000001*/]System.Runtime.CompilerServices.CompilerGeneratedAttribute/*01000012*/::.ctor() /* 0A000010 */ = ( 01 00 00 00 ) 
  .custom /*0C000012:06000001*/ instance void Microsoft.CodeAnalysis.EmbeddedAttribute/*02000002*/::.ctor() /* 06000001 */ = ( 01 00 00 00 ) 
  .method /*06000001*/ public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x2050
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  /* 02   |                  */ ldarg.0
    IL_0001:  /* 28   | (0A)000011       */ call       instance void [netstandard/*23000001*/]System.Attribute/*01000013*/::.ctor() /* 0A000011 */
    IL_0006:  /* 2A   |                  */ ret
  } // end of method EmbeddedAttribute::.ctor

} // end of class Microsoft.CodeAnalysis.EmbeddedAttribute

.class /*02000003*/ private auto ansi sealed beforefieldinit System.Runtime.CompilerServices.IsReadOnlyAttribute
       extends [netstandard/*23000001*/]System.Attribute/*01000013*/
{
  .custom /*0C000013:0A000010*/ instance void [netstandard/*23000001*/]System.Runtime.CompilerServices.CompilerGeneratedAttribute/*01000012*/::.ctor() /* 0A000010 */ = ( 01 00 00 00 ) 
  .custom /*0C000014:06000001*/ instance void Microsoft.CodeAnalysis.EmbeddedAttribute/*02000002*/::.ctor() /* 06000001 */ = ( 01 00 00 00 ) 
  .method /*06000002*/ public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x2058
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  /* 02   |                  */ ldarg.0
    IL_0001:  /* 28   | (0A)000011       */ call       instance void [netstandard/*23000001*/]System.Attribute/*01000013*/::.ctor() /* 0A000011 */
    IL_0006:  /* 2A   |                  */ ret
  } // end of method IsReadOnlyAttribute::.ctor

} // end of class System.Runtime.CompilerServices.IsReadOnlyAttribute

.class /*02000004*/ public abstract auto ansi sealed beforefieldinit System.Runtime.CompilerServices.Unsafe
       extends [netstandard/*23000001*/]System.Object/*01000014*/
{
  .method /*06000003*/ public hidebysig static 
          !!T&  AddByteOffset<T>(!!T& source,
                                 native int byteOffset) cil managed
  // SIG: 10 01 02 10 1E 00 10 1E 00 18
  {
    // Method begins at RVA 0x2060
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Unsafe::AddByteOffset

  .method /*06000004*/ public hidebysig static 
          void*  Add<T>(void* source,
                        int32 elementOffset) cil managed
  // SIG: 10 01 02 0F 01 0F 01 08
  {
    // Method begins at RVA 0x2063
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Unsafe::Add

  .method /*06000005*/ public hidebysig static 
          !!T&  Add<T>(!!T& source,
                       int32 elementOffset) cil managed
  // SIG: 10 01 02 10 1E 00 10 1E 00 08
  {
    // Method begins at RVA 0x2066
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Unsafe::Add

  .method /*06000006*/ public hidebysig static 
          !!T&  Add<T>(!!T& source,
                       native int elementOffset) cil managed
  // SIG: 10 01 02 10 1E 00 10 1E 00 18
  {
    // Method begins at RVA 0x2069
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Unsafe::Add

  .method /*06000007*/ public hidebysig static 
          bool  AreSame<T>(!!T& left,
                           !!T& right) cil managed
  // SIG: 10 01 02 02 10 1E 00 10 1E 00
  {
    // Method begins at RVA 0x206c
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Unsafe::AreSame

  .method /*06000008*/ public hidebysig static 
          void*  AsPointer<T>(!!T& 'value') cil managed
  // SIG: 10 01 01 0F 01 10 1E 00
  {
    // Method begins at RVA 0x206f
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Unsafe::AsPointer

  .method /*06000009*/ public hidebysig static 
          !!T&  AsRef<T>(void* source) cil managed
  // SIG: 10 01 01 10 1E 00 0F 01
  {
    // Method begins at RVA 0x2072
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Unsafe::AsRef

  .method /*0600000A*/ public hidebysig static 
          !!T&  AsRef<T>([in] !!T& source) cil managed
  // SIG: 10 01 01 10 1E 00 10 1E 00
  {
    .param [1]/*0800000D*/ 
    .custom /*0C000015:06000002*/ instance void System.Runtime.CompilerServices.IsReadOnlyAttribute/*02000003*/::.ctor() /* 06000002 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x2075
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Unsafe::AsRef

  .method /*0600000B*/ public hidebysig static 
          !!T  As<class T>(object o) cil managed
  // SIG: 10 01 01 1E 00 1C
  {
    // Method begins at RVA 0x2078
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Unsafe::As

  .method /*0600000C*/ public hidebysig static 
          !!TTo&  As<TFrom,TTo>(!!TFrom& source) cil managed
  // SIG: 10 02 01 10 1E 01 10 1E 00
  {
    // Method begins at RVA 0x207b
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Unsafe::As

  .method /*0600000D*/ public hidebysig static 
          native int  ByteOffset<T>(!!T& origin,
                                    !!T& target) cil managed
  // SIG: 10 01 02 18 10 1E 00 10 1E 00
  {
    // Method begins at RVA 0x207e
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Unsafe::ByteOffset

  .method /*0600000E*/ public hidebysig static 
          void  CopyBlock(uint8& destination,
                          uint8& source,
                          uint32 byteCount) cil managed
  // SIG: 00 03 01 10 05 10 05 09
  {
    // Method begins at RVA 0x2081
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Unsafe::CopyBlock

  .method /*0600000F*/ public hidebysig static 
          void  CopyBlock(void* destination,
                          void* source,
                          uint32 byteCount) cil managed
  // SIG: 00 03 01 0F 01 0F 01 09
  {
    // Method begins at RVA 0x2083
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Unsafe::CopyBlock

  .method /*06000010*/ public hidebysig static 
          void  CopyBlockUnaligned(uint8& destination,
                                   uint8& source,
                                   uint32 byteCount) cil managed
  // SIG: 00 03 01 10 05 10 05 09
  {
    // Method begins at RVA 0x2085
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Unsafe::CopyBlockUnaligned

  .method /*06000011*/ public hidebysig static 
          void  CopyBlockUnaligned(void* destination,
                                   void* source,
                                   uint32 byteCount) cil managed
  // SIG: 00 03 01 0F 01 0F 01 09
  {
    // Method begins at RVA 0x2087
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Unsafe::CopyBlockUnaligned

  .method /*06000012*/ public hidebysig static 
          void  Copy<T>(void* destination,
                        !!T& source) cil managed
  // SIG: 10 01 02 01 0F 01 10 1E 00
  {
    // Method begins at RVA 0x2089
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Unsafe::Copy

  .method /*06000013*/ public hidebysig static 
          void  Copy<T>(!!T& destination,
                        void* source) cil managed
  // SIG: 10 01 02 01 10 1E 00 0F 01
  {
    // Method begins at RVA 0x208b
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Unsafe::Copy

  .method /*06000014*/ public hidebysig static 
          void  InitBlock(uint8& startAddress,
                          uint8 'value',
                          uint32 byteCount) cil managed
  // SIG: 00 03 01 10 05 05 09
  {
    // Method begins at RVA 0x208d
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Unsafe::InitBlock

  .method /*06000015*/ public hidebysig static 
          void  InitBlock(void* startAddress,
                          uint8 'value',
                          uint32 byteCount) cil managed
  // SIG: 00 03 01 0F 01 05 09
  {
    // Method begins at RVA 0x208f
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Unsafe::InitBlock

  .method /*06000016*/ public hidebysig static 
          void  InitBlockUnaligned(uint8& startAddress,
                                   uint8 'value',
                                   uint32 byteCount) cil managed
  // SIG: 00 03 01 10 05 05 09
  {
    // Method begins at RVA 0x2091
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Unsafe::InitBlockUnaligned

  .method /*06000017*/ public hidebysig static 
          void  InitBlockUnaligned(void* startAddress,
                                   uint8 'value',
                                   uint32 byteCount) cil managed
  // SIG: 00 03 01 0F 01 05 09
  {
    // Method begins at RVA 0x2093
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Unsafe::InitBlockUnaligned

  .method /*06000018*/ public hidebysig static 
          bool  IsAddressGreaterThan<T>(!!T& left,
                                        !!T& right) cil managed
  // SIG: 10 01 02 02 10 1E 00 10 1E 00
  {
    // Method begins at RVA 0x2095
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Unsafe::IsAddressGreaterThan

  .method /*06000019*/ public hidebysig static 
          bool  IsAddressLessThan<T>(!!T& left,
                                     !!T& right) cil managed
  // SIG: 10 01 02 02 10 1E 00 10 1E 00
  {
    // Method begins at RVA 0x2098
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Unsafe::IsAddressLessThan

  .method /*0600001A*/ public hidebysig static 
          !!T  ReadUnaligned<T>(uint8& source) cil managed
  // SIG: 10 01 01 1E 00 10 05
  {
    // Method begins at RVA 0x209b
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Unsafe::ReadUnaligned

  .method /*0600001B*/ public hidebysig static 
          !!T  ReadUnaligned<T>(void* source) cil managed
  // SIG: 10 01 01 1E 00 0F 01
  {
    // Method begins at RVA 0x209e
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Unsafe::ReadUnaligned

  .method /*0600001C*/ public hidebysig static 
          !!T  Read<T>(void* source) cil managed
  // SIG: 10 01 01 1E 00 0F 01
  {
    // Method begins at RVA 0x20a1
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Unsafe::Read

  .method /*0600001D*/ public hidebysig static 
          int32  SizeOf<T>() cil managed
  // SIG: 10 01 00 08
  {
    // Method begins at RVA 0x20a4
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Unsafe::SizeOf

  .method /*0600001E*/ public hidebysig static 
          !!T&  SubtractByteOffset<T>(!!T& source,
                                      native int byteOffset) cil managed
  // SIG: 10 01 02 10 1E 00 10 1E 00 18
  {
    // Method begins at RVA 0x20a7
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Unsafe::SubtractByteOffset

  .method /*0600001F*/ public hidebysig static 
          void*  Subtract<T>(void* source,
                             int32 elementOffset) cil managed
  // SIG: 10 01 02 0F 01 0F 01 08
  {
    // Method begins at RVA 0x20aa
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Unsafe::Subtract

  .method /*06000020*/ public hidebysig static 
          !!T&  Subtract<T>(!!T& source,
                            int32 elementOffset) cil managed
  // SIG: 10 01 02 10 1E 00 10 1E 00 08
  {
    // Method begins at RVA 0x20ad
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Unsafe::Subtract

  .method /*06000021*/ public hidebysig static 
          !!T&  Subtract<T>(!!T& source,
                            native int elementOffset) cil managed
  // SIG: 10 01 02 10 1E 00 10 1E 00 18
  {
    // Method begins at RVA 0x20b0
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Unsafe::Subtract

  .method /*06000022*/ public hidebysig static 
          !!T&  Unbox<valuetype .ctor ([netstandard/*23000001*/]System.ValueType/*01000015*/) T>(object 'box') cil managed
  // SIG: 10 01 01 10 1E 00 1C
  {
    // Method begins at RVA 0x20b3
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Unsafe::Unbox

  .method /*06000023*/ public hidebysig static 
          void  WriteUnaligned<T>(uint8& destination,
                                  !!T 'value') cil managed
  // SIG: 10 01 02 01 10 05 1E 00
  {
    // Method begins at RVA 0x20b6
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Unsafe::WriteUnaligned

  .method /*06000024*/ public hidebysig static 
          void  WriteUnaligned<T>(void* destination,
                                  !!T 'value') cil managed
  // SIG: 10 01 02 01 0F 01 1E 00
  {
    // Method begins at RVA 0x20b8
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Unsafe::WriteUnaligned

  .method /*06000025*/ public hidebysig static 
          void  Write<T>(void* destination,
                         !!T 'value') cil managed
  // SIG: 10 01 02 01 0F 01 1E 00
  {
    // Method begins at RVA 0x20ba
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Unsafe::Write

} // end of class System.Runtime.CompilerServices.Unsafe


// =============================================================

// *********** DISASSEMBLY COMPLETE ***********************
