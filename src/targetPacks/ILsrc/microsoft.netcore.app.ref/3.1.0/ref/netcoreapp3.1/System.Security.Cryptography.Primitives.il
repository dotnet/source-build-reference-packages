
//  Microsoft (R) .NET Framework IL Disassembler.  Version 4.5.30319.0


// ----- DOS Header:
// Magic:                      0x5a4d
// Bytes on last page:         0x0090
// Pages in file:              0x0003
// Relocations:                0x0000
// Size of header (paragraphs):0x0004
// Min extra paragraphs:       0x0000
// Max extra paragraphs:       0xffff
// Initial (relative) SS:      0x0000
// Initial SP:                 0x00b8
// Checksum:                   0x0000
// Initial IP:                 0x0000
// Initial (relative) CS:      0x0000
// File addr. of reloc table:  0x0040
// Overlay number:             0x0000
// OEM identifier:             0x0000
// OEM info:                   0x0000
// File addr. of COFF header:  0x0080
// ----- COFF/PE Headers:
// Signature:                  0x00004550
// ----- COFF Header:
// Machine:                    0x014c
// Number of sections:         0x0003
// Time-date stamp:            0xd7c760ed
// Ptr to symbol table:        0x00000000
// Number of symbols:          0x00000000
// Size of optional header:    0x00e0
// Characteristics:            0x2022
// ----- PE Optional Header (32 bit):
// Magic:                          0x010b
// Major linker version:           0x30
// Minor linker version:           0x00
// Size of code:                   0x00002a00
// Size of init.data:              0x00000800
// Size of uninit.data:            0x00000000
// Addr. of entry point:           0x000049a6
// Base of code:                   0x00002000
// Base of data:                   0x00006000
// Image base:                     0x10000000
// Section alignment:              0x00002000
// File alignment:                 0x00000200
// Major OS version:               0x0004
// Minor OS version:               0x0000
// Major image version:            0x0000
// Minor image version:            0x0000
// Major subsystem version:        0x0004
// Minor subsystem version:        0x0000
// Size of image:                  0x0000a000
// Size of headers:                0x00000200
// Checksum:                       0x00006ac4
// Subsystem:                      0x0003
// DLL characteristics:            0x8560
// Size of stack reserve:          0x00100000
// Size of stack commit:           0x00001000
// Size of heap reserve:           0x00100000
// Size of heap commit:            0x00001000
// Loader flags:                   0x00000000
// Directories:                    0x00000010
// 0x00000000 [0x00000000] address [size] of Export Directory:          
// 0x00004953 [0x0000004f] address [size] of Import Directory:          
// 0x00006000 [0x00000524] address [size] of Resource Directory:        
// 0x00000000 [0x00000000] address [size] of Exception Directory:       
// 0x00003400 [0x00002448] address [size] of Security Directory:        
// 0x00008000 [0x0000000c] address [size] of Base Relocation Table:     
// 0x00004844 [0x00000054] address [size] of Debug Directory:           
// 0x00000000 [0x00000000] address [size] of Architecture Specific:     
// 0x00000000 [0x00000000] address [size] of Global Pointer:            
// 0x00000000 [0x00000000] address [size] of TLS Directory:             
// 0x00000000 [0x00000000] address [size] of Load Config Directory:     
// 0x00000000 [0x00000000] address [size] of Bound Import Directory:    
// 0x00002000 [0x00000008] address [size] of Import Address Table:      
// 0x00000000 [0x00000000] address [size] of Delay Load IAT:            
// 0x00002008 [0x00000048] address [size] of CLR Header:                


// Image sections:
//              .text
//              0x000029ac Virtual Size
//              0x00002000 Virtual Address
//              0x00002a00 Size of Raw Data
//              0x00000200 Pointer to Raw Data
//              0x00000000 Pointer to Relocations
//              0x00000000 Pointer to Linenumbers
//                  0x0000 Number of Relocations
//                  0x0000 Number of Linenumbers
//              0x60000020 Characteristics
//                         CNT_CODE
//                         MEM_EXECUTE
//                         MEM_READ

//              .rsrc
//              0x00000524 Virtual Size
//              0x00006000 Virtual Address
//              0x00000600 Size of Raw Data
//              0x00002c00 Pointer to Raw Data
//              0x00000000 Pointer to Relocations
//              0x00000000 Pointer to Linenumbers
//                  0x0000 Number of Relocations
//                  0x0000 Number of Linenumbers
//              0x40000040 Characteristics
//                         CNT_INITIALIZED_DATA
//                         MEM_READ

//              .reloc
//              0x0000000c Virtual Size
//              0x00008000 Virtual Address
//              0x00000200 Size of Raw Data
//              0x00003200 Pointer to Raw Data
//              0x00000000 Pointer to Relocations
//              0x00000000 Pointer to Linenumbers
//                  0x0000 Number of Relocations
//                  0x0000 Number of Linenumbers
//              0x42000040 Characteristics
//                         CNT_INITIALIZED_DATA
//                         MEM_DISCARDABLE
//                         MEM_READ

// Base Relocation Table
//              0x00004000 Page RVA
//              0x0000000c Block Size
//              0x00000002 Number of Entries
//              Entry 1: Type 0x3 Offset 0x000009a8
//              Entry 2: Type 0x0 Offset 0x00000000

// Import Address Table
//     DLL : mscoree.dll
//              0x00002000 Import Address Table
//              0x00004995 Import Name Table
//              0          Time Date Stamp
//              0          Index of First Forwarder Reference
//
//              0x0000  _CorDllMain

// Delay Load Import Address Table
// No data.

// Entry point code:
//FF 25 00 20 00 10 


// ----- CLR Header:
// Header size:                        0x00000048
// Major runtime version:              0x0002
// Minor runtime version:              0x0005
// 0x00002228 [0x0000259c] address [size] of Metadata Directory:        
// Flags:                              0x00000009
// Entry point token:                  0x00000000
// 0x00000000 [0x00000000] address [size] of Resources Directory:       
// 0x000047c4 [0x00000080] address [size] of Strong Name Signature:     
// 0x00000000 [0x00000000] address [size] of CodeManager Table:         
// 0x00000000 [0x00000000] address [size] of VTableFixups Directory:    
// 0x00000000 [0x00000000] address [size] of Export Address Table:      
// 0x00000000 [0x00000000] address [size] of Precompile Header:         

// Metadata Header
//    Storage Signature:
//              0x424a5342 Signature
//                  0x0001 Major Version
//                  0x0001 Minor Version
//              0x00000000 Extra Data Offset
//              0x0000000c Version String Length
//              'v4.0.30319' Version String
//    Storage Header:
//                    0x00 Flags
//                  0x0005 Number of Streams
//    Stream 1:
//              0x0000006c Offset
//              0x00001394 Size
//              '#~' Name
//    Stream 2:
//              0x00001400 Offset
//              0x00000cd4 Size
//              '#Strings' Name
//    Stream 3:
//              0x000020d4 Offset
//              0x00000004 Size
//              '#US' Name
//    Stream 4:
//              0x000020d8 Offset
//              0x00000010 Size
//              '#GUID' Name
//    Stream 5:
//              0x000020e8 Offset
//              0x000004b4 Size
//              '#Blob' Name

//    Metadata Stream Header:
//              0x00000000 Reserved
//                    0x02 Major
//                    0x00 Minor
//                    0x00 Heaps
//                    0x01 Rid
//      0x0000008909a01f57 MaskValid
//      0x000016003301fa00 Sorted

// Code Manager Table:
//  default


// Export Address Table Jumps:
// No data.

// File size            : 22600
// PE header size       : 512 (496 used)    ( 2.27%)
// PE additional info   : 10859             (48.05%)
// Num.of PE sections   : 3
// CLR header size     : 72                 ( 0.32%)
// CLR meta-data size  : 9628               (42.60%)
// CLR additional info : 128                ( 0.57%)
// CLR method headers  : 146                ( 0.65%)
// Managed code         : 324               ( 1.43%)
// Data                 : 2048              ( 9.06%)
// Unaccounted          : -1117             (-4.94%)

// Num.of PE sections   : 3
//   .text    - 10752
//   .rsrc    - 1536
//   .reloc   - 512

// CLR meta-data size  : 9628
//   Module        -    1 (10 bytes)
//   TypeDef       -   17 (238 bytes)     1 interfaces, 0 explicit layout
//   TypeRef       -   37 (222 bytes)
//   MethodDef     -  159 (2226 bytes)    13 abstract, 0 native, 146 bodies
//   FieldDef      -   37 (222 bytes)     0 constant
//   MemberRef     -   19 (114 bytes)
//   ParamDef      -  154 (924 bytes)
//   Constant      -   17 (102 bytes)
//   CustomAttribute-   19 (114 bytes)
//   InterfaceImpl -    7 (28 bytes)
//   PropertyMap   -   10 (40 bytes)
//   Property      -   45 (270 bytes)
//   MethodSemantic-   58 (348 bytes)
//   TypeSpec      -    1 (2 bytes)
//   Assembly      -    1 (22 bytes)
//   AssemblyRef   -    1 (20 bytes)
//   ExportedType  -    1 (14 bytes)
//   Strings       -  3281 bytes
//   Blobs         -  1204 bytes
//   UserStrings   -     4 bytes
//   Guids         -    16 bytes
//   Uncategorized -   207 bytes

// CLR additional info : 128

// CLR method headers : 146
//   Num.of method bodies  - 146
//   Num.of fat headers    - 0
//   Num.of tiny headers   - 146

// Managed code : 324
//   Ave method size - 2
// Classes defined in this module:
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Class AsymmetricAlgorithm            (public) (abstract) (auto) (ansi) 
// Class CipherMode                     (public) (auto) (ansi) (sealed) 
// Class CryptographicOperations        (public) (abstract) (auto) (ansi) (sealed) 
// Class CryptographicUnexpectedOperationException (public) (auto) (ansi) 
// Class CryptoStream                   (public) (auto) (ansi) 
// Class CryptoStreamMode               (public) (auto) (ansi) (sealed) 
// Class HashAlgorithm                  (public) (abstract) (auto) (ansi) 
// Class HashAlgorithmName              (public) (sequential) (ansi) (sealed) 
// Class HMAC                           (public) (abstract) (auto) (ansi) 
// Interface ICryptoTransform               (public) (abstract) (auto) (ansi) 
// Class KeyedHashAlgorithm             (public) (abstract) (auto) (ansi) 
// Class KeySizes                       (public) (auto) (ansi) (sealed) 
// Class PaddingMode                    (public) (auto) (ansi) (sealed) 
// Class PbeEncryptionAlgorithm         (public) (auto) (ansi) (sealed) 
// Class PbeParameters                  (public) (auto) (ansi) (sealed) 
// Class SymmetricAlgorithm             (public) (abstract) (auto) (ansi) 
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


// Metadata version: v4.0.30319
.assembly extern /*23000001*/ System.Runtime
{
  .publickeytoken = (B0 3F 5F 7F 11 D5 0A 3A )                         // .?_....:
  .ver 4:2:2:0
}
.assembly /*20000001*/ noplatform System.Security.Cryptography.Primitives
{
  .custom /*0C000001:0A000001*/ instance void [System.Runtime/*23000001*/]System.Runtime.CompilerServices.CompilationRelaxationsAttribute/*01000001*/::.ctor(int32) /* 0A000001 */ = ( 01 00 08 00 00 00 00 00 ) 
  .custom /*0C000002:0A000002*/ instance void [System.Runtime/*23000001*/]System.Runtime.CompilerServices.RuntimeCompatibilityAttribute/*01000002*/::.ctor() /* 0A000002 */ = ( 01 00 01 00 54 02 16 57 72 61 70 4E 6F 6E 45 78   // ....T..WrapNonEx
                                                                                                                                                                                63 65 70 74 69 6F 6E 54 68 72 6F 77 73 01 )       // ceptionThrows.

  // --- The following custom attribute is added automatically, do not uncomment -------
  //  .custom /*0C000003:0A000003*/ instance void [System.Runtime/*23000001*/]System.Diagnostics.DebuggableAttribute/*01000003*/::.ctor(valuetype [System.Runtime/*23000001*/]System.Diagnostics.DebuggableAttribute/*01000003*//DebuggingModes/*01000004*/) /* 0A000003 */ = ( 01 00 02 00 00 00 00 00 ) 

  .custom /*0C000004:0A000004*/ instance void [System.Runtime/*23000001*/]System.Reflection.AssemblyDefaultAliasAttribute/*01000005*/::.ctor(string) /* 0A000004 */ = ( 01 00 27 53 79 73 74 65 6D 2E 53 65 63 75 72 69   // ..'System.Securi
                                                                                                                                                                        74 79 2E 43 72 79 70 74 6F 67 72 61 70 68 79 2E   // ty.Cryptography.
                                                                                                                                                                        50 72 69 6D 69 74 69 76 65 73 00 00 )             // Primitives..
  .custom /*0C000005:0A000005*/ instance void [System.Runtime/*23000001*/]System.Reflection.AssemblyMetadataAttribute/*01000006*/::.ctor(string,
                                                                                                                                         string) /* 0A000005 */ = ( 01 00 15 2E 4E 45 54 46 72 61 6D 65 77 6F 72 6B   // ....NETFramework
                                                                                                                                                                    41 73 73 65 6D 62 6C 79 00 00 00 )                // Assembly...
  .custom /*0C000006:0A000005*/ instance void [System.Runtime/*23000001*/]System.Reflection.AssemblyMetadataAttribute/*01000006*/::.ctor(string,
                                                                                                                                         string) /* 0A000005 */ = ( 01 00 0B 53 65 72 76 69 63 65 61 62 6C 65 04 54   // ...Serviceable.T
                                                                                                                                                                    72 75 65 00 00 )                                  // rue..
  .custom /*0C000007:0A000005*/ instance void [System.Runtime/*23000001*/]System.Reflection.AssemblyMetadataAttribute/*01000006*/::.ctor(string,
                                                                                                                                         string) /* 0A000005 */ = ( 01 00 0B 50 72 65 66 65 72 49 6E 62 6F 78 04 54   // ...PreferInbox.T
                                                                                                                                                                    72 75 65 00 00 )                                  // rue..
  .custom /*0C000008:0A000006*/ instance void [System.Runtime/*23000001*/]System.Reflection.AssemblyCompanyAttribute/*01000007*/::.ctor(string) /* 0A000006 */ = ( 01 00 15 4D 69 63 72 6F 73 6F 66 74 20 43 6F 72   // ...Microsoft Cor
                                                                                                                                                                   70 6F 72 61 74 69 6F 6E 00 00 )                   // poration..
  .custom /*0C000009:0A000007*/ instance void [System.Runtime/*23000001*/]System.Reflection.AssemblyCopyrightAttribute/*01000008*/::.ctor(string) /* 0A000007 */ = ( 01 00 2E C2 A9 20 4D 69 63 72 6F 73 6F 66 74 20   // ..... Microsoft 
                                                                                                                                                                     43 6F 72 70 6F 72 61 74 69 6F 6E 2E 20 41 6C 6C   // Corporation. All
                                                                                                                                                                     20 72 69 67 68 74 73 20 72 65 73 65 72 76 65 64   //  rights reserved
                                                                                                                                                                     2E 00 00 )                                        // ...
  .custom /*0C00000A:0A000008*/ instance void [System.Runtime/*23000001*/]System.Reflection.AssemblyDescriptionAttribute/*01000009*/::.ctor(string) /* 0A000008 */ = ( 01 00 27 53 79 73 74 65 6D 2E 53 65 63 75 72 69   // ..'System.Securi
                                                                                                                                                                       74 79 2E 43 72 79 70 74 6F 67 72 61 70 68 79 2E   // ty.Cryptography.
                                                                                                                                                                       50 72 69 6D 69 74 69 76 65 73 00 00 )             // Primitives..
  .custom /*0C00000B:0A000009*/ instance void [System.Runtime/*23000001*/]System.Reflection.AssemblyFileVersionAttribute/*0100000A*/::.ctor(string) /* 0A000009 */ = ( 01 00 0E 34 2E 37 30 30 2E 31 39 2E 35 36 34 30   // ...4.700.19.5640
                                                                                                                                                                       34 00 00 )                                        // 4..
  .custom /*0C00000C:0A00000A*/ instance void [System.Runtime/*23000001*/]System.Reflection.AssemblyInformationalVersionAttribute/*0100000B*/::.ctor(string) /* 0A00000A */ = ( 01 00 2E 33 2E 31 2E 30 2B 30 66 37 66 33 38 63   // ...3.1.0+0f7f38c
                                                                                                                                                                                34 66 64 33 32 33 62 32 36 64 61 31 30 63 63 65   // 4fd323b26da10cce
                                                                                                                                                                                39 35 66 38 35 37 66 37 37 66 30 66 30 39 62 34   // 95f857f77f0f09b4
                                                                                                                                                                                38 00 00 )                                        // 8..
  .custom /*0C00000D:0A00000B*/ instance void [System.Runtime/*23000001*/]System.Reflection.AssemblyProductAttribute/*0100000C*/::.ctor(string) /* 0A00000B */ = ( 01 00 15 4D 69 63 72 6F 73 6F 66 74 C2 AE 20 2E   // ...Microsoft.. .
                                                                                                                                                                   4E 45 54 20 43 6F 72 65 00 00 )                   // NET Core..
  .custom /*0C00000E:0A00000C*/ instance void [System.Runtime/*23000001*/]System.Reflection.AssemblyTitleAttribute/*0100000D*/::.ctor(string) /* 0A00000C */ = ( 01 00 27 53 79 73 74 65 6D 2E 53 65 63 75 72 69   // ..'System.Securi
                                                                                                                                                                 74 79 2E 43 72 79 70 74 6F 67 72 61 70 68 79 2E   // ty.Cryptography.
                                                                                                                                                                 50 72 69 6D 69 74 69 76 65 73 00 00 )             // Primitives..
  .custom /*0C00000F:0A00000D*/ instance void [System.Runtime/*23000001*/]System.Runtime.CompilerServices.ReferenceAssemblyAttribute/*0100000E*/::.ctor() /* 0A00000D */ = ( 01 00 00 00 ) 
  .custom /*0C000010:0A00000E*/ instance void [System.Runtime/*23000001*/]System.CLSCompliantAttribute/*0100000F*/::.ctor(bool) /* 0A00000E */ = ( 01 00 01 00 00 ) 
  .publickey = (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00   // .$..............
                00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00   // .$..RSA1........
                07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D   // ...W............
                E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E   // ...j.....vl.L...
                B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90   // .;.........6.!..
                0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F   // .r<......w....wO
                29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1   // ).2.......!.....
                64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D   // d\L.....(]b,.e,.
                FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D   // ..=t]o-..~^....=
                26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 ) // &...Ce. m..4MZ..
  .hash algorithm 0x00008004
  .ver 4:1:2:0
}
.class extern /*27000001*/ forwarder System.Security.Cryptography.CryptographicException
{
  .assembly extern System.Runtime /*23000001*/ 
}
.module System.Security.Cryptography.Primitives.dll
// MVID: {cee07643-31da-4d0e-adda-69922bebe7e6}
.imagebase 0x10000000
.file alignment 0x00000200
.stackreserve 0x00100000
.subsystem 0x0003       // WINDOWS_CUI
.corflags 0x00000009    //  ILONLY
// Image base: 0x00007F747D08F000


// =============== CLASS MEMBERS DECLARATION ===================

.class /*02000002*/ public abstract auto ansi beforefieldinit System.Security.Cryptography.AsymmetricAlgorithm
       extends [System.Runtime/*23000001*/]System.Object/*01000010*/
       implements [System.Runtime/*23000001*/]System.IDisposable/*01000011*/
{
  .field /*04000001*/ family int32 KeySizeValue
  .field /*04000002*/ family class System.Security.Cryptography.KeySizes/*0200000D*/[] LegalKeySizesValue
  .method /*06000001*/ family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x2050
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  /* 02   |                  */ ldarg.0
    IL_0001:  /* 28   | (0A)000011       */ call       instance void [System.Runtime/*23000001*/]System.Object/*01000010*/::.ctor() /* 0A000011 */
    IL_0006:  /* 2A   |                  */ ret
  } // end of method AsymmetricAlgorithm::.ctor

  .method /*06000002*/ public hidebysig newslot specialname virtual 
          instance string  get_KeyExchangeAlgorithm() cil managed
  // SIG: 20 00 0E
  {
    // Method begins at RVA 0x2058
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method AsymmetricAlgorithm::get_KeyExchangeAlgorithm

  .method /*06000003*/ public hidebysig newslot specialname virtual 
          instance int32  get_KeySize() cil managed
  // SIG: 20 00 08
  {
    // Method begins at RVA 0x205b
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method AsymmetricAlgorithm::get_KeySize

  .method /*06000004*/ public hidebysig newslot specialname virtual 
          instance void  set_KeySize(int32 'value') cil managed
  // SIG: 20 01 01 08
  {
    // Method begins at RVA 0x205e
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method AsymmetricAlgorithm::set_KeySize

  .method /*06000005*/ public hidebysig newslot specialname virtual 
          instance class System.Security.Cryptography.KeySizes/*0200000D*/[] 
          get_LegalKeySizes() cil managed
  // SIG: 20 00 1D 12 34
  {
    // Method begins at RVA 0x2060
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method AsymmetricAlgorithm::get_LegalKeySizes

  .method /*06000006*/ public hidebysig newslot specialname virtual 
          instance string  get_SignatureAlgorithm() cil managed
  // SIG: 20 00 0E
  {
    // Method begins at RVA 0x2063
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method AsymmetricAlgorithm::get_SignatureAlgorithm

  .method /*06000007*/ public hidebysig instance void 
          Clear() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x2066
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method AsymmetricAlgorithm::Clear

  .method /*06000008*/ public hidebysig static 
          class System.Security.Cryptography.AsymmetricAlgorithm/*02000002*/ 
          Create() cil managed
  // SIG: 00 00 12 08
  {
    // Method begins at RVA 0x2068
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method AsymmetricAlgorithm::Create

  .method /*06000009*/ public hidebysig static 
          class System.Security.Cryptography.AsymmetricAlgorithm/*02000002*/ 
          Create(string algName) cil managed
  // SIG: 00 01 12 08 0E
  {
    // Method begins at RVA 0x206b
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method AsymmetricAlgorithm::Create

  .method /*0600000A*/ public hidebysig newslot virtual final 
          instance void  Dispose() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x206e
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method AsymmetricAlgorithm::Dispose

  .method /*0600000B*/ family hidebysig newslot virtual 
          instance void  Dispose(bool disposing) cil managed
  // SIG: 20 01 01 02
  {
    // Method begins at RVA 0x2070
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method AsymmetricAlgorithm::Dispose

  .method /*0600000C*/ public hidebysig newslot virtual 
          instance uint8[]  ExportEncryptedPkcs8PrivateKey(valuetype [System.Runtime/*23000001*/]System.ReadOnlySpan`1/*01000012*/<uint8> passwordBytes,
                                                           class System.Security.Cryptography.PbeParameters/*02000010*/ pbeParameters) cil managed
  // SIG: 20 02 1D 05 15 11 49 01 05 12 40
  {
    // Method begins at RVA 0x2072
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method AsymmetricAlgorithm::ExportEncryptedPkcs8PrivateKey

  .method /*0600000D*/ public hidebysig newslot virtual 
          instance uint8[]  ExportEncryptedPkcs8PrivateKey(valuetype [System.Runtime/*23000001*/]System.ReadOnlySpan`1/*01000012*/<char> password,
                                                           class System.Security.Cryptography.PbeParameters/*02000010*/ pbeParameters) cil managed
  // SIG: 20 02 1D 05 15 11 49 01 03 12 40
  {
    // Method begins at RVA 0x2075
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method AsymmetricAlgorithm::ExportEncryptedPkcs8PrivateKey

  .method /*0600000E*/ public hidebysig newslot virtual 
          instance uint8[]  ExportPkcs8PrivateKey() cil managed
  // SIG: 20 00 1D 05
  {
    // Method begins at RVA 0x2078
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method AsymmetricAlgorithm::ExportPkcs8PrivateKey

  .method /*0600000F*/ public hidebysig newslot virtual 
          instance uint8[]  ExportSubjectPublicKeyInfo() cil managed
  // SIG: 20 00 1D 05
  {
    // Method begins at RVA 0x207b
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method AsymmetricAlgorithm::ExportSubjectPublicKeyInfo

  .method /*06000010*/ public hidebysig newslot virtual 
          instance void  FromXmlString(string xmlString) cil managed
  // SIG: 20 01 01 0E
  {
    // Method begins at RVA 0x207e
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method AsymmetricAlgorithm::FromXmlString

  .method /*06000011*/ public hidebysig newslot virtual 
          instance void  ImportEncryptedPkcs8PrivateKey(valuetype [System.Runtime/*23000001*/]System.ReadOnlySpan`1/*01000012*/<uint8> passwordBytes,
                                                        valuetype [System.Runtime/*23000001*/]System.ReadOnlySpan`1/*01000012*/<uint8> source,
                                                        [out] int32& bytesRead) cil managed
  // SIG: 20 03 01 15 11 49 01 05 15 11 49 01 05 10 08
  {
    // Method begins at RVA 0x2080
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method AsymmetricAlgorithm::ImportEncryptedPkcs8PrivateKey

  .method /*06000012*/ public hidebysig newslot virtual 
          instance void  ImportEncryptedPkcs8PrivateKey(valuetype [System.Runtime/*23000001*/]System.ReadOnlySpan`1/*01000012*/<char> password,
                                                        valuetype [System.Runtime/*23000001*/]System.ReadOnlySpan`1/*01000012*/<uint8> source,
                                                        [out] int32& bytesRead) cil managed
  // SIG: 20 03 01 15 11 49 01 03 15 11 49 01 05 10 08
  {
    // Method begins at RVA 0x2083
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method AsymmetricAlgorithm::ImportEncryptedPkcs8PrivateKey

  .method /*06000013*/ public hidebysig newslot virtual 
          instance void  ImportPkcs8PrivateKey(valuetype [System.Runtime/*23000001*/]System.ReadOnlySpan`1/*01000012*/<uint8> source,
                                               [out] int32& bytesRead) cil managed
  // SIG: 20 02 01 15 11 49 01 05 10 08
  {
    // Method begins at RVA 0x2086
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method AsymmetricAlgorithm::ImportPkcs8PrivateKey

  .method /*06000014*/ public hidebysig newslot virtual 
          instance void  ImportSubjectPublicKeyInfo(valuetype [System.Runtime/*23000001*/]System.ReadOnlySpan`1/*01000012*/<uint8> source,
                                                    [out] int32& bytesRead) cil managed
  // SIG: 20 02 01 15 11 49 01 05 10 08
  {
    // Method begins at RVA 0x2089
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method AsymmetricAlgorithm::ImportSubjectPublicKeyInfo

  .method /*06000015*/ public hidebysig newslot virtual 
          instance string  ToXmlString(bool includePrivateParameters) cil managed
  // SIG: 20 01 0E 02
  {
    // Method begins at RVA 0x208c
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method AsymmetricAlgorithm::ToXmlString

  .method /*06000016*/ public hidebysig newslot virtual 
          instance bool  TryExportEncryptedPkcs8PrivateKey(valuetype [System.Runtime/*23000001*/]System.ReadOnlySpan`1/*01000012*/<uint8> passwordBytes,
                                                           class System.Security.Cryptography.PbeParameters/*02000010*/ pbeParameters,
                                                           valuetype [System.Runtime/*23000001*/]System.Span`1/*01000013*/<uint8> destination,
                                                           [out] int32& bytesWritten) cil managed
  // SIG: 20 04 02 15 11 49 01 05 12 40 15 11 4D 01 05 10 08
  {
    // Method begins at RVA 0x208f
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method AsymmetricAlgorithm::TryExportEncryptedPkcs8PrivateKey

  .method /*06000017*/ public hidebysig newslot virtual 
          instance bool  TryExportEncryptedPkcs8PrivateKey(valuetype [System.Runtime/*23000001*/]System.ReadOnlySpan`1/*01000012*/<char> password,
                                                           class System.Security.Cryptography.PbeParameters/*02000010*/ pbeParameters,
                                                           valuetype [System.Runtime/*23000001*/]System.Span`1/*01000013*/<uint8> destination,
                                                           [out] int32& bytesWritten) cil managed
  // SIG: 20 04 02 15 11 49 01 03 12 40 15 11 4D 01 05 10 08
  {
    // Method begins at RVA 0x2092
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method AsymmetricAlgorithm::TryExportEncryptedPkcs8PrivateKey

  .method /*06000018*/ public hidebysig newslot virtual 
          instance bool  TryExportPkcs8PrivateKey(valuetype [System.Runtime/*23000001*/]System.Span`1/*01000013*/<uint8> destination,
                                                  [out] int32& bytesWritten) cil managed
  // SIG: 20 02 02 15 11 4D 01 05 10 08
  {
    // Method begins at RVA 0x2095
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method AsymmetricAlgorithm::TryExportPkcs8PrivateKey

  .method /*06000019*/ public hidebysig newslot virtual 
          instance bool  TryExportSubjectPublicKeyInfo(valuetype [System.Runtime/*23000001*/]System.Span`1/*01000013*/<uint8> destination,
                                                       [out] int32& bytesWritten) cil managed
  // SIG: 20 02 02 15 11 4D 01 05 10 08
  {
    // Method begins at RVA 0x2098
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method AsymmetricAlgorithm::TryExportSubjectPublicKeyInfo

  .property /*17000001*/ instance string KeyExchangeAlgorithm()
  {
    .get instance string System.Security.Cryptography.AsymmetricAlgorithm/*02000002*/::get_KeyExchangeAlgorithm() /* 06000002 */
  } // end of property AsymmetricAlgorithm::KeyExchangeAlgorithm
  .property /*17000002*/ instance int32 KeySize()
  {
    .get instance int32 System.Security.Cryptography.AsymmetricAlgorithm/*02000002*/::get_KeySize() /* 06000003 */
    .set instance void System.Security.Cryptography.AsymmetricAlgorithm/*02000002*/::set_KeySize(int32) /* 06000004 */
  } // end of property AsymmetricAlgorithm::KeySize
  .property /*17000003*/ instance class System.Security.Cryptography.KeySizes/*0200000D*/[]
          LegalKeySizes()
  {
    .get instance class System.Security.Cryptography.KeySizes/*0200000D*/[] System.Security.Cryptography.AsymmetricAlgorithm/*02000002*/::get_LegalKeySizes() /* 06000005 */
  } // end of property AsymmetricAlgorithm::LegalKeySizes
  .property /*17000004*/ instance string SignatureAlgorithm()
  {
    .get instance string System.Security.Cryptography.AsymmetricAlgorithm/*02000002*/::get_SignatureAlgorithm() /* 06000006 */
  } // end of property AsymmetricAlgorithm::SignatureAlgorithm
} // end of class System.Security.Cryptography.AsymmetricAlgorithm

.class /*02000003*/ public auto ansi sealed System.Security.Cryptography.CipherMode
       extends [System.Runtime/*23000001*/]System.Enum/*01000014*/
{
  .field /*04000003*/ public specialname rtspecialname int32 value__
  .field /*04000004*/ public static literal valuetype System.Security.Cryptography.CipherMode/*02000003*/ CBC = int32(0x00000001)
  .field /*04000005*/ public static literal valuetype System.Security.Cryptography.CipherMode/*02000003*/ ECB = int32(0x00000002)
  .field /*04000006*/ public static literal valuetype System.Security.Cryptography.CipherMode/*02000003*/ OFB = int32(0x00000003)
  .custom /*0C000011:0A00000F*/ instance void [System.Runtime/*23000001*/]System.ComponentModel.EditorBrowsableAttribute/*01000016*/::.ctor(valuetype [System.Runtime/*23000001*/]System.ComponentModel.EditorBrowsableState/*01000015*/) /* 0A00000F */ = ( 01 00 01 00 00 00 00 00 ) 
  .field /*04000007*/ public static literal valuetype System.Security.Cryptography.CipherMode/*02000003*/ CFB = int32(0x00000004)
  .custom /*0C000012:0A00000F*/ instance void [System.Runtime/*23000001*/]System.ComponentModel.EditorBrowsableAttribute/*01000016*/::.ctor(valuetype [System.Runtime/*23000001*/]System.ComponentModel.EditorBrowsableState/*01000015*/) /* 0A00000F */ = ( 01 00 01 00 00 00 00 00 ) 
  .field /*04000008*/ public static literal valuetype System.Security.Cryptography.CipherMode/*02000003*/ CTS = int32(0x00000005)
} // end of class System.Security.Cryptography.CipherMode

.class /*02000004*/ public abstract auto ansi sealed beforefieldinit System.Security.Cryptography.CryptographicOperations
       extends [System.Runtime/*23000001*/]System.Object/*01000010*/
{
  .method /*0600001A*/ public hidebysig static 
          bool  FixedTimeEquals(valuetype [System.Runtime/*23000001*/]System.ReadOnlySpan`1/*01000012*/<uint8> left,
                                valuetype [System.Runtime/*23000001*/]System.ReadOnlySpan`1/*01000012*/<uint8> right) cil managed
  // SIG: 00 02 02 15 11 49 01 05 15 11 49 01 05
  {
    // Method begins at RVA 0x209b
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method CryptographicOperations::FixedTimeEquals

  .method /*0600001B*/ public hidebysig static 
          void  ZeroMemory(valuetype [System.Runtime/*23000001*/]System.Span`1/*01000013*/<uint8> buffer) cil managed
  // SIG: 00 01 01 15 11 4D 01 05
  {
    // Method begins at RVA 0x209e
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method CryptographicOperations::ZeroMemory

} // end of class System.Security.Cryptography.CryptographicOperations

.class /*02000005*/ public auto ansi beforefieldinit System.Security.Cryptography.CryptographicUnexpectedOperationException
       extends [System.Runtime/*23000001*/]System.Security.Cryptography.CryptographicException/*01000017*/
{
  .method /*0600001C*/ public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x20a0
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  /* 02   |                  */ ldarg.0
    IL_0001:  /* 28   | (0A)000012       */ call       instance void [System.Runtime/*23000001*/]System.Security.Cryptography.CryptographicException/*01000017*/::.ctor() /* 0A000012 */
    IL_0006:  /* 2A   |                  */ ret
  } // end of method CryptographicUnexpectedOperationException::.ctor

  .method /*0600001D*/ family hidebysig specialname rtspecialname 
          instance void  .ctor(class [System.Runtime/*23000001*/]System.Runtime.Serialization.SerializationInfo/*01000018*/ info,
                               valuetype [System.Runtime/*23000001*/]System.Runtime.Serialization.StreamingContext/*01000019*/ context) cil managed
  // SIG: 20 02 01 12 61 11 65
  {
    // Method begins at RVA 0x20a8
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  /* 02   |                  */ ldarg.0
    IL_0001:  /* 28   | (0A)000012       */ call       instance void [System.Runtime/*23000001*/]System.Security.Cryptography.CryptographicException/*01000017*/::.ctor() /* 0A000012 */
    IL_0006:  /* 2A   |                  */ ret
  } // end of method CryptographicUnexpectedOperationException::.ctor

  .method /*0600001E*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(string message) cil managed
  // SIG: 20 01 01 0E
  {
    // Method begins at RVA 0x20b0
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  /* 02   |                  */ ldarg.0
    IL_0001:  /* 28   | (0A)000012       */ call       instance void [System.Runtime/*23000001*/]System.Security.Cryptography.CryptographicException/*01000017*/::.ctor() /* 0A000012 */
    IL_0006:  /* 2A   |                  */ ret
  } // end of method CryptographicUnexpectedOperationException::.ctor

  .method /*0600001F*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(string message,
                               class [System.Runtime/*23000001*/]System.Exception/*0100001A*/ inner) cil managed
  // SIG: 20 02 01 0E 12 69
  {
    // Method begins at RVA 0x20b8
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  /* 02   |                  */ ldarg.0
    IL_0001:  /* 28   | (0A)000012       */ call       instance void [System.Runtime/*23000001*/]System.Security.Cryptography.CryptographicException/*01000017*/::.ctor() /* 0A000012 */
    IL_0006:  /* 2A   |                  */ ret
  } // end of method CryptographicUnexpectedOperationException::.ctor

  .method /*06000020*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(string format,
                               string insert) cil managed
  // SIG: 20 02 01 0E 0E
  {
    // Method begins at RVA 0x20c0
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  /* 02   |                  */ ldarg.0
    IL_0001:  /* 28   | (0A)000012       */ call       instance void [System.Runtime/*23000001*/]System.Security.Cryptography.CryptographicException/*01000017*/::.ctor() /* 0A000012 */
    IL_0006:  /* 2A   |                  */ ret
  } // end of method CryptographicUnexpectedOperationException::.ctor

} // end of class System.Security.Cryptography.CryptographicUnexpectedOperationException

.class /*02000006*/ public auto ansi beforefieldinit System.Security.Cryptography.CryptoStream
       extends [System.Runtime/*23000001*/]System.IO.Stream/*0100001B*/
       implements [System.Runtime/*23000001*/]System.IDisposable/*01000011*/
{
  .method /*06000021*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(class [System.Runtime/*23000001*/]System.IO.Stream/*0100001B*/ 'stream',
                               class System.Security.Cryptography.ICryptoTransform/*0200000B*/ transform,
                               valuetype System.Security.Cryptography.CryptoStreamMode/*02000007*/ mode) cil managed
  // SIG: 20 03 01 12 6D 12 2C 11 1C
  {
    // Method begins at RVA 0x20c8
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  /* 02   |                  */ ldarg.0
    IL_0001:  /* 28   | (0A)000013       */ call       instance void [System.Runtime/*23000001*/]System.IO.Stream/*0100001B*/::.ctor() /* 0A000013 */
    IL_0006:  /* 2A   |                  */ ret
  } // end of method CryptoStream::.ctor

  .method /*06000022*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(class [System.Runtime/*23000001*/]System.IO.Stream/*0100001B*/ 'stream',
                               class System.Security.Cryptography.ICryptoTransform/*0200000B*/ transform,
                               valuetype System.Security.Cryptography.CryptoStreamMode/*02000007*/ mode,
                               bool leaveOpen) cil managed
  // SIG: 20 04 01 12 6D 12 2C 11 1C 02
  {
    // Method begins at RVA 0x20d0
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  /* 02   |                  */ ldarg.0
    IL_0001:  /* 28   | (0A)000013       */ call       instance void [System.Runtime/*23000001*/]System.IO.Stream/*0100001B*/::.ctor() /* 0A000013 */
    IL_0006:  /* 2A   |                  */ ret
  } // end of method CryptoStream::.ctor

  .method /*06000023*/ public hidebysig specialname virtual 
          instance bool  get_CanRead() cil managed
  // SIG: 20 00 02
  {
    // Method begins at RVA 0x20d8
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method CryptoStream::get_CanRead

  .method /*06000024*/ public hidebysig specialname virtual 
          instance bool  get_CanSeek() cil managed
  // SIG: 20 00 02
  {
    // Method begins at RVA 0x20db
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method CryptoStream::get_CanSeek

  .method /*06000025*/ public hidebysig specialname virtual 
          instance bool  get_CanWrite() cil managed
  // SIG: 20 00 02
  {
    // Method begins at RVA 0x20de
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method CryptoStream::get_CanWrite

  .method /*06000026*/ public hidebysig specialname 
          instance bool  get_HasFlushedFinalBlock() cil managed
  // SIG: 20 00 02
  {
    // Method begins at RVA 0x20e1
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method CryptoStream::get_HasFlushedFinalBlock

  .method /*06000027*/ public hidebysig specialname virtual 
          instance int64  get_Length() cil managed
  // SIG: 20 00 0A
  {
    // Method begins at RVA 0x20e4
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method CryptoStream::get_Length

  .method /*06000028*/ public hidebysig specialname virtual 
          instance int64  get_Position() cil managed
  // SIG: 20 00 0A
  {
    // Method begins at RVA 0x20e7
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method CryptoStream::get_Position

  .method /*06000029*/ public hidebysig specialname virtual 
          instance void  set_Position(int64 'value') cil managed
  // SIG: 20 01 01 0A
  {
    // Method begins at RVA 0x20ea
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method CryptoStream::set_Position

  .method /*0600002A*/ public hidebysig virtual 
          instance class [System.Runtime/*23000001*/]System.IAsyncResult/*0100001C*/ 
          BeginRead(uint8[] buffer,
                    int32 offset,
                    int32 count,
                    class [System.Runtime/*23000001*/]System.AsyncCallback/*0100001D*/ callback,
                    object state) cil managed
  // SIG: 20 05 12 71 1D 05 08 08 12 75 1C
  {
    // Method begins at RVA 0x20ec
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method CryptoStream::BeginRead

  .method /*0600002B*/ public hidebysig virtual 
          instance class [System.Runtime/*23000001*/]System.IAsyncResult/*0100001C*/ 
          BeginWrite(uint8[] buffer,
                     int32 offset,
                     int32 count,
                     class [System.Runtime/*23000001*/]System.AsyncCallback/*0100001D*/ callback,
                     object state) cil managed
  // SIG: 20 05 12 71 1D 05 08 08 12 75 1C
  {
    // Method begins at RVA 0x20ef
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method CryptoStream::BeginWrite

  .method /*0600002C*/ public hidebysig instance void 
          Clear() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x20f2
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method CryptoStream::Clear

  .method /*0600002D*/ family hidebysig virtual 
          instance void  Dispose(bool disposing) cil managed
  // SIG: 20 01 01 02
  {
    // Method begins at RVA 0x20f4
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method CryptoStream::Dispose

  .method /*0600002E*/ public hidebysig virtual 
          instance valuetype [System.Runtime/*23000001*/]System.Threading.Tasks.ValueTask/*0100001E*/ 
          DisposeAsync() cil managed
  // SIG: 20 00 11 79
  {
    // Method begins at RVA 0x20f6
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method CryptoStream::DisposeAsync

  .method /*0600002F*/ public hidebysig virtual 
          instance int32  EndRead(class [System.Runtime/*23000001*/]System.IAsyncResult/*0100001C*/ asyncResult) cil managed
  // SIG: 20 01 08 12 71
  {
    // Method begins at RVA 0x20f9
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method CryptoStream::EndRead

  .method /*06000030*/ public hidebysig virtual 
          instance void  EndWrite(class [System.Runtime/*23000001*/]System.IAsyncResult/*0100001C*/ asyncResult) cil managed
  // SIG: 20 01 01 12 71
  {
    // Method begins at RVA 0x20fc
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method CryptoStream::EndWrite

  .method /*06000031*/ public hidebysig virtual 
          instance void  Flush() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x20fe
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method CryptoStream::Flush

  .method /*06000032*/ public hidebysig virtual 
          instance class [System.Runtime/*23000001*/]System.Threading.Tasks.Task/*0100001F*/ 
          FlushAsync(valuetype [System.Runtime/*23000001*/]System.Threading.CancellationToken/*01000020*/ cancellationToken) cil managed
  // SIG: 20 01 12 7D 11 80 81
  {
    // Method begins at RVA 0x2100
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method CryptoStream::FlushAsync

  .method /*06000033*/ public hidebysig instance void 
          FlushFinalBlock() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x2103
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method CryptoStream::FlushFinalBlock

  .method /*06000034*/ public hidebysig virtual 
          instance int32  Read(uint8[] buffer,
                               int32 offset,
                               int32 count) cil managed
  // SIG: 20 03 08 1D 05 08 08
  {
    // Method begins at RVA 0x2105
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method CryptoStream::Read

  .method /*06000035*/ public hidebysig virtual 
          instance class [System.Runtime/*23000001*/]System.Threading.Tasks.Task`1/*01000021*/<int32> 
          ReadAsync(uint8[] buffer,
                    int32 offset,
                    int32 count,
                    valuetype [System.Runtime/*23000001*/]System.Threading.CancellationToken/*01000020*/ cancellationToken) cil managed
  // SIG: 20 04 15 12 80 85 01 08 1D 05 08 08 11 80 81
  {
    // Method begins at RVA 0x2108
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method CryptoStream::ReadAsync

  .method /*06000036*/ public hidebysig virtual 
          instance int32  ReadByte() cil managed
  // SIG: 20 00 08
  {
    // Method begins at RVA 0x210b
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method CryptoStream::ReadByte

  .method /*06000037*/ public hidebysig virtual 
          instance int64  Seek(int64 offset,
                               valuetype [System.Runtime/*23000001*/]System.IO.SeekOrigin/*01000022*/ origin) cil managed
  // SIG: 20 02 0A 0A 11 80 89
  {
    // Method begins at RVA 0x210e
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method CryptoStream::Seek

  .method /*06000038*/ public hidebysig virtual 
          instance void  SetLength(int64 'value') cil managed
  // SIG: 20 01 01 0A
  {
    // Method begins at RVA 0x2111
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method CryptoStream::SetLength

  .method /*06000039*/ public hidebysig virtual 
          instance void  Write(uint8[] buffer,
                               int32 offset,
                               int32 count) cil managed
  // SIG: 20 03 01 1D 05 08 08
  {
    // Method begins at RVA 0x2113
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method CryptoStream::Write

  .method /*0600003A*/ public hidebysig virtual 
          instance class [System.Runtime/*23000001*/]System.Threading.Tasks.Task/*0100001F*/ 
          WriteAsync(uint8[] buffer,
                     int32 offset,
                     int32 count,
                     valuetype [System.Runtime/*23000001*/]System.Threading.CancellationToken/*01000020*/ cancellationToken) cil managed
  // SIG: 20 04 12 7D 1D 05 08 08 11 80 81
  {
    // Method begins at RVA 0x2115
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method CryptoStream::WriteAsync

  .method /*0600003B*/ public hidebysig virtual 
          instance void  WriteByte(uint8 'value') cil managed
  // SIG: 20 01 01 05
  {
    // Method begins at RVA 0x2118
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method CryptoStream::WriteByte

  .property /*17000005*/ instance bool CanRead()
  {
    .get instance bool System.Security.Cryptography.CryptoStream/*02000006*/::get_CanRead() /* 06000023 */
  } // end of property CryptoStream::CanRead
  .property /*17000006*/ instance bool CanSeek()
  {
    .get instance bool System.Security.Cryptography.CryptoStream/*02000006*/::get_CanSeek() /* 06000024 */
  } // end of property CryptoStream::CanSeek
  .property /*17000007*/ instance bool CanWrite()
  {
    .get instance bool System.Security.Cryptography.CryptoStream/*02000006*/::get_CanWrite() /* 06000025 */
  } // end of property CryptoStream::CanWrite
  .property /*17000008*/ instance bool HasFlushedFinalBlock()
  {
    .get instance bool System.Security.Cryptography.CryptoStream/*02000006*/::get_HasFlushedFinalBlock() /* 06000026 */
  } // end of property CryptoStream::HasFlushedFinalBlock
  .property /*17000009*/ instance int64 Length()
  {
    .get instance int64 System.Security.Cryptography.CryptoStream/*02000006*/::get_Length() /* 06000027 */
  } // end of property CryptoStream::Length
  .property /*1700000A*/ instance int64 Position()
  {
    .get instance int64 System.Security.Cryptography.CryptoStream/*02000006*/::get_Position() /* 06000028 */
    .set instance void System.Security.Cryptography.CryptoStream/*02000006*/::set_Position(int64) /* 06000029 */
  } // end of property CryptoStream::Position
} // end of class System.Security.Cryptography.CryptoStream

.class /*02000007*/ public auto ansi sealed System.Security.Cryptography.CryptoStreamMode
       extends [System.Runtime/*23000001*/]System.Enum/*01000014*/
{
  .field /*04000009*/ public specialname rtspecialname int32 value__
  .field /*0400000A*/ public static literal valuetype System.Security.Cryptography.CryptoStreamMode/*02000007*/ Read = int32(0x00000000)
  .field /*0400000B*/ public static literal valuetype System.Security.Cryptography.CryptoStreamMode/*02000007*/ Write = int32(0x00000001)
} // end of class System.Security.Cryptography.CryptoStreamMode

.class /*02000008*/ public abstract auto ansi beforefieldinit System.Security.Cryptography.HashAlgorithm
       extends [System.Runtime/*23000001*/]System.Object/*01000010*/
       implements [System.Runtime/*23000001*/]System.IDisposable/*01000011*/,
                  System.Security.Cryptography.ICryptoTransform/*0200000B*/
{
  .field /*0400000C*/ family int32 HashSizeValue
  .field /*0400000D*/ famorassem uint8[] HashValue
  .field /*0400000E*/ family int32 State
  .method /*0600003C*/ family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x211a
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  /* 02   |                  */ ldarg.0
    IL_0001:  /* 28   | (0A)000011       */ call       instance void [System.Runtime/*23000001*/]System.Object/*01000010*/::.ctor() /* 0A000011 */
    IL_0006:  /* 2A   |                  */ ret
  } // end of method HashAlgorithm::.ctor

  .method /*0600003D*/ public hidebysig newslot specialname virtual 
          instance bool  get_CanReuseTransform() cil managed
  // SIG: 20 00 02
  {
    // Method begins at RVA 0x2122
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method HashAlgorithm::get_CanReuseTransform

  .method /*0600003E*/ public hidebysig newslot specialname virtual 
          instance bool  get_CanTransformMultipleBlocks() cil managed
  // SIG: 20 00 02
  {
    // Method begins at RVA 0x2125
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method HashAlgorithm::get_CanTransformMultipleBlocks

  .method /*0600003F*/ public hidebysig newslot specialname virtual 
          instance uint8[]  get_Hash() cil managed
  // SIG: 20 00 1D 05
  {
    // Method begins at RVA 0x2128
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method HashAlgorithm::get_Hash

  .method /*06000040*/ public hidebysig newslot specialname virtual 
          instance int32  get_HashSize() cil managed
  // SIG: 20 00 08
  {
    // Method begins at RVA 0x212b
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method HashAlgorithm::get_HashSize

  .method /*06000041*/ public hidebysig newslot specialname virtual 
          instance int32  get_InputBlockSize() cil managed
  // SIG: 20 00 08
  {
    // Method begins at RVA 0x212e
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method HashAlgorithm::get_InputBlockSize

  .method /*06000042*/ public hidebysig newslot specialname virtual 
          instance int32  get_OutputBlockSize() cil managed
  // SIG: 20 00 08
  {
    // Method begins at RVA 0x2131
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method HashAlgorithm::get_OutputBlockSize

  .method /*06000043*/ public hidebysig instance void 
          Clear() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x2134
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method HashAlgorithm::Clear

  .method /*06000044*/ public hidebysig instance uint8[] 
          ComputeHash(uint8[] buffer) cil managed
  // SIG: 20 01 1D 05 1D 05
  {
    // Method begins at RVA 0x2136
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method HashAlgorithm::ComputeHash

  .method /*06000045*/ public hidebysig instance uint8[] 
          ComputeHash(uint8[] buffer,
                      int32 offset,
                      int32 count) cil managed
  // SIG: 20 03 1D 05 1D 05 08 08
  {
    // Method begins at RVA 0x2139
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method HashAlgorithm::ComputeHash

  .method /*06000046*/ public hidebysig instance uint8[] 
          ComputeHash(class [System.Runtime/*23000001*/]System.IO.Stream/*0100001B*/ inputStream) cil managed
  // SIG: 20 01 1D 05 12 6D
  {
    // Method begins at RVA 0x213c
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method HashAlgorithm::ComputeHash

  .method /*06000047*/ public hidebysig static 
          class System.Security.Cryptography.HashAlgorithm/*02000008*/ 
          Create() cil managed
  // SIG: 00 00 12 20
  {
    // Method begins at RVA 0x213f
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method HashAlgorithm::Create

  .method /*06000048*/ public hidebysig static 
          class System.Security.Cryptography.HashAlgorithm/*02000008*/ 
          Create(string hashName) cil managed
  // SIG: 00 01 12 20 0E
  {
    // Method begins at RVA 0x2142
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method HashAlgorithm::Create

  .method /*06000049*/ public hidebysig newslot virtual final 
          instance void  Dispose() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x2145
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method HashAlgorithm::Dispose

  .method /*0600004A*/ family hidebysig newslot virtual 
          instance void  Dispose(bool disposing) cil managed
  // SIG: 20 01 01 02
  {
    // Method begins at RVA 0x2147
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method HashAlgorithm::Dispose

  .method /*0600004B*/ family hidebysig newslot abstract virtual 
          instance void  HashCore(uint8[] 'array',
                                  int32 ibStart,
                                  int32 cbSize) cil managed
  // SIG: 20 03 01 1D 05 08 08
  {
    // Method begins at RVA 0x0
  } // end of method HashAlgorithm::HashCore

  .method /*0600004C*/ family hidebysig newslot virtual 
          instance void  HashCore(valuetype [System.Runtime/*23000001*/]System.ReadOnlySpan`1/*01000012*/<uint8> source) cil managed
  // SIG: 20 01 01 15 11 49 01 05
  {
    // Method begins at RVA 0x2149
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method HashAlgorithm::HashCore

  .method /*0600004D*/ family hidebysig newslot abstract virtual 
          instance uint8[]  HashFinal() cil managed
  // SIG: 20 00 1D 05
  {
    // Method begins at RVA 0x0
  } // end of method HashAlgorithm::HashFinal

  .method /*0600004E*/ public hidebysig newslot abstract virtual 
          instance void  Initialize() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x0
  } // end of method HashAlgorithm::Initialize

  .method /*0600004F*/ public hidebysig newslot virtual final 
          instance int32  TransformBlock(uint8[] inputBuffer,
                                         int32 inputOffset,
                                         int32 inputCount,
                                         uint8[] outputBuffer,
                                         int32 outputOffset) cil managed
  // SIG: 20 05 08 1D 05 08 08 1D 05 08
  {
    // Method begins at RVA 0x214b
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method HashAlgorithm::TransformBlock

  .method /*06000050*/ public hidebysig newslot virtual final 
          instance uint8[]  TransformFinalBlock(uint8[] inputBuffer,
                                                int32 inputOffset,
                                                int32 inputCount) cil managed
  // SIG: 20 03 1D 05 1D 05 08 08
  {
    // Method begins at RVA 0x214e
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method HashAlgorithm::TransformFinalBlock

  .method /*06000051*/ public hidebysig instance bool 
          TryComputeHash(valuetype [System.Runtime/*23000001*/]System.ReadOnlySpan`1/*01000012*/<uint8> source,
                         valuetype [System.Runtime/*23000001*/]System.Span`1/*01000013*/<uint8> destination,
                         [out] int32& bytesWritten) cil managed
  // SIG: 20 03 02 15 11 49 01 05 15 11 4D 01 05 10 08
  {
    // Method begins at RVA 0x2151
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method HashAlgorithm::TryComputeHash

  .method /*06000052*/ family hidebysig newslot virtual 
          instance bool  TryHashFinal(valuetype [System.Runtime/*23000001*/]System.Span`1/*01000013*/<uint8> destination,
                                      [out] int32& bytesWritten) cil managed
  // SIG: 20 02 02 15 11 4D 01 05 10 08
  {
    // Method begins at RVA 0x2154
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method HashAlgorithm::TryHashFinal

  .property /*1700000B*/ instance bool CanReuseTransform()
  {
    .get instance bool System.Security.Cryptography.HashAlgorithm/*02000008*/::get_CanReuseTransform() /* 0600003D */
  } // end of property HashAlgorithm::CanReuseTransform
  .property /*1700000C*/ instance bool CanTransformMultipleBlocks()
  {
    .get instance bool System.Security.Cryptography.HashAlgorithm/*02000008*/::get_CanTransformMultipleBlocks() /* 0600003E */
  } // end of property HashAlgorithm::CanTransformMultipleBlocks
  .property /*1700000D*/ instance uint8[]
          Hash()
  {
    .get instance uint8[] System.Security.Cryptography.HashAlgorithm/*02000008*/::get_Hash() /* 0600003F */
  } // end of property HashAlgorithm::Hash
  .property /*1700000E*/ instance int32 HashSize()
  {
    .get instance int32 System.Security.Cryptography.HashAlgorithm/*02000008*/::get_HashSize() /* 06000040 */
  } // end of property HashAlgorithm::HashSize
  .property /*1700000F*/ instance int32 InputBlockSize()
  {
    .get instance int32 System.Security.Cryptography.HashAlgorithm/*02000008*/::get_InputBlockSize() /* 06000041 */
  } // end of property HashAlgorithm::InputBlockSize
  .property /*17000010*/ instance int32 OutputBlockSize()
  {
    .get instance int32 System.Security.Cryptography.HashAlgorithm/*02000008*/::get_OutputBlockSize() /* 06000042 */
  } // end of property HashAlgorithm::OutputBlockSize
} // end of class System.Security.Cryptography.HashAlgorithm

.class /*02000009*/ public sequential ansi sealed beforefieldinit System.Security.Cryptography.HashAlgorithmName
       extends [System.Runtime/*23000001*/]System.ValueType/*01000024*/
       implements class [System.Runtime/*23000001*/]System.IEquatable`1/*01000025*/<valuetype System.Security.Cryptography.HashAlgorithmName/*02000009*/>/*1B000001*/
{
  .custom /*0C000013:0A000010*/ instance void [System.Runtime/*23000001*/]System.Runtime.CompilerServices.IsReadOnlyAttribute/*01000023*/::.ctor() /* 0A000010 */ = ( 01 00 00 00 ) 
  .field /*0400000F*/ private initonly object _dummy
  .method /*06000053*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(string name) cil managed
  // SIG: 20 01 01 0E
  {
    // Method begins at RVA 0x2157
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method HashAlgorithmName::.ctor

  .method /*06000054*/ public hidebysig specialname static 
          valuetype System.Security.Cryptography.HashAlgorithmName/*02000009*/ 
          get_MD5() cil managed
  // SIG: 00 00 11 24
  {
    // Method begins at RVA 0x215a
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method HashAlgorithmName::get_MD5

  .method /*06000055*/ public hidebysig specialname 
          instance string  get_Name() cil managed
  // SIG: 20 00 0E
  {
    // Method begins at RVA 0x215d
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method HashAlgorithmName::get_Name

  .method /*06000056*/ public hidebysig specialname static 
          valuetype System.Security.Cryptography.HashAlgorithmName/*02000009*/ 
          get_SHA1() cil managed
  // SIG: 00 00 11 24
  {
    // Method begins at RVA 0x2160
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method HashAlgorithmName::get_SHA1

  .method /*06000057*/ public hidebysig specialname static 
          valuetype System.Security.Cryptography.HashAlgorithmName/*02000009*/ 
          get_SHA256() cil managed
  // SIG: 00 00 11 24
  {
    // Method begins at RVA 0x2163
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method HashAlgorithmName::get_SHA256

  .method /*06000058*/ public hidebysig specialname static 
          valuetype System.Security.Cryptography.HashAlgorithmName/*02000009*/ 
          get_SHA384() cil managed
  // SIG: 00 00 11 24
  {
    // Method begins at RVA 0x2166
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method HashAlgorithmName::get_SHA384

  .method /*06000059*/ public hidebysig specialname static 
          valuetype System.Security.Cryptography.HashAlgorithmName/*02000009*/ 
          get_SHA512() cil managed
  // SIG: 00 00 11 24
  {
    // Method begins at RVA 0x2169
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method HashAlgorithmName::get_SHA512

  .method /*0600005A*/ public hidebysig virtual 
          instance bool  Equals(object obj) cil managed
  // SIG: 20 01 02 1C
  {
    // Method begins at RVA 0x216c
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method HashAlgorithmName::Equals

  .method /*0600005B*/ public hidebysig newslot virtual final 
          instance bool  Equals(valuetype System.Security.Cryptography.HashAlgorithmName/*02000009*/ other) cil managed
  // SIG: 20 01 02 11 24
  {
    // Method begins at RVA 0x216f
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method HashAlgorithmName::Equals

  .method /*0600005C*/ public hidebysig virtual 
          instance int32  GetHashCode() cil managed
  // SIG: 20 00 08
  {
    // Method begins at RVA 0x2172
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method HashAlgorithmName::GetHashCode

  .method /*0600005D*/ public hidebysig specialname static 
          bool  op_Equality(valuetype System.Security.Cryptography.HashAlgorithmName/*02000009*/ left,
                            valuetype System.Security.Cryptography.HashAlgorithmName/*02000009*/ right) cil managed
  // SIG: 00 02 02 11 24 11 24
  {
    // Method begins at RVA 0x2175
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method HashAlgorithmName::op_Equality

  .method /*0600005E*/ public hidebysig specialname static 
          bool  op_Inequality(valuetype System.Security.Cryptography.HashAlgorithmName/*02000009*/ left,
                              valuetype System.Security.Cryptography.HashAlgorithmName/*02000009*/ right) cil managed
  // SIG: 00 02 02 11 24 11 24
  {
    // Method begins at RVA 0x2178
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method HashAlgorithmName::op_Inequality

  .method /*0600005F*/ public hidebysig virtual 
          instance string  ToString() cil managed
  // SIG: 20 00 0E
  {
    // Method begins at RVA 0x217b
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method HashAlgorithmName::ToString

  .property /*17000011*/ valuetype System.Security.Cryptography.HashAlgorithmName/*02000009*/
          MD5()
  {
    .get valuetype System.Security.Cryptography.HashAlgorithmName/*02000009*/ System.Security.Cryptography.HashAlgorithmName/*02000009*/::get_MD5() /* 06000054 */
  } // end of property HashAlgorithmName::MD5
  .property /*17000012*/ instance string Name()
  {
    .get instance string System.Security.Cryptography.HashAlgorithmName/*02000009*/::get_Name() /* 06000055 */
  } // end of property HashAlgorithmName::Name
  .property /*17000013*/ valuetype System.Security.Cryptography.HashAlgorithmName/*02000009*/
          SHA1()
  {
    .get valuetype System.Security.Cryptography.HashAlgorithmName/*02000009*/ System.Security.Cryptography.HashAlgorithmName/*02000009*/::get_SHA1() /* 06000056 */
  } // end of property HashAlgorithmName::SHA1
  .property /*17000014*/ valuetype System.Security.Cryptography.HashAlgorithmName/*02000009*/
          SHA256()
  {
    .get valuetype System.Security.Cryptography.HashAlgorithmName/*02000009*/ System.Security.Cryptography.HashAlgorithmName/*02000009*/::get_SHA256() /* 06000057 */
  } // end of property HashAlgorithmName::SHA256
  .property /*17000015*/ valuetype System.Security.Cryptography.HashAlgorithmName/*02000009*/
          SHA384()
  {
    .get valuetype System.Security.Cryptography.HashAlgorithmName/*02000009*/ System.Security.Cryptography.HashAlgorithmName/*02000009*/::get_SHA384() /* 06000058 */
  } // end of property HashAlgorithmName::SHA384
  .property /*17000016*/ valuetype System.Security.Cryptography.HashAlgorithmName/*02000009*/
          SHA512()
  {
    .get valuetype System.Security.Cryptography.HashAlgorithmName/*02000009*/ System.Security.Cryptography.HashAlgorithmName/*02000009*/::get_SHA512() /* 06000059 */
  } // end of property HashAlgorithmName::SHA512
} // end of class System.Security.Cryptography.HashAlgorithmName

.class /*0200000A*/ public abstract auto ansi beforefieldinit System.Security.Cryptography.HMAC
       extends System.Security.Cryptography.KeyedHashAlgorithm/*0200000C*/
{
  .method /*06000060*/ family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x217e
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  /* 02   |                  */ ldarg.0
    IL_0001:  /* 28   | (06)000075       */ call       instance void System.Security.Cryptography.KeyedHashAlgorithm/*0200000C*/::.ctor() /* 06000075 */
    IL_0006:  /* 2A   |                  */ ret
  } // end of method HMAC::.ctor

  .method /*06000061*/ family hidebysig specialname 
          instance int32  get_BlockSizeValue() cil managed
  // SIG: 20 00 08
  {
    // Method begins at RVA 0x2186
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method HMAC::get_BlockSizeValue

  .method /*06000062*/ family hidebysig specialname 
          instance void  set_BlockSizeValue(int32 'value') cil managed
  // SIG: 20 01 01 08
  {
    // Method begins at RVA 0x2189
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method HMAC::set_BlockSizeValue

  .method /*06000063*/ public hidebysig specialname 
          instance string  get_HashName() cil managed
  // SIG: 20 00 0E
  {
    // Method begins at RVA 0x218b
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method HMAC::get_HashName

  .method /*06000064*/ public hidebysig specialname 
          instance void  set_HashName(string 'value') cil managed
  // SIG: 20 01 01 0E
  {
    // Method begins at RVA 0x218e
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method HMAC::set_HashName

  .method /*06000065*/ public hidebysig specialname virtual 
          instance uint8[]  get_Key() cil managed
  // SIG: 20 00 1D 05
  {
    // Method begins at RVA 0x2190
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method HMAC::get_Key

  .method /*06000066*/ public hidebysig specialname virtual 
          instance void  set_Key(uint8[] 'value') cil managed
  // SIG: 20 01 01 1D 05
  {
    // Method begins at RVA 0x2193
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method HMAC::set_Key

  .method /*06000067*/ public hidebysig static 
          class System.Security.Cryptography.HMAC/*0200000A*/ 
          Create() cil managed
  // SIG: 00 00 12 28
  {
    // Method begins at RVA 0x2195
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method HMAC::Create

  .method /*06000068*/ public hidebysig static 
          class System.Security.Cryptography.HMAC/*0200000A*/ 
          Create(string algorithmName) cil managed
  // SIG: 00 01 12 28 0E
  {
    // Method begins at RVA 0x2198
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method HMAC::Create

  .method /*06000069*/ family hidebysig virtual 
          instance void  Dispose(bool disposing) cil managed
  // SIG: 20 01 01 02
  {
    // Method begins at RVA 0x219b
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method HMAC::Dispose

  .method /*0600006A*/ family hidebysig virtual 
          instance void  HashCore(uint8[] rgb,
                                  int32 ib,
                                  int32 cb) cil managed
  // SIG: 20 03 01 1D 05 08 08
  {
    // Method begins at RVA 0x219d
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method HMAC::HashCore

  .method /*0600006B*/ family hidebysig virtual 
          instance void  HashCore(valuetype [System.Runtime/*23000001*/]System.ReadOnlySpan`1/*01000012*/<uint8> source) cil managed
  // SIG: 20 01 01 15 11 49 01 05
  {
    // Method begins at RVA 0x219f
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method HMAC::HashCore

  .method /*0600006C*/ family hidebysig virtual 
          instance uint8[]  HashFinal() cil managed
  // SIG: 20 00 1D 05
  {
    // Method begins at RVA 0x21a1
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method HMAC::HashFinal

  .method /*0600006D*/ public hidebysig virtual 
          instance void  Initialize() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x21a4
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method HMAC::Initialize

  .method /*0600006E*/ family hidebysig virtual 
          instance bool  TryHashFinal(valuetype [System.Runtime/*23000001*/]System.Span`1/*01000013*/<uint8> destination,
                                      [out] int32& bytesWritten) cil managed
  // SIG: 20 02 02 15 11 4D 01 05 10 08
  {
    // Method begins at RVA 0x21a6
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method HMAC::TryHashFinal

  .property /*17000017*/ instance int32 BlockSizeValue()
  {
    .get instance int32 System.Security.Cryptography.HMAC/*0200000A*/::get_BlockSizeValue() /* 06000061 */
    .set instance void System.Security.Cryptography.HMAC/*0200000A*/::set_BlockSizeValue(int32) /* 06000062 */
  } // end of property HMAC::BlockSizeValue
  .property /*17000018*/ instance string HashName()
  {
    .get instance string System.Security.Cryptography.HMAC/*0200000A*/::get_HashName() /* 06000063 */
    .set instance void System.Security.Cryptography.HMAC/*0200000A*/::set_HashName(string) /* 06000064 */
  } // end of property HMAC::HashName
  .property /*17000019*/ instance uint8[]
          Key()
  {
    .get instance uint8[] System.Security.Cryptography.HMAC/*0200000A*/::get_Key() /* 06000065 */
    .set instance void System.Security.Cryptography.HMAC/*0200000A*/::set_Key(uint8[]) /* 06000066 */
  } // end of property HMAC::Key
} // end of class System.Security.Cryptography.HMAC

.class /*0200000B*/ interface public abstract auto ansi System.Security.Cryptography.ICryptoTransform
       implements [System.Runtime/*23000001*/]System.IDisposable/*01000011*/
{
  .method /*0600006F*/ public hidebysig newslot specialname abstract virtual 
          instance bool  get_CanReuseTransform() cil managed
  // SIG: 20 00 02
  {
    // Method begins at RVA 0x0
  } // end of method ICryptoTransform::get_CanReuseTransform

  .method /*06000070*/ public hidebysig newslot specialname abstract virtual 
          instance bool  get_CanTransformMultipleBlocks() cil managed
  // SIG: 20 00 02
  {
    // Method begins at RVA 0x0
  } // end of method ICryptoTransform::get_CanTransformMultipleBlocks

  .method /*06000071*/ public hidebysig newslot specialname abstract virtual 
          instance int32  get_InputBlockSize() cil managed
  // SIG: 20 00 08
  {
    // Method begins at RVA 0x0
  } // end of method ICryptoTransform::get_InputBlockSize

  .method /*06000072*/ public hidebysig newslot specialname abstract virtual 
          instance int32  get_OutputBlockSize() cil managed
  // SIG: 20 00 08
  {
    // Method begins at RVA 0x0
  } // end of method ICryptoTransform::get_OutputBlockSize

  .method /*06000073*/ public hidebysig newslot abstract virtual 
          instance int32  TransformBlock(uint8[] inputBuffer,
                                         int32 inputOffset,
                                         int32 inputCount,
                                         uint8[] outputBuffer,
                                         int32 outputOffset) cil managed
  // SIG: 20 05 08 1D 05 08 08 1D 05 08
  {
    // Method begins at RVA 0x0
  } // end of method ICryptoTransform::TransformBlock

  .method /*06000074*/ public hidebysig newslot abstract virtual 
          instance uint8[]  TransformFinalBlock(uint8[] inputBuffer,
                                                int32 inputOffset,
                                                int32 inputCount) cil managed
  // SIG: 20 03 1D 05 1D 05 08 08
  {
    // Method begins at RVA 0x0
  } // end of method ICryptoTransform::TransformFinalBlock

  .property /*1700001A*/ instance bool CanReuseTransform()
  {
    .get instance bool System.Security.Cryptography.ICryptoTransform/*0200000B*/::get_CanReuseTransform() /* 0600006F */
  } // end of property ICryptoTransform::CanReuseTransform
  .property /*1700001B*/ instance bool CanTransformMultipleBlocks()
  {
    .get instance bool System.Security.Cryptography.ICryptoTransform/*0200000B*/::get_CanTransformMultipleBlocks() /* 06000070 */
  } // end of property ICryptoTransform::CanTransformMultipleBlocks
  .property /*1700001C*/ instance int32 InputBlockSize()
  {
    .get instance int32 System.Security.Cryptography.ICryptoTransform/*0200000B*/::get_InputBlockSize() /* 06000071 */
  } // end of property ICryptoTransform::InputBlockSize
  .property /*1700001D*/ instance int32 OutputBlockSize()
  {
    .get instance int32 System.Security.Cryptography.ICryptoTransform/*0200000B*/::get_OutputBlockSize() /* 06000072 */
  } // end of property ICryptoTransform::OutputBlockSize
} // end of class System.Security.Cryptography.ICryptoTransform

.class /*0200000C*/ public abstract auto ansi beforefieldinit System.Security.Cryptography.KeyedHashAlgorithm
       extends System.Security.Cryptography.HashAlgorithm/*02000008*/
{
  .field /*04000010*/ family uint8[] KeyValue
  .method /*06000075*/ family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x21a9
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  /* 02   |                  */ ldarg.0
    IL_0001:  /* 28   | (06)00003C       */ call       instance void System.Security.Cryptography.HashAlgorithm/*02000008*/::.ctor() /* 0600003C */
    IL_0006:  /* 2A   |                  */ ret
  } // end of method KeyedHashAlgorithm::.ctor

  .method /*06000076*/ public hidebysig newslot specialname virtual 
          instance uint8[]  get_Key() cil managed
  // SIG: 20 00 1D 05
  {
    // Method begins at RVA 0x21b1
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method KeyedHashAlgorithm::get_Key

  .method /*06000077*/ public hidebysig newslot specialname virtual 
          instance void  set_Key(uint8[] 'value') cil managed
  // SIG: 20 01 01 1D 05
  {
    // Method begins at RVA 0x21b4
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method KeyedHashAlgorithm::set_Key

  .method /*06000078*/ public hidebysig static 
          class System.Security.Cryptography.KeyedHashAlgorithm/*0200000C*/ 
          Create() cil managed
  // SIG: 00 00 12 30
  {
    // Method begins at RVA 0x21b6
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method KeyedHashAlgorithm::Create

  .method /*06000079*/ public hidebysig static 
          class System.Security.Cryptography.KeyedHashAlgorithm/*0200000C*/ 
          Create(string algName) cil managed
  // SIG: 00 01 12 30 0E
  {
    // Method begins at RVA 0x21b9
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method KeyedHashAlgorithm::Create

  .method /*0600007A*/ family hidebysig virtual 
          instance void  Dispose(bool disposing) cil managed
  // SIG: 20 01 01 02
  {
    // Method begins at RVA 0x21bc
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method KeyedHashAlgorithm::Dispose

  .property /*1700001E*/ instance uint8[]
          Key()
  {
    .get instance uint8[] System.Security.Cryptography.KeyedHashAlgorithm/*0200000C*/::get_Key() /* 06000076 */
    .set instance void System.Security.Cryptography.KeyedHashAlgorithm/*0200000C*/::set_Key(uint8[]) /* 06000077 */
  } // end of property KeyedHashAlgorithm::Key
} // end of class System.Security.Cryptography.KeyedHashAlgorithm

.class /*0200000D*/ public auto ansi sealed beforefieldinit System.Security.Cryptography.KeySizes
       extends [System.Runtime/*23000001*/]System.Object/*01000010*/
{
  .method /*0600007B*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(int32 minSize,
                               int32 maxSize,
                               int32 skipSize) cil managed
  // SIG: 20 03 01 08 08 08
  {
    // Method begins at RVA 0x21be
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  /* 02   |                  */ ldarg.0
    IL_0001:  /* 28   | (0A)000011       */ call       instance void [System.Runtime/*23000001*/]System.Object/*01000010*/::.ctor() /* 0A000011 */
    IL_0006:  /* 2A   |                  */ ret
  } // end of method KeySizes::.ctor

  .method /*0600007C*/ public hidebysig specialname 
          instance int32  get_MaxSize() cil managed
  // SIG: 20 00 08
  {
    // Method begins at RVA 0x21c6
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method KeySizes::get_MaxSize

  .method /*0600007D*/ public hidebysig specialname 
          instance int32  get_MinSize() cil managed
  // SIG: 20 00 08
  {
    // Method begins at RVA 0x21c9
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method KeySizes::get_MinSize

  .method /*0600007E*/ public hidebysig specialname 
          instance int32  get_SkipSize() cil managed
  // SIG: 20 00 08
  {
    // Method begins at RVA 0x21cc
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method KeySizes::get_SkipSize

  .property /*1700001F*/ instance int32 MaxSize()
  {
    .get instance int32 System.Security.Cryptography.KeySizes/*0200000D*/::get_MaxSize() /* 0600007C */
  } // end of property KeySizes::MaxSize
  .property /*17000020*/ instance int32 MinSize()
  {
    .get instance int32 System.Security.Cryptography.KeySizes/*0200000D*/::get_MinSize() /* 0600007D */
  } // end of property KeySizes::MinSize
  .property /*17000021*/ instance int32 SkipSize()
  {
    .get instance int32 System.Security.Cryptography.KeySizes/*0200000D*/::get_SkipSize() /* 0600007E */
  } // end of property KeySizes::SkipSize
} // end of class System.Security.Cryptography.KeySizes

.class /*0200000E*/ public auto ansi sealed System.Security.Cryptography.PaddingMode
       extends [System.Runtime/*23000001*/]System.Enum/*01000014*/
{
  .field /*04000011*/ public specialname rtspecialname int32 value__
  .field /*04000012*/ public static literal valuetype System.Security.Cryptography.PaddingMode/*0200000E*/ None = int32(0x00000001)
  .field /*04000013*/ public static literal valuetype System.Security.Cryptography.PaddingMode/*0200000E*/ PKCS7 = int32(0x00000002)
  .field /*04000014*/ public static literal valuetype System.Security.Cryptography.PaddingMode/*0200000E*/ Zeros = int32(0x00000003)
  .field /*04000015*/ public static literal valuetype System.Security.Cryptography.PaddingMode/*0200000E*/ ANSIX923 = int32(0x00000004)
  .field /*04000016*/ public static literal valuetype System.Security.Cryptography.PaddingMode/*0200000E*/ ISO10126 = int32(0x00000005)
} // end of class System.Security.Cryptography.PaddingMode

.class /*0200000F*/ public auto ansi sealed System.Security.Cryptography.PbeEncryptionAlgorithm
       extends [System.Runtime/*23000001*/]System.Enum/*01000014*/
{
  .field /*04000017*/ public specialname rtspecialname int32 value__
  .field /*04000018*/ public static literal valuetype System.Security.Cryptography.PbeEncryptionAlgorithm/*0200000F*/ Unknown = int32(0x00000000)
  .field /*04000019*/ public static literal valuetype System.Security.Cryptography.PbeEncryptionAlgorithm/*0200000F*/ Aes128Cbc = int32(0x00000001)
  .field /*0400001A*/ public static literal valuetype System.Security.Cryptography.PbeEncryptionAlgorithm/*0200000F*/ Aes192Cbc = int32(0x00000002)
  .field /*0400001B*/ public static literal valuetype System.Security.Cryptography.PbeEncryptionAlgorithm/*0200000F*/ Aes256Cbc = int32(0x00000003)
  .field /*0400001C*/ public static literal valuetype System.Security.Cryptography.PbeEncryptionAlgorithm/*0200000F*/ TripleDes3KeyPkcs12 = int32(0x00000004)
} // end of class System.Security.Cryptography.PbeEncryptionAlgorithm

.class /*02000010*/ public auto ansi sealed beforefieldinit System.Security.Cryptography.PbeParameters
       extends [System.Runtime/*23000001*/]System.Object/*01000010*/
{
  .method /*0600007F*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(valuetype System.Security.Cryptography.PbeEncryptionAlgorithm/*0200000F*/ encryptionAlgorithm,
                               valuetype System.Security.Cryptography.HashAlgorithmName/*02000009*/ hashAlgorithm,
                               int32 iterationCount) cil managed
  // SIG: 20 03 01 11 3C 11 24 08
  {
    // Method begins at RVA 0x21cf
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  /* 02   |                  */ ldarg.0
    IL_0001:  /* 28   | (0A)000011       */ call       instance void [System.Runtime/*23000001*/]System.Object/*01000010*/::.ctor() /* 0A000011 */
    IL_0006:  /* 2A   |                  */ ret
  } // end of method PbeParameters::.ctor

  .method /*06000080*/ public hidebysig specialname 
          instance valuetype System.Security.Cryptography.PbeEncryptionAlgorithm/*0200000F*/ 
          get_EncryptionAlgorithm() cil managed
  // SIG: 20 00 11 3C
  {
    // Method begins at RVA 0x21d7
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method PbeParameters::get_EncryptionAlgorithm

  .method /*06000081*/ public hidebysig specialname 
          instance valuetype System.Security.Cryptography.HashAlgorithmName/*02000009*/ 
          get_HashAlgorithm() cil managed
  // SIG: 20 00 11 24
  {
    // Method begins at RVA 0x21da
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method PbeParameters::get_HashAlgorithm

  .method /*06000082*/ public hidebysig specialname 
          instance int32  get_IterationCount() cil managed
  // SIG: 20 00 08
  {
    // Method begins at RVA 0x21dd
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method PbeParameters::get_IterationCount

  .property /*17000022*/ instance valuetype System.Security.Cryptography.PbeEncryptionAlgorithm/*0200000F*/
          EncryptionAlgorithm()
  {
    .get instance valuetype System.Security.Cryptography.PbeEncryptionAlgorithm/*0200000F*/ System.Security.Cryptography.PbeParameters/*02000010*/::get_EncryptionAlgorithm() /* 06000080 */
  } // end of property PbeParameters::EncryptionAlgorithm
  .property /*17000023*/ instance valuetype System.Security.Cryptography.HashAlgorithmName/*02000009*/
          HashAlgorithm()
  {
    .get instance valuetype System.Security.Cryptography.HashAlgorithmName/*02000009*/ System.Security.Cryptography.PbeParameters/*02000010*/::get_HashAlgorithm() /* 06000081 */
  } // end of property PbeParameters::HashAlgorithm
  .property /*17000024*/ instance int32 IterationCount()
  {
    .get instance int32 System.Security.Cryptography.PbeParameters/*02000010*/::get_IterationCount() /* 06000082 */
  } // end of property PbeParameters::IterationCount
} // end of class System.Security.Cryptography.PbeParameters

.class /*02000011*/ public abstract auto ansi beforefieldinit System.Security.Cryptography.SymmetricAlgorithm
       extends [System.Runtime/*23000001*/]System.Object/*01000010*/
       implements [System.Runtime/*23000001*/]System.IDisposable/*01000011*/
{
  .field /*0400001D*/ family int32 BlockSizeValue
  .field /*0400001E*/ family int32 FeedbackSizeValue
  .field /*0400001F*/ family uint8[] IVValue
  .field /*04000020*/ family int32 KeySizeValue
  .field /*04000021*/ family uint8[] KeyValue
  .field /*04000022*/ family class System.Security.Cryptography.KeySizes/*0200000D*/[] LegalBlockSizesValue
  .field /*04000023*/ family class System.Security.Cryptography.KeySizes/*0200000D*/[] LegalKeySizesValue
  .field /*04000024*/ family valuetype System.Security.Cryptography.CipherMode/*02000003*/ ModeValue
  .field /*04000025*/ family valuetype System.Security.Cryptography.PaddingMode/*0200000E*/ PaddingValue
  .method /*06000083*/ family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x21e0
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  /* 02   |                  */ ldarg.0
    IL_0001:  /* 28   | (0A)000011       */ call       instance void [System.Runtime/*23000001*/]System.Object/*01000010*/::.ctor() /* 0A000011 */
    IL_0006:  /* 2A   |                  */ ret
  } // end of method SymmetricAlgorithm::.ctor

  .method /*06000084*/ public hidebysig newslot specialname virtual 
          instance int32  get_BlockSize() cil managed
  // SIG: 20 00 08
  {
    // Method begins at RVA 0x21e8
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method SymmetricAlgorithm::get_BlockSize

  .method /*06000085*/ public hidebysig newslot specialname virtual 
          instance void  set_BlockSize(int32 'value') cil managed
  // SIG: 20 01 01 08
  {
    // Method begins at RVA 0x21eb
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method SymmetricAlgorithm::set_BlockSize

  .method /*06000086*/ public hidebysig newslot specialname virtual 
          instance int32  get_FeedbackSize() cil managed
  // SIG: 20 00 08
  {
    // Method begins at RVA 0x21ed
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method SymmetricAlgorithm::get_FeedbackSize

  .method /*06000087*/ public hidebysig newslot specialname virtual 
          instance void  set_FeedbackSize(int32 'value') cil managed
  // SIG: 20 01 01 08
  {
    // Method begins at RVA 0x21f0
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method SymmetricAlgorithm::set_FeedbackSize

  .method /*06000088*/ public hidebysig newslot specialname virtual 
          instance uint8[]  get_IV() cil managed
  // SIG: 20 00 1D 05
  {
    // Method begins at RVA 0x21f2
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method SymmetricAlgorithm::get_IV

  .method /*06000089*/ public hidebysig newslot specialname virtual 
          instance void  set_IV(uint8[] 'value') cil managed
  // SIG: 20 01 01 1D 05
  {
    // Method begins at RVA 0x21f5
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method SymmetricAlgorithm::set_IV

  .method /*0600008A*/ public hidebysig newslot specialname virtual 
          instance uint8[]  get_Key() cil managed
  // SIG: 20 00 1D 05
  {
    // Method begins at RVA 0x21f7
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method SymmetricAlgorithm::get_Key

  .method /*0600008B*/ public hidebysig newslot specialname virtual 
          instance void  set_Key(uint8[] 'value') cil managed
  // SIG: 20 01 01 1D 05
  {
    // Method begins at RVA 0x21fa
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method SymmetricAlgorithm::set_Key

  .method /*0600008C*/ public hidebysig newslot specialname virtual 
          instance int32  get_KeySize() cil managed
  // SIG: 20 00 08
  {
    // Method begins at RVA 0x21fc
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method SymmetricAlgorithm::get_KeySize

  .method /*0600008D*/ public hidebysig newslot specialname virtual 
          instance void  set_KeySize(int32 'value') cil managed
  // SIG: 20 01 01 08
  {
    // Method begins at RVA 0x21ff
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method SymmetricAlgorithm::set_KeySize

  .method /*0600008E*/ public hidebysig newslot specialname virtual 
          instance class System.Security.Cryptography.KeySizes/*0200000D*/[] 
          get_LegalBlockSizes() cil managed
  // SIG: 20 00 1D 12 34
  {
    // Method begins at RVA 0x2201
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method SymmetricAlgorithm::get_LegalBlockSizes

  .method /*0600008F*/ public hidebysig newslot specialname virtual 
          instance class System.Security.Cryptography.KeySizes/*0200000D*/[] 
          get_LegalKeySizes() cil managed
  // SIG: 20 00 1D 12 34
  {
    // Method begins at RVA 0x2204
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method SymmetricAlgorithm::get_LegalKeySizes

  .method /*06000090*/ public hidebysig newslot specialname virtual 
          instance valuetype System.Security.Cryptography.CipherMode/*02000003*/ 
          get_Mode() cil managed
  // SIG: 20 00 11 0C
  {
    // Method begins at RVA 0x2207
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method SymmetricAlgorithm::get_Mode

  .method /*06000091*/ public hidebysig newslot specialname virtual 
          instance void  set_Mode(valuetype System.Security.Cryptography.CipherMode/*02000003*/ 'value') cil managed
  // SIG: 20 01 01 11 0C
  {
    // Method begins at RVA 0x220a
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method SymmetricAlgorithm::set_Mode

  .method /*06000092*/ public hidebysig newslot specialname virtual 
          instance valuetype System.Security.Cryptography.PaddingMode/*0200000E*/ 
          get_Padding() cil managed
  // SIG: 20 00 11 38
  {
    // Method begins at RVA 0x220c
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method SymmetricAlgorithm::get_Padding

  .method /*06000093*/ public hidebysig newslot specialname virtual 
          instance void  set_Padding(valuetype System.Security.Cryptography.PaddingMode/*0200000E*/ 'value') cil managed
  // SIG: 20 01 01 11 38
  {
    // Method begins at RVA 0x220f
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method SymmetricAlgorithm::set_Padding

  .method /*06000094*/ public hidebysig instance void 
          Clear() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x2211
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method SymmetricAlgorithm::Clear

  .method /*06000095*/ public hidebysig static 
          class System.Security.Cryptography.SymmetricAlgorithm/*02000011*/ 
          Create() cil managed
  // SIG: 00 00 12 44
  {
    // Method begins at RVA 0x2213
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method SymmetricAlgorithm::Create

  .method /*06000096*/ public hidebysig static 
          class System.Security.Cryptography.SymmetricAlgorithm/*02000011*/ 
          Create(string algName) cil managed
  // SIG: 00 01 12 44 0E
  {
    // Method begins at RVA 0x2216
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method SymmetricAlgorithm::Create

  .method /*06000097*/ public hidebysig newslot virtual 
          instance class System.Security.Cryptography.ICryptoTransform/*0200000B*/ 
          CreateDecryptor() cil managed
  // SIG: 20 00 12 2C
  {
    // Method begins at RVA 0x2219
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method SymmetricAlgorithm::CreateDecryptor

  .method /*06000098*/ public hidebysig newslot abstract virtual 
          instance class System.Security.Cryptography.ICryptoTransform/*0200000B*/ 
          CreateDecryptor(uint8[] rgbKey,
                          uint8[] rgbIV) cil managed
  // SIG: 20 02 12 2C 1D 05 1D 05
  {
    // Method begins at RVA 0x0
  } // end of method SymmetricAlgorithm::CreateDecryptor

  .method /*06000099*/ public hidebysig newslot virtual 
          instance class System.Security.Cryptography.ICryptoTransform/*0200000B*/ 
          CreateEncryptor() cil managed
  // SIG: 20 00 12 2C
  {
    // Method begins at RVA 0x221c
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method SymmetricAlgorithm::CreateEncryptor

  .method /*0600009A*/ public hidebysig newslot abstract virtual 
          instance class System.Security.Cryptography.ICryptoTransform/*0200000B*/ 
          CreateEncryptor(uint8[] rgbKey,
                          uint8[] rgbIV) cil managed
  // SIG: 20 02 12 2C 1D 05 1D 05
  {
    // Method begins at RVA 0x0
  } // end of method SymmetricAlgorithm::CreateEncryptor

  .method /*0600009B*/ public hidebysig newslot virtual final 
          instance void  Dispose() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x221f
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method SymmetricAlgorithm::Dispose

  .method /*0600009C*/ family hidebysig newslot virtual 
          instance void  Dispose(bool disposing) cil managed
  // SIG: 20 01 01 02
  {
    // Method begins at RVA 0x2221
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method SymmetricAlgorithm::Dispose

  .method /*0600009D*/ public hidebysig newslot abstract virtual 
          instance void  GenerateIV() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x0
  } // end of method SymmetricAlgorithm::GenerateIV

  .method /*0600009E*/ public hidebysig newslot abstract virtual 
          instance void  GenerateKey() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x0
  } // end of method SymmetricAlgorithm::GenerateKey

  .method /*0600009F*/ public hidebysig instance bool 
          ValidKeySize(int32 bitLength) cil managed
  // SIG: 20 01 02 08
  {
    // Method begins at RVA 0x2223
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method SymmetricAlgorithm::ValidKeySize

  .property /*17000025*/ instance int32 BlockSize()
  {
    .get instance int32 System.Security.Cryptography.SymmetricAlgorithm/*02000011*/::get_BlockSize() /* 06000084 */
    .set instance void System.Security.Cryptography.SymmetricAlgorithm/*02000011*/::set_BlockSize(int32) /* 06000085 */
  } // end of property SymmetricAlgorithm::BlockSize
  .property /*17000026*/ instance int32 FeedbackSize()
  {
    .get instance int32 System.Security.Cryptography.SymmetricAlgorithm/*02000011*/::get_FeedbackSize() /* 06000086 */
    .set instance void System.Security.Cryptography.SymmetricAlgorithm/*02000011*/::set_FeedbackSize(int32) /* 06000087 */
  } // end of property SymmetricAlgorithm::FeedbackSize
  .property /*17000027*/ instance uint8[]
          IV()
  {
    .get instance uint8[] System.Security.Cryptography.SymmetricAlgorithm/*02000011*/::get_IV() /* 06000088 */
    .set instance void System.Security.Cryptography.SymmetricAlgorithm/*02000011*/::set_IV(uint8[]) /* 06000089 */
  } // end of property SymmetricAlgorithm::IV
  .property /*17000028*/ instance uint8[]
          Key()
  {
    .get instance uint8[] System.Security.Cryptography.SymmetricAlgorithm/*02000011*/::get_Key() /* 0600008A */
    .set instance void System.Security.Cryptography.SymmetricAlgorithm/*02000011*/::set_Key(uint8[]) /* 0600008B */
  } // end of property SymmetricAlgorithm::Key
  .property /*17000029*/ instance int32 KeySize()
  {
    .get instance int32 System.Security.Cryptography.SymmetricAlgorithm/*02000011*/::get_KeySize() /* 0600008C */
    .set instance void System.Security.Cryptography.SymmetricAlgorithm/*02000011*/::set_KeySize(int32) /* 0600008D */
  } // end of property SymmetricAlgorithm::KeySize
  .property /*1700002A*/ instance class System.Security.Cryptography.KeySizes/*0200000D*/[]
          LegalBlockSizes()
  {
    .get instance class System.Security.Cryptography.KeySizes/*0200000D*/[] System.Security.Cryptography.SymmetricAlgorithm/*02000011*/::get_LegalBlockSizes() /* 0600008E */
  } // end of property SymmetricAlgorithm::LegalBlockSizes
  .property /*1700002B*/ instance class System.Security.Cryptography.KeySizes/*0200000D*/[]
          LegalKeySizes()
  {
    .get instance class System.Security.Cryptography.KeySizes/*0200000D*/[] System.Security.Cryptography.SymmetricAlgorithm/*02000011*/::get_LegalKeySizes() /* 0600008F */
  } // end of property SymmetricAlgorithm::LegalKeySizes
  .property /*1700002C*/ instance valuetype System.Security.Cryptography.CipherMode/*02000003*/
          Mode()
  {
    .get instance valuetype System.Security.Cryptography.CipherMode/*02000003*/ System.Security.Cryptography.SymmetricAlgorithm/*02000011*/::get_Mode() /* 06000090 */
    .set instance void System.Security.Cryptography.SymmetricAlgorithm/*02000011*/::set_Mode(valuetype System.Security.Cryptography.CipherMode/*02000003*/) /* 06000091 */
  } // end of property SymmetricAlgorithm::Mode
  .property /*1700002D*/ instance valuetype System.Security.Cryptography.PaddingMode/*0200000E*/
          Padding()
  {
    .get instance valuetype System.Security.Cryptography.PaddingMode/*0200000E*/ System.Security.Cryptography.SymmetricAlgorithm/*02000011*/::get_Padding() /* 06000092 */
    .set instance void System.Security.Cryptography.SymmetricAlgorithm/*02000011*/::set_Padding(valuetype System.Security.Cryptography.PaddingMode/*0200000E*/) /* 06000093 */
  } // end of property SymmetricAlgorithm::Padding
} // end of class System.Security.Cryptography.SymmetricAlgorithm


// =============================================================

// *********** DISASSEMBLY COMPLETE ***********************
