
//  Microsoft (R) .NET Framework IL Disassembler.  Version 4.5.30319.0


// ----- DOS Header:
// Magic:                      0x5a4d
// Bytes on last page:         0x0090
// Pages in file:              0x0003
// Relocations:                0x0000
// Size of header (paragraphs):0x0004
// Min extra paragraphs:       0x0000
// Max extra paragraphs:       0xffff
// Initial (relative) SS:      0x0000
// Initial SP:                 0x00b8
// Checksum:                   0x0000
// Initial IP:                 0x0000
// Initial (relative) CS:      0x0000
// File addr. of reloc table:  0x0040
// Overlay number:             0x0000
// OEM identifier:             0x0000
// OEM info:                   0x0000
// File addr. of COFF header:  0x0080
// ----- COFF/PE Headers:
// Signature:                  0x00004550
// ----- COFF Header:
// Machine:                    0x014c
// Number of sections:         0x0003
// Time-date stamp:            0x596f8ab6
// Ptr to symbol table:        0x00000000
// Number of symbols:          0x00000000
// Size of optional header:    0x00e0
// Characteristics:            0x2022
// ----- PE Optional Header (32 bit):
// Magic:                          0x010b
// Major linker version:           0x30
// Minor linker version:           0x00
// Size of code:                   0x00002e00
// Size of init.data:              0x00000800
// Size of uninit.data:            0x00000000
// Addr. of entry point:           0x00004cda
// Base of code:                   0x00002000
// Base of data:                   0x00006000
// Image base:                     0x10000000
// Section alignment:              0x00002000
// File alignment:                 0x00000200
// Major OS version:               0x0004
// Minor OS version:               0x0000
// Major image version:            0x0000
// Minor image version:            0x0000
// Major subsystem version:        0x0004
// Minor subsystem version:        0x0000
// Size of image:                  0x0000a000
// Size of headers:                0x00000200
// Checksum:                       0x0000f747
// Subsystem:                      0x0003
// DLL characteristics:            0x8540
// Size of stack reserve:          0x00100000
// Size of stack commit:           0x00001000
// Size of heap reserve:           0x00100000
// Size of heap commit:            0x00001000
// Loader flags:                   0x00000000
// Directories:                    0x00000010
// 0x00000000 [0x00000000] address [size] of Export Directory:          
// 0x00004c88 [0x0000004f] address [size] of Import Directory:          
// 0x00006000 [0x000004d0] address [size] of Resource Directory:        
// 0x00000000 [0x00000000] address [size] of Exception Directory:       
// 0x00003800 [0x00003eb8] address [size] of Security Directory:        
// 0x00008000 [0x0000000c] address [size] of Base Relocation Table:     
// 0x00004b50 [0x0000001c] address [size] of Debug Directory:           
// 0x00000000 [0x00000000] address [size] of Architecture Specific:     
// 0x00000000 [0x00000000] address [size] of Global Pointer:            
// 0x00000000 [0x00000000] address [size] of TLS Directory:             
// 0x00000000 [0x00000000] address [size] of Load Config Directory:     
// 0x00000000 [0x00000000] address [size] of Bound Import Directory:    
// 0x00002000 [0x00000008] address [size] of Import Address Table:      
// 0x00000000 [0x00000000] address [size] of Delay Load IAT:            
// 0x00002008 [0x00000048] address [size] of CLR Header:                


// Image sections:
//              .text
//              0x00002ce0 Virtual Size
//              0x00002000 Virtual Address
//              0x00002e00 Size of Raw Data
//              0x00000200 Pointer to Raw Data
//              0x00000000 Pointer to Relocations
//              0x00000000 Pointer to Linenumbers
//                  0x0000 Number of Relocations
//                  0x0000 Number of Linenumbers
//              0x60000020 Characteristics
//                         CNT_CODE
//                         MEM_EXECUTE
//                         MEM_READ

//              .rsrc
//              0x000004d0 Virtual Size
//              0x00006000 Virtual Address
//              0x00000600 Size of Raw Data
//              0x00003000 Pointer to Raw Data
//              0x00000000 Pointer to Relocations
//              0x00000000 Pointer to Linenumbers
//                  0x0000 Number of Relocations
//                  0x0000 Number of Linenumbers
//              0x40000040 Characteristics
//                         CNT_INITIALIZED_DATA
//                         MEM_READ

//              .reloc
//              0x0000000c Virtual Size
//              0x00008000 Virtual Address
//              0x00000200 Size of Raw Data
//              0x00003600 Pointer to Raw Data
//              0x00000000 Pointer to Relocations
//              0x00000000 Pointer to Linenumbers
//                  0x0000 Number of Relocations
//                  0x0000 Number of Linenumbers
//              0x42000040 Characteristics
//                         CNT_INITIALIZED_DATA
//                         MEM_DISCARDABLE
//                         MEM_READ

// Base Relocation Table
//              0x00004000 Page RVA
//              0x0000000c Block Size
//              0x00000002 Number of Entries
//              Entry 1: Type 0x3 Offset 0x00000cdc
//              Entry 2: Type 0x0 Offset 0x00000000

// Import Address Table
//     DLL : mscoree.dll
//              0x00002000 Import Address Table
//              0x00004cca Import Name Table
//              0          Time Date Stamp
//              0          Index of First Forwarder Reference
//
//              0x0000  _CorDllMain

// Delay Load Import Address Table
// No data.

// Entry point code:
//FF 25 00 20 00 10 


// ----- CLR Header:
// Header size:                        0x00000048
// Major runtime version:              0x0002
// Minor runtime version:              0x0005
// 0x00002060 [0x00002a70] address [size] of Metadata Directory:        
// Flags:                              0x00000009
// Entry point token:                  0x00000000
// 0x00000000 [0x00000000] address [size] of Resources Directory:       
// 0x00004ad0 [0x00000080] address [size] of Strong Name Signature:     
// 0x00000000 [0x00000000] address [size] of CodeManager Table:         
// 0x00000000 [0x00000000] address [size] of VTableFixups Directory:    
// 0x00000000 [0x00000000] address [size] of Export Address Table:      
// 0x00000000 [0x00000000] address [size] of Precompile Header:         

// Metadata Header
//    Storage Signature:
//              0x424a5342 Signature
//                  0x0001 Major Version
//                  0x0001 Minor Version
//              0x00000000 Extra Data Offset
//              0x0000000c Version String Length
//              'v4.0.30319' Version String
//    Storage Header:
//                    0x00 Flags
//                  0x0005 Number of Streams
//    Stream 1:
//              0x0000006c Offset
//              0x0000162c Size
//              '#~' Name
//    Stream 2:
//              0x00001698 Offset
//              0x00000cf0 Size
//              '#Strings' Name
//    Stream 3:
//              0x00002388 Offset
//              0x00000004 Size
//              '#US' Name
//    Stream 4:
//              0x0000238c Offset
//              0x00000010 Size
//              '#GUID' Name
//    Stream 5:
//              0x0000239c Offset
//              0x000006d4 Size
//              '#Blob' Name

//    Metadata Stream Header:
//              0x00000000 Reserved
//                    0x02 Major
//                    0x00 Minor
//                    0x00 Heaps
//                    0x01 Rid
//      0x0000000901b49d57 MaskValid
//      0x000016003301fa00 Sorted

// Code Manager Table:
//  default


// Export Address Table Jumps:
// No data.

// File size            : 30392
// PE header size       : 512 (496 used)    ( 1.68%)
// PE additional info   : 17487             (57.54%)
// Num.of PE sections   : 3
// CLR header size     : 72                 ( 0.24%)
// CLR meta-data size  : 10864              (35.75%)
// CLR additional info : 128                ( 0.42%)
// CLR method headers  : 116                ( 0.38%)
// Managed code         : 169               ( 0.56%)
// Data                 : 2048              ( 6.74%)
// Unaccounted          : -1004             (-3.30%)

// Num.of PE sections   : 3
//   .text    - 11776
//   .rsrc    - 1536
//   .reloc   - 512

// CLR meta-data size  : 10864
//   Module        -    1 (10 bytes)
//   TypeDef       -    9 (126 bytes)     0 interfaces, 0 explicit layout
//   TypeRef       -   30 (180 bytes)
//   MethodDef     -  120 (1680 bytes)    0 abstract, 0 native, 116 bodies
//   FieldDef      -  169 (1014 bytes)    0 constant
//   MemberRef     -   18 (108 bytes)
//   ParamDef      -  123 (738 bytes)
//   Constant      -  165 (990 bytes)
//   CustomAttribute-   24 (144 bytes)
//   ClassLayout   -    1 (8 bytes)
//   PropertyMap   -    3 (12 bytes)
//   Property      -   32 (192 bytes)
//   MethodSemantic-   51 (306 bytes)
//   Assembly      -    1 (22 bytes)
//   AssemblyRef   -    2 (40 bytes)
//   EventMap      -    1 (4 bytes)
//   Event         -    1 (6 bytes)
//   Strings       -  3311 bytes
//   Blobs         -  1748 bytes
//   UserStrings   -     4 bytes
//   Guids         -    16 bytes
//   Uncategorized -   205 bytes

// CLR additional info : 128

// CLR method headers : 116
//   Num.of method bodies  - 116
//   Num.of fat headers    - 0
//   Num.of tiny headers   - 116

// Managed code : 169
//   Ave method size - 1
// Classes defined in this module:
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Class Console                        (public) (abstract) (auto) (ansi) (sealed) 
// Class ConsoleCancelEventArgs         (public) (auto) (ansi) (sealed) 
// Class ConsoleCancelEventHandler      (public) (auto) (ansi) (sealed) 
// Class ConsoleColor                   (public) (auto) (ansi) (sealed) 
// Class ConsoleKeyInfo                 (public) (sequential) (ansi) (sealed) 
// Class ConsoleKey                     (public) (auto) (ansi) (sealed) 
// Class ConsoleModifiers               (public) (auto) (ansi) (sealed) 
// Class ConsoleSpecialKey              (public) (auto) (ansi) (sealed) 
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


// Metadata version: v4.0.30319
.assembly extern /*23000001*/ System.Runtime
{
  .publickeytoken = (B0 3F 5F 7F 11 D5 0A 3A )                         // .?_....:
  .ver 4:2:0:0
}
.assembly extern /*23000002*/ System.Runtime.Extensions
{
  .publickeytoken = (B0 3F 5F 7F 11 D5 0A 3A )                         // .?_....:
  .ver 4:2:0:0
}
.assembly /*20000001*/ noplatform System.Console
{
  .custom /*0C000001:0A000001*/ instance void [System.Runtime/*23000001*/]System.Runtime.CompilerServices.CompilationRelaxationsAttribute/*01000001*/::.ctor(int32) /* 0A000001 */ = ( 01 00 08 00 00 00 00 00 ) 
  .custom /*0C000002:0A000002*/ instance void [System.Runtime/*23000001*/]System.Runtime.CompilerServices.RuntimeCompatibilityAttribute/*01000002*/::.ctor() /* 0A000002 */ = ( 01 00 01 00 54 02 16 57 72 61 70 4E 6F 6E 45 78   // ....T..WrapNonEx
                                                                                                                                                                                63 65 70 74 69 6F 6E 54 68 72 6F 77 73 01 )       // ceptionThrows.

  // --- The following custom attribute is added automatically, do not uncomment -------
  //  .custom /*0C000003:0A000003*/ instance void [System.Runtime/*23000001*/]System.Diagnostics.DebuggableAttribute/*01000003*/::.ctor(valuetype [System.Runtime/*23000001*/]System.Diagnostics.DebuggableAttribute/*01000003*//DebuggingModes/*01000004*/) /* 0A000003 */ = ( 01 00 02 00 00 00 00 00 ) 

  .custom /*0C000004:0A000004*/ instance void [System.Runtime/*23000001*/]System.Security.AllowPartiallyTrustedCallersAttribute/*01000005*/::.ctor() /* 0A000004 */ = ( 01 00 00 00 ) 
  .custom /*0C000005:0A000005*/ instance void [System.Runtime/*23000001*/]System.Runtime.CompilerServices.ReferenceAssemblyAttribute/*01000006*/::.ctor() /* 0A000005 */ = ( 01 00 00 00 ) 
  .custom /*0C000006:0A000006*/ instance void [System.Runtime/*23000001*/]System.Reflection.AssemblyTitleAttribute/*01000007*/::.ctor(string) /* 0A000006 */ = ( 01 00 0E 53 79 73 74 65 6D 2E 43 6F 6E 73 6F 6C   // ...System.Consol
                                                                                                                                                                 65 00 00 )                                        // e..
  .custom /*0C000007:0A000007*/ instance void [System.Runtime/*23000001*/]System.Reflection.AssemblyDescriptionAttribute/*01000008*/::.ctor(string) /* 0A000007 */ = ( 01 00 0E 53 79 73 74 65 6D 2E 43 6F 6E 73 6F 6C   // ...System.Consol
                                                                                                                                                                       65 00 00 )                                        // e..
  .custom /*0C000008:0A000008*/ instance void [System.Runtime/*23000001*/]System.Reflection.AssemblyDefaultAliasAttribute/*01000009*/::.ctor(string) /* 0A000008 */ = ( 01 00 0E 53 79 73 74 65 6D 2E 43 6F 6E 73 6F 6C   // ...System.Consol
                                                                                                                                                                        65 00 00 )                                        // e..
  .custom /*0C000009:0A000009*/ instance void [System.Runtime/*23000001*/]System.Reflection.AssemblyCompanyAttribute/*0100000A*/::.ctor(string) /* 0A000009 */ = ( 01 00 15 4D 69 63 72 6F 73 6F 66 74 20 43 6F 72   // ...Microsoft Cor
                                                                                                                                                                   70 6F 72 61 74 69 6F 6E 00 00 )                   // poration..
  .custom /*0C00000A:0A00000A*/ instance void [System.Runtime/*23000001*/]System.Reflection.AssemblyProductAttribute/*0100000B*/::.ctor(string) /* 0A00000A */ = ( 01 00 1A 4D 69 63 72 6F 73 6F 66 74 C2 AE 20 2E   // ...Microsoft.. .
                                                                                                                                                                   4E 45 54 20 46 72 61 6D 65 77 6F 72 6B 00 00 )    // NET Framework..
  .custom /*0C00000B:0A00000B*/ instance void [System.Runtime/*23000001*/]System.Reflection.AssemblyCopyrightAttribute/*0100000C*/::.ctor(string) /* 0A00000B */ = ( 01 00 2F C2 A9 20 4D 69 63 72 6F 73 6F 66 74 20   // ../.. Microsoft 
                                                                                                                                                                     43 6F 72 70 6F 72 61 74 69 6F 6E 2E 20 20 41 6C   // Corporation.  Al
                                                                                                                                                                     6C 20 72 69 67 68 74 73 20 72 65 73 65 72 76 65   // l rights reserve
                                                                                                                                                                     64 2E 00 00 )                                     // d...
  .custom /*0C00000C:0A00000C*/ instance void [System.Runtime/*23000001*/]System.Reflection.AssemblyFileVersionAttribute/*0100000D*/::.ctor(string) /* 0A00000C */ = ( 01 00 0C 34 2E 36 2E 32 35 35 31 39 2E 30 33 00   // ...4.6.25519.03.
                                                                                                                                                                       00 ) 
  .custom /*0C00000D:0A00000D*/ instance void [System.Runtime/*23000001*/]System.Reflection.AssemblyInformationalVersionAttribute/*0100000E*/::.ctor(string) /* 0A00000D */ = ( 01 00 61 34 2E 36 2E 32 35 35 31 39 2E 30 33 20   // ..a4.6.25519.03 
                                                                                                                                                                                62 75 69 6C 74 20 62 79 3A 20 64 6C 61 62 2D 44   // built by: dlab-D
                                                                                                                                                                                44 56 53 4F 57 49 4E 41 47 45 30 31 33 2E 20 43   // DVSOWINAGE013. C
                                                                                                                                                                                6F 6D 6D 69 74 20 48 61 73 68 3A 20 38 33 32 31   // ommit Hash: 8321
                                                                                                                                                                                63 37 32 39 39 33 34 63 30 66 38 62 65 37 35 34   // c729934c0f8be754
                                                                                                                                                                                39 35 33 34 33 39 62 38 38 65 36 65 31 63 31 32   // 953439b88e6e1c12
                                                                                                                                                                                30 63 32 34 00 00 )                               // 0c24..
  .custom /*0C00000E:0A00000E*/ instance void [System.Runtime/*23000001*/]System.CLSCompliantAttribute/*0100000F*/::.ctor(bool) /* 0A00000E */ = ( 01 00 01 00 00 ) 
  .custom /*0C00000F:0A00000F*/ instance void [System.Runtime/*23000001*/]System.Reflection.AssemblyMetadataAttribute/*01000010*/::.ctor(string,
                                                                                                                                         string) /* 0A00000F */ = ( 01 00 15 2E 4E 45 54 46 72 61 6D 65 77 6F 72 6B   // ....NETFramework
                                                                                                                                                                    41 73 73 65 6D 62 6C 79 00 00 00 )                // Assembly...
  .custom /*0C000010:0A00000F*/ instance void [System.Runtime/*23000001*/]System.Reflection.AssemblyMetadataAttribute/*01000010*/::.ctor(string,
                                                                                                                                         string) /* 0A00000F */ = ( 01 00 0B 53 65 72 76 69 63 65 61 62 6C 65 04 54   // ...Serviceable.T
                                                                                                                                                                    72 75 65 00 00 )                                  // rue..
  .custom /*0C000011:0A00000F*/ instance void [System.Runtime/*23000001*/]System.Reflection.AssemblyMetadataAttribute/*01000010*/::.ctor(string,
                                                                                                                                         string) /* 0A00000F */ = ( 01 00 0B 50 72 65 66 65 72 49 6E 62 6F 78 04 54   // ...PreferInbox.T
                                                                                                                                                                    72 75 65 00 00 )                                  // rue..
  .publickey = (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00   // .$..............
                00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00   // .$..RSA1........
                07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D   // ...W............
                E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E   // ...j.....vl.L...
                B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90   // .;.........6.!..
                0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F   // .r<......w....wO
                29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1   // ).2.......!.....
                64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D   // d\L.....(]b,.e,.
                FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D   // ..=t]o-..~^....=
                26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 ) // &...Ce. m..4MZ..
  .hash algorithm 0x00008004
  .ver 4:1:0:0
}
.module System.Console.dll
// MVID: {5ae815ae-e85f-4ac1-bbbe-351d41a0e8a2}
.imagebase 0x10000000
.file alignment 0x00000200
.stackreserve 0x00100000
.subsystem 0x0003       // WINDOWS_CUI
.corflags 0x00000009    //  ILONLY
// Image base: 0x00007FEFD40F1000


// =============== CLASS MEMBERS DECLARATION ===================

.class /*02000002*/ public abstract auto ansi sealed beforefieldinit System.Console
       extends [System.Runtime/*23000001*/]System.Object/*01000011*/
{
  .method /*06000001*/ public hidebysig specialname static 
          valuetype System.ConsoleColor/*02000005*/ 
          get_BackgroundColor() cil managed
  // SIG: 00 00 11 14
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Console::get_BackgroundColor

  .method /*06000002*/ public hidebysig specialname static 
          void  set_BackgroundColor(valuetype System.ConsoleColor/*02000005*/ 'value') cil managed
  // SIG: 00 01 01 11 14
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::set_BackgroundColor

  .method /*06000003*/ public hidebysig static 
          void  Beep() cil managed
  // SIG: 00 00 01
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::Beep

  .method /*06000004*/ public hidebysig static 
          void  Beep(int32 frequency,
                     int32 duration) cil managed
  // SIG: 00 02 01 08 08
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::Beep

  .method /*06000005*/ public hidebysig specialname static 
          int32  get_BufferHeight() cil managed
  // SIG: 00 00 08
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Console::get_BufferHeight

  .method /*06000006*/ public hidebysig specialname static 
          void  set_BufferHeight(int32 'value') cil managed
  // SIG: 00 01 01 08
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::set_BufferHeight

  .method /*06000007*/ public hidebysig specialname static 
          int32  get_BufferWidth() cil managed
  // SIG: 00 00 08
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Console::get_BufferWidth

  .method /*06000008*/ public hidebysig specialname static 
          void  set_BufferWidth(int32 'value') cil managed
  // SIG: 00 01 01 08
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::set_BufferWidth

  .method /*06000009*/ public hidebysig specialname static 
          bool  get_CapsLock() cil managed
  // SIG: 00 00 02
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Console::get_CapsLock

  .method /*0600000A*/ public hidebysig specialname static 
          void  add_CancelKeyPress(class System.ConsoleCancelEventHandler/*02000004*/ 'value') cil managed
  // SIG: 00 01 01 12 10
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::add_CancelKeyPress

  .method /*0600000B*/ public hidebysig specialname static 
          void  remove_CancelKeyPress(class System.ConsoleCancelEventHandler/*02000004*/ 'value') cil managed
  // SIG: 00 01 01 12 10
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::remove_CancelKeyPress

  .method /*0600000C*/ public hidebysig static 
          void  Clear() cil managed
  // SIG: 00 00 01
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::Clear

  .method /*0600000D*/ public hidebysig specialname static 
          int32  get_CursorLeft() cil managed
  // SIG: 00 00 08
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Console::get_CursorLeft

  .method /*0600000E*/ public hidebysig specialname static 
          void  set_CursorLeft(int32 'value') cil managed
  // SIG: 00 01 01 08
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::set_CursorLeft

  .method /*0600000F*/ public hidebysig specialname static 
          int32  get_CursorSize() cil managed
  // SIG: 00 00 08
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Console::get_CursorSize

  .method /*06000010*/ public hidebysig specialname static 
          void  set_CursorSize(int32 'value') cil managed
  // SIG: 00 01 01 08
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::set_CursorSize

  .method /*06000011*/ public hidebysig specialname static 
          int32  get_CursorTop() cil managed
  // SIG: 00 00 08
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Console::get_CursorTop

  .method /*06000012*/ public hidebysig specialname static 
          void  set_CursorTop(int32 'value') cil managed
  // SIG: 00 01 01 08
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::set_CursorTop

  .method /*06000013*/ public hidebysig specialname static 
          bool  get_CursorVisible() cil managed
  // SIG: 00 00 02
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Console::get_CursorVisible

  .method /*06000014*/ public hidebysig specialname static 
          void  set_CursorVisible(bool 'value') cil managed
  // SIG: 00 01 01 02
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::set_CursorVisible

  .method /*06000015*/ public hidebysig specialname static 
          class [System.Runtime.Extensions/*23000002*/]System.IO.TextWriter/*01000012*/ 
          get_Error() cil managed
  // SIG: 00 00 12 49
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Console::get_Error

  .method /*06000016*/ public hidebysig specialname static 
          valuetype System.ConsoleColor/*02000005*/ 
          get_ForegroundColor() cil managed
  // SIG: 00 00 11 14
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Console::get_ForegroundColor

  .method /*06000017*/ public hidebysig specialname static 
          void  set_ForegroundColor(valuetype System.ConsoleColor/*02000005*/ 'value') cil managed
  // SIG: 00 01 01 11 14
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::set_ForegroundColor

  .method /*06000018*/ public hidebysig specialname static 
          class [System.Runtime/*23000001*/]System.Text.Encoding/*01000013*/ 
          get_InputEncoding() cil managed
  // SIG: 00 00 12 4D
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Console::get_InputEncoding

  .method /*06000019*/ public hidebysig specialname static 
          void  set_InputEncoding(class [System.Runtime/*23000001*/]System.Text.Encoding/*01000013*/ 'value') cil managed
  // SIG: 00 01 01 12 4D
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::set_InputEncoding

  .method /*0600001A*/ public hidebysig specialname static 
          bool  get_IsErrorRedirected() cil managed
  // SIG: 00 00 02
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Console::get_IsErrorRedirected

  .method /*0600001B*/ public hidebysig specialname static 
          bool  get_IsInputRedirected() cil managed
  // SIG: 00 00 02
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Console::get_IsInputRedirected

  .method /*0600001C*/ public hidebysig specialname static 
          bool  get_IsOutputRedirected() cil managed
  // SIG: 00 00 02
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Console::get_IsOutputRedirected

  .method /*0600001D*/ public hidebysig specialname static 
          class [System.Runtime.Extensions/*23000002*/]System.IO.TextReader/*01000014*/ 
          get_In() cil managed
  // SIG: 00 00 12 51
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Console::get_In

  .method /*0600001E*/ public hidebysig specialname static 
          bool  get_KeyAvailable() cil managed
  // SIG: 00 00 02
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Console::get_KeyAvailable

  .method /*0600001F*/ public hidebysig specialname static 
          int32  get_LargestWindowWidth() cil managed
  // SIG: 00 00 08
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Console::get_LargestWindowWidth

  .method /*06000020*/ public hidebysig specialname static 
          int32  get_LargestWindowHeight() cil managed
  // SIG: 00 00 08
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Console::get_LargestWindowHeight

  .method /*06000021*/ public hidebysig static 
          void  MoveBufferArea(int32 sourceLeft,
                               int32 sourceTop,
                               int32 sourceWidth,
                               int32 sourceHeight,
                               int32 targetLeft,
                               int32 targetTop) cil managed
  // SIG: 00 06 01 08 08 08 08 08 08
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::MoveBufferArea

  .method /*06000022*/ public hidebysig static 
          void  MoveBufferArea(int32 sourceLeft,
                               int32 sourceTop,
                               int32 sourceWidth,
                               int32 sourceHeight,
                               int32 targetLeft,
                               int32 targetTop,
                               char sourceChar,
                               valuetype System.ConsoleColor/*02000005*/ sourceForeColor,
                               valuetype System.ConsoleColor/*02000005*/ sourceBackColor) cil managed
  // SIG: 00 09 01 08 08 08 08 08 08 03 11 14 11 14
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::MoveBufferArea

  .method /*06000023*/ public hidebysig specialname static 
          bool  get_NumberLock() cil managed
  // SIG: 00 00 02
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Console::get_NumberLock

  .method /*06000024*/ public hidebysig static 
          class [System.Runtime/*23000001*/]System.IO.Stream/*01000015*/ 
          OpenStandardError() cil managed
  // SIG: 00 00 12 55
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Console::OpenStandardError

  .method /*06000025*/ public hidebysig static 
          class [System.Runtime/*23000001*/]System.IO.Stream/*01000015*/ 
          OpenStandardError(int32 bufferSize) cil managed
  // SIG: 00 01 12 55 08
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Console::OpenStandardError

  .method /*06000026*/ public hidebysig static 
          class [System.Runtime/*23000001*/]System.IO.Stream/*01000015*/ 
          OpenStandardInput() cil managed
  // SIG: 00 00 12 55
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Console::OpenStandardInput

  .method /*06000027*/ public hidebysig static 
          class [System.Runtime/*23000001*/]System.IO.Stream/*01000015*/ 
          OpenStandardInput(int32 bufferSize) cil managed
  // SIG: 00 01 12 55 08
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Console::OpenStandardInput

  .method /*06000028*/ public hidebysig static 
          class [System.Runtime/*23000001*/]System.IO.Stream/*01000015*/ 
          OpenStandardOutput() cil managed
  // SIG: 00 00 12 55
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Console::OpenStandardOutput

  .method /*06000029*/ public hidebysig static 
          class [System.Runtime/*23000001*/]System.IO.Stream/*01000015*/ 
          OpenStandardOutput(int32 bufferSize) cil managed
  // SIG: 00 01 12 55 08
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Console::OpenStandardOutput

  .method /*0600002A*/ public hidebysig specialname static 
          class [System.Runtime.Extensions/*23000002*/]System.IO.TextWriter/*01000012*/ 
          get_Out() cil managed
  // SIG: 00 00 12 49
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Console::get_Out

  .method /*0600002B*/ public hidebysig specialname static 
          class [System.Runtime/*23000001*/]System.Text.Encoding/*01000013*/ 
          get_OutputEncoding() cil managed
  // SIG: 00 00 12 4D
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Console::get_OutputEncoding

  .method /*0600002C*/ public hidebysig specialname static 
          void  set_OutputEncoding(class [System.Runtime/*23000001*/]System.Text.Encoding/*01000013*/ 'value') cil managed
  // SIG: 00 01 01 12 4D
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::set_OutputEncoding

  .method /*0600002D*/ public hidebysig static 
          int32  Read() cil managed
  // SIG: 00 00 08
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Console::Read

  .method /*0600002E*/ public hidebysig static 
          valuetype System.ConsoleKeyInfo/*02000006*/ 
          ReadKey() cil managed
  // SIG: 00 00 11 18
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Console::ReadKey

  .method /*0600002F*/ public hidebysig static 
          valuetype System.ConsoleKeyInfo/*02000006*/ 
          ReadKey(bool intercept) cil managed
  // SIG: 00 01 11 18 02
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Console::ReadKey

  .method /*06000030*/ public hidebysig static 
          string  ReadLine() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Console::ReadLine

  .method /*06000031*/ public hidebysig static 
          void  ResetColor() cil managed
  // SIG: 00 00 01
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::ResetColor

  .method /*06000032*/ public hidebysig static 
          void  SetBufferSize(int32 width,
                              int32 height) cil managed
  // SIG: 00 02 01 08 08
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::SetBufferSize

  .method /*06000033*/ public hidebysig static 
          void  SetCursorPosition(int32 left,
                                  int32 top) cil managed
  // SIG: 00 02 01 08 08
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::SetCursorPosition

  .method /*06000034*/ public hidebysig static 
          void  SetError(class [System.Runtime.Extensions/*23000002*/]System.IO.TextWriter/*01000012*/ newError) cil managed
  // SIG: 00 01 01 12 49
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::SetError

  .method /*06000035*/ public hidebysig static 
          void  SetIn(class [System.Runtime.Extensions/*23000002*/]System.IO.TextReader/*01000014*/ newIn) cil managed
  // SIG: 00 01 01 12 51
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::SetIn

  .method /*06000036*/ public hidebysig static 
          void  SetOut(class [System.Runtime.Extensions/*23000002*/]System.IO.TextWriter/*01000012*/ newOut) cil managed
  // SIG: 00 01 01 12 49
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::SetOut

  .method /*06000037*/ public hidebysig static 
          void  SetWindowPosition(int32 left,
                                  int32 top) cil managed
  // SIG: 00 02 01 08 08
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::SetWindowPosition

  .method /*06000038*/ public hidebysig static 
          void  SetWindowSize(int32 width,
                              int32 height) cil managed
  // SIG: 00 02 01 08 08
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::SetWindowSize

  .method /*06000039*/ public hidebysig specialname static 
          string  get_Title() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Console::get_Title

  .method /*0600003A*/ public hidebysig specialname static 
          void  set_Title(string 'value') cil managed
  // SIG: 00 01 01 0E
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::set_Title

  .method /*0600003B*/ public hidebysig specialname static 
          bool  get_TreatControlCAsInput() cil managed
  // SIG: 00 00 02
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Console::get_TreatControlCAsInput

  .method /*0600003C*/ public hidebysig specialname static 
          void  set_TreatControlCAsInput(bool 'value') cil managed
  // SIG: 00 01 01 02
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::set_TreatControlCAsInput

  .method /*0600003D*/ public hidebysig specialname static 
          int32  get_WindowHeight() cil managed
  // SIG: 00 00 08
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Console::get_WindowHeight

  .method /*0600003E*/ public hidebysig specialname static 
          void  set_WindowHeight(int32 'value') cil managed
  // SIG: 00 01 01 08
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::set_WindowHeight

  .method /*0600003F*/ public hidebysig specialname static 
          int32  get_WindowWidth() cil managed
  // SIG: 00 00 08
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Console::get_WindowWidth

  .method /*06000040*/ public hidebysig specialname static 
          void  set_WindowWidth(int32 'value') cil managed
  // SIG: 00 01 01 08
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::set_WindowWidth

  .method /*06000041*/ public hidebysig specialname static 
          int32  get_WindowLeft() cil managed
  // SIG: 00 00 08
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Console::get_WindowLeft

  .method /*06000042*/ public hidebysig specialname static 
          void  set_WindowLeft(int32 'value') cil managed
  // SIG: 00 01 01 08
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::set_WindowLeft

  .method /*06000043*/ public hidebysig specialname static 
          int32  get_WindowTop() cil managed
  // SIG: 00 00 08
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method Console::get_WindowTop

  .method /*06000044*/ public hidebysig specialname static 
          void  set_WindowTop(int32 'value') cil managed
  // SIG: 00 01 01 08
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::set_WindowTop

  .method /*06000045*/ public hidebysig static 
          void  Write(bool 'value') cil managed
  // SIG: 00 01 01 02
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::Write

  .method /*06000046*/ public hidebysig static 
          void  Write(char 'value') cil managed
  // SIG: 00 01 01 03
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::Write

  .method /*06000047*/ public hidebysig static 
          void  Write(char[] buffer) cil managed
  // SIG: 00 01 01 1D 03
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::Write

  .method /*06000048*/ public hidebysig static 
          void  Write(char[] buffer,
                      int32 index,
                      int32 count) cil managed
  // SIG: 00 03 01 1D 03 08 08
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::Write

  .method /*06000049*/ public hidebysig static 
          void  Write(valuetype [System.Runtime/*23000001*/]System.Decimal/*01000016*/ 'value') cil managed
  // SIG: 00 01 01 11 59
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::Write

  .method /*0600004A*/ public hidebysig static 
          void  Write(float64 'value') cil managed
  // SIG: 00 01 01 0D
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::Write

  .method /*0600004B*/ public hidebysig static 
          void  Write(int32 'value') cil managed
  // SIG: 00 01 01 08
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::Write

  .method /*0600004C*/ public hidebysig static 
          void  Write(int64 'value') cil managed
  // SIG: 00 01 01 0A
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::Write

  .method /*0600004D*/ public hidebysig static 
          void  Write(object 'value') cil managed
  // SIG: 00 01 01 1C
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::Write

  .method /*0600004E*/ public hidebysig static 
          void  Write(float32 'value') cil managed
  // SIG: 00 01 01 0C
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::Write

  .method /*0600004F*/ public hidebysig static 
          void  Write(string 'value') cil managed
  // SIG: 00 01 01 0E
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::Write

  .method /*06000050*/ public hidebysig static 
          void  Write(string format,
                      object arg0) cil managed
  // SIG: 00 02 01 0E 1C
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::Write

  .method /*06000051*/ public hidebysig static 
          void  Write(string format,
                      object arg0,
                      object arg1) cil managed
  // SIG: 00 03 01 0E 1C 1C
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::Write

  .method /*06000052*/ public hidebysig static 
          void  Write(string format,
                      object arg0,
                      object arg1,
                      object arg2) cil managed
  // SIG: 00 04 01 0E 1C 1C 1C
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::Write

  .method /*06000053*/ public hidebysig static 
          void  Write(string format,
                      object[] arg) cil managed
  // SIG: 00 02 01 0E 1D 1C
  {
    .param [2]/*0800004A*/ 
    .custom /*0C000013:0A000010*/ instance void [System.Runtime/*23000001*/]System.ParamArrayAttribute/*01000017*/::.ctor() /* 0A000010 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::Write

  .method /*06000054*/ public hidebysig static 
          void  Write(uint32 'value') cil managed
  // SIG: 00 01 01 09
  {
    .custom /*0C000014:0A00000E*/ instance void [System.Runtime/*23000001*/]System.CLSCompliantAttribute/*0100000F*/::.ctor(bool) /* 0A00000E */ = ( 01 00 00 00 00 ) 
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::Write

  .method /*06000055*/ public hidebysig static 
          void  Write(uint64 'value') cil managed
  // SIG: 00 01 01 0B
  {
    .custom /*0C000015:0A00000E*/ instance void [System.Runtime/*23000001*/]System.CLSCompliantAttribute/*0100000F*/::.ctor(bool) /* 0A00000E */ = ( 01 00 00 00 00 ) 
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::Write

  .method /*06000056*/ public hidebysig static 
          void  WriteLine() cil managed
  // SIG: 00 00 01
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::WriteLine

  .method /*06000057*/ public hidebysig static 
          void  WriteLine(bool 'value') cil managed
  // SIG: 00 01 01 02
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::WriteLine

  .method /*06000058*/ public hidebysig static 
          void  WriteLine(char 'value') cil managed
  // SIG: 00 01 01 03
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::WriteLine

  .method /*06000059*/ public hidebysig static 
          void  WriteLine(char[] buffer) cil managed
  // SIG: 00 01 01 1D 03
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::WriteLine

  .method /*0600005A*/ public hidebysig static 
          void  WriteLine(char[] buffer,
                          int32 index,
                          int32 count) cil managed
  // SIG: 00 03 01 1D 03 08 08
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::WriteLine

  .method /*0600005B*/ public hidebysig static 
          void  WriteLine(valuetype [System.Runtime/*23000001*/]System.Decimal/*01000016*/ 'value') cil managed
  // SIG: 00 01 01 11 59
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::WriteLine

  .method /*0600005C*/ public hidebysig static 
          void  WriteLine(float64 'value') cil managed
  // SIG: 00 01 01 0D
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::WriteLine

  .method /*0600005D*/ public hidebysig static 
          void  WriteLine(int32 'value') cil managed
  // SIG: 00 01 01 08
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::WriteLine

  .method /*0600005E*/ public hidebysig static 
          void  WriteLine(int64 'value') cil managed
  // SIG: 00 01 01 0A
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::WriteLine

  .method /*0600005F*/ public hidebysig static 
          void  WriteLine(object 'value') cil managed
  // SIG: 00 01 01 1C
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::WriteLine

  .method /*06000060*/ public hidebysig static 
          void  WriteLine(float32 'value') cil managed
  // SIG: 00 01 01 0C
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::WriteLine

  .method /*06000061*/ public hidebysig static 
          void  WriteLine(string 'value') cil managed
  // SIG: 00 01 01 0E
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::WriteLine

  .method /*06000062*/ public hidebysig static 
          void  WriteLine(string format,
                          object arg0) cil managed
  // SIG: 00 02 01 0E 1C
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::WriteLine

  .method /*06000063*/ public hidebysig static 
          void  WriteLine(string format,
                          object arg0,
                          object arg1) cil managed
  // SIG: 00 03 01 0E 1C 1C
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::WriteLine

  .method /*06000064*/ public hidebysig static 
          void  WriteLine(string format,
                          object arg0,
                          object arg1,
                          object arg2) cil managed
  // SIG: 00 04 01 0E 1C 1C 1C
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::WriteLine

  .method /*06000065*/ public hidebysig static 
          void  WriteLine(string format,
                          object[] arg) cil managed
  // SIG: 00 02 01 0E 1D 1C
  {
    .param [2]/*08000064*/ 
    .custom /*0C000016:0A000010*/ instance void [System.Runtime/*23000001*/]System.ParamArrayAttribute/*01000017*/::.ctor() /* 0A000010 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::WriteLine

  .method /*06000066*/ public hidebysig static 
          void  WriteLine(uint32 'value') cil managed
  // SIG: 00 01 01 09
  {
    .custom /*0C000017:0A00000E*/ instance void [System.Runtime/*23000001*/]System.CLSCompliantAttribute/*0100000F*/::.ctor(bool) /* 0A00000E */ = ( 01 00 00 00 00 ) 
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::WriteLine

  .method /*06000067*/ public hidebysig static 
          void  WriteLine(uint64 'value') cil managed
  // SIG: 00 01 01 0B
  {
    .custom /*0C000018:0A00000E*/ instance void [System.Runtime/*23000001*/]System.CLSCompliantAttribute/*0100000F*/::.ctor(bool) /* 0A00000E */ = ( 01 00 00 00 00 ) 
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method Console::WriteLine

  .event /*14000001*/ System.ConsoleCancelEventHandler/*02000004*/ CancelKeyPress
  {
    .addon void System.Console/*02000002*/::add_CancelKeyPress(class System.ConsoleCancelEventHandler/*02000004*/) /* 0600000A */
    .removeon void System.Console/*02000002*/::remove_CancelKeyPress(class System.ConsoleCancelEventHandler/*02000004*/) /* 0600000B */
  } // end of event Console::CancelKeyPress
  .property /*17000001*/ valuetype System.ConsoleColor/*02000005*/
          BackgroundColor()
  {
    .get valuetype System.ConsoleColor/*02000005*/ System.Console/*02000002*/::get_BackgroundColor() /* 06000001 */
    .set void System.Console/*02000002*/::set_BackgroundColor(valuetype System.ConsoleColor/*02000005*/) /* 06000002 */
  } // end of property Console::BackgroundColor
  .property /*17000002*/ int32 BufferHeight()
  {
    .get int32 System.Console/*02000002*/::get_BufferHeight() /* 06000005 */
    .set void System.Console/*02000002*/::set_BufferHeight(int32) /* 06000006 */
  } // end of property Console::BufferHeight
  .property /*17000003*/ int32 BufferWidth()
  {
    .get int32 System.Console/*02000002*/::get_BufferWidth() /* 06000007 */
    .set void System.Console/*02000002*/::set_BufferWidth(int32) /* 06000008 */
  } // end of property Console::BufferWidth
  .property /*17000004*/ bool CapsLock()
  {
    .get bool System.Console/*02000002*/::get_CapsLock() /* 06000009 */
  } // end of property Console::CapsLock
  .property /*17000005*/ int32 CursorLeft()
  {
    .get int32 System.Console/*02000002*/::get_CursorLeft() /* 0600000D */
    .set void System.Console/*02000002*/::set_CursorLeft(int32) /* 0600000E */
  } // end of property Console::CursorLeft
  .property /*17000006*/ int32 CursorSize()
  {
    .get int32 System.Console/*02000002*/::get_CursorSize() /* 0600000F */
    .set void System.Console/*02000002*/::set_CursorSize(int32) /* 06000010 */
  } // end of property Console::CursorSize
  .property /*17000007*/ int32 CursorTop()
  {
    .get int32 System.Console/*02000002*/::get_CursorTop() /* 06000011 */
    .set void System.Console/*02000002*/::set_CursorTop(int32) /* 06000012 */
  } // end of property Console::CursorTop
  .property /*17000008*/ bool CursorVisible()
  {
    .get bool System.Console/*02000002*/::get_CursorVisible() /* 06000013 */
    .set void System.Console/*02000002*/::set_CursorVisible(bool) /* 06000014 */
  } // end of property Console::CursorVisible
  .property /*17000009*/ class [System.Runtime.Extensions/*23000002*/]System.IO.TextWriter/*01000012*/
          Error()
  {
    .get class [System.Runtime.Extensions/*23000002*/]System.IO.TextWriter/*01000012*/ System.Console/*02000002*/::get_Error() /* 06000015 */
  } // end of property Console::Error
  .property /*1700000A*/ valuetype System.ConsoleColor/*02000005*/
          ForegroundColor()
  {
    .get valuetype System.ConsoleColor/*02000005*/ System.Console/*02000002*/::get_ForegroundColor() /* 06000016 */
    .set void System.Console/*02000002*/::set_ForegroundColor(valuetype System.ConsoleColor/*02000005*/) /* 06000017 */
  } // end of property Console::ForegroundColor
  .property /*1700000B*/ class [System.Runtime/*23000001*/]System.Text.Encoding/*01000013*/
          InputEncoding()
  {
    .get class [System.Runtime/*23000001*/]System.Text.Encoding/*01000013*/ System.Console/*02000002*/::get_InputEncoding() /* 06000018 */
    .set void System.Console/*02000002*/::set_InputEncoding(class [System.Runtime/*23000001*/]System.Text.Encoding/*01000013*/) /* 06000019 */
  } // end of property Console::InputEncoding
  .property /*1700000C*/ bool IsErrorRedirected()
  {
    .get bool System.Console/*02000002*/::get_IsErrorRedirected() /* 0600001A */
  } // end of property Console::IsErrorRedirected
  .property /*1700000D*/ bool IsInputRedirected()
  {
    .get bool System.Console/*02000002*/::get_IsInputRedirected() /* 0600001B */
  } // end of property Console::IsInputRedirected
  .property /*1700000E*/ bool IsOutputRedirected()
  {
    .get bool System.Console/*02000002*/::get_IsOutputRedirected() /* 0600001C */
  } // end of property Console::IsOutputRedirected
  .property /*1700000F*/ class [System.Runtime.Extensions/*23000002*/]System.IO.TextReader/*01000014*/
          In()
  {
    .get class [System.Runtime.Extensions/*23000002*/]System.IO.TextReader/*01000014*/ System.Console/*02000002*/::get_In() /* 0600001D */
  } // end of property Console::In
  .property /*17000010*/ bool KeyAvailable()
  {
    .get bool System.Console/*02000002*/::get_KeyAvailable() /* 0600001E */
  } // end of property Console::KeyAvailable
  .property /*17000011*/ int32 LargestWindowWidth()
  {
    .get int32 System.Console/*02000002*/::get_LargestWindowWidth() /* 0600001F */
  } // end of property Console::LargestWindowWidth
  .property /*17000012*/ int32 LargestWindowHeight()
  {
    .get int32 System.Console/*02000002*/::get_LargestWindowHeight() /* 06000020 */
  } // end of property Console::LargestWindowHeight
  .property /*17000013*/ bool NumberLock()
  {
    .get bool System.Console/*02000002*/::get_NumberLock() /* 06000023 */
  } // end of property Console::NumberLock
  .property /*17000014*/ class [System.Runtime.Extensions/*23000002*/]System.IO.TextWriter/*01000012*/
          Out()
  {
    .get class [System.Runtime.Extensions/*23000002*/]System.IO.TextWriter/*01000012*/ System.Console/*02000002*/::get_Out() /* 0600002A */
  } // end of property Console::Out
  .property /*17000015*/ class [System.Runtime/*23000001*/]System.Text.Encoding/*01000013*/
          OutputEncoding()
  {
    .get class [System.Runtime/*23000001*/]System.Text.Encoding/*01000013*/ System.Console/*02000002*/::get_OutputEncoding() /* 0600002B */
    .set void System.Console/*02000002*/::set_OutputEncoding(class [System.Runtime/*23000001*/]System.Text.Encoding/*01000013*/) /* 0600002C */
  } // end of property Console::OutputEncoding
  .property /*17000016*/ string Title()
  {
    .get string System.Console/*02000002*/::get_Title() /* 06000039 */
    .set void System.Console/*02000002*/::set_Title(string) /* 0600003A */
  } // end of property Console::Title
  .property /*17000017*/ bool TreatControlCAsInput()
  {
    .get bool System.Console/*02000002*/::get_TreatControlCAsInput() /* 0600003B */
    .set void System.Console/*02000002*/::set_TreatControlCAsInput(bool) /* 0600003C */
  } // end of property Console::TreatControlCAsInput
  .property /*17000018*/ int32 WindowHeight()
  {
    .get int32 System.Console/*02000002*/::get_WindowHeight() /* 0600003D */
    .set void System.Console/*02000002*/::set_WindowHeight(int32) /* 0600003E */
  } // end of property Console::WindowHeight
  .property /*17000019*/ int32 WindowWidth()
  {
    .get int32 System.Console/*02000002*/::get_WindowWidth() /* 0600003F */
    .set void System.Console/*02000002*/::set_WindowWidth(int32) /* 06000040 */
  } // end of property Console::WindowWidth
  .property /*1700001A*/ int32 WindowLeft()
  {
    .get int32 System.Console/*02000002*/::get_WindowLeft() /* 06000041 */
    .set void System.Console/*02000002*/::set_WindowLeft(int32) /* 06000042 */
  } // end of property Console::WindowLeft
  .property /*1700001B*/ int32 WindowTop()
  {
    .get int32 System.Console/*02000002*/::get_WindowTop() /* 06000043 */
    .set void System.Console/*02000002*/::set_WindowTop(int32) /* 06000044 */
  } // end of property Console::WindowTop
} // end of class System.Console

.class /*02000003*/ public auto ansi sealed beforefieldinit System.ConsoleCancelEventArgs
       extends [System.Runtime/*23000001*/]System.EventArgs/*01000018*/
{
  .method /*06000068*/ assembly hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x2055
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  /* 02   |                  */ ldarg.0
    IL_0001:  /* 28   | (0A)000012       */ call       instance void [System.Runtime/*23000001*/]System.EventArgs/*01000018*/::.ctor() /* 0A000012 */
    IL_0006:  /* 2A   |                  */ ret
  } // end of method ConsoleCancelEventArgs::.ctor

  .method /*06000069*/ public hidebysig specialname 
          instance bool  get_Cancel() cil managed
  // SIG: 20 00 02
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method ConsoleCancelEventArgs::get_Cancel

  .method /*0600006A*/ public hidebysig specialname 
          instance void  set_Cancel(bool 'value') cil managed
  // SIG: 20 01 01 02
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method ConsoleCancelEventArgs::set_Cancel

  .method /*0600006B*/ public hidebysig specialname 
          instance valuetype System.ConsoleSpecialKey/*02000009*/ 
          get_SpecialKey() cil managed
  // SIG: 20 00 11 24
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method ConsoleCancelEventArgs::get_SpecialKey

  .property /*1700001C*/ instance bool Cancel()
  {
    .get instance bool System.ConsoleCancelEventArgs/*02000003*/::get_Cancel() /* 06000069 */
    .set instance void System.ConsoleCancelEventArgs/*02000003*/::set_Cancel(bool) /* 0600006A */
  } // end of property ConsoleCancelEventArgs::Cancel
  .property /*1700001D*/ instance valuetype System.ConsoleSpecialKey/*02000009*/
          SpecialKey()
  {
    .get instance valuetype System.ConsoleSpecialKey/*02000009*/ System.ConsoleCancelEventArgs/*02000003*/::get_SpecialKey() /* 0600006B */
  } // end of property ConsoleCancelEventArgs::SpecialKey
} // end of class System.ConsoleCancelEventArgs

.class /*02000004*/ public auto ansi sealed System.ConsoleCancelEventHandler
       extends [System.Runtime/*23000001*/]System.MulticastDelegate/*01000019*/
{
  .method /*0600006C*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(object 'object',
                               native int 'method') runtime managed
  // SIG: 20 02 01 1C 18
  {
  } // end of method ConsoleCancelEventHandler::.ctor

  .method /*0600006D*/ public hidebysig newslot virtual 
          instance void  Invoke(object sender,
                                class System.ConsoleCancelEventArgs/*02000003*/ e) runtime managed
  // SIG: 20 02 01 1C 12 0C
  {
  } // end of method ConsoleCancelEventHandler::Invoke

  .method /*0600006E*/ public hidebysig newslot virtual 
          instance class [System.Runtime/*23000001*/]System.IAsyncResult/*0100001A*/ 
          BeginInvoke(object sender,
                      class System.ConsoleCancelEventArgs/*02000003*/ e,
                      class [System.Runtime/*23000001*/]System.AsyncCallback/*0100001B*/ callback,
                      object 'object') runtime managed
  // SIG: 20 04 12 69 1C 12 0C 12 6D 1C
  {
  } // end of method ConsoleCancelEventHandler::BeginInvoke

  .method /*0600006F*/ public hidebysig newslot virtual 
          instance void  EndInvoke(class [System.Runtime/*23000001*/]System.IAsyncResult/*0100001A*/ result) runtime managed
  // SIG: 20 01 01 12 69
  {
  } // end of method ConsoleCancelEventHandler::EndInvoke

} // end of class System.ConsoleCancelEventHandler

.class /*02000005*/ public auto ansi sealed System.ConsoleColor
       extends [System.Runtime/*23000001*/]System.Enum/*0100001C*/
{
  .field /*04000001*/ public specialname rtspecialname int32 value__
  .field /*04000002*/ public static literal valuetype System.ConsoleColor/*02000005*/ Black = int32(0x00000000)
  .field /*04000003*/ public static literal valuetype System.ConsoleColor/*02000005*/ Blue = int32(0x00000009)
  .field /*04000004*/ public static literal valuetype System.ConsoleColor/*02000005*/ Cyan = int32(0x0000000B)
  .field /*04000005*/ public static literal valuetype System.ConsoleColor/*02000005*/ DarkBlue = int32(0x00000001)
  .field /*04000006*/ public static literal valuetype System.ConsoleColor/*02000005*/ DarkCyan = int32(0x00000003)
  .field /*04000007*/ public static literal valuetype System.ConsoleColor/*02000005*/ DarkGray = int32(0x00000008)
  .field /*04000008*/ public static literal valuetype System.ConsoleColor/*02000005*/ DarkGreen = int32(0x00000002)
  .field /*04000009*/ public static literal valuetype System.ConsoleColor/*02000005*/ DarkMagenta = int32(0x00000005)
  .field /*0400000A*/ public static literal valuetype System.ConsoleColor/*02000005*/ DarkRed = int32(0x00000004)
  .field /*0400000B*/ public static literal valuetype System.ConsoleColor/*02000005*/ DarkYellow = int32(0x00000006)
  .field /*0400000C*/ public static literal valuetype System.ConsoleColor/*02000005*/ Gray = int32(0x00000007)
  .field /*0400000D*/ public static literal valuetype System.ConsoleColor/*02000005*/ Green = int32(0x0000000A)
  .field /*0400000E*/ public static literal valuetype System.ConsoleColor/*02000005*/ Magenta = int32(0x0000000D)
  .field /*0400000F*/ public static literal valuetype System.ConsoleColor/*02000005*/ Red = int32(0x0000000C)
  .field /*04000010*/ public static literal valuetype System.ConsoleColor/*02000005*/ White = int32(0x0000000F)
  .field /*04000011*/ public static literal valuetype System.ConsoleColor/*02000005*/ Yellow = int32(0x0000000E)
} // end of class System.ConsoleColor

.class /*02000006*/ public sequential ansi sealed beforefieldinit System.ConsoleKeyInfo
       extends [System.Runtime/*23000001*/]System.ValueType/*0100001D*/
{
  .pack 0
  .size 1
  .method /*06000070*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(char keyChar,
                               valuetype System.ConsoleKey/*02000007*/ key,
                               bool shift,
                               bool alt,
                               bool control) cil managed
  // SIG: 20 05 01 03 11 1C 02 02 02
  {
    // Method begins at RVA 0x2053
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  /* 2A   |                  */ ret
  } // end of method ConsoleKeyInfo::.ctor

  .method /*06000071*/ public hidebysig specialname 
          instance char  get_KeyChar() cil managed
  // SIG: 20 00 03
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method ConsoleKeyInfo::get_KeyChar

  .method /*06000072*/ public hidebysig specialname 
          instance valuetype System.ConsoleKey/*02000007*/ 
          get_Key() cil managed
  // SIG: 20 00 11 1C
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method ConsoleKeyInfo::get_Key

  .method /*06000073*/ public hidebysig specialname 
          instance valuetype System.ConsoleModifiers/*02000008*/ 
          get_Modifiers() cil managed
  // SIG: 20 00 11 20
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method ConsoleKeyInfo::get_Modifiers

  .method /*06000074*/ public hidebysig instance bool 
          Equals(valuetype System.ConsoleKeyInfo/*02000006*/ obj) cil managed
  // SIG: 20 01 02 11 18
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method ConsoleKeyInfo::Equals

  .method /*06000075*/ public hidebysig virtual 
          instance bool  Equals(object 'value') cil managed
  // SIG: 20 01 02 1C
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method ConsoleKeyInfo::Equals

  .method /*06000076*/ public hidebysig virtual 
          instance int32  GetHashCode() cil managed
  // SIG: 20 00 08
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method ConsoleKeyInfo::GetHashCode

  .method /*06000077*/ public hidebysig specialname static 
          bool  op_Equality(valuetype System.ConsoleKeyInfo/*02000006*/ a,
                            valuetype System.ConsoleKeyInfo/*02000006*/ b) cil managed
  // SIG: 00 02 02 11 18 11 18
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method ConsoleKeyInfo::op_Equality

  .method /*06000078*/ public hidebysig specialname static 
          bool  op_Inequality(valuetype System.ConsoleKeyInfo/*02000006*/ a,
                              valuetype System.ConsoleKeyInfo/*02000006*/ b) cil managed
  // SIG: 00 02 02 11 18 11 18
  {
    // Method begins at RVA 0x2050
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 7A   |                  */ throw
  } // end of method ConsoleKeyInfo::op_Inequality

  .property /*1700001E*/ instance char KeyChar()
  {
    .get instance char System.ConsoleKeyInfo/*02000006*/::get_KeyChar() /* 06000071 */
  } // end of property ConsoleKeyInfo::KeyChar
  .property /*1700001F*/ instance valuetype System.ConsoleKey/*02000007*/
          Key()
  {
    .get instance valuetype System.ConsoleKey/*02000007*/ System.ConsoleKeyInfo/*02000006*/::get_Key() /* 06000072 */
  } // end of property ConsoleKeyInfo::Key
  .property /*17000020*/ instance valuetype System.ConsoleModifiers/*02000008*/
          Modifiers()
  {
    .get instance valuetype System.ConsoleModifiers/*02000008*/ System.ConsoleKeyInfo/*02000006*/::get_Modifiers() /* 06000073 */
  } // end of property ConsoleKeyInfo::Modifiers
} // end of class System.ConsoleKeyInfo

.class /*02000007*/ public auto ansi sealed System.ConsoleKey
       extends [System.Runtime/*23000001*/]System.Enum/*0100001C*/
{
  .field /*04000012*/ public specialname rtspecialname int32 value__
  .field /*04000013*/ public static literal valuetype System.ConsoleKey/*02000007*/ Backspace = int32(0x00000008)
  .field /*04000014*/ public static literal valuetype System.ConsoleKey/*02000007*/ Tab = int32(0x00000009)
  .field /*04000015*/ public static literal valuetype System.ConsoleKey/*02000007*/ Clear = int32(0x0000000C)
  .field /*04000016*/ public static literal valuetype System.ConsoleKey/*02000007*/ Enter = int32(0x0000000D)
  .field /*04000017*/ public static literal valuetype System.ConsoleKey/*02000007*/ Pause = int32(0x00000013)
  .field /*04000018*/ public static literal valuetype System.ConsoleKey/*02000007*/ Escape = int32(0x0000001B)
  .field /*04000019*/ public static literal valuetype System.ConsoleKey/*02000007*/ Spacebar = int32(0x00000020)
  .field /*0400001A*/ public static literal valuetype System.ConsoleKey/*02000007*/ PageUp = int32(0x00000021)
  .field /*0400001B*/ public static literal valuetype System.ConsoleKey/*02000007*/ PageDown = int32(0x00000022)
  .field /*0400001C*/ public static literal valuetype System.ConsoleKey/*02000007*/ End = int32(0x00000023)
  .field /*0400001D*/ public static literal valuetype System.ConsoleKey/*02000007*/ Home = int32(0x00000024)
  .field /*0400001E*/ public static literal valuetype System.ConsoleKey/*02000007*/ LeftArrow = int32(0x00000025)
  .field /*0400001F*/ public static literal valuetype System.ConsoleKey/*02000007*/ UpArrow = int32(0x00000026)
  .field /*04000020*/ public static literal valuetype System.ConsoleKey/*02000007*/ RightArrow = int32(0x00000027)
  .field /*04000021*/ public static literal valuetype System.ConsoleKey/*02000007*/ DownArrow = int32(0x00000028)
  .field /*04000022*/ public static literal valuetype System.ConsoleKey/*02000007*/ Select = int32(0x00000029)
  .field /*04000023*/ public static literal valuetype System.ConsoleKey/*02000007*/ Print = int32(0x0000002A)
  .field /*04000024*/ public static literal valuetype System.ConsoleKey/*02000007*/ Execute = int32(0x0000002B)
  .field /*04000025*/ public static literal valuetype System.ConsoleKey/*02000007*/ PrintScreen = int32(0x0000002C)
  .field /*04000026*/ public static literal valuetype System.ConsoleKey/*02000007*/ Insert = int32(0x0000002D)
  .field /*04000027*/ public static literal valuetype System.ConsoleKey/*02000007*/ Delete = int32(0x0000002E)
  .field /*04000028*/ public static literal valuetype System.ConsoleKey/*02000007*/ Help = int32(0x0000002F)
  .field /*04000029*/ public static literal valuetype System.ConsoleKey/*02000007*/ D0 = int32(0x00000030)
  .field /*0400002A*/ public static literal valuetype System.ConsoleKey/*02000007*/ D1 = int32(0x00000031)
  .field /*0400002B*/ public static literal valuetype System.ConsoleKey/*02000007*/ D2 = int32(0x00000032)
  .field /*0400002C*/ public static literal valuetype System.ConsoleKey/*02000007*/ D3 = int32(0x00000033)
  .field /*0400002D*/ public static literal valuetype System.ConsoleKey/*02000007*/ D4 = int32(0x00000034)
  .field /*0400002E*/ public static literal valuetype System.ConsoleKey/*02000007*/ D5 = int32(0x00000035)
  .field /*0400002F*/ public static literal valuetype System.ConsoleKey/*02000007*/ D6 = int32(0x00000036)
  .field /*04000030*/ public static literal valuetype System.ConsoleKey/*02000007*/ D7 = int32(0x00000037)
  .field /*04000031*/ public static literal valuetype System.ConsoleKey/*02000007*/ D8 = int32(0x00000038)
  .field /*04000032*/ public static literal valuetype System.ConsoleKey/*02000007*/ D9 = int32(0x00000039)
  .field /*04000033*/ public static literal valuetype System.ConsoleKey/*02000007*/ A = int32(0x00000041)
  .field /*04000034*/ public static literal valuetype System.ConsoleKey/*02000007*/ B = int32(0x00000042)
  .field /*04000035*/ public static literal valuetype System.ConsoleKey/*02000007*/ C = int32(0x00000043)
  .field /*04000036*/ public static literal valuetype System.ConsoleKey/*02000007*/ D = int32(0x00000044)
  .field /*04000037*/ public static literal valuetype System.ConsoleKey/*02000007*/ E = int32(0x00000045)
  .field /*04000038*/ public static literal valuetype System.ConsoleKey/*02000007*/ F = int32(0x00000046)
  .field /*04000039*/ public static literal valuetype System.ConsoleKey/*02000007*/ G = int32(0x00000047)
  .field /*0400003A*/ public static literal valuetype System.ConsoleKey/*02000007*/ H = int32(0x00000048)
  .field /*0400003B*/ public static literal valuetype System.ConsoleKey/*02000007*/ I = int32(0x00000049)
  .field /*0400003C*/ public static literal valuetype System.ConsoleKey/*02000007*/ J = int32(0x0000004A)
  .field /*0400003D*/ public static literal valuetype System.ConsoleKey/*02000007*/ K = int32(0x0000004B)
  .field /*0400003E*/ public static literal valuetype System.ConsoleKey/*02000007*/ L = int32(0x0000004C)
  .field /*0400003F*/ public static literal valuetype System.ConsoleKey/*02000007*/ M = int32(0x0000004D)
  .field /*04000040*/ public static literal valuetype System.ConsoleKey/*02000007*/ N = int32(0x0000004E)
  .field /*04000041*/ public static literal valuetype System.ConsoleKey/*02000007*/ O = int32(0x0000004F)
  .field /*04000042*/ public static literal valuetype System.ConsoleKey/*02000007*/ P = int32(0x00000050)
  .field /*04000043*/ public static literal valuetype System.ConsoleKey/*02000007*/ Q = int32(0x00000051)
  .field /*04000044*/ public static literal valuetype System.ConsoleKey/*02000007*/ R = int32(0x00000052)
  .field /*04000045*/ public static literal valuetype System.ConsoleKey/*02000007*/ S = int32(0x00000053)
  .field /*04000046*/ public static literal valuetype System.ConsoleKey/*02000007*/ T = int32(0x00000054)
  .field /*04000047*/ public static literal valuetype System.ConsoleKey/*02000007*/ U = int32(0x00000055)
  .field /*04000048*/ public static literal valuetype System.ConsoleKey/*02000007*/ V = int32(0x00000056)
  .field /*04000049*/ public static literal valuetype System.ConsoleKey/*02000007*/ W = int32(0x00000057)
  .field /*0400004A*/ public static literal valuetype System.ConsoleKey/*02000007*/ X = int32(0x00000058)
  .field /*0400004B*/ public static literal valuetype System.ConsoleKey/*02000007*/ Y = int32(0x00000059)
  .field /*0400004C*/ public static literal valuetype System.ConsoleKey/*02000007*/ Z = int32(0x0000005A)
  .field /*0400004D*/ public static literal valuetype System.ConsoleKey/*02000007*/ LeftWindows = int32(0x0000005B)
  .field /*0400004E*/ public static literal valuetype System.ConsoleKey/*02000007*/ RightWindows = int32(0x0000005C)
  .field /*0400004F*/ public static literal valuetype System.ConsoleKey/*02000007*/ Applications = int32(0x0000005D)
  .field /*04000050*/ public static literal valuetype System.ConsoleKey/*02000007*/ Sleep = int32(0x0000005F)
  .field /*04000051*/ public static literal valuetype System.ConsoleKey/*02000007*/ NumPad0 = int32(0x00000060)
  .field /*04000052*/ public static literal valuetype System.ConsoleKey/*02000007*/ NumPad1 = int32(0x00000061)
  .field /*04000053*/ public static literal valuetype System.ConsoleKey/*02000007*/ NumPad2 = int32(0x00000062)
  .field /*04000054*/ public static literal valuetype System.ConsoleKey/*02000007*/ NumPad3 = int32(0x00000063)
  .field /*04000055*/ public static literal valuetype System.ConsoleKey/*02000007*/ NumPad4 = int32(0x00000064)
  .field /*04000056*/ public static literal valuetype System.ConsoleKey/*02000007*/ NumPad5 = int32(0x00000065)
  .field /*04000057*/ public static literal valuetype System.ConsoleKey/*02000007*/ NumPad6 = int32(0x00000066)
  .field /*04000058*/ public static literal valuetype System.ConsoleKey/*02000007*/ NumPad7 = int32(0x00000067)
  .field /*04000059*/ public static literal valuetype System.ConsoleKey/*02000007*/ NumPad8 = int32(0x00000068)
  .field /*0400005A*/ public static literal valuetype System.ConsoleKey/*02000007*/ NumPad9 = int32(0x00000069)
  .field /*0400005B*/ public static literal valuetype System.ConsoleKey/*02000007*/ Multiply = int32(0x0000006A)
  .field /*0400005C*/ public static literal valuetype System.ConsoleKey/*02000007*/ Add = int32(0x0000006B)
  .field /*0400005D*/ public static literal valuetype System.ConsoleKey/*02000007*/ Separator = int32(0x0000006C)
  .field /*0400005E*/ public static literal valuetype System.ConsoleKey/*02000007*/ Subtract = int32(0x0000006D)
  .field /*0400005F*/ public static literal valuetype System.ConsoleKey/*02000007*/ Decimal = int32(0x0000006E)
  .field /*04000060*/ public static literal valuetype System.ConsoleKey/*02000007*/ Divide = int32(0x0000006F)
  .field /*04000061*/ public static literal valuetype System.ConsoleKey/*02000007*/ F1 = int32(0x00000070)
  .field /*04000062*/ public static literal valuetype System.ConsoleKey/*02000007*/ F2 = int32(0x00000071)
  .field /*04000063*/ public static literal valuetype System.ConsoleKey/*02000007*/ F3 = int32(0x00000072)
  .field /*04000064*/ public static literal valuetype System.ConsoleKey/*02000007*/ F4 = int32(0x00000073)
  .field /*04000065*/ public static literal valuetype System.ConsoleKey/*02000007*/ F5 = int32(0x00000074)
  .field /*04000066*/ public static literal valuetype System.ConsoleKey/*02000007*/ F6 = int32(0x00000075)
  .field /*04000067*/ public static literal valuetype System.ConsoleKey/*02000007*/ F7 = int32(0x00000076)
  .field /*04000068*/ public static literal valuetype System.ConsoleKey/*02000007*/ F8 = int32(0x00000077)
  .field /*04000069*/ public static literal valuetype System.ConsoleKey/*02000007*/ F9 = int32(0x00000078)
  .field /*0400006A*/ public static literal valuetype System.ConsoleKey/*02000007*/ F10 = int32(0x00000079)
  .field /*0400006B*/ public static literal valuetype System.ConsoleKey/*02000007*/ F11 = int32(0x0000007A)
  .field /*0400006C*/ public static literal valuetype System.ConsoleKey/*02000007*/ F12 = int32(0x0000007B)
  .field /*0400006D*/ public static literal valuetype System.ConsoleKey/*02000007*/ F13 = int32(0x0000007C)
  .field /*0400006E*/ public static literal valuetype System.ConsoleKey/*02000007*/ F14 = int32(0x0000007D)
  .field /*0400006F*/ public static literal valuetype System.ConsoleKey/*02000007*/ F15 = int32(0x0000007E)
  .field /*04000070*/ public static literal valuetype System.ConsoleKey/*02000007*/ F16 = int32(0x0000007F)
  .field /*04000071*/ public static literal valuetype System.ConsoleKey/*02000007*/ F17 = int32(0x00000080)
  .field /*04000072*/ public static literal valuetype System.ConsoleKey/*02000007*/ F18 = int32(0x00000081)
  .field /*04000073*/ public static literal valuetype System.ConsoleKey/*02000007*/ F19 = int32(0x00000082)
  .field /*04000074*/ public static literal valuetype System.ConsoleKey/*02000007*/ F20 = int32(0x00000083)
  .field /*04000075*/ public static literal valuetype System.ConsoleKey/*02000007*/ F21 = int32(0x00000084)
  .field /*04000076*/ public static literal valuetype System.ConsoleKey/*02000007*/ F22 = int32(0x00000085)
  .field /*04000077*/ public static literal valuetype System.ConsoleKey/*02000007*/ F23 = int32(0x00000086)
  .field /*04000078*/ public static literal valuetype System.ConsoleKey/*02000007*/ F24 = int32(0x00000087)
  .field /*04000079*/ public static literal valuetype System.ConsoleKey/*02000007*/ BrowserBack = int32(0x000000A6)
  .field /*0400007A*/ public static literal valuetype System.ConsoleKey/*02000007*/ BrowserForward = int32(0x000000A7)
  .field /*0400007B*/ public static literal valuetype System.ConsoleKey/*02000007*/ BrowserRefresh = int32(0x000000A8)
  .field /*0400007C*/ public static literal valuetype System.ConsoleKey/*02000007*/ BrowserStop = int32(0x000000A9)
  .field /*0400007D*/ public static literal valuetype System.ConsoleKey/*02000007*/ BrowserSearch = int32(0x000000AA)
  .field /*0400007E*/ public static literal valuetype System.ConsoleKey/*02000007*/ BrowserFavorites = int32(0x000000AB)
  .field /*0400007F*/ public static literal valuetype System.ConsoleKey/*02000007*/ BrowserHome = int32(0x000000AC)
  .field /*04000080*/ public static literal valuetype System.ConsoleKey/*02000007*/ VolumeMute = int32(0x000000AD)
  .field /*04000081*/ public static literal valuetype System.ConsoleKey/*02000007*/ VolumeDown = int32(0x000000AE)
  .field /*04000082*/ public static literal valuetype System.ConsoleKey/*02000007*/ VolumeUp = int32(0x000000AF)
  .field /*04000083*/ public static literal valuetype System.ConsoleKey/*02000007*/ MediaNext = int32(0x000000B0)
  .field /*04000084*/ public static literal valuetype System.ConsoleKey/*02000007*/ MediaPrevious = int32(0x000000B1)
  .field /*04000085*/ public static literal valuetype System.ConsoleKey/*02000007*/ MediaStop = int32(0x000000B2)
  .field /*04000086*/ public static literal valuetype System.ConsoleKey/*02000007*/ MediaPlay = int32(0x000000B3)
  .field /*04000087*/ public static literal valuetype System.ConsoleKey/*02000007*/ LaunchMail = int32(0x000000B4)
  .field /*04000088*/ public static literal valuetype System.ConsoleKey/*02000007*/ LaunchMediaSelect = int32(0x000000B5)
  .field /*04000089*/ public static literal valuetype System.ConsoleKey/*02000007*/ LaunchApp1 = int32(0x000000B6)
  .field /*0400008A*/ public static literal valuetype System.ConsoleKey/*02000007*/ LaunchApp2 = int32(0x000000B7)
  .field /*0400008B*/ public static literal valuetype System.ConsoleKey/*02000007*/ Oem1 = int32(0x000000BA)
  .field /*0400008C*/ public static literal valuetype System.ConsoleKey/*02000007*/ OemPlus = int32(0x000000BB)
  .field /*0400008D*/ public static literal valuetype System.ConsoleKey/*02000007*/ OemComma = int32(0x000000BC)
  .field /*0400008E*/ public static literal valuetype System.ConsoleKey/*02000007*/ OemMinus = int32(0x000000BD)
  .field /*0400008F*/ public static literal valuetype System.ConsoleKey/*02000007*/ OemPeriod = int32(0x000000BE)
  .field /*04000090*/ public static literal valuetype System.ConsoleKey/*02000007*/ Oem2 = int32(0x000000BF)
  .field /*04000091*/ public static literal valuetype System.ConsoleKey/*02000007*/ Oem3 = int32(0x000000C0)
  .field /*04000092*/ public static literal valuetype System.ConsoleKey/*02000007*/ Oem4 = int32(0x000000DB)
  .field /*04000093*/ public static literal valuetype System.ConsoleKey/*02000007*/ Oem5 = int32(0x000000DC)
  .field /*04000094*/ public static literal valuetype System.ConsoleKey/*02000007*/ Oem6 = int32(0x000000DD)
  .field /*04000095*/ public static literal valuetype System.ConsoleKey/*02000007*/ Oem7 = int32(0x000000DE)
  .field /*04000096*/ public static literal valuetype System.ConsoleKey/*02000007*/ Oem8 = int32(0x000000DF)
  .field /*04000097*/ public static literal valuetype System.ConsoleKey/*02000007*/ Oem102 = int32(0x000000E2)
  .field /*04000098*/ public static literal valuetype System.ConsoleKey/*02000007*/ Process = int32(0x000000E5)
  .field /*04000099*/ public static literal valuetype System.ConsoleKey/*02000007*/ Packet = int32(0x000000E7)
  .field /*0400009A*/ public static literal valuetype System.ConsoleKey/*02000007*/ Attention = int32(0x000000F6)
  .field /*0400009B*/ public static literal valuetype System.ConsoleKey/*02000007*/ CrSel = int32(0x000000F7)
  .field /*0400009C*/ public static literal valuetype System.ConsoleKey/*02000007*/ ExSel = int32(0x000000F8)
  .field /*0400009D*/ public static literal valuetype System.ConsoleKey/*02000007*/ EraseEndOfFile = int32(0x000000F9)
  .field /*0400009E*/ public static literal valuetype System.ConsoleKey/*02000007*/ Play = int32(0x000000FA)
  .field /*0400009F*/ public static literal valuetype System.ConsoleKey/*02000007*/ Zoom = int32(0x000000FB)
  .field /*040000A0*/ public static literal valuetype System.ConsoleKey/*02000007*/ NoName = int32(0x000000FC)
  .field /*040000A1*/ public static literal valuetype System.ConsoleKey/*02000007*/ Pa1 = int32(0x000000FD)
  .field /*040000A2*/ public static literal valuetype System.ConsoleKey/*02000007*/ OemClear = int32(0x000000FE)
} // end of class System.ConsoleKey

.class /*02000008*/ public auto ansi sealed System.ConsoleModifiers
       extends [System.Runtime/*23000001*/]System.Enum/*0100001C*/
{
  .custom /*0C000012:0A000011*/ instance void [System.Runtime/*23000001*/]System.FlagsAttribute/*0100001E*/::.ctor() /* 0A000011 */ = ( 01 00 00 00 ) 
  .field /*040000A3*/ public specialname rtspecialname int32 value__
  .field /*040000A4*/ public static literal valuetype System.ConsoleModifiers/*02000008*/ Alt = int32(0x00000001)
  .field /*040000A5*/ public static literal valuetype System.ConsoleModifiers/*02000008*/ Shift = int32(0x00000002)
  .field /*040000A6*/ public static literal valuetype System.ConsoleModifiers/*02000008*/ Control = int32(0x00000004)
} // end of class System.ConsoleModifiers

.class /*02000009*/ public auto ansi sealed System.ConsoleSpecialKey
       extends [System.Runtime/*23000001*/]System.Enum/*0100001C*/
{
  .field /*040000A7*/ public specialname rtspecialname int32 value__
  .field /*040000A8*/ public static literal valuetype System.ConsoleSpecialKey/*02000009*/ ControlBreak = int32(0x00000001)
  .field /*040000A9*/ public static literal valuetype System.ConsoleSpecialKey/*02000009*/ ControlC = int32(0x00000000)
} // end of class System.ConsoleSpecialKey


// =============================================================

// *********** DISASSEMBLY COMPLETE ***********************
