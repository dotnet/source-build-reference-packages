<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.JScript</name>
  </assembly>
  <members>
    <member name="T:Microsoft.JScript.ActivationObject">
      <summary>Represents an object that is taking part in a scope hierarchy. This class contains methods for resolving scope and for getting member information. It belongs to the compilation and run-time state category.</summary>
    </member>
    <member name="M:Microsoft.JScript.ActivationObject.CreateField(System.String,System.Reflection.FieldAttributes,System.Object)">
      <summary>Creates a new global variable, using the specified name, value, and attributes.</summary>
      <returns>A global variable that has the specified name, value, and attributes.</returns>
      <param name="name">The name of the field.</param>
      <param name="attributeFlags">A bitwise combination of the enumeration values that describe the attributes of a field. <see cref="F:System.Reflection.FieldAttributes.Static" /> is added automatically.</param>
      <param name="value">The value of the field.</param>
    </member>
    <member name="F:Microsoft.JScript.ActivationObject.field_table">
      <summary>Stores an array of variables that are in scope.</summary>
    </member>
    <member name="M:Microsoft.JScript.ActivationObject.GetDefaultThisObject">
      <summary>Gets the current default scope, which is either the contained object of a with statement scope, or the global scope.</summary>
      <returns>The current default scope.</returns>
    </member>
    <member name="M:Microsoft.JScript.ActivationObject.GetField(System.String,System.Int32)">
      <summary>Returns a field that has the specified name by searching the scope hierarchy. This method searches only the scope that is specified by the lexical level.</summary>
      <returns>A <see cref="T:System.Reflection.FieldInfo" /> object that has the specified name.</returns>
      <param name="name">The name of the field to search for.</param>
      <param name="lexLevel">The lexical level to search.</param>
    </member>
    <member name="M:Microsoft.JScript.ActivationObject.GetGlobalScope">
      <summary>Gets the global scope by searching the scope hierarchy until it finds a scope that includes static variables, for example, a module scope.</summary>
      <returns>The global scope.</returns>
    </member>
    <member name="M:Microsoft.JScript.ActivationObject.GetLocalField(System.String)">
      <summary>Gets the local declaration of a field that has the specified name. This is used at compile time for error checking.</summary>
      <returns>The local declaration of the field.</returns>
      <param name="name">The name of the field.</param>
    </member>
    <member name="M:Microsoft.JScript.ActivationObject.GetMember(System.String,System.Reflection.BindingFlags)">
      <summary>Retrieves an array of <see cref="T:System.Reflection.MemberInfo" /> objects that correspond to all members that match a specified name.</summary>
      <returns>An array of objects that match the <paramref name="name" /> argument.</returns>
      <param name="name">The name of the member to search for.</param>
      <param name="bindingAttr">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</param>
    </member>
    <member name="M:Microsoft.JScript.ActivationObject.GetMembers(System.Reflection.BindingFlags)">
      <summary>Retrieves an array of <see cref="T:System.Reflection.MemberInfo" /> objects that corresponds to all members of the current object.</summary>
      <returns>An array of objects that contains all members of the current object.</returns>
      <param name="bindingAttr">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</param>
    </member>
    <member name="M:Microsoft.JScript.ActivationObject.GetMemberValue(System.String,System.Int32)">
      <summary>Gets the value of the specified member by searching the scope hierarchy. This method searches only the scope that is specified by the lexical level.</summary>
      <returns>The value of the member <paramref name="name" />.</returns>
      <param name="name">The name of the member to search for.</param>
      <param name="lexlevel">The lexical level to search.</param>
    </member>
    <member name="T:Microsoft.JScript.ActiveXObjectConstructor">
      <summary>Represents a prototype-based object that is defined by a constructor function. This class belongs to the built-in object model category.</summary>
    </member>
    <member name="M:Microsoft.JScript.ActiveXObjectConstructor.CreateInstance(System.Object[])">
      <summary>Creates an instance of the prototype-based object, passing in the specified arguments.</summary>
      <returns>The instance of the object.</returns>
      <param name="args">The arguments to pass to the constructor.</param>
    </member>
    <member name="M:Microsoft.JScript.ActiveXObjectConstructor.Invoke">
      <summary>Returns null in all cases.</summary>
      <returns>null.</returns>
    </member>
    <member name="T:Microsoft.JScript.ArgumentsObject">
      <summary>Represents the information that is used to call a function. This includes the function, the caller, the arguments, and information about the stack frame. This class belongs to the objects and functions category.</summary>
    </member>
    <member name="F:Microsoft.JScript.ArgumentsObject.callee">
      <summary>A closure function that represents the function that is being called.</summary>
    </member>
    <member name="F:Microsoft.JScript.ArgumentsObject.caller">
      <summary>The calling scope information from the stack frame.</summary>
    </member>
    <member name="F:Microsoft.JScript.ArgumentsObject.length">
      <summary>The number of arguments.</summary>
    </member>
    <member name="T:Microsoft.JScript.ArrayConstructor">
      <summary>Represents a prototype-based object that is defined by a constructor function. This class belongs to the built-in object model category.</summary>
    </member>
    <member name="M:Microsoft.JScript.ArrayConstructor.ConstructArray(System.Object[])">
      <summary>Helper method that creates a new array and populates it with the specified values.</summary>
      <returns>The new array.</returns>
      <param name="args">The values to populate the array with.</param>
    </member>
    <member name="M:Microsoft.JScript.ArrayConstructor.CreateInstance(System.Object[])">
      <summary>Creates an instance of the prototype-based object, passing in the specified arguments.</summary>
      <returns>The instance of the object.</returns>
      <param name="args">The arguments to pass to the constructor.</param>
    </member>
    <member name="M:Microsoft.JScript.ArrayConstructor.Invoke(System.Object[])">
      <summary>Invokes a method of the prototype-based object, passing in the specified arguments.</summary>
      <returns>The result of the call to the method.</returns>
      <param name="args">The arguments to pass to the method.</param>
    </member>
    <member name="T:Microsoft.JScript.ArrayLiteral">
      <summary>This class is used by the JScript parser to represent an array literal.</summary>
    </member>
    <member name="M:Microsoft.JScript.ArrayLiteral.#ctor(Microsoft.JScript.Context,Microsoft.JScript.ASTList)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.ArrayLiteral" /> class, specifying the context and elements.</summary>
      <param name="context">The current document context.</param>
      <param name="elements">The elements of the array.</param>
    </member>
    <member name="T:Microsoft.JScript.ArrayObject">
      <summary>Represents an array object. This class belongs to the built-in object model category.</summary>
    </member>
    <member name="P:Microsoft.JScript.ArrayObject.length">
      <summary>Gets or sets the length of the array.</summary>
      <returns>The length of the array.</returns>
    </member>
    <member name="M:Microsoft.JScript.ArrayObject.SpliceSlowly(System.UInt32,System.UInt32,System.Object[],Microsoft.JScript.ArrayObject,System.UInt32,System.UInt32)">
      <summary>Adds elements to and removes elements from an array, at the specified position in the array. You can add elements, remove elements, or both.</summary>
      <param name="start">The position in this array at which to add and remove elements.</param>
      <param name="deleteCount">The number of elements to remove, if any.</param>
      <param name="args">The elements to add, if any.</param>
      <param name="outArray">An array that contains the elements removed from this array, if any have been removed.</param>
      <param name="oldLength">The previous length of this array.</param>
      <param name="newLength">The new length of this array.</param>
    </member>
    <member name="T:Microsoft.JScript.ArrayPrototype">
      <summary>Provides static methods and properties for <see cref="T:Microsoft.JScript.ArrayObject" /> objects. All methods of this class are called by passing in a reference to the object that is requesting access to the method. This class belongs to the built-in object model category.</summary>
    </member>
    <member name="M:Microsoft.JScript.ArrayPrototype.concat(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Object[])">
      <summary>Concatenates objects or arrays to the end of the specified object or array.</summary>
      <returns>
        <paramref name="thisob" /> and <paramref name="args" /> concatenated.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="engine">A reference to the scripting engine.</param>
      <param name="args">The objects or arrays to append to <paramref name="thisob" />.</param>
    </member>
    <member name="P:Microsoft.JScript.ArrayPrototype.constructor">
      <summary>Gets a reference to a prototype-based object that is using this prototype.</summary>
      <returns>A reference to a prototype-based object.</returns>
    </member>
    <member name="M:Microsoft.JScript.ArrayPrototype.join(System.Object,System.Object)">
      <summary>Concatenates the elements of the specified array into a string. The elements are separated by the specified separator.</summary>
      <returns>A string that concatenates the elements of <paramref name="thisob" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="separator">The string to use to separate the elements. The default is a comma.</param>
    </member>
    <member name="M:Microsoft.JScript.ArrayPrototype.pop(System.Object)">
      <summary>Removes the last element from the specified array and returns it.</summary>
      <returns>The last element of <paramref name="thisob" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.ArrayPrototype.push(System.Object,System.Object[])">
      <summary>Adds new elements to the end of the specified array.</summary>
      <returns>The new length of <paramref name="thisob" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="args">The elements to add to <paramref name="thisob" />.</param>
    </member>
    <member name="M:Microsoft.JScript.ArrayPrototype.reverse(System.Object)">
      <summary>Reverses the elements of the specified array.</summary>
      <returns>
        <paramref name="thisob" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.ArrayPrototype.shift(System.Object)">
      <summary>Removes the first element from the specified array and returns it. Shifts the remaining elements to the previous positions. </summary>
      <returns>The first element of <paramref name="thisob" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.ArrayPrototype.slice(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Double,System.Object)">
      <summary>Creates a new array that contains the specified consecutive elements from the specified array.</summary>
      <returns>A new array that contains the consecutive elements between <paramref name="thisob" />[<paramref name="start" />] and <paramref name="thisob" />[<paramref name="end" />].</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="engine">A reference to the scripting engine.</param>
      <param name="start">The first consecutive element to get.</param>
      <param name="end">The last consecutive element to get.</param>
    </member>
    <member name="M:Microsoft.JScript.ArrayPrototype.sort(System.Object,System.Object)">
      <summary>Sorts the elements of the specified array by using the specified function to compare the elements.</summary>
      <returns>
        <paramref name="thisob" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="function">The function to use to compare elements.</param>
    </member>
    <member name="M:Microsoft.JScript.ArrayPrototype.splice(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Double,System.Double,System.Object[])">
      <summary>Adds and removes elements from an array at the specified position in the array. You can add elements, remove elements, or both.</summary>
      <returns>A new array that contains the elements removed from <paramref name="thisob" />, if any have been removed.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="engine">A reference to the scripting engine.</param>
      <param name="start">The position in the array to add and remove elements.</param>
      <param name="deleteCnt">The number of elements to remove, if any.</param>
      <param name="args">The elements to add, if any.</param>
    </member>
    <member name="M:Microsoft.JScript.ArrayPrototype.toLocaleString(System.Object)">
      <summary>Creates a string representation of the specified object that concatenates the elements and separates them with a <see cref="P:System.Globalization.TextInfo.ListSeparator" /> and a space.</summary>
      <returns>A string that concatenates the elements of <paramref name="thisob" /> and separates them with a <see cref="P:System.Globalization.TextInfo.ListSeparator" /> and a space.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.ArrayPrototype.toString(System.Object)">
      <summary>Creates a string representation of the specified object that concatenates the elements and separates them with a comma.</summary>
      <returns>A string that concatenates the elements of <paramref name="thisob" /> and separates them with a comma.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.ArrayPrototype.unshift(System.Object,System.Object[])">
      <summary>Adds new elements to the start of the specified array. Shifts the existing elements to the next positions.</summary>
      <returns>The new length of <paramref name="thisob" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="args">The elements to add to <paramref name="thisob" />.</param>
    </member>
    <member name="T:Microsoft.JScript.ArrayWrapper">
      <summary>Wraps an array to create a JScript <see cref="T:Microsoft.JScript.ArrayObject" />. This class wraps either a .NET Framework <see cref="T:System.Array" /> object or a JScript <see cref="T:Microsoft.JScript.ArrayObject" /> object. </summary>
    </member>
    <member name="M:Microsoft.JScript.ArrayWrapper.GetType">
      <summary>Gets the type of the array.</summary>
      <returns>The type of <see cref="T:System.Array" /> or <see cref="T:Microsoft.JScript.ArrayObject" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.ArrayWrapper.length">
      <summary>Gets the length of the array.</summary>
      <returns>The length of the array.</returns>
    </member>
    <member name="T:Microsoft.JScript.AssemblyCustomAttributeList">
      <summary>This class is used by the JScript parser to store the attributes that are assigned to an assembly.</summary>
    </member>
    <member name="T:Microsoft.JScript.AST">
      <summary>Represents the abstract syntax tree that is used to parse JScript code.</summary>
    </member>
    <member name="T:Microsoft.JScript.ASTList">
      <summary>Maintains a list of <see cref="T:Microsoft.JScript.AST" /> elements. This class belongs to the abstract syntax tree category.</summary>
    </member>
    <member name="T:Microsoft.JScript.BinaryOp">
      <summary>Represents the base class for classes that perform operations on two operands, such as <see cref="T:Microsoft.JScript.Plus" />, <see cref="T:Microsoft.JScript.Equality" />, and <see cref="T:Microsoft.JScript.Relational" />. This class belongs to the abstract syntax tree category.</summary>
    </member>
    <member name="M:Microsoft.JScript.BinaryOp.GetOperator(System.Reflection.IReflect,System.Reflection.IReflect)">
      <summary>Determines the best method to call based on the operation that is requested and the data types of the operands.</summary>
      <returns>The recommended method to call on the operands.</returns>
      <param name="ir1">The data type of the first operand.</param>
      <param name="ir2">The data type of the second operand.</param>
    </member>
    <member name="F:Microsoft.JScript.BinaryOp.operand1">
      <summary>Represents the first operand of the operation.</summary>
    </member>
    <member name="F:Microsoft.JScript.BinaryOp.operand2">
      <summary>Represents the second operand of the operation.</summary>
    </member>
    <member name="F:Microsoft.JScript.BinaryOp.operatorMeth">
      <summary>Represents the operation that is actually performed.</summary>
    </member>
    <member name="F:Microsoft.JScript.BinaryOp.operatorTok">
      <summary>Represents the operation that is requested. One of the <see cref="T:Microsoft.JScript.JSToken" /> enumeration values.</summary>
    </member>
    <member name="F:Microsoft.JScript.BinaryOp.type1">
      <summary>Represents the data type of the first operand of the operation.</summary>
    </member>
    <member name="F:Microsoft.JScript.BinaryOp.type2">
      <summary>Represents the data type of the second operand of the operation.</summary>
    </member>
    <member name="T:Microsoft.JScript.Binding">
      <summary>Represents a reference to a class member, callable expression, or variable name. This class attempts to resolve the reference to the correct value at compile time. </summary>
    </member>
    <member name="F:Microsoft.JScript.Binding.defaultMember">
      <summary>Stores a reference to a default indexed property.</summary>
    </member>
    <member name="M:Microsoft.JScript.Binding.GetObject">
      <summary>When overridden in a derived class, gets the object that the binding reference is defined on.</summary>
      <returns>The object that the binding reference is defined on.</returns>
    </member>
    <member name="M:Microsoft.JScript.Binding.HandleNoSuchMemberError">
      <summary>When overridden in a derived class, handles situations in which the binding reference is to a member that cannot be found.</summary>
    </member>
    <member name="F:Microsoft.JScript.Binding.isAssignmentToDefaultIndexedProperty">
      <summary>Stores a value that indicates whether the binding reference is to a default indexed property.</summary>
    </member>
    <member name="F:Microsoft.JScript.Binding.isFullyResolved">
      <summary>Stores a value that indicates whether the binding reference is fully resolved.</summary>
    </member>
    <member name="M:Microsoft.JScript.Binding.IsMissing(System.Object)">
      <summary>Determines whether the specified object is equivalent to <see cref="T:Microsoft.JScript.Missing" />.</summary>
      <returns>true if <paramref name="value" /> is equivalent to <see cref="T:Microsoft.JScript.Missing" />; otherwise, false.</returns>
      <param name="value">The object to compare.</param>
    </member>
    <member name="F:Microsoft.JScript.Binding.isNonVirtual">
      <summary>Stores a value that indicates whether the binding reference is to a member that overrides a member in a base class.</summary>
    </member>
    <member name="F:Microsoft.JScript.Binding.name">
      <summary>Stores a string that identifies the binding reference.</summary>
    </member>
    <member name="M:Microsoft.JScript.Binding.ResolveRHValue">
      <summary>Resolves the right-hand side of the binding reference.</summary>
    </member>
    <member name="M:Microsoft.JScript.Binding.TranslateToILObject(System.Reflection.Emit.ILGenerator,System.Type,System.Boolean)">
      <summary>When overridden in a derived class, generates Microsoft intermediate language (MSIL) code for the object that the binding reference is defined on.</summary>
      <param name="il">An object that generates Microsoft intermediate language (MSIL) instructions.</param>
      <param name="obtype">The type of the object.</param>
      <param name="noValue">true if the object does not have a value; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.JScript.Binding.TranslateToILWithDupOfThisOb(System.Reflection.Emit.ILGenerator)">
      <summary>When overridden in a derived class, generates Microsoft intermediate language (MSIL) code for the binding reference. If necessary, copies the current topmost value on the evaluation stack and then pushes the copy onto the evaluation stack.</summary>
      <param name="il">An object that generates Microsoft intermediate language (MSIL) instructions.</param>
    </member>
    <member name="T:Microsoft.JScript.BitwiseBinary">
      <summary>Performs bitwise binary operations. This class belongs to the abstract syntax tree category.</summary>
    </member>
    <member name="M:Microsoft.JScript.BitwiseBinary.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.BitwiseBinary" /> class.</summary>
      <param name="operatorTok">One of the <see cref="T:Microsoft.JScript.JSToken" /> enumeration values. Specifies the operation to perform.</param>
    </member>
    <member name="M:Microsoft.JScript.BitwiseBinary.EvaluateBitwiseBinary(System.Object,System.Object)">
      <summary>Performs a bitwise binary operation.</summary>
      <returns>The result of the operation.</returns>
      <param name="v1">The first operand.</param>
      <param name="v2">The second operand.</param>
    </member>
    <member name="T:Microsoft.JScript.Block">
      <summary>Represents a block in JScript. This class is used mainly by the <see cref="T:Microsoft.JScript.JSParser" /> to create <see cref="T:Microsoft.JScript.Block" /> objects when it parses code. This class belongs to the abstract syntax tree category.</summary>
    </member>
    <member name="T:Microsoft.JScript.BlockScope">
      <summary>Represents the scope of a block of code that is taking part in a scope hierarchy and that can be pushed onto the global scope stack. For example, this class can represent the scope of a try block. </summary>
    </member>
    <member name="M:Microsoft.JScript.BlockScope.#ctor(Microsoft.JScript.ScriptObject,System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.BlockScope" /> class.</summary>
      <param name="parent">The parent of the scope.</param>
      <param name="name">The name of the scope.</param>
      <param name="scopeId">The ID of the scope.</param>
    </member>
    <member name="M:Microsoft.JScript.BlockScope.CreateField(System.String,System.Reflection.FieldAttributes,System.Object)">
      <summary>Creates a new scope variable, using the specified name, value, and attributes.</summary>
      <returns>A scope variable that has the specified name, value, and attributes.</returns>
      <param name="name">The name of the field.</param>
      <param name="attributeFlags">A bitwise combination of the enumeration values that describe the attributes of the field.</param>
      <param name="value">The value of the field.</param>
    </member>
    <member name="T:Microsoft.JScript.BooleanConstructor">
      <summary>Represents a prototype-based object that is defined by a constructor function. This class belongs to the built-in object model category.</summary>
    </member>
    <member name="M:Microsoft.JScript.BooleanConstructor.CreateInstance(System.Object[])">
      <summary>Creates an instance of the prototype-based object, passing in the specified arguments.</summary>
      <returns>The instance of the object.</returns>
      <param name="args">The arguments to pass to the constructor.</param>
    </member>
    <member name="M:Microsoft.JScript.BooleanConstructor.Invoke(System.Object)">
      <summary>Invokes a method of a prototype-based object, passing in the specified arguments.</summary>
      <returns>The result of the call to the method.</returns>
      <param name="arg">The arguments to pass to the method.</param>
    </member>
    <member name="T:Microsoft.JScript.BooleanObject">
      <summary>Represents a Boolean object. This class belongs to the built-in object model category.</summary>
    </member>
    <member name="M:Microsoft.JScript.BooleanObject.#ctor(Microsoft.JScript.ScriptObject,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.BooleanObject" /> class, specifying the parent and subtype.</summary>
      <param name="prototype">The parent of the object.</param>
      <param name="subType">The subtype of the object.</param>
    </member>
    <member name="M:Microsoft.JScript.BooleanObject.GetType">
      <summary>Returns <see cref="T:System.Boolean" /> or <see cref="T:Microsoft.JScript.BooleanObject" />.</summary>
      <returns>
        <see cref="T:System.Boolean" /> or <see cref="T:Microsoft.JScript.BooleanObject" />.</returns>
    </member>
    <member name="T:Microsoft.JScript.BooleanPrototype">
      <summary>Provides static methods and properties for <see cref="T:Microsoft.JScript.BooleanObject" /> objects. All methods of this class are called by passing in a reference to the object that is requesting access to the method. This class belongs to the built-in object model category.</summary>
    </member>
    <member name="M:Microsoft.JScript.BooleanPrototype.#ctor(Microsoft.JScript.ObjectPrototype,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.BooleanPrototype" /> class.</summary>
      <param name="parent">A static instance of the parent class of this class.</param>
      <param name="baseType">An instance of the type of this class.</param>
    </member>
    <member name="P:Microsoft.JScript.BooleanPrototype.constructor">
      <summary>Gets a reference to a prototype-based object that is using this prototype.</summary>
      <returns>A reference to a prototype-based object.</returns>
    </member>
    <member name="M:Microsoft.JScript.BooleanPrototype.toString(System.Object)">
      <summary>Creates a string representation of the specified object by using the <see cref="T:Microsoft.JScript.Convert" /> class.</summary>
      <returns>A string representation of <paramref name="thisob" /> that is created by the <see cref="T:Microsoft.JScript.Convert" /> class.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.BooleanPrototype.valueOf(System.Object)">
      <summary>Returns the specified object as a <see cref="T:Microsoft.JScript.BooleanObject" /> or a <see cref="T:System.Boolean" />.</summary>
      <returns>
        <paramref name="thisob" /> as a <see cref="T:Microsoft.JScript.BooleanObject" /> or a <see cref="T:System.Boolean" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="T:Microsoft.JScript.BreakOutOfFinally">
      <summary>Represents the exception state when code execution breaks out of a finally block.  </summary>
    </member>
    <member name="M:Microsoft.JScript.BreakOutOfFinally.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.BreakOutOfFinally" /> class, using the specified target.</summary>
      <param name="target">The target of the exception.</param>
    </member>
    <member name="M:Microsoft.JScript.BreakOutOfFinally.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.BreakOutOfFinally" /> class, using the specified error message.</summary>
      <param name="m">The message that describes the error.</param>
    </member>
    <member name="M:Microsoft.JScript.BreakOutOfFinally.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.BreakOutOfFinally" /> class, using the specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="m">The message that describes the error.</param>
      <param name="e">The exception that is the cause of the current exception.</param>
    </member>
    <member name="M:Microsoft.JScript.BreakOutOfFinally.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Stores information about the exception in the <see cref="T:System.Runtime.Serialization.SerializationInfo" />. The stored information includes the <see cref="F:Microsoft.JScript.ContinueOutOfFinally.target" /> value.</summary>
      <param name="s">The serialized object data about the exception that is being thrown.</param>
      <param name="c">Contextual information about the source or destination.</param>
    </member>
    <member name="F:Microsoft.JScript.BreakOutOfFinally.target">
      <summary>Stores the target of the exception.</summary>
    </member>
    <member name="T:Microsoft.JScript.Closure">
      <summary>Represents a closure function. This class belongs to the objects and functions category.</summary>
    </member>
    <member name="M:Microsoft.JScript.Closure.#ctor(Microsoft.JScript.FunctionObject)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.Closure" /> class.</summary>
      <param name="func">The function that this closure represents.</param>
    </member>
    <member name="F:Microsoft.JScript.Closure.arguments">
      <summary>The arguments to use for the function.</summary>
    </member>
    <member name="F:Microsoft.JScript.Closure.caller">
      <summary>The calling scope information from the stack frame.</summary>
    </member>
    <member name="M:Microsoft.JScript.Closure.ToString">
      <summary>Creates a string representation of the function, such as the name of the function or the context.</summary>
      <returns>A string representation of the function.</returns>
    </member>
    <member name="T:Microsoft.JScript.CmdLineError">
      <summary>Specifies errors that occur when you run the command-line compiler jsc.exe. This enumeration is used to create <see cref="T:Microsoft.JScript.CmdLineException" /> objects.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.AssemblyNotFound">
      <summary>The referenced assembly '{0}' could not be found.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.CannotCreateEngine">
      <summary>Cannot create JScript engine.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.CompilerConstant">
      <summary>Cannot change value of compiler constant '{0}'.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.DuplicateFileAsSourceAndAssembly">
      <summary>Duplicate file name: '{0}' is listed as both a source file and an imported assembly.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.DuplicateResourceFile">
      <summary>Resource file '{0}' referenced more than once.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.DuplicateResourceName">
      <summary>Resource name '{0}' is not unique.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.DuplicateSourceFile">
      <summary>Duplicate file name: '{0}' is listed as a source file more than once.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.ErrorSavingCompiledState">
      <summary>Error saving compiled state: {0}.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.IncompatibleTargets">
      <summary>The value of the <see cref="P:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable" /> property is not compatible with target type '{0}'.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.InvalidAssembly">
      <summary>'{0}' is not a valid assembly.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.InvalidCharacters">
      <summary>File name '{0}' contains invalid characters (wildcard characters are not supported).</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.InvalidCodePage">
      <summary>Code page '{0}' is invalid or not installed.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.InvalidDefinition">
      <summary>Definition '{0}' must be assigned a Boolean or integral value.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.InvalidForCompilerOptions">
      <summary>'{0}' is not allowed in the CompilerOptions field.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.InvalidLocaleID">
      <summary>Locale ID '{0}' is invalid or not installed.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.InvalidPlatform">
      <summary>Platform '{0}' is invalid. Specify 'x86', 'Itanium', 'x64', or 'anycpu'.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.InvalidSourceFile">
      <summary>'{0}' is not a valid source file.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.InvalidTarget">
      <summary>Target '{0}' is invalid. Specify 'exe' or 'library'.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.InvalidVersion">
      <summary>'{0}' is not a valid version string.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.InvalidWarningLevel">
      <summary>Invalid warning level specified with option '{0}'.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.LAST">
      <summary>A placeholder enumeration member that contains the same value as the last (highest) assigned enumeration value.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.ManagedResourceNotFound">
      <summary>Managed resource '{0}' was not found.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.MissingDefineArgument">
      <summary>Missing identifier for '-define:' command-line option.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.MissingExtension">
      <summary>Missing file extension for '{0}'.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.MissingLibArgument">
      <summary>Missing file specification for '-lib:' command-line option.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.MissingReference">
      <summary>Missing reference in argument list '{0}'.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.MissingVersionInfo">
      <summary>Missing version information in -assembly.version option.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.MultipleOutputNames">
      <summary>Multiple output file names specified.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.MultipleTargets">
      <summary>Multiple targets specified.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.MultipleWin32Resources">
      <summary>Cannot specify more than one Win32 resource file.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.NestedResponseFiles">
      <summary>Cannot process nested response files.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.NoCodePage">
      <summary>No code page is specified with option '{0}'.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.NoError">
      <summary>No error. This is the default value.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.NoFileName">
      <summary>No file name specified with option '{0}'.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.NoInputSourcesSpecified">
      <summary>No input sources specified.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.NoLocaleID">
      <summary>No Locale ID is specified with option '{0}'.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.NoWarningLevel">
      <summary>No warning level specified with option '{0}'.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.ResourceNotFound">
      <summary>Win32 resource '{0}' was not found.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.SourceFileTooBig">
      <summary>Source file too big.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.SourceNotFound">
      <summary>Could not find source file '{0}'.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.UnknownOption">
      <summary>Unknown option '{0}'.</summary>
    </member>
    <member name="F:Microsoft.JScript.CmdLineError.Unspecified">
      <summary>Unspecified error.</summary>
    </member>
    <member name="T:Microsoft.JScript.CmdLineException">
      <summary>Represents errors that occur when you run the command-line compiler jsc.exe. </summary>
    </member>
    <member name="M:Microsoft.JScript.CmdLineException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.CmdLineException" /> class.</summary>
    </member>
    <member name="M:Microsoft.JScript.CmdLineException.#ctor(Microsoft.JScript.CmdLineError,System.Globalization.CultureInfo)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.CmdLineException" /> class, using the specified error code and culture information.</summary>
      <param name="errorCode">One of the enumeration values. Specifies what the error is.</param>
      <param name="culture">Culture-specific information.</param>
    </member>
    <member name="M:Microsoft.JScript.CmdLineException.#ctor(Microsoft.JScript.CmdLineError,System.String,System.Globalization.CultureInfo)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.CmdLineException" /> class, using the specified error code, context, and culture information.</summary>
      <param name="errorCode">One of the enumeration values. Specifies what the error is.</param>
      <param name="context">The context in which the error occurred.</param>
      <param name="culture">Culture-specific information.</param>
    </member>
    <member name="M:Microsoft.JScript.CmdLineException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.CmdLineException" /> class, using serialized data.</summary>
      <param name="s">The serialized object data about the exception that is being thrown.</param>
      <param name="c">Contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.JScript.CmdLineException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.CmdLineException" /> class, using the specified error message.</summary>
      <param name="m">The message that describes the error.</param>
    </member>
    <member name="M:Microsoft.JScript.CmdLineException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.CmdLineException" /> class, using the specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="m">The message that describes the error.</param>
      <param name="e">The exception that is the cause of the current exception, or null if no inner exception is specified.</param>
    </member>
    <member name="M:Microsoft.JScript.CmdLineException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Stores serialized object data about the exception that is being thrown.</summary>
      <param name="s">Serialized object data about the exception that is being thrown.</param>
      <param name="c">Contextual information about the source or destination</param>
    </member>
    <member name="P:Microsoft.JScript.CmdLineException.Message">
      <summary>Gets a message that describes the current exception.</summary>
      <returns>The error message that explains the reason for the exception.</returns>
    </member>
    <member name="M:Microsoft.JScript.CmdLineException.ResourceKey(Microsoft.JScript.CmdLineError)">
      <summary>Returns the key for the specified error in a resource file.</summary>
      <returns>The key for <paramref name="errorCode" />.</returns>
      <param name="errorCode">One of the enumeration values. Specifies the error to get the key for.</param>
    </member>
    <member name="T:Microsoft.JScript.CmdLineOptionParser">
      <summary>Determines whether options that are specified to the command-line compiler jsc.exe are correctly formed, and reads the arguments if any are included.</summary>
    </member>
    <member name="M:Microsoft.JScript.CmdLineOptionParser.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.CmdLineOptionParser" /> class.</summary>
    </member>
    <member name="M:Microsoft.JScript.CmdLineOptionParser.IsArgumentOption(System.String,System.String)">
      <summary>Gets the argument from the specified command-line option. Applies to options that have only one name, such as /out:&lt;filename&gt;.</summary>
      <returns>The argument, "" if the argument is not specified, or null if the option or argument is not correctly formed.</returns>
      <param name="option">The command-line option that the user specified.</param>
      <param name="prefix">The option name.</param>
    </member>
    <member name="M:Microsoft.JScript.CmdLineOptionParser.IsArgumentOption(System.String,System.String,System.String)">
      <summary>Gets the argument from the specified command-line option. Applies to options that can be specified by a short or long form of the option name, such as /r or /reference for /r[eference]:&lt;file list&gt;.</summary>
      <returns>The argument, "" if the argument is not specified, or null if the option or argument is not correctly formed.</returns>
      <param name="option">The command-line option that the user specified.</param>
      <param name="shortPrefix">The short form of the option name.</param>
      <param name="longPrefix">The long form of the option name.</param>
    </member>
    <member name="M:Microsoft.JScript.CmdLineOptionParser.IsBooleanOption(System.String,System.String)">
      <summary>Gets the + or - argument from the specified command-line option. Applies to options that have only one name, such as /debug[+|-].</summary>
      <returns>false for -; true for + or if the argument is not specified; null if the option or argument is not correctly formed.</returns>
      <param name="option">The command-line option that the user specified.</param>
      <param name="prefix">The option name.</param>
    </member>
    <member name="M:Microsoft.JScript.CmdLineOptionParser.IsBooleanOption(System.String,System.String,System.String)">
      <summary>Gets the + or - argument from the specified command-line option. Applies to options that can be specified by a short or long form of the option name.</summary>
      <returns>false for -; true for + or if the argument is not specified; null if the option or argument is not correctly formed.</returns>
      <param name="option">The command-line option that the user specified.</param>
      <param name="shortPrefix">The short form of the option name.</param>
      <param name="longPrefix">The long form of the option name.</param>
    </member>
    <member name="M:Microsoft.JScript.CmdLineOptionParser.IsSimpleOption(System.String,System.String)">
      <summary>Verifies that the specified option is correctly formed.</summary>
      <returns>true if the option is correctly formed; otherwise, false.</returns>
      <param name="option">The command-line option that the user specified.</param>
      <param name="prefix">The option name.</param>
    </member>
    <member name="T:Microsoft.JScript.COMCharStream">
      <summary>Represents a stream that sends its data to an <see cref="T:Microsoft.JScript.IMessageReceiver" />. The data is stored in a buffer until the data is flushed or the stream is closed. </summary>
    </member>
    <member name="M:Microsoft.JScript.COMCharStream.#ctor(Microsoft.JScript.IMessageReceiver)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.COMCharStream" /> class.</summary>
      <param name="messageReceiver">The receiver of the data of the stream.</param>
    </member>
    <member name="P:Microsoft.JScript.COMCharStream.CanRead">
      <summary>Gets a value that indicates whether the current stream supports reading.</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="P:Microsoft.JScript.COMCharStream.CanSeek">
      <summary>Gets a value that indicates whether the current stream supports seeking.</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="P:Microsoft.JScript.COMCharStream.CanWrite">
      <summary>Gets a value that indicates whether the current stream supports writing.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="M:Microsoft.JScript.COMCharStream.Close">
      <summary>Sends this stream's data to the <see cref="T:Microsoft.JScript.IMessageReceiver" /> and clears its buffer.</summary>
    </member>
    <member name="M:Microsoft.JScript.COMCharStream.Flush">
      <summary>Sends this stream's data to the <see cref="T:Microsoft.JScript.IMessageReceiver" /> and clears its buffer.</summary>
    </member>
    <member name="P:Microsoft.JScript.COMCharStream.Length">
      <summary>Gets the length of the stream.</summary>
      <returns>The length of the stream.</returns>
    </member>
    <member name="P:Microsoft.JScript.COMCharStream.Position">
      <summary>Gets the current position in the stream. The set method does not do anything.</summary>
      <returns>The current position in the stream.</returns>
    </member>
    <member name="M:Microsoft.JScript.COMCharStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> exception in all cases.</summary>
      <returns>Throws a <see cref="T:System.NotSupportedException" /> exception in all cases.</returns>
      <param name="buffer">An array of bytes in which to store the data that is read from the stream.</param>
      <param name="offset">The zero-based byte offset in <paramref name="buffer" /> at which to begin storing the data that is read from the stream.</param>
      <param name="count">The maximum number of bytes to read from the stream.</param>
    </member>
    <member name="M:Microsoft.JScript.COMCharStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>Sets the position in the current stream. This method does not do anything. It always returns 0.</summary>
      <returns>0 in all cases.</returns>
      <param name="offset">A byte offset relative to the <paramref name="origin" /> parameter.</param>
      <param name="origin">A value that indicates the reference point that is used to obtain the new position.</param>
    </member>
    <member name="M:Microsoft.JScript.COMCharStream.SetLength(System.Int64)">
      <summary>Sets the length of the stream.</summary>
      <param name="value">The new length of the stream.</param>
    </member>
    <member name="M:Microsoft.JScript.COMCharStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>Writes the specified byte data to the stream.</summary>
      <param name="buffer">An array of byte data to copy to the current stream.</param>
      <param name="offset">The zero-based byte offset in <paramref name="buffer" /> at which to begin copying bytes to the current stream.</param>
      <param name="count">The number of bytes to copy from <paramref name="buffer" /> to the current stream.</param>
    </member>
    <member name="T:Microsoft.JScript.COMFieldInfo">
      <summary>Enables JScript to communicate with an external COM field. This class is used by an external COM implementation to expose its objects to JScript because JScript needs a managed <see cref="T:System.Reflection.MemberInfo" /> in order to bind to an external object. </summary>
    </member>
    <member name="M:Microsoft.JScript.COMFieldInfo.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.COMFieldInfo" /> class.</summary>
    </member>
    <member name="P:Microsoft.JScript.COMFieldInfo.Attributes">
      <summary>Gets the attributes that are associated with this field.</summary>
      <returns>
        <see cref="F:System.Reflection.FieldAttributes.Public" />
      </returns>
    </member>
    <member name="P:Microsoft.JScript.COMFieldInfo.DeclaringType">
      <summary>Gets the type that declares this field.</summary>
      <returns>null, because the type that declares this field is an external COM object.</returns>
    </member>
    <member name="P:Microsoft.JScript.COMFieldInfo.FieldHandle">
      <summary>Throws an <see cref="F:Microsoft.JScript.JSError.InternalError" /> exception in all cases.</summary>
      <returns>Throws an <see cref="F:Microsoft.JScript.JSError.InternalError" /> exception in all cases.</returns>
    </member>
    <member name="P:Microsoft.JScript.COMFieldInfo.FieldType">
      <summary>Gets the type of this field.</summary>
      <returns>The type of <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.JScript.COMFieldInfo.GetCOMMemberInfo">
      <summary>Gets a managed object that enables JScript to communicate with this external COM field.</summary>
      <returns>A managed object that enables JScript to communicate with this external COM field.</returns>
    </member>
    <member name="M:Microsoft.JScript.COMFieldInfo.GetCustomAttributes(System.Boolean)">
      <summary>Returns an array that contains the custom attributes that are attached to this field.</summary>
      <returns>An array of <see cref="T:System.Reflection.FieldInfo" /> objects that has zero elements.</returns>
      <param name="inherit">true to search this member's inheritance hierarchy to find the attributes.</param>
    </member>
    <member name="M:Microsoft.JScript.COMFieldInfo.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Returns an array that contains the custom attributes that are attached to this field, searching only for attributes of the specified type.</summary>
      <returns>An array of <see cref="T:System.Reflection.FieldInfo" /> objects that has zero elements.</returns>
      <param name="t">The type of attribute to search for.</param>
      <param name="inherit">true to search this member's inheritance hierarchy to find the attributes.</param>
    </member>
    <member name="M:Microsoft.JScript.COMFieldInfo.GetValue(System.Object)">
      <summary>Gets the value of the external COM field by using the <see cref="T:Microsoft.JScript.COMMemberInfo" /> that was specified to the <see cref="M:Microsoft.JScript.COMFieldInfo.Initialize(System.String,Microsoft.JScript.COMMemberInfo)" /> method.</summary>
      <returns>The value of the external COM field.</returns>
      <param name="obj">The argument list to pass to the external COM field. This parameter is ignored.</param>
    </member>
    <member name="M:Microsoft.JScript.COMFieldInfo.Initialize(System.String,Microsoft.JScript.COMMemberInfo)">
      <summary>Initializes the information that enables JScript to communicate with this external COM field.</summary>
      <param name="name">The name of the external COM field that this object represents.</param>
      <param name="dispatch">Information that enables JScript to access the external COM field.</param>
    </member>
    <member name="M:Microsoft.JScript.COMFieldInfo.IsDefined(System.Type,System.Boolean)">
      <summary>Determines whether the specified attribute type is attached to this field.</summary>
      <returns>false in all cases.</returns>
      <param name="t">The attribute type to search for.</param>
      <param name="inherit">true to search this member's inheritance hierarchy to find the attributes.</param>
    </member>
    <member name="P:Microsoft.JScript.COMFieldInfo.MemberType">
      <summary>Gets the type of member that this field is. Identifies the type of class derived from <see cref="T:System.Reflection.MemberInfo" /> that this class derives from.</summary>
      <returns>
        <see cref="F:System.Reflection.MemberTypes.Field" />, because this class derives from <see cref="T:System.Reflection.FieldInfo" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.COMFieldInfo.Name">
      <summary>Gets the name of the external COM field that this object represents.</summary>
      <returns>The name of the external COM field that this object represents.</returns>
    </member>
    <member name="P:Microsoft.JScript.COMFieldInfo.ReflectedType">
      <summary>Gets the class object that was used to obtain this instance through reflection.</summary>
      <returns>null, because this instance was not obtained through reflection.</returns>
    </member>
    <member name="M:Microsoft.JScript.COMFieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)">
      <summary>Sets the value of the external COM field by using the <see cref="T:Microsoft.JScript.COMMemberInfo" /> that was specified to the <see cref="M:Microsoft.JScript.COMFieldInfo.Initialize(System.String,Microsoft.JScript.COMMemberInfo)" /> method.</summary>
      <param name="obj">The object whose field value will be set. This parameter is ignored.</param>
      <param name="value">The new value of the external COM member.</param>
      <param name="invokeAttr">A bitwise combination of the enumeration values that control the binding.</param>
      <param name="binder">An object that converts the type from actual argument type to formal argument type.</param>
      <param name="culture">Provides information about a specific culture or locale. Used to format numbers, dates, and strings correctly.</param>
    </member>
    <member name="T:Microsoft.JScript.COMMemberInfo">
      <summary>Defines methods that enable JScript to communicate with an external COM member. This interface is used by an external COM implementation to expose its objects to JScript because JScript requires a managed <see cref="T:System.Reflection.MemberInfo" /> to bind to an external object.</summary>
    </member>
    <member name="M:Microsoft.JScript.COMMemberInfo.Call(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
      <summary>When implemented in a class, enables JScript to call an external COM member. Uses the specified binding information.</summary>
      <returns>The value of the call to the external COM member.</returns>
      <param name="invokeAttr">A bitwise combination of the enumeration values that control the binding.</param>
      <param name="binder">An object that performs type conversion from actual argument type to formal argument type.</param>
      <param name="arguments">The argument list to pass to the external COM member.</param>
      <param name="culture">Provides information about a specific culture or locale to format numbers, dates, and strings correctly.</param>
    </member>
    <member name="M:Microsoft.JScript.COMMemberInfo.GetValue(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
      <summary>When implemented in a class, enables JScript to get the value of an external COM member using the specified binding information.</summary>
      <returns>The value of the external COM member.</returns>
      <param name="invokeAttr">A bitwise combination of the enumeration values that control the binding.</param>
      <param name="binder">An object that performs type conversion from actual argument type to formal argument type.</param>
      <param name="index">The argument list to pass to the external COM member.</param>
      <param name="culture">Provides information about a specific culture or locale to format numbers, dates, and strings correctly.</param>
    </member>
    <member name="M:Microsoft.JScript.COMMemberInfo.SetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
      <summary>When implemented in a class, enables JScript to set the value of an external COM member to the specified new value, using the specified binding information.</summary>
      <param name="value">The new value of the external COM member.</param>
      <param name="invokeAttr">A bitwise combination of the enumeration values that control the binding.</param>
      <param name="binder">An object that performs type conversion from actual argument type to formal argument type.</param>
      <param name="index">The argument list to pass to the external COM member.</param>
      <param name="culture">Provides information about a specific culture or locale to format numbers, dates, and strings correctly.</param>
    </member>
    <member name="T:Microsoft.JScript.COMMethodInfo">
      <summary>Enables JScript to communicate with an external COM method. This class is used by an external COM implementation to expose its objects to JScript because JScript needs a managed <see cref="T:System.Reflection.MemberInfo" /> in order to bind to an external object. </summary>
    </member>
    <member name="M:Microsoft.JScript.COMMethodInfo.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.COMMethodInfo" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.COMMethodInfo._comObject">
      <summary>Stores a managed object that enables JScript to communicate with this external COM method.</summary>
    </member>
    <member name="F:Microsoft.JScript.COMMethodInfo._name">
      <summary>Stores the name of the external COM method that this object represents.</summary>
    </member>
    <member name="P:Microsoft.JScript.COMMethodInfo.Attributes">
      <summary>Gets the attributes that are associated with this method.</summary>
      <returns>
        <see cref="F:System.Reflection.MethodAttributes.Public" />
      </returns>
    </member>
    <member name="P:Microsoft.JScript.COMMethodInfo.DeclaringType">
      <summary>Gets the type that declares this method.</summary>
      <returns>null, because the type that declares this method is an external COM object.</returns>
    </member>
    <member name="F:Microsoft.JScript.COMMethodInfo.EmptyParams">
      <summary>Stores an array of <see cref="T:System.Reflection.ParameterInfo" /> objects that has zero elements.</summary>
    </member>
    <member name="M:Microsoft.JScript.COMMethodInfo.GetBaseDefinition">
      <summary>Returns the <see cref="T:System.Reflection.MethodInfo" /> object for the method on the direct or indirect base class in which this method was first declared.</summary>
      <returns>this in all cases.</returns>
    </member>
    <member name="M:Microsoft.JScript.COMMethodInfo.GetCOMMemberInfo">
      <summary>Gets a managed object that enables JScript to communicate with this external COM method.</summary>
      <returns>A managed object that enables JScript to communicate with this external COM method.</returns>
    </member>
    <member name="M:Microsoft.JScript.COMMethodInfo.GetMethodImplementationFlags">
      <summary>Returns information about the implementation of this method.</summary>
      <returns>
        <see cref="F:System.Reflection.MethodImplAttributes.Managed" /> and <see cref="F:System.Reflection.MethodImplAttributes.IL" />.</returns>
    </member>
    <member name="M:Microsoft.JScript.COMMethodInfo.GetParameters">
      <summary>Gets the parameters of this external COM method.</summary>
      <returns>An array of <see cref="T:System.Reflection.ParameterInfo" /> objects that has zero elements.</returns>
    </member>
    <member name="M:Microsoft.JScript.COMMethodInfo.Initialize(System.String,Microsoft.JScript.COMMemberInfo)">
      <summary>Initializes the information that enables JScript to communicate with this external COM method.</summary>
      <param name="name">The name of the external COM method that this object represents.</param>
      <param name="dispatch">Information that enables JScript to access the external COM method.</param>
    </member>
    <member name="M:Microsoft.JScript.COMMethodInfo.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
      <summary>Calls the external COM method by using the <see cref="T:Microsoft.JScript.COMMemberInfo" /> that was specified to the <see cref="M:Microsoft.JScript.COMMethodInfo.Initialize(System.String,Microsoft.JScript.COMMemberInfo)" /> method.</summary>
      <returns>The return value of the call to the external COM method.</returns>
      <param name="obj">The object to call the method on. This parameter is ignored.</param>
      <param name="invokeAttr">A bitwise combination of the enumeration values that control the binding.</param>
      <param name="binder">An object that converts the type from actual argument type to formal argument type.</param>
      <param name="parameters">The argument list to pass to the external COM member.</param>
      <param name="culture">Provides information about a specific culture or locale. Used to format numbers, dates, and strings correctly.</param>
    </member>
    <member name="P:Microsoft.JScript.COMMethodInfo.MemberType">
      <summary>Gets the type of member that this method is. Identifies the type of class derived from <see cref="T:System.Reflection.MemberInfo" /> that this class derives from.</summary>
      <returns>
        <see cref="F:System.Reflection.MemberTypes.Method" />, because this class derives from <see cref="T:System.Reflection.MethodInfo" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.COMMethodInfo.MethodHandle">
      <summary>Throws an <see cref="F:Microsoft.JScript.JSError.InternalError" /> exception in all cases.</summary>
      <returns>Throws an <see cref="F:Microsoft.JScript.JSError.InternalError" /> exception in all cases.</returns>
    </member>
    <member name="P:Microsoft.JScript.COMMethodInfo.Name">
      <summary>Gets the name of the external COM method that this object represents.</summary>
      <returns>The name of the external COM method that this object represents.</returns>
    </member>
    <member name="P:Microsoft.JScript.COMMethodInfo.ReflectedType">
      <summary>Gets the class object that was used to obtain this instance through reflection.</summary>
      <returns>null, because this instance was not obtained through reflection.</returns>
    </member>
    <member name="P:Microsoft.JScript.COMMethodInfo.ReturnType">
      <summary>Gets the type of the return value of this method.</summary>
      <returns>null in all cases.</returns>
    </member>
    <member name="P:Microsoft.JScript.COMMethodInfo.ReturnTypeCustomAttributes">
      <summary>Gets the custom attributes for the type of the return value of this method.</summary>
      <returns>null in all cases.</returns>
    </member>
    <member name="M:Microsoft.JScript.COMMethodInfo.ToString">
      <summary>Returns a string that represents the current method.</summary>
      <returns>An empty string.</returns>
    </member>
    <member name="T:Microsoft.JScript.COMPropertyInfo">
      <summary>Enables JScript to communicate with an external COM property. This class is used by an external COM implementation to expose its objects to JScript because JScript needs a managed <see cref="T:System.Reflection.MemberInfo" /> in order to bind to an external object. </summary>
    </member>
    <member name="M:Microsoft.JScript.COMPropertyInfo.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.COMPropertyInfo" /> class.</summary>
    </member>
    <member name="P:Microsoft.JScript.COMPropertyInfo.Attributes">
      <summary>Gets the attributes that are associated with this property.</summary>
      <returns>
        <see cref="F:System.Reflection.PropertyAttributes.None" />
      </returns>
    </member>
    <member name="P:Microsoft.JScript.COMPropertyInfo.CanRead">
      <summary>Gets a value that indicates whether the property can be read.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="P:Microsoft.JScript.COMPropertyInfo.CanWrite">
      <summary>Gets a value that indicates whether the property can be written to.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="P:Microsoft.JScript.COMPropertyInfo.DeclaringType">
      <summary>Gets the type that declares this property.</summary>
      <returns>null, because the type that declares this property is an external COM object.</returns>
    </member>
    <member name="M:Microsoft.JScript.COMPropertyInfo.GetAccessors(System.Boolean)">
      <summary>Gets an array whose elements contain the get and set accessors of the external COM property that this object represents.</summary>
      <returns>A two-element array of <see cref="T:System.Reflection.MethodInfo" /> objects that contains the get and set methods of this property.</returns>
      <param name="nonPublic">true to include non-public accessors.</param>
    </member>
    <member name="M:Microsoft.JScript.COMPropertyInfo.GetCOMMemberInfo">
      <summary>Gets a managed object that enables JScript to communicate with this external COM property.</summary>
      <returns>A managed object that enables JScript to communicate with this external COM property.</returns>
    </member>
    <member name="M:Microsoft.JScript.COMPropertyInfo.GetCustomAttributes(System.Boolean)">
      <summary>Returns an array that contains the custom attributes that are attached to this property.</summary>
      <returns>An array of <see cref="T:System.Reflection.FieldInfo" /> objects that has zero elements.</returns>
      <param name="inherit">true to search this member's inheritance hierarchy to find the attributes.</param>
    </member>
    <member name="M:Microsoft.JScript.COMPropertyInfo.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Returns an array that contains the custom attributes that are attached to this property, searching only for attributes of the specified type.</summary>
      <returns>An array of <see cref="T:System.Reflection.FieldInfo" /> objects that has zero elements.</returns>
      <param name="t">The type of attribute to search for.</param>
      <param name="inherit">true to search this member's inheritance hierarchy to find the attributes.</param>
    </member>
    <member name="M:Microsoft.JScript.COMPropertyInfo.GetGetMethod(System.Boolean)">
      <summary>Returns the get accessor for this property.</summary>
      <returns>The get accessor for this property.</returns>
      <param name="nonPublic">true to include non-public accessors.</param>
    </member>
    <member name="M:Microsoft.JScript.COMPropertyInfo.GetIndexParameters">
      <summary>Returns an array of all the index parameters for the property.</summary>
      <returns>An array of <see cref="T:System.Reflection.ParameterInfo" /> objects that has zero elements.</returns>
    </member>
    <member name="M:Microsoft.JScript.COMPropertyInfo.GetSetMethod(System.Boolean)">
      <summary>Returns the set accessor for this property.</summary>
      <returns>The set accessor for this property.</returns>
      <param name="nonPublic">true to include non-public accessors.</param>
    </member>
    <member name="M:Microsoft.JScript.COMPropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
      <summary>Gets the value of the external COM property by using the <see cref="T:Microsoft.JScript.COMMemberInfo" /> that was specified to the <see cref="M:Microsoft.JScript.COMPropertyInfo.Initialize(System.String,Microsoft.JScript.COMMemberInfo)" /> method.</summary>
      <returns>The value of the external COM property.</returns>
      <param name="obj">The object whose property value you want to get. This parameter is ignored.</param>
      <param name="invokeAttr">A bitwise combination of the enumeration values that control the binding.</param>
      <param name="binder">An object that converts the type from actual argument type to formal argument type.</param>
      <param name="index">The argument list to pass to the external COM property.</param>
      <param name="culture">Provides information about a specific culture or locale. Used to format numbers, dates, and strings correctly.</param>
    </member>
    <member name="M:Microsoft.JScript.COMPropertyInfo.Initialize(System.String,Microsoft.JScript.COMMemberInfo)">
      <summary>Initializes the information that enables JScript to communicate with this external COM property.</summary>
      <param name="name">The name of the external COM property that this object represents.</param>
      <param name="dispatch">Information that enables JScript to access the external COM property.</param>
    </member>
    <member name="M:Microsoft.JScript.COMPropertyInfo.IsDefined(System.Type,System.Boolean)">
      <summary>Determines whether the specified attribute type is attached to this property.</summary>
      <returns>false in all cases.</returns>
      <param name="t">The attribute type to search for.</param>
      <param name="inherit">true to search this member's inheritance hierarchy to find the attributes.</param>
    </member>
    <member name="P:Microsoft.JScript.COMPropertyInfo.MemberType">
      <summary>Gets the type of member that this property is. Identifies the type of class derived from <see cref="T:System.Reflection.MemberInfo" /> that this class derives from.</summary>
      <returns>
        <see cref="F:System.Reflection.MemberTypes.Property" />, because this class derives from <see cref="T:System.Reflection.PropertyInfo" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.COMPropertyInfo.Name">
      <summary>Gets the name of the external COM property that this object represents.</summary>
      <returns>The name of the external COM property that this object represents.</returns>
    </member>
    <member name="P:Microsoft.JScript.COMPropertyInfo.PropertyType">
      <summary>Gets the type of this property.</summary>
      <returns>The type of <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.COMPropertyInfo.ReflectedType">
      <summary>Gets the class object that was used to obtain this instance through reflection.</summary>
      <returns>null, because this instance was not obtained through reflection.</returns>
    </member>
    <member name="M:Microsoft.JScript.COMPropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
      <summary>Sets the value of the external COM property by using the <see cref="T:Microsoft.JScript.COMMemberInfo" /> that was specified to the <see cref="M:Microsoft.JScript.COMPropertyInfo.Initialize(System.String,Microsoft.JScript.COMMemberInfo)" /> method.</summary>
      <param name="obj">The object whose property value will be set. This parameter is ignored.</param>
      <param name="value">The new value of the external COM member.</param>
      <param name="invokeAttr">A bitwise combination of the enumeration values that control the binding.</param>
      <param name="binder">An object that converts the type from actual argument type to formal argument type.</param>
      <param name="index">The argument list to pass to the external COM property.</param>
      <param name="culture">Provides information about a specific culture or locale. Used to format numbers, dates, and strings correctly.</param>
    </member>
    <member name="T:Microsoft.JScript.Context">
      <summary>Represents JScript source code. This class belongs to the compilation and run-time state category.</summary>
    </member>
    <member name="P:Microsoft.JScript.Context.EndColumn">
      <summary>Gets the column number in the line where this code ends. This includes whitespace at the start of the line.</summary>
      <returns>The column number where this code ends.</returns>
    </member>
    <member name="P:Microsoft.JScript.Context.EndLine">
      <summary>Gets the ending line number of this code.</summary>
      <returns>The ending line number of this code.</returns>
    </member>
    <member name="P:Microsoft.JScript.Context.EndPosition">
      <summary>Gets the position in the code string where this code ends, because all lines of code are stored in a single string.</summary>
      <returns>The position in the code string where this code ends.</returns>
    </member>
    <member name="M:Microsoft.JScript.Context.GetCode">
      <summary>Gets the code that the context contains, discarding any whitespace.</summary>
      <returns>The code that the context contains.</returns>
    </member>
    <member name="M:Microsoft.JScript.Context.GetToken">
      <summary>Gets an individual unit of code, or a token, that the context contains.</summary>
      <returns>An individual unit of code, or a token, that the context contains.</returns>
    </member>
    <member name="P:Microsoft.JScript.Context.StartColumn">
      <summary>Gets the column number in the line where this code starts. This includes whitespace at the start of the line.</summary>
      <returns>The column number where this code starts.</returns>
    </member>
    <member name="P:Microsoft.JScript.Context.StartLine">
      <summary>Gets the line number where this code starts.</summary>
      <returns>The line number where this code starts.</returns>
    </member>
    <member name="P:Microsoft.JScript.Context.StartPosition">
      <summary>Gets the position in the code string where this code starts, because all lines of code are stored in a single string.</summary>
      <returns>The position in the code string where this code starts.</returns>
    </member>
    <member name="T:Microsoft.JScript.ContinueOutOfFinally">
      <summary>Represents the exception state when code execution continues out of a finally block.  </summary>
    </member>
    <member name="M:Microsoft.JScript.ContinueOutOfFinally.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.ContinueOutOfFinally" /> class.</summary>
    </member>
    <member name="M:Microsoft.JScript.ContinueOutOfFinally.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.ContinueOutOfFinally" /> class, using the specified target.</summary>
      <param name="target">The target of the exception.</param>
    </member>
    <member name="M:Microsoft.JScript.ContinueOutOfFinally.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.ContinueOutOfFinally" /> class, using the specified error message.</summary>
      <param name="m">The message that describes the error.</param>
    </member>
    <member name="M:Microsoft.JScript.ContinueOutOfFinally.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.ContinueOutOfFinally" /> class, using the specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="m">The message that describes the error.</param>
      <param name="e">The exception that is the cause of the current exception.</param>
    </member>
    <member name="M:Microsoft.JScript.ContinueOutOfFinally.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Stores information about the exception in the <see cref="T:System.Runtime.Serialization.SerializationInfo" />. The stored information includes the <see cref="F:Microsoft.JScript.ContinueOutOfFinally.target" /> value.</summary>
      <param name="s">The serialized object data about the exception that is being thrown.</param>
      <param name="c">Contextual information about the source or destination.</param>
    </member>
    <member name="F:Microsoft.JScript.ContinueOutOfFinally.target">
      <summary>Stores the target of the exception.</summary>
    </member>
    <member name="T:Microsoft.JScript.Convert">
      <summary>Converts data from one type to another. This is a utility class.</summary>
    </member>
    <member name="M:Microsoft.JScript.Convert.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.Convert" /> class.</summary>
    </member>
    <member name="M:Microsoft.JScript.Convert.CheckIfDoubleIsInteger(System.Double)">
      <summary>Determines whether a <see cref="T:System.Double" /> variable contains an integer value.</summary>
      <returns>If <paramref name="d" /> contains an integer value, <paramref name="d" /> is returned. If not, an exception is thrown.</returns>
      <param name="d">The <see cref="T:System.Double" /> to test.</param>
    </member>
    <member name="M:Microsoft.JScript.Convert.CheckIfSingleIsInteger(System.Single)">
      <summary>Determines whether a <see cref="T:System.Single" /> variable contains an integer value.</summary>
      <returns>If <paramref name="s" /> contains an integer value, <paramref name="s" /> is returned. If not, an exception is thrown.</returns>
      <param name="s">The <see cref="T:System.Single" /> to test.</param>
    </member>
    <member name="M:Microsoft.JScript.Convert.Coerce(System.Object,System.Object)">
      <summary>Converts the specified value to the specified type.</summary>
      <returns>
        <paramref name="value" /> converted to <paramref name="type" />.</returns>
      <param name="value">The value to convert to a new type.</param>
      <param name="type">The type to convert <paramref name="value" /> to.</param>
    </member>
    <member name="M:Microsoft.JScript.Convert.Coerce2(System.Object,System.TypeCode,System.Boolean)">
      <summary>Converts the specified value to the specified <see cref="T:System.TypeCode" />, optionally allowing data loss.</summary>
      <returns>
        <paramref name="value" /> converted to the <paramref name="target" /> type.</returns>
      <param name="value">The value to convert to a new type.</param>
      <param name="target">The type to convert <paramref name="value" /> to.</param>
      <param name="truncationPermitted">true to allow data loss; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.JScript.Convert.CoerceT(System.Object,System.Type,System.Boolean)">
      <summary>Converts the specified value to the specified <see cref="T:System.Type" />, optionally allowing data loss.</summary>
      <returns>
        <paramref name="value" /> converted to the type <paramref name="t" />.</returns>
      <param name="value">The value to convert to a new type.</param>
      <param name="t">The type to convert <paramref name="value" /> to.</param>
      <param name="explicitOK">true to allow data loss; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.JScript.Convert.IsBadIndex(Microsoft.JScript.AST)">
      <summary>Determines whether a variable contains an array index value.</summary>
      <returns>true if <paramref name="ast" /> contains an array index value; otherwise, false.</returns>
      <param name="ast">The variable to test.</param>
    </member>
    <member name="M:Microsoft.JScript.Convert.ThrowTypeMismatch(System.Object)">
      <summary>Throws a <see cref="T:Microsoft.JScript.JScriptException" /> exception in all cases.</summary>
      <param name="val">The source code that caused the exception.</param>
    </member>
    <member name="M:Microsoft.JScript.Convert.ToBoolean(System.Double)">
      <summary>Converts the specified <see cref="T:System.Double" /> to a <see cref="T:System.Boolean" />.</summary>
      <returns>false if <paramref name="d" /> is 0; otherwise, true.</returns>
      <param name="d">The value to convert.</param>
    </member>
    <member name="M:Microsoft.JScript.Convert.ToBoolean(System.Object)">
      <summary>Converts the specified <see cref="T:System.Object" /> to a <see cref="T:System.Boolean" />.</summary>
      <returns>
        <paramref name="value" /> converted to a <see cref="T:System.Boolean" />.</returns>
      <param name="value">The value to convert.</param>
    </member>
    <member name="M:Microsoft.JScript.Convert.ToBoolean(System.Object,System.Boolean)">
      <summary>Converts the specified <see cref="T:System.Object" /> value to a <see cref="T:System.Boolean" /> structure, optionally allowing data loss.</summary>
      <returns>
        <paramref name="value" /> converted to a <see cref="T:System.Boolean" />.</returns>
      <param name="value">The value to convert.</param>
      <param name="explicitConversion">true to allow data loss; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.JScript.Convert.ToForInObject(System.Object,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>Converts the specified value to an <see cref="T:System.Object" /> that represents a collection of <see cref="T:Microsoft.JScript.AST" /> objects.</summary>
      <returns>
        <paramref name="value" /> converted to an <see cref="T:System.Object" />.</returns>
      <param name="value">The value to convert.</param>
      <param name="engine">A reference to the scripting engine.</param>
    </member>
    <member name="M:Microsoft.JScript.Convert.ToInt32(System.Object)">
      <summary>Converts the specified value to an <see cref="T:System.Int32" />.</summary>
      <returns>
        <paramref name="value" /> converted to an <see cref="T:System.Int32" />.</returns>
      <param name="value">The value to convert.</param>
    </member>
    <member name="M:Microsoft.JScript.Convert.ToNativeArray(System.Object,System.RuntimeTypeHandle)">
      <summary>Converts the specified <see cref="T:Microsoft.JScript.ArrayObject" /> to a typed <see cref="T:System.Array" />.</summary>
      <returns>
        <paramref name="value" /> converted to an <see cref="T:System.Array" /> if this is possible; otherwise, <paramref name="value" />.</returns>
      <param name="value">The <see cref="T:Microsoft.JScript.ArrayObject" /> to convert. </param>
      <param name="handle">The type of the elements in the array.</param>
    </member>
    <member name="M:Microsoft.JScript.Convert.ToNumber(System.Object)">
      <summary>Converts the specified <see cref="T:System.Object" /> to a <see cref="T:System.Double" />.</summary>
      <returns>
        <paramref name="value" /> converted to a <see cref="T:System.Double" />.</returns>
      <param name="value">The value to convert.</param>
    </member>
    <member name="M:Microsoft.JScript.Convert.ToNumber(System.String)">
      <summary>Converts the specified <see cref="T:System.String" /> to a <see cref="T:System.Double" />.</summary>
      <returns>
        <paramref name="str" /> converted to a <see cref="T:System.Double" />.</returns>
      <param name="str">The value to convert.</param>
    </member>
    <member name="M:Microsoft.JScript.Convert.ToObject(System.Object,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>Converts the specified value to an <see cref="T:System.Object" />. Throws an error if it cannot perform the conversion.</summary>
      <returns>
        <paramref name="value" /> converted to an <see cref="T:System.Object" />.</returns>
      <param name="value">The value to convert.</param>
      <param name="engine">A reference to the scripting engine.</param>
    </member>
    <member name="M:Microsoft.JScript.Convert.ToObject2(System.Object,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>Converts the specified value to an <see cref="T:System.Object" />. Returns null if it cannot perform the conversion.</summary>
      <returns>
        <paramref name="value" /> converted to an <see cref="T:System.Object" />.</returns>
      <param name="value">The value to convert.</param>
      <param name="engine">A reference to the scripting engine.</param>
    </member>
    <member name="M:Microsoft.JScript.Convert.ToString(System.Boolean)">
      <summary>Converts the specified <see cref="T:System.Boolean" /> to a <see cref="T:System.String" />.</summary>
      <returns>
        <paramref name="b" /> converted to a <see cref="T:System.String" />.</returns>
      <param name="b">The value to convert.</param>
    </member>
    <member name="M:Microsoft.JScript.Convert.ToString(System.Double)">
      <summary>Converts the specified <see cref="T:System.Double" /> to a <see cref="T:System.String" />.</summary>
      <returns>
        <paramref name="d" /> converted to a <see cref="T:System.String" />.</returns>
      <param name="d">The value to convert.</param>
    </member>
    <member name="M:Microsoft.JScript.Convert.ToString(System.Object,System.Boolean)">
      <summary>Converts the specified <see cref="T:System.Object" /> to a <see cref="T:System.String" />, optionally allowing data loss.</summary>
      <returns>
        <paramref name="value" /> converted to a <see cref="T:System.String" />.</returns>
      <param name="value">The value to convert.</param>
      <param name="explicitOK">true to allow data loss; otherwise, false.</param>
    </member>
    <member name="T:Microsoft.JScript.DateConstructor">
      <summary>Represents a prototype-based object that is defined by a constructor function. This class belongs to the built-in object model category.</summary>
    </member>
    <member name="M:Microsoft.JScript.DateConstructor.CreateInstance(System.Object[])">
      <summary>Creates an instance of the prototype-based object, passing in the specified arguments.</summary>
      <returns>An instance of the object.</returns>
      <param name="args">The arguments to pass to the constructor.</param>
    </member>
    <member name="M:Microsoft.JScript.DateConstructor.Invoke">
      <summary>Returns the number of milliseconds that have elapsed since January 1, 1970.</summary>
      <returns>The number of milliseconds that have elapsed since January 1, 1970.</returns>
    </member>
    <member name="M:Microsoft.JScript.DateConstructor.parse(System.String)">
      <summary>Converts the specified string representation of a date and time to its <see cref="T:System.Double" /> equivalent.</summary>
      <returns>A <see cref="T:System.Double" /> equivalent of the date and time that is contained in <paramref name="str" />.</returns>
      <param name="str">A string that contains a date and time to convert.</param>
    </member>
    <member name="M:Microsoft.JScript.DateConstructor.UTC(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Converts the specified date and time to its <see cref="T:System.Double" /> equivalent.</summary>
      <returns>A <see cref="T:System.Double" /> equivalent of the specified date and time.</returns>
      <param name="year">The year of the date and time to convert.</param>
      <param name="month">The month of the date and time to convert.</param>
      <param name="date">The date of the date and time to convert.</param>
      <param name="hours">The hours of the date and time to convert.</param>
      <param name="minutes">The minutes of the date and time to convert.</param>
      <param name="seconds">The seconds of the date and time to convert.</param>
      <param name="ms">The milliseconds of the date and time to convert.</param>
    </member>
    <member name="T:Microsoft.JScript.DateObject">
      <summary>Represents a date object. This class belongs to the built-in object model category.</summary>
    </member>
    <member name="T:Microsoft.JScript.DatePrototype">
      <summary>Provides static methods and properties for <see cref="T:Microsoft.JScript.DateObject" /> objects. All methods of this class are called by passing in a reference to the object that is requesting access to the method. This class belongs to the built-in object model category.</summary>
    </member>
    <member name="P:Microsoft.JScript.DatePrototype.constructor">
      <summary>Gets a reference to a prototype-based object that is using this prototype.</summary>
      <returns>A reference to a prototype-based object.</returns>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.getDate(System.Object)">
      <summary>Gets the date value of the specified <see cref="T:Microsoft.JScript.DateObject" />.</summary>
      <returns>The date value of <paramref name="thisob" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.getDay(System.Object)">
      <summary>Gets the day-of-the-week value of the specified <see cref="T:Microsoft.JScript.DateObject" />.</summary>
      <returns>The day-of-the-week value of <paramref name="thisob" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.getFullYear(System.Object)">
      <summary>Gets the year value of the specified <see cref="T:Microsoft.JScript.DateObject" />.</summary>
      <returns>The year value of <paramref name="thisob" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.getHours(System.Object)">
      <summary>Gets the hour value of the specified <see cref="T:Microsoft.JScript.DateObject" />.</summary>
      <returns>The hour value of <paramref name="thisob" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.getMilliseconds(System.Object)">
      <summary>Gets the millisecond value of the specified <see cref="T:Microsoft.JScript.DateObject" />.</summary>
      <returns>The millisecond value of <paramref name="thisob" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.getMinutes(System.Object)">
      <summary>Gets the minutes value of the specified <see cref="T:Microsoft.JScript.DateObject" />.</summary>
      <returns>The minutes value of <paramref name="thisob" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.getMonth(System.Object)">
      <summary>Gets the month value of the specified <see cref="T:Microsoft.JScript.DateObject" />.</summary>
      <returns>The month value of <paramref name="thisob" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.getSeconds(System.Object)">
      <summary>Gets the seconds value of the specified <see cref="T:Microsoft.JScript.DateObject" />.</summary>
      <returns>The seconds value of <paramref name="thisob" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.getTime(System.Object)">
      <summary>Gets the time value of the specified <see cref="T:Microsoft.JScript.DateObject" />.</summary>
      <returns>The time value of <paramref name="thisob" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.getTimezoneOffset(System.Object)">
      <summary>Gets the offset of the specified <see cref="T:Microsoft.JScript.DateObject" /> from Coordinated Universal Time (UTC).</summary>
      <returns>The difference between <paramref name="thisob" /> and Coordinated Universal Time (UTC).</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.getUTCDate(System.Object)">
      <summary>Gets the date value of the specified <see cref="T:Microsoft.JScript.DateObject" />, expressed in Coordinated Universal Time (UTC).</summary>
      <returns>The date value of <paramref name="thisob" />, expressed in UTC.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.getUTCDay(System.Object)">
      <summary>Gets the day-of-the-week value of the specified <see cref="T:Microsoft.JScript.DateObject" />, expressed in Coordinated Universal Time (UTC).</summary>
      <returns>The day-of-the-week value of <paramref name="thisob" />, expressed in UTC.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.getUTCFullYear(System.Object)">
      <summary>Gets the year value of the specified <see cref="T:Microsoft.JScript.DateObject" />, expressed in Coordinated Universal Time (UTC).</summary>
      <returns>The year value of <paramref name="thisob" />, expressed in UTC.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.getUTCHours(System.Object)">
      <summary>Gets the hour value of the specified <see cref="T:Microsoft.JScript.DateObject" />, expressed in Coordinated Universal Time (UTC).</summary>
      <returns>The hour value of <paramref name="thisob" />, expressed in UTC.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.getUTCMilliseconds(System.Object)">
      <summary>Gets the millisecond value of the specified <see cref="T:Microsoft.JScript.DateObject" />, expressed in Coordinated Universal Time (UTC).</summary>
      <returns>The millisecond value of <paramref name="thisob" />, expressed in UTC.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.getUTCMinutes(System.Object)">
      <summary>Gets the minutes value of the specified <see cref="T:Microsoft.JScript.DateObject" />, expressed in Coordinated Universal Time (UTC).</summary>
      <returns>The minutes value of <paramref name="thisob" />, expressed in UTC.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.getUTCMonth(System.Object)">
      <summary>Gets the month value of the specified <see cref="T:Microsoft.JScript.DateObject" />, expressed in Coordinated Universal Time (UTC).</summary>
      <returns>The month value of <paramref name="thisob" />, expressed in UTC.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.getUTCSeconds(System.Object)">
      <summary>Gets the seconds value of the specified <see cref="T:Microsoft.JScript.DateObject" />, expressed in Coordinated Universal Time (UTC).</summary>
      <returns>The seconds value of <paramref name="thisob" />, expressed in UTC.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.getVarDate(System.Object)">
      <summary>Returns the specified <see cref="T:Microsoft.JScript.DateObject" /> as a <see cref="T:System.DateTime" /> object.</summary>
      <returns>The value of <paramref name="thisob" />, expressed as a <see cref="T:System.DateTime" /> object.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.getYear(System.Object)">
      <summary>Gets the year value of the specified <see cref="T:Microsoft.JScript.DateObject" />, expressed in Coordinated Universal Time (UTC).</summary>
      <returns>The year value of <paramref name="thisob" />, expressed in UTC.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.setDate(System.Object,System.Double)">
      <summary>Sets the date value of a <see cref="T:Microsoft.JScript.DateObject" /> to the specified date value.</summary>
      <returns>The new value of <paramref name="thisob" /> after the value is set.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="ddate">The date value to set for <paramref name="thisob" />.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.setFullYear(System.Object,System.Double,System.Object,System.Object)">
      <summary>Sets the year value of a <see cref="T:Microsoft.JScript.DateObject" /> to the specified year value.</summary>
      <returns>The year value that is set for <paramref name="thisob" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="dyear">The year value to set for <paramref name="thisob" />.</param>
      <param name="month">The month value to set for <paramref name="thisob" />.</param>
      <param name="date">The date value to set for <paramref name="thisob" />.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.setHours(System.Object,System.Double,System.Object,System.Object,System.Object)">
      <summary>Sets the hour value of a <see cref="T:Microsoft.JScript.DateObject" /> to the specified hour value.</summary>
      <returns>The new value of <paramref name="thisob" /> after the value is set.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="dhour">The hour value to set for <paramref name="thisob" />.</param>
      <param name="min">The minutes value to set for <paramref name="thisob" />.</param>
      <param name="sec">The seconds value to set for <paramref name="thisob" />.</param>
      <param name="msec">The milliseconds value to set for <paramref name="thisob" />.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.setMilliseconds(System.Object,System.Double)">
      <summary>Sets the millisecond value of a <see cref="T:Microsoft.JScript.DateObject" /> to the specified millisecond value.</summary>
      <returns>The new value of <paramref name="thisob" /> after the value is set.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="dmsec">The millisecond value to set for <paramref name="thisob" />.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.setMinutes(System.Object,System.Double,System.Object,System.Object)">
      <summary>Sets the minutes value of a <see cref="T:Microsoft.JScript.DateObject" /> to the specified minutes value.</summary>
      <returns>The new value of <paramref name="thisob" /> after the value is set.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="dmin">The minutes value to set for <paramref name="thisob" />.</param>
      <param name="sec">The seconds value to set for <paramref name="thisob" />.</param>
      <param name="msec">The milliseconds value to set for <paramref name="thisob" />.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.setMonth(System.Object,System.Double,System.Object)">
      <summary>Sets the month value of a <see cref="T:Microsoft.JScript.DateObject" /> to the specified month value.</summary>
      <returns>The new value of <paramref name="thisob" /> after the value is set.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="dmonth">The month value to set for <paramref name="thisob" />.</param>
      <param name="date">The date value to set for <paramref name="thisob" />.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.setSeconds(System.Object,System.Double,System.Object)">
      <summary>Sets the seconds value of a <see cref="T:Microsoft.JScript.DateObject" /> to the specified seconds value.</summary>
      <returns>The new value of <paramref name="thisob" /> after the value is set.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="dsec">The seconds value to set for <paramref name="thisob" />.</param>
      <param name="msec">The milliseconds value to set for <paramref name="thisob" />.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.setTime(System.Object,System.Double)">
      <summary>Sets the time value of a <see cref="T:Microsoft.JScript.DateObject" /> to the specified time value.</summary>
      <returns>The new value of <paramref name="thisob" /> after the value is set.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="time">The time value to set for <paramref name="thisob" />.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.setUTCDate(System.Object,System.Double)">
      <summary>Sets the date value of a <see cref="T:Microsoft.JScript.DateObject" /> to the specified date value, expressed in Coordinated Universal Time (UTC).</summary>
      <returns>The new value of <paramref name="thisob" /> after the value is set, expressed in UTC.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="ddate">The date value to set for <paramref name="thisob" />.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.setUTCFullYear(System.Object,System.Double,System.Object,System.Object)">
      <summary>Sets the year value of a <see cref="T:Microsoft.JScript.DateObject" /> to the specified year value, expressed in Coordinated Universal Time (UTC).</summary>
      <returns>The new value of <paramref name="thisob" /> after the value is set, expressed in UTC.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="dyear">The year value to set for <paramref name="thisob" />.</param>
      <param name="month">The month value to set for <paramref name="thisob" />.</param>
      <param name="date">The date value to set for <paramref name="thisob" />.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.setUTCHours(System.Object,System.Double,System.Object,System.Object,System.Object)">
      <summary>Sets the hour value of a <see cref="T:Microsoft.JScript.DateObject" /> to the specified hour value, expressed in Coordinated Universal Time (UTC).</summary>
      <returns>The new value of <paramref name="thisob" /> after the value is set, expressed in UTC.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="dhour">The hour value to set for <paramref name="thisob" />.</param>
      <param name="min">The minutes value to set for <paramref name="thisob" />.</param>
      <param name="sec">The seconds value to set for <paramref name="thisob" />.</param>
      <param name="msec">The milliseconds value to set for <paramref name="thisob" />.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.setUTCMilliseconds(System.Object,System.Double)">
      <summary>Sets the millisecond value of a <see cref="T:Microsoft.JScript.DateObject" /> to the specified millisecond value, expressed in Coordinated Universal Time (UTC).</summary>
      <returns>The new value of <paramref name="thisob" /> after the value is set, expressed in UTC.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="dmsec">The millisecond value to set for <paramref name="thisob" />.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.setUTCMinutes(System.Object,System.Double,System.Object,System.Object)">
      <summary>Sets the minutes value of a <see cref="T:Microsoft.JScript.DateObject" /> to the specified minutes value, expressed in Coordinated Universal Time (UTC).</summary>
      <returns>The new value of <paramref name="thisob" /> after the value is set, expressed in UTC.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="dmin">The minutes value to set for <paramref name="thisob" />.</param>
      <param name="sec">The seconds value to set for <paramref name="thisob" />.</param>
      <param name="msec">The milliseconds value to set for <paramref name="thisob" />.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.setUTCMonth(System.Object,System.Double,System.Object)">
      <summary>Sets the month value of a <see cref="T:Microsoft.JScript.DateObject" /> to the specified month value, expressed in Coordinated Universal Time (UTC).</summary>
      <returns>The new value of <paramref name="thisob" /> after the value is set, expressed in UTC.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="dmonth">The month value to set for <paramref name="thisob" />.</param>
      <param name="date">The date value to set for <paramref name="thisob" />.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.setUTCSeconds(System.Object,System.Double,System.Object)">
      <summary>Sets the seconds value of a <see cref="T:Microsoft.JScript.DateObject" /> to the specified seconds value, expressed in Coordinated Universal Time (UTC).</summary>
      <returns>The new value of <paramref name="thisob" /> after the value is set, expressed in UTC.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="dsec">The seconds value to set for <paramref name="thisob" />.</param>
      <param name="msec">The milliseconds value to set for <paramref name="thisob" />.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.setYear(System.Object,System.Double)">
      <summary>Sets the year value of a <see cref="T:Microsoft.JScript.DateObject" /> to the specified year value.</summary>
      <returns>The new value of <paramref name="thisob" /> after the value is set.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="dyear">The year value to set for <paramref name="thisob" />.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.toDateString(System.Object)">
      <summary>Creates a string representation of the specified <see cref="T:Microsoft.JScript.DateObject" /> that contains the day of the week, the month, the date, and the year.</summary>
      <returns>A string representation of <paramref name="thisob" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.toGMTString(System.Object)">
      <summary>Creates a string representation of the specified <see cref="T:Microsoft.JScript.DateObject" /> that contains the day of the week, the month, the date, the year, and the time, expressed in Coordinated Universal Time (UTC). Use <see cref="M:Microsoft.JScript.DatePrototype.toUTCString(System.Object)" /> instead, when you can.</summary>
      <returns>A string representation of <paramref name="thisob" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.toLocaleDateString(System.Object)">
      <summary>Creates a string representation of the specified <see cref="T:Microsoft.JScript.DateObject" /> that contains the date but not the time.</summary>
      <returns>A string representation of <paramref name="thisob" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.toLocaleString(System.Object)">
      <summary>Creates a string representation of the specified <see cref="T:Microsoft.JScript.DateObject" /> that contains the date and time.</summary>
      <returns>A string representation of <paramref name="thisob" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.toLocaleTimeString(System.Object)">
      <summary>Creates a string representation of the specified <see cref="T:Microsoft.JScript.DateObject" /> that contains the time but not the date.</summary>
      <returns>A string representation of <paramref name="thisob" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.toString(System.Object)">
      <summary>Creates a string representation of the specified <see cref="T:Microsoft.JScript.DateObject" /> that contains the day of the week, the month, the date, the time, the time zone, and the year.</summary>
      <returns>A string representation of <paramref name="thisob" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.toTimeString(System.Object)">
      <summary>Creates a string representation of the specified <see cref="T:Microsoft.JScript.DateObject" /> that contains the time and the time zone.</summary>
      <returns>A string representation of <paramref name="thisob" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.toUTCString(System.Object)">
      <summary>Creates a string representation of the specified <see cref="T:Microsoft.JScript.DateObject" /> that contains the day of the week, the month, the date, the year, and the time, expressed in Coordinated Universal Time (UTC).</summary>
      <returns>A string representation of <paramref name="thisob" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.DatePrototype.valueOf(System.Object)">
      <summary>Returns the value of the specified <see cref="T:Microsoft.JScript.DateObject" />.</summary>
      <returns>The value of <paramref name="thisob" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="T:Microsoft.JScript.DebugBreak">
      <summary>This class is used by the JScript parser to represent a breakpoint in a debugger.</summary>
    </member>
    <member name="T:Microsoft.JScript.DebugConvert">
      <summary>Converts data from one type to another. Includes methods that convert values to <see cref="T:System.String" /> objects so that they can be displayed by the debugger. </summary>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.DebugConvert" /> class.</summary>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.BooleanToString(System.Boolean)">
      <summary>Converts the specified <see cref="T:System.Boolean" /> value to a <see cref="T:System.String" />.</summary>
      <returns>The literal string "true" or the literal string "false".</returns>
      <param name="value">The value to convert.</param>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.ByteToString(System.Byte,System.Int32)">
      <summary>Converts the specified <see cref="T:System.Byte" /> value to a <see cref="T:System.String" />.</summary>
      <returns>The string representation of <paramref name="value" /> in base <paramref name="radix" />.</returns>
      <param name="value">The value to convert.</param>
      <param name="radix">The base of the return value. The base must be 2, 8, 10, or 16.</param>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.DecimalToString(System.Decimal)">
      <summary>Converts the specified <see cref="T:System.Decimal" /> value to a <see cref="T:System.String" />.</summary>
      <returns>The string representation of <paramref name="value" />.</returns>
      <param name="value">The value to convert.</param>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.DoubleToDateString(System.Double)">
      <summary>Creates a string representation of the specified <see cref="T:System.Double" />. The string representation contains the day of the week, the month, the date, the time, the time zone, and the year.</summary>
      <returns>The string representation of <paramref name="value" />.</returns>
      <param name="value">The value to convert.</param>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.DoubleToString(System.Double)">
      <summary>Converts the specified <see cref="T:System.Double" /> value to a <see cref="T:System.String" />.</summary>
      <returns>The string representation of <paramref name="value" />.</returns>
      <param name="value">The value to convert.</param>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.GetErrorMessageForHR(System.Int32,Microsoft.JScript.Vsa.IJSVsaEngine)">
      <summary>Gets an error message that is created from the specified <see cref="P:System.Exception.HResult" /> and the <see cref="T:System.Globalization.CultureInfo" /> of the specified <see cref="T:Microsoft.JScript.Vsa.IJSVsaEngine" />.</summary>
      <returns>A localized string that contains information about the error.</returns>
      <param name="hr">The HRESULT error code.</param>
      <param name="engine">A reference to the scripting engine.</param>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.GetManagedCharObject(System.UInt16)">
      <summary>Creates a managed object that has the specified primitive <see cref="T:System.Char" /> value.</summary>
      <returns>
        <paramref name="i" /> converted to a <see cref="T:System.Char" /> and then an <see cref="T:System.Object" />.</returns>
      <param name="i">The value to convert.</param>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.GetManagedInt64Object(System.Int64)">
      <summary>Creates a managed object that has the specified primitive <see cref="T:System.Int64" /> value.</summary>
      <returns>
        <paramref name="i" /> converted to an <see cref="T:System.Object" />.</returns>
      <param name="i">The value to convert.</param>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.GetManagedObject(System.Object)">
      <summary>Creates a managed object that has the specified primitive value.</summary>
      <returns>
        <paramref name="value" /> converted to a managed <see cref="T:System.Object" />.</returns>
      <param name="value">The value to convert.</param>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.GetManagedUInt64Object(System.UInt64)">
      <summary>Creates a managed object that has the specified primitive <see cref="T:System.UInt64" /> value.</summary>
      <returns>
        <paramref name="i" /> converted to an <see cref="T:System.Object" />.</returns>
      <param name="i">The value to convert.</param>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.Int16ToString(System.Int16,System.Int32)">
      <summary>Converts the specified <see cref="T:System.Int16" /> value to a <see cref="T:System.String" />.</summary>
      <returns>The string representation of <paramref name="value" /> in base <paramref name="radix" />.</returns>
      <param name="value">The value to convert.</param>
      <param name="radix">The base of the return value. The base must be 2, 8, 10, or 16.</param>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.Int32ToString(System.Int32,System.Int32)">
      <summary>Converts the specified <see cref="T:System.Int32" /> value to a <see cref="T:System.String" />.</summary>
      <returns>The string representation of <paramref name="value" /> in base <paramref name="radix" />.</returns>
      <param name="value">The value to convert.</param>
      <param name="radix">The base of the return value. The base must be 2, 8, 10, or 16.</param>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.Int64ToString(System.Int64,System.Int32)">
      <summary>Converts the specified <see cref="T:System.Int64" /> value to a <see cref="T:System.String" />.</summary>
      <returns>The string representation of <paramref name="value" /> in base <paramref name="radix" />.</returns>
      <param name="value">The value to convert.</param>
      <param name="radix">The base of the return value. The base must be 2, 8, 10, or 16.</param>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.RegexpToString(System.String,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Converts the specified regular expression information to a <see cref="T:System.String" />.</summary>
      <returns>The string representation of the regular expression information.</returns>
      <param name="source">The regular expression pattern to match.</param>
      <param name="ignoreCase">true to use case-insensitive matching; otherwise, false.</param>
      <param name="global">true to use a global match; otherwise, false.</param>
      <param name="multiline">true to use a multiline match; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.SByteToString(System.SByte,System.Int32)">
      <summary>Converts the specified <see cref="T:System.SByte" /> value to a <see cref="T:System.String" />.</summary>
      <returns>The string representation of <paramref name="value" /> in base <paramref name="radix" />.</returns>
      <param name="value">The value to convert.</param>
      <param name="radix">The base of the return value. The base must be 2, 8, 10, or 16.</param>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.SingleToString(System.Single)">
      <summary>Converts the specified <see cref="T:System.Single" /> value to a <see cref="T:System.String" />.</summary>
      <returns>The string representation of <paramref name="value" />.</returns>
      <param name="value">The value to convert.</param>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.StringToPrintable(System.String)">
      <summary>Converts the specified <see cref="T:System.String" /> to a <see cref="T:System.String" /> that contains escape characters for non-printable characters.</summary>
      <returns>The string representation of <paramref name="source" /> that contains escape characters.</returns>
      <param name="source">The value to convert.</param>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.ToPrimitive(System.Object,System.TypeCode,System.Boolean)">
      <summary>Converts the specified value to the specified <see cref="T:System.TypeCode" />, optionally allowing data loss.</summary>
      <returns>
        <paramref name="value" /> converted to the <paramref name="typeCode" /> type.</returns>
      <param name="value">The value to convert to a new type.</param>
      <param name="typeCode">The type to convert <paramref name="value" /> to.</param>
      <param name="truncationPermitted">true to allow data loss; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.UInt16ToString(System.UInt16,System.Int32)">
      <summary>Converts the specified <see cref="T:System.UInt16" /> value to a <see cref="T:System.String" />.</summary>
      <returns>The string representation of <paramref name="value" /> in base <paramref name="radix" />.</returns>
      <param name="value">The value to convert.</param>
      <param name="radix">The base of the return value. The base must be 2, 8, 10, or 16.</param>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.UInt32ToString(System.UInt32,System.Int32)">
      <summary>Converts the specified <see cref="T:System.UInt32" /> value to a <see cref="T:System.String" />.</summary>
      <returns>The string representation of <paramref name="value" /> in base <paramref name="radix" />.</returns>
      <param name="value">The value to convert.</param>
      <param name="radix">The base of the return value. The base must be 2, 8, 10, or 16.</param>
    </member>
    <member name="M:Microsoft.JScript.DebugConvert.UInt64ToString(System.UInt64,System.Int32)">
      <summary>Converts the specified <see cref="T:System.UInt64" /> value to a <see cref="T:System.String" />.</summary>
      <returns>The string representation of <paramref name="value" /> in base <paramref name="radix" />.</returns>
      <param name="value">The value to convert.</param>
      <param name="radix">The base of the return value. The base must be 2, 8, 10, or 16.</param>
    </member>
    <member name="T:Microsoft.JScript.DocumentContext">
      <summary>Represents a source code file that is written in the JScript language.</summary>
    </member>
    <member name="T:Microsoft.JScript.DynamicFieldInfo">
      <summary>Represents field information. This class is used to return fields of expando classes and script arrays to the debugger. </summary>
    </member>
    <member name="M:Microsoft.JScript.DynamicFieldInfo.#ctor(System.String,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.DynamicFieldInfo" /> class, using the specified name and value.</summary>
      <param name="name">The name of the field.</param>
      <param name="value">The value of the field.</param>
    </member>
    <member name="M:Microsoft.JScript.DynamicFieldInfo.#ctor(System.String,System.Object,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.DynamicFieldInfo" /> class, using the specified name, value, and type.</summary>
      <param name="name">The name of the field.</param>
      <param name="value">The value of the field.</param>
      <param name="fieldTypeName">The type of the field.</param>
    </member>
    <member name="F:Microsoft.JScript.DynamicFieldInfo.fieldTypeName">
      <summary>The type of the field.</summary>
    </member>
    <member name="F:Microsoft.JScript.DynamicFieldInfo.name">
      <summary>The name of the field.</summary>
    </member>
    <member name="F:Microsoft.JScript.DynamicFieldInfo.value">
      <summary>The value of the field.</summary>
    </member>
    <member name="T:Microsoft.JScript.Empty">
      <summary>Represents the value of a variable that has not been instantiated.</summary>
    </member>
    <member name="F:Microsoft.JScript.Empty.Value">
      <summary>Specifies the value of a variable that has not been instantiated.</summary>
    </member>
    <member name="T:Microsoft.JScript.EndOfFile">
      <summary>This class is used by the JScript parser to represent reaching the end of a file as an exception. Code can throw this error to stop the parser.</summary>
    </member>
    <member name="T:Microsoft.JScript.EnumeratorConstructor">
      <summary>Represents a prototype-based object that is defined by a constructor function. This class belongs to the built-in object model category.</summary>
    </member>
    <member name="M:Microsoft.JScript.EnumeratorConstructor.CreateInstance(System.Object[])">
      <summary>Creates an instance of the prototype-based object, passing in the specified arguments.</summary>
      <returns>The instance of the object.</returns>
      <param name="args">The arguments to pass to the constructor.</param>
    </member>
    <member name="M:Microsoft.JScript.EnumeratorConstructor.Invoke">
      <summary>Returns null in all cases.</summary>
      <returns>null.</returns>
    </member>
    <member name="T:Microsoft.JScript.EnumeratorObject">
      <summary>Represents an enumerator object. This class belongs to the built-in object model category.</summary>
    </member>
    <member name="F:Microsoft.JScript.EnumeratorObject.enumerator">
      <summary>Contains the enumerator that is represented by the <see cref="T:Microsoft.JScript.EnumeratorObject" /> class.</summary>
    </member>
    <member name="M:Microsoft.JScript.EnumeratorObject.LoadObject">
      <summary>Advances the enumerator to the next element of the collection and stores a reference to the current element of the collection.</summary>
    </member>
    <member name="T:Microsoft.JScript.EnumeratorPrototype">
      <summary>Provides static methods and properties for <see cref="T:Microsoft.JScript.EnumeratorObject" /> objects. All methods of this class are called by passing in a reference to the object that is requesting access to the method. This class belongs to the built-in object model category.</summary>
    </member>
    <member name="M:Microsoft.JScript.EnumeratorPrototype.atEnd(System.Object)">
      <summary>Determines whether the enumerator has passed the last item of the collection.</summary>
      <returns>true if the enumerator has passed the last item of the collection; otherwise, false.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="P:Microsoft.JScript.EnumeratorPrototype.constructor">
      <summary>Gets a reference to a prototype-based object that is using this prototype.</summary>
      <returns>A reference to a prototype-based object.</returns>
    </member>
    <member name="M:Microsoft.JScript.EnumeratorPrototype.item(System.Object)">
      <summary>Gets the current element in the collection.</summary>
      <returns>The current element in the collection.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.EnumeratorPrototype.moveFirst(System.Object)">
      <summary>Moves the enumerator to its initial position, which is before the first element in the collection.</summary>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.EnumeratorPrototype.moveNext(System.Object)">
      <summary>Advances the enumerator to the next element of the collection.</summary>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="T:Microsoft.JScript.Equality">
      <summary>Performs comparison operations. This class belongs to the abstract syntax tree category.</summary>
    </member>
    <member name="M:Microsoft.JScript.Equality.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.Equality" /> class.</summary>
      <param name="operatorTok">One of the <see cref="T:Microsoft.JScript.JSToken" /> enumeration values. Specifies the comparison to perform.</param>
    </member>
    <member name="M:Microsoft.JScript.Equality.EvaluateEquality(System.Object,System.Object)">
      <summary>Performs a comparison operation.</summary>
      <returns>The result of the operation.</returns>
      <param name="v1">The first operand.</param>
      <param name="v2">The second operand.</param>
    </member>
    <member name="M:Microsoft.JScript.Equality.JScriptEquals(System.Object,System.Object)">
      <summary>Performs a comparison operation.</summary>
      <returns>The result of the operation.</returns>
      <param name="v1">The first operand.</param>
      <param name="v2">The second operand.</param>
    </member>
    <member name="T:Microsoft.JScript.ErrorConstructor">
      <summary>Represents a prototype-based object that is defined by a constructor function. This class belongs to the built-in object model category.</summary>
    </member>
    <member name="M:Microsoft.JScript.ErrorConstructor.CreateInstance(System.Object[])">
      <summary>Creates an instance of the prototype-based object, passing in the specified arguments.</summary>
      <returns>The instance of the object.</returns>
      <param name="args">The arguments to pass to the constructor.</param>
    </member>
    <member name="M:Microsoft.JScript.ErrorConstructor.Invoke(System.Object[])">
      <summary>Creates an instance of the prototype-based object, passing in the specified arguments.</summary>
      <returns>The instance of the object.</returns>
      <param name="args">The arguments to pass to the constructor.</param>
    </member>
    <member name="T:Microsoft.JScript.ErrorObject">
      <summary>Represents an error object. This class belongs to the built-in object model category.</summary>
    </member>
    <member name="F:Microsoft.JScript.ErrorObject.description">
      <summary>Specifies the message that explains the reason for the error.</summary>
    </member>
    <member name="F:Microsoft.JScript.ErrorObject.message">
      <summary>Specifies the message that explains the reason for the error.</summary>
    </member>
    <member name="F:Microsoft.JScript.ErrorObject.number">
      <summary>Specifies a number or code for the error.</summary>
    </member>
    <member name="M:Microsoft.JScript.ErrorObject.op_Explicit(Microsoft.JScript.ErrorObject)~System.Exception">
      <summary>Converts an <see cref="T:Microsoft.JScript.ErrorObject" /> to an <see cref="T:System.Exception" />, explicitly.</summary>
      <returns>The converted <see cref="T:Microsoft.JScript.ErrorObject" />.</returns>
      <param name="err">The object to convert.</param>
    </member>
    <member name="M:Microsoft.JScript.ErrorObject.ToException(Microsoft.JScript.ErrorObject)">
      <summary>Converts an <see cref="T:Microsoft.JScript.ErrorObject" /> to an <see cref="T:System.Exception" />, implicitly.</summary>
      <returns>The converted <see cref="T:Microsoft.JScript.ErrorObject" />.</returns>
      <param name="err">The object to convert.</param>
    </member>
    <member name="T:Microsoft.JScript.ErrorPrototype">
      <summary>Provides static methods and properties for <see cref="T:Microsoft.JScript.ErrorObject" /> objects. All methods of this class are called by passing in a reference to the object that is requesting access to the method. This class belongs to the built-in object model category.</summary>
    </member>
    <member name="P:Microsoft.JScript.ErrorPrototype.constructor">
      <summary>Gets a reference to a prototype-based object that is using this prototype.</summary>
      <returns>A reference to a prototype-based object.</returns>
    </member>
    <member name="F:Microsoft.JScript.ErrorPrototype.name">
      <summary>Specifies the name of the type of the error. Possible values include Error, EvalError, RangeError, ReferenceError, SyntaxError, TypeError, and URIError.</summary>
    </member>
    <member name="M:Microsoft.JScript.ErrorPrototype.toString(System.Object)">
      <summary>Creates a string representation of the specified object.</summary>
      <returns>A string representation of <paramref name="thisob" /> that contains the name of the type of the error object, and an error message if there is one.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="T:Microsoft.JScript.ErrorType">
      <summary>Specifies the JScript error types.</summary>
    </member>
    <member name="F:Microsoft.JScript.ErrorType.EvalError">
      <summary>An eval Method (Visual Studio - JScript) error. Corresponds to the <see cref="T:Microsoft.JScript.EvalErrorObject" /> object.</summary>
    </member>
    <member name="F:Microsoft.JScript.ErrorType.OtherError">
      <summary>Any error other than one of the other error types. This is the default value.</summary>
    </member>
    <member name="F:Microsoft.JScript.ErrorType.RangeError">
      <summary>A range error. Corresponds to the <see cref="T:Microsoft.JScript.RangeErrorObject" /> object.</summary>
    </member>
    <member name="F:Microsoft.JScript.ErrorType.ReferenceError">
      <summary>A reference error. Corresponds to the <see cref="T:Microsoft.JScript.ReferenceErrorObject" /> object.</summary>
    </member>
    <member name="F:Microsoft.JScript.ErrorType.SyntaxError">
      <summary>A syntax error. Corresponds to the <see cref="T:Microsoft.JScript.SyntaxErrorObject" /> object.</summary>
    </member>
    <member name="F:Microsoft.JScript.ErrorType.TypeError">
      <summary>A type error. Corresponds to the <see cref="T:Microsoft.JScript.TypeErrorObject" /> object.</summary>
    </member>
    <member name="F:Microsoft.JScript.ErrorType.URIError">
      <summary>A Uniform Resource Identifier (URI) error. Corresponds to the <see cref="T:Microsoft.JScript.URIErrorObject" /> object.</summary>
    </member>
    <member name="T:Microsoft.JScript.Eval">
      <summary>Evaluates JScript code. This class belongs to the abstract syntax tree category.</summary>
    </member>
    <member name="M:Microsoft.JScript.Eval.JScriptEvaluate(System.Object,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>Evaluates the specified JScript code by using the specified engine.</summary>
      <returns>The result of the evaluation. If <paramref name="source" /> is not a string, return value is <paramref name="source" />.</returns>
      <param name="source">The code to evaluate.</param>
      <param name="engine">A reference to the scripting engine to use to evaluate <paramref name="source" />.</param>
    </member>
    <member name="M:Microsoft.JScript.Eval.JScriptEvaluate(System.Object,System.Object,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>Evaluates the specified JScript code by using the specified engine and safety option.</summary>
      <returns>The result of the evaluation. If <paramref name="source" /> is not a string, return value is <paramref name="source" />.</returns>
      <param name="source">The code to evaluate.</param>
      <param name="unsafeOption">The string literal unsafe to enable unsafe evaluation; otherwise, false.</param>
      <param name="engine">A reference to the scripting engine to use to evaluate <paramref name="source" />.</param>
    </member>
    <member name="T:Microsoft.JScript.EvalErrorObject">
      <summary>Represents an error that occurs when the eval method is used. For more information, see eval Method (Visual Studio - JScript).</summary>
    </member>
    <member name="T:Microsoft.JScript.Expando">
      <summary>Indicates that a class or method is an expando class or method.</summary>
    </member>
    <member name="M:Microsoft.JScript.Expando.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.Expando" /> attribute class.</summary>
    </member>
    <member name="T:Microsoft.JScript.FieldAccessor">
      <summary>Represents a field accessor.</summary>
    </member>
    <member name="M:Microsoft.JScript.FieldAccessor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.FieldAccessor" /> class.</summary>
    </member>
    <member name="M:Microsoft.JScript.FieldAccessor.GetValue(System.Object)">
      <summary>When overridden in a derived class, gets the value of the field for the specified object.</summary>
      <returns>The value of the field for <paramref name="thisob" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.FieldAccessor.SetValue(System.Object,System.Object)">
      <summary>When overridden in a derived class, sets the specified value of the field for the specified object.</summary>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="value">The value to set for the field.</param>
    </member>
    <member name="T:Microsoft.JScript.ForIn">
      <summary>Represents the JScript for...in statement. This class belongs to the abstract syntax tree category.</summary>
    </member>
    <member name="M:Microsoft.JScript.ForIn.JScriptGetEnumerator(System.Object)">
      <summary>Returns an enumerator that iterates through the specified collection.</summary>
      <returns>An enumerator that iterates through <paramref name="coll" />.</returns>
      <param name="coll">The collection for which to get an enumerator.</param>
    </member>
    <member name="T:Microsoft.JScript.FunctionConstructor">
      <summary>Represents a prototype-based object that is defined by a constructor function. This class belongs to the built-in object model category.</summary>
    </member>
    <member name="M:Microsoft.JScript.FunctionConstructor.CreateInstance(System.Object[])">
      <summary>Creates an instance of the prototype-based object, passing in the specified arguments.</summary>
      <returns>The instance of the object.</returns>
      <param name="args">The arguments to pass to the constructor.</param>
    </member>
    <member name="M:Microsoft.JScript.FunctionConstructor.Invoke(System.Object[])">
      <summary>Creates an instance of the prototype-based object, passing in the specified arguments.</summary>
      <returns>The instance of the object.</returns>
      <param name="args">The arguments to pass to the constructor.</param>
    </member>
    <member name="T:Microsoft.JScript.FunctionDeclaration">
      <summary>Represents a function declaration. This class belongs to the abstract syntax tree category.</summary>
    </member>
    <member name="M:Microsoft.JScript.FunctionDeclaration.JScriptFunctionDeclaration(System.RuntimeTypeHandle,System.String,System.String,System.String[],Microsoft.JScript.JSLocalField[],System.Boolean,System.Boolean,System.String,System.Object,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>Creates a new closure function, using the specified information.</summary>
      <returns>A new closure function that represents the function declaration.</returns>
      <param name="handle">A handle to the type of the function.</param>
      <param name="name">The name of the function.</param>
      <param name="method_name">The name of the function.</param>
      <param name="formal_parameters">The parameters of the function.</param>
      <param name="fields">The fields of the function.</param>
      <param name="must_save_stack_locals">true to save local stack variables. This is important for a nested function that accesses one of its local variables or for an eval statement.</param>
      <param name="hasArgumentsObject">true if the function has a parameter array.</param>
      <param name="text">The text of the function declaration.</param>
      <param name="declaringObject">Gets the type that declares this method.</param>
      <param name="engine">A reference to the scripting engine.</param>
    </member>
    <member name="T:Microsoft.JScript.FunctionExpression">
      <summary>Represents a function object. This class belongs to the abstract syntax tree category.</summary>
    </member>
    <member name="M:Microsoft.JScript.FunctionExpression.JScriptFunctionExpression(System.RuntimeTypeHandle,System.String,System.String,System.String[],Microsoft.JScript.JSLocalField[],System.Boolean,System.Boolean,System.String,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>Creates a new function object, using the specified information.</summary>
      <returns>A new function object.</returns>
      <param name="handle">A handle to the type of the function.</param>
      <param name="name">The name of the function.</param>
      <param name="method_name">The name of the function.</param>
      <param name="formal_params">The parameters of the function.</param>
      <param name="fields">The fields of the function.</param>
      <param name="must_save_stack_locals">true to save local stack variables. This is important for a nested function that accesses one of its local variables, or for an eval statement.</param>
      <param name="hasArgumentsObject">true if the function has a parameter array.</param>
      <param name="text">The text of the function declaration.</param>
      <param name="engine">A reference to the scripting engine.</param>
    </member>
    <member name="T:Microsoft.JScript.FunctionObject">
      <summary>Represents a function object. </summary>
    </member>
    <member name="M:Microsoft.JScript.FunctionObject.ToString">
      <summary>Returns a string representation of this function object.</summary>
      <returns>A string representation of this function object that contains the text of the function.</returns>
    </member>
    <member name="T:Microsoft.JScript.FunctionPrototype">
      <summary>Provides static methods and properties for <see cref="T:Microsoft.JScript.FunctionObject" /> objects. All methods of this class are called by passing in a reference to the object that is requesting access to the method. This class belongs to the built-in object model category.</summary>
    </member>
    <member name="M:Microsoft.JScript.FunctionPrototype.apply(System.Object,System.Object,System.Object)">
      <summary>Calls the function that this object represents, converting the specified argument object to an array of arguments if it has to.</summary>
      <returns>The return value of the call to the function that this object represents.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="thisarg">The current default scope. Either the contained object of a with statement scope, or the global scope.</param>
      <param name="argArray">The arguments to pass to the function, as an <see cref="T:Microsoft.JScript.ArgumentsObject" /> or an <see cref="T:Microsoft.JScript.ArrayObject" />.</param>
    </member>
    <member name="M:Microsoft.JScript.FunctionPrototype.call(System.Object,System.Object,System.Object[])">
      <summary>Calls the function that this object represents.</summary>
      <returns>The return value of the call to the function that this object represents.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="thisarg">The current default scope. Either the contained object of a with statement scope, or the global scope.</param>
      <param name="args">The arguments to pass to the function as an array.</param>
    </member>
    <member name="P:Microsoft.JScript.FunctionPrototype.constructor">
      <summary>Gets a reference to a prototype-based object that is using this prototype.</summary>
      <returns>A reference to a prototype-based object.</returns>
    </member>
    <member name="M:Microsoft.JScript.FunctionPrototype.toString(System.Object)">
      <summary>Creates a string representation of the specified object.</summary>
      <returns>A string representation of <paramref name="thisob" /> that contains the name of the function.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="T:Microsoft.JScript.FunctionWrapper">
      <summary>Binds the members of a function to an object. </summary>
    </member>
    <member name="M:Microsoft.JScript.FunctionWrapper.ToString">
      <summary>Creates a string representation of the function.</summary>
      <returns>A string representation of the function that contains the function source, the function members, and the function name.</returns>
    </member>
    <member name="T:Microsoft.JScript.GlobalObject">
      <summary>Stores constants, data type information, utility functions, and references to prototype-based objects. This class belongs to the built-in object model category.</summary>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.ActiveXObject">
      <summary>Gets a reference to an <see cref="T:Microsoft.JScript.ActiveXObjectConstructor" /> object.</summary>
      <returns>A reference to an <see cref="T:Microsoft.JScript.ActiveXObjectConstructor" /> object.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.Array">
      <summary>Gets a reference to an <see cref="T:Microsoft.JScript.ArrayConstructor" /> object.</summary>
      <returns>A reference to an <see cref="T:Microsoft.JScript.ArrayConstructor" /> object.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.boolean">
      <summary>Gets the managed type that corresponds to the JScript boolean data type.</summary>
      <returns>The managed type that corresponds to the JScript boolean data type.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.Boolean">
      <summary>Gets a reference to a <see cref="T:Microsoft.JScript.BooleanConstructor" /> object.</summary>
      <returns>A reference to a <see cref="T:Microsoft.JScript.BooleanConstructor" /> object.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.byte">
      <summary>Gets the managed type that corresponds to the JScript byte data type.</summary>
      <returns>The managed type that corresponds to the JScript byte data type.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.char">
      <summary>Gets the managed type that corresponds to the JScript char data type.</summary>
      <returns>The managed type that corresponds to the JScript char data type.</returns>
    </member>
    <member name="M:Microsoft.JScript.GlobalObject.CollectGarbage">
      <summary>Calls the garbage collector.</summary>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.Date">
      <summary>Gets a reference to a <see cref="T:Microsoft.JScript.DateConstructor" /> object.</summary>
      <returns>A reference to a <see cref="T:Microsoft.JScript.DateConstructor" /> object.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.decimal">
      <summary>Gets the managed type that corresponds to the JScript decimal data type.</summary>
      <returns>The managed type that corresponds to the JScript decimal data type.</returns>
    </member>
    <member name="M:Microsoft.JScript.GlobalObject.decodeURI(System.Object)">
      <summary>Decodes the specified Uniform Resource Identifier (URI), accounting for reserved characters.</summary>
      <returns>The decoded version of <paramref name="encodedURI" />.</returns>
      <param name="encodedURI">The URI to decode.</param>
    </member>
    <member name="M:Microsoft.JScript.GlobalObject.decodeURIComponent(System.Object)">
      <summary>Decodes the specified Uniform Resource Identifier (URI).</summary>
      <returns>The decoded version of <paramref name="encodedURI" />.</returns>
      <param name="encodedURI">The URI to decode.</param>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.double">
      <summary>Gets the managed type that corresponds to the JScript double data type.</summary>
      <returns>The managed type that corresponds to the JScript double data type.</returns>
    </member>
    <member name="M:Microsoft.JScript.GlobalObject.encodeURI(System.Object)">
      <summary>Encodes the specified Uniform Resource Identifier (URI), accounting for reserved characters.</summary>
      <returns>The encoded version of <paramref name="uri" />.</returns>
      <param name="uri">The URI to encode.</param>
    </member>
    <member name="M:Microsoft.JScript.GlobalObject.encodeURIComponent(System.Object)">
      <summary>Encodes the specified Uniform Resource Identifier (URI).</summary>
      <returns>The encoded version of <paramref name="uriComponent" />.</returns>
      <param name="uriComponent">The URI to encode.</param>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.Enumerator">
      <summary>Gets a reference to an <see cref="T:Microsoft.JScript.EnumeratorConstructor" /> object.</summary>
      <returns>A reference to an <see cref="T:Microsoft.JScript.EnumeratorConstructor" /> object.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.Error">
      <summary>Gets a reference to an <see cref="T:Microsoft.JScript.ErrorConstructor" /> object.</summary>
      <returns>A reference to an <see cref="T:Microsoft.JScript.ErrorConstructor" /> object.</returns>
    </member>
    <member name="M:Microsoft.JScript.GlobalObject.escape(System.Object)">
      <summary>Converts the specified string to use the % character to escape reserved characters (@, *, _, +, -, ., /) and express them in Unicode notation.</summary>
      <returns>A new copy of <paramref name="string" /> in which the reserved characters are escaped by the % character and expressed in Unicode.</returns>
      <param name="string">The string to convert.</param>
    </member>
    <member name="M:Microsoft.JScript.GlobalObject.eval(System.Object)">
      <summary>Throws an <see cref="F:Microsoft.JScript.JSError.IllegalEval" /> exception in all cases.</summary>
      <returns>Throws an <see cref="F:Microsoft.JScript.JSError.IllegalEval" /> exception in all cases.</returns>
      <param name="x">The expression to evaluate.</param>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.EvalError">
      <summary>Gets a reference to an <see cref="T:Microsoft.JScript.ErrorConstructor" /> object. The object is initialized as an <see cref="F:Microsoft.JScript.ErrorType.EvalError" />.</summary>
      <returns>A reference to an <see cref="T:Microsoft.JScript.ErrorConstructor" /> object. The object is initialized as an <see cref="F:Microsoft.JScript.ErrorType.EvalError" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.float">
      <summary>Gets the managed type that corresponds to the JScript float data type.</summary>
      <returns>The managed type that corresponds to the JScript float data type.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.Function">
      <summary>Gets a reference to a <see cref="T:Microsoft.JScript.FunctionConstructor" /> object.</summary>
      <returns>A reference to a <see cref="T:Microsoft.JScript.FunctionConstructor" /> object.</returns>
    </member>
    <member name="M:Microsoft.JScript.GlobalObject.GetObject(System.Object,System.Object)">
      <summary>Creates a managed object from an unmanaged object by using either the moniker or the ProgID.</summary>
      <returns>The managed object.</returns>
      <param name="moniker">The moniker of the object.</param>
      <param name="progId">The ProgID of the object.</param>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.Infinity">
      <summary>Represents positive infinity. This field is constant.</summary>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.int">
      <summary>Gets the managed type that corresponds to the JScript int data type.</summary>
      <returns>The managed type that corresponds to the JScript int data type.</returns>
    </member>
    <member name="M:Microsoft.JScript.GlobalObject.isFinite(System.Double)">
      <summary>Determines whether the specified number represents infinity.</summary>
      <returns>true if <paramref name="number" /> is not <see cref="F:System.Double.NaN" />, not <see cref="F:System.Double.PositiveInfinity" />, and not <see cref="F:System.Double.NegativeInfinity" />; otherwise, false.</returns>
      <param name="number">The number to check.</param>
    </member>
    <member name="M:Microsoft.JScript.GlobalObject.isNaN(System.Object)">
      <summary>Determines whether the specified number can be converted to a JScript number.</summary>
      <returns>true if <paramref name="num" /> can be converted to a JScript number; otherwise, false.</returns>
      <param name="num">The number to check.</param>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.long">
      <summary>Gets the managed type that corresponds to the JScript long data type.</summary>
      <returns>The managed type that corresponds to the JScript long data type.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.Math">
      <summary>Gets a reference to a <see cref="T:Microsoft.JScript.MathObject" /> object.</summary>
      <returns>A reference to a <see cref="T:Microsoft.JScript.MathObject" /> object.</returns>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.NaN">
      <summary>Represents a value that is not a number (NaN). This field is constant.</summary>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.Number">
      <summary>Gets a reference to a <see cref="T:Microsoft.JScript.NumberConstructor" /> object.</summary>
      <returns>A reference to a <see cref="T:Microsoft.JScript.NumberConstructor" /> object.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.Object">
      <summary>Gets a reference to an <see cref="T:Microsoft.JScript.ObjectConstructor" /> object.</summary>
      <returns>A reference to an <see cref="T:Microsoft.JScript.ObjectConstructor" /> object.</returns>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.originalActiveXObjectField">
      <summary>Stores a reference to an <see cref="T:Microsoft.JScript.ActiveXObjectConstructor" /> object.</summary>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.originalArrayField">
      <summary>Stores a reference to an <see cref="T:Microsoft.JScript.ArrayConstructor" /> object.</summary>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.originalBooleanField">
      <summary>Stores a reference to a <see cref="T:Microsoft.JScript.BooleanConstructor" /> object.</summary>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.originalDateField">
      <summary>Stores a reference to a <see cref="T:Microsoft.JScript.DateConstructor" /> object.</summary>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.originalEnumeratorField">
      <summary>Stores a reference to an <see cref="T:Microsoft.JScript.EnumeratorConstructor" /> object.</summary>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.originalErrorField">
      <summary>Stores a reference to an <see cref="T:Microsoft.JScript.ErrorConstructor" /> object.</summary>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.originalEvalErrorField">
      <summary>Stores a reference to an <see cref="T:Microsoft.JScript.ErrorConstructor" /> object. The object is initialized as an <see cref="F:Microsoft.JScript.ErrorType.EvalError" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.originalFunctionField">
      <summary>Stores a reference to a <see cref="T:Microsoft.JScript.FunctionConstructor" /> object.</summary>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.originalNumberField">
      <summary>Stores a reference to a <see cref="T:Microsoft.JScript.NumberConstructor" /> object.</summary>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.originalObjectField">
      <summary>Stores a reference to an <see cref="T:Microsoft.JScript.ObjectConstructor" /> object.</summary>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.originalObjectPrototypeField">
      <summary>Stores a reference to an <see cref="T:Microsoft.JScript.ObjectPrototype" /> object.</summary>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.originalRangeErrorField">
      <summary>Stores a reference to an <see cref="T:Microsoft.JScript.ErrorConstructor" /> object. The object is initialized as a <see cref="F:Microsoft.JScript.ErrorType.RangeError" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.originalReferenceErrorField">
      <summary>Stores a reference to an <see cref="T:Microsoft.JScript.ErrorConstructor" /> object. The object is initialized as a <see cref="F:Microsoft.JScript.ErrorType.ReferenceError" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.originalRegExpField">
      <summary>Stores a reference to a <see cref="T:Microsoft.JScript.RegExpConstructor" /> object.</summary>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.originalStringField">
      <summary>Stores a reference to a <see cref="T:Microsoft.JScript.StringConstructor" /> object.</summary>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.originalSyntaxErrorField">
      <summary>Stores a reference to an <see cref="T:Microsoft.JScript.ErrorConstructor" /> object. The object is initialized as a <see cref="F:Microsoft.JScript.ErrorType.SyntaxError" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.originalTypeErrorField">
      <summary>Stores a reference to an <see cref="T:Microsoft.JScript.ErrorConstructor" /> object. The object is initialized as a <see cref="F:Microsoft.JScript.ErrorType.TypeError" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.originalURIErrorField">
      <summary>Stores a reference to an <see cref="T:Microsoft.JScript.ErrorConstructor" /> object. The object is initialized as a <see cref="F:Microsoft.JScript.ErrorType.URIError" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.originalVBArrayField">
      <summary>Stores a reference to a <see cref="T:Microsoft.JScript.VBArrayConstructor" /> object.</summary>
    </member>
    <member name="M:Microsoft.JScript.GlobalObject.parseFloat(System.Object)">
      <summary>Converts the specified string to its <see cref="T:System.Double" /> equivalent.</summary>
      <returns>A value equivalent to the value that is contained in <paramref name="string" />.</returns>
      <param name="string">The string to convert.</param>
    </member>
    <member name="M:Microsoft.JScript.GlobalObject.parseInt(System.Object,System.Object)">
      <summary>Converts the specified string to its <see cref="T:System.Double" /> equivalent, using the specified base.</summary>
      <returns>A value that is equivalent to the value that is contained in <paramref name="string" />.</returns>
      <param name="string">The string to convert.</param>
      <param name="radix">A number between 2 and 36 that represents the base of the number system that <paramref name="string" /> is expressed in. The default is 10.</param>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.RangeError">
      <summary>Gets a reference to an <see cref="T:Microsoft.JScript.ErrorConstructor" /> object. The object is initialized as a <see cref="F:Microsoft.JScript.ErrorType.RangeError" />.</summary>
      <returns>A reference to an <see cref="T:Microsoft.JScript.ErrorConstructor" /> object. The object is initialized as a <see cref="F:Microsoft.JScript.ErrorType.RangeError" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.ReferenceError">
      <summary>Gets a reference to an <see cref="T:Microsoft.JScript.ErrorConstructor" /> object. The object is initialized as a <see cref="F:Microsoft.JScript.ErrorType.ReferenceError" />.</summary>
      <returns>A reference to an <see cref="T:Microsoft.JScript.ErrorConstructor" /> object. The object is initialized as a <see cref="F:Microsoft.JScript.ErrorType.ReferenceError" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.RegExp">
      <summary>Gets a reference to a <see cref="T:Microsoft.JScript.RegExpConstructor" /> object.</summary>
      <returns>A reference to a <see cref="T:Microsoft.JScript.RegExpConstructor" /> object.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.sbyte">
      <summary>Gets the managed type that corresponds to the JScript sbyte data type.</summary>
      <returns>The managed type that corresponds to the JScript sbyte data type.</returns>
    </member>
    <member name="M:Microsoft.JScript.GlobalObject.ScriptEngine">
      <summary>Gets the name of the scripting engine.</summary>
      <returns>The string literal "JScript".</returns>
    </member>
    <member name="M:Microsoft.JScript.GlobalObject.ScriptEngineBuildVersion">
      <summary>Gets the build number of the scripting engine.</summary>
      <returns>The build number of the scripting engine.</returns>
    </member>
    <member name="M:Microsoft.JScript.GlobalObject.ScriptEngineMajorVersion">
      <summary>Gets the major version number of the scripting engine.</summary>
      <returns>The major version number of the scripting engine.</returns>
    </member>
    <member name="M:Microsoft.JScript.GlobalObject.ScriptEngineMinorVersion">
      <summary>Gets the minor version number of the scripting engine.</summary>
      <returns>The minor version number of the scripting engine.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.short">
      <summary>Gets the managed type that corresponds to the JScript short data type.</summary>
      <returns>The managed type that corresponds to the JScript short data type.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.String">
      <summary>Gets a reference to a <see cref="T:Microsoft.JScript.StringConstructor" /> object.</summary>
      <returns>A reference to a <see cref="T:Microsoft.JScript.StringConstructor" /> object.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.SyntaxError">
      <summary>Gets a reference to an <see cref="T:Microsoft.JScript.ErrorConstructor" /> object. The object is initialized as a <see cref="F:Microsoft.JScript.ErrorType.SyntaxError" />.</summary>
      <returns>A reference to an <see cref="T:Microsoft.JScript.ErrorConstructor" /> object. The object is initialized as a <see cref="F:Microsoft.JScript.ErrorType.SyntaxError" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.TypeError">
      <summary>Gets a reference to an <see cref="T:Microsoft.JScript.ErrorConstructor" /> object. The object is initialized as a <see cref="F:Microsoft.JScript.ErrorType.TypeError" />.</summary>
      <returns>A reference to an <see cref="T:Microsoft.JScript.ErrorConstructor" /> object. The object is initialized as a <see cref="F:Microsoft.JScript.ErrorType.TypeError" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.uint">
      <summary>Gets the managed type that corresponds to the JScript uint data type.</summary>
      <returns>The managed type that corresponds to the JScript uint data type.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.ulong">
      <summary>Gets the managed type that corresponds to the JScript ulong data type.</summary>
      <returns>The managed type that corresponds to the JScript ulong data type.</returns>
    </member>
    <member name="F:Microsoft.JScript.GlobalObject.undefined">
      <summary>Represents a value that is null.</summary>
    </member>
    <member name="M:Microsoft.JScript.GlobalObject.unescape(System.Object)">
      <summary>Converts % escaped characters (@, *, _, +, -, ., /) in the specified string to their original form. The escaped characters are expressed in Unicode notation.</summary>
      <returns>A new copy of <paramref name="string" /> in which the escaped characters are converted to their original form.</returns>
      <param name="string">The string to convert.</param>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.URIError">
      <summary>Gets a reference to an <see cref="T:Microsoft.JScript.ErrorConstructor" /> object. The object is initialized as a <see cref="F:Microsoft.JScript.ErrorType.URIError" />.</summary>
      <returns>A reference to an <see cref="T:Microsoft.JScript.ErrorConstructor" /> object. The object is initialized as a <see cref="F:Microsoft.JScript.ErrorType.URIError" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.ushort">
      <summary>Gets the managed type that corresponds to the JScript ushort data type.</summary>
      <returns>The managed type that corresponds to the JScript ushort data type.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.VBArray">
      <summary>Gets a reference to a <see cref="T:Microsoft.JScript.VBArrayConstructor" /> object.</summary>
      <returns>A reference to a <see cref="T:Microsoft.JScript.VBArrayConstructor" /> object.</returns>
    </member>
    <member name="P:Microsoft.JScript.GlobalObject.void">
      <summary>Gets the managed type that corresponds to the return value of a function that does not return a value.</summary>
      <returns>The managed type that corresponds to the return value of a function that does not return a value.</returns>
    </member>
    <member name="T:Microsoft.JScript.Globals">
      <summary>Stores references to all globally available types and manages the stack. This class belongs to the compilation and run-time state category.</summary>
    </member>
    <member name="M:Microsoft.JScript.Globals.ConstructArray(System.Object[])">
      <summary>Provides global access to the <see cref="M:Microsoft.JScript.ArrayConstructor.CreateInstance(System.Object[])" /> method.</summary>
      <returns>A new instance of a JScript <see cref="T:Microsoft.JScript.ArrayObject" />.</returns>
      <param name="args">The values to populate the array with.</param>
    </member>
    <member name="M:Microsoft.JScript.Globals.ConstructArrayLiteral(System.Object[])">
      <summary>Provides global access to the <see cref="M:Microsoft.JScript.ArrayConstructor.ConstructArray(System.Object[])" /> method.</summary>
      <returns>A new instance of a JScript <see cref="T:Microsoft.JScript.ArrayObject" />.</returns>
      <param name="args">The values to populate the array with.</param>
    </member>
    <member name="F:Microsoft.JScript.Globals.contextEngine">
      <summary>Stores a global reference to the single scripting engine that is running in the current context.</summary>
    </member>
    <member name="T:Microsoft.JScript.GlobalScope">
      <summary>Represents the global scope. </summary>
    </member>
    <member name="M:Microsoft.JScript.GlobalScope.#ctor(Microsoft.JScript.GlobalScope,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.GlobalScope" /> class.</summary>
      <param name="parent">A reference to the parent object.</param>
      <param name="engine">A reference to the scripting engine.</param>
    </member>
    <member name="M:Microsoft.JScript.GlobalScope.AddField(System.String)">
      <summary>Adds the specified field to the global scope.</summary>
      <returns>The new field, if it is successfully added.</returns>
      <param name="name">The name of the field to add.</param>
    </member>
    <member name="M:Microsoft.JScript.GlobalScope.GetDefaultThisObject">
      <summary>Gets the current default scope, which is either the contained object of a with statement scope, or the global scope.</summary>
      <returns>This object.</returns>
    </member>
    <member name="M:Microsoft.JScript.GlobalScope.GetField(System.String,System.Int32)">
      <summary>Gets a field that has the specified name by searching the scope hierarchy. This method searches only the scope that is specified by the lexical level.</summary>
      <returns>A field that has the specified name.</returns>
      <param name="name">The name of the field to search for.</param>
      <param name="lexLevel">The lexical level to search.</param>
    </member>
    <member name="M:Microsoft.JScript.GlobalScope.GetFields(System.Reflection.BindingFlags)">
      <summary>Gets an array of <see cref="T:System.Reflection.FieldInfo" /> objects that correspond to all fields of the global scope.</summary>
      <returns>An array of objects that contains all fields of the global scope.</returns>
      <param name="bindingAttr">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</param>
    </member>
    <member name="M:Microsoft.JScript.GlobalScope.GetGlobalScope">
      <summary>Gets the global scope by returning a reference to this object.</summary>
      <returns>This object.</returns>
    </member>
    <member name="M:Microsoft.JScript.GlobalScope.GetLocalField(System.String)">
      <summary>Gets the local declaration of a field that has the specified name. This is used at compile time for error checking.</summary>
      <returns>The local declaration of the field.</returns>
      <param name="name">The name of the field.</param>
    </member>
    <member name="M:Microsoft.JScript.GlobalScope.GetMember(System.String,System.Reflection.BindingFlags)">
      <summary>Gets an array of <see cref="T:System.Reflection.MemberInfo" /> objects that correspond to all members that match a specified name.</summary>
      <returns>An array of objects that match the <paramref name="name" /> argument.</returns>
      <param name="name">The name of the member to search for.</param>
      <param name="bindingAttr">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</param>
    </member>
    <member name="M:Microsoft.JScript.GlobalScope.GetMembers(System.Reflection.BindingFlags)">
      <summary>Gets an array of <see cref="T:System.Reflection.MemberInfo" /> objects that correspond to all members of the global scope.</summary>
      <returns>An array of objects that contains all members of the global scope.</returns>
      <param name="bindingAttr">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</param>
    </member>
    <member name="M:Microsoft.JScript.GlobalScope.GetMethods(System.Reflection.BindingFlags)">
      <summary>Gets an array of <see cref="T:System.Reflection.MethodInfo" /> objects that correspond to all methods of the global scope.</summary>
      <returns>An array of objects that contains all methods of the global scope.</returns>
      <param name="bindingAttr">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</param>
    </member>
    <member name="M:Microsoft.JScript.GlobalScope.GetProperties(System.Reflection.BindingFlags)">
      <summary>Gets an array of <see cref="T:System.Reflection.PropertyInfo" /> objects that correspond to all properties of the global scope.</summary>
      <returns>An array of objects that contains all properties of the global scope.</returns>
      <param name="bindingAttr">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</param>
    </member>
    <member name="M:Microsoft.JScript.GlobalScope.System#Runtime#InteropServices#Expando#IExpando#AddMethod(System.String,System.Delegate)">
      <summary>Adds the specified method to the global scope. This method is not implemented in JScript.</summary>
      <returns>null in all cases.</returns>
      <param name="name">The name of the method to add.</param>
      <param name="method">The delegate to the method.</param>
    </member>
    <member name="M:Microsoft.JScript.GlobalScope.System#Runtime#InteropServices#Expando#IExpando#AddProperty(System.String)">
      <summary>Adds the specified property to the global scope. This method is not implemented in JScript.</summary>
      <returns>null in all cases.</returns>
      <param name="name">The name of the property to add.</param>
    </member>
    <member name="M:Microsoft.JScript.GlobalScope.System#Runtime#InteropServices#Expando#IExpando#RemoveMember(System.Reflection.MemberInfo)">
      <summary>Removes the specified member from the global scope.</summary>
      <param name="m">The name of the member to remove.</param>
    </member>
    <member name="T:Microsoft.JScript.Hide">
      <summary>Indicates that a method or field hides a method or field in a base class.</summary>
    </member>
    <member name="M:Microsoft.JScript.Hide.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.Hide" /> attribute class.</summary>
    </member>
    <member name="T:Microsoft.JScript.IActivationObject">
      <summary>Defines methods for resolving scope. This interface is implemented by all objects that take part in a scope hierarchy.</summary>
    </member>
    <member name="M:Microsoft.JScript.IActivationObject.GetDefaultThisObject">
      <summary>When implemented in a class, gets the current default scope. Either the contained object of a with statement scope, or the global scope.</summary>
      <returns>The current default scope.</returns>
    </member>
    <member name="M:Microsoft.JScript.IActivationObject.GetField(System.String,System.Int32)">
      <summary>When implemented in a class, returns a field that has the specified name by searching the scope hierarchy. This method searches only the scope that is specified by the lexical level.</summary>
      <returns>A <see cref="T:System.Reflection.FieldInfo" /> object that has the specified name.</returns>
      <param name="name">The name of the field to search for.</param>
      <param name="lexLevel">The lexical level to search.</param>
    </member>
    <member name="M:Microsoft.JScript.IActivationObject.GetGlobalScope">
      <summary>When implemented in a class, gets the global scope by searching the scope hierarchy until it finds a scope that includes static variables, for example, a module scope.</summary>
      <returns>The global scope.</returns>
    </member>
    <member name="M:Microsoft.JScript.IActivationObject.GetLocalField(System.String)">
      <summary>When implemented in a class, gets the local declaration of a field that has the specified name. This is used at compile time for error checking.</summary>
      <returns>The local declaration of the field.</returns>
      <param name="name">The name of the field.</param>
    </member>
    <member name="M:Microsoft.JScript.IActivationObject.GetMemberValue(System.String,System.Int32)">
      <summary>When implemented in a class, gets the value of the specified member by searching the scope hierarchy. This method searches only the scope that is specified by the lexical level.</summary>
      <returns>The value of the member <paramref name="name" />.</returns>
      <param name="name">The name of the member to search for.</param>
      <param name="lexlevel">The lexical level to search.</param>
    </member>
    <member name="T:Microsoft.JScript.IAuthorServices">
      <summary>Defines services for authoring JScript code in an editor.</summary>
    </member>
    <member name="M:Microsoft.JScript.IAuthorServices.GetCodeSense">
      <summary>When implemented in a class, gets an object that is used to add IntelliSense to text when JScript code is being authored in an editor.</summary>
      <returns>An object that is used to add IntelliSense to text.</returns>
    </member>
    <member name="M:Microsoft.JScript.IAuthorServices.GetColorizer">
      <summary>When implemented in a class, gets an object that is used to colorize text when JScript code is being authored in an editor.</summary>
      <returns>An object that is used to colorize text.</returns>
    </member>
    <member name="T:Microsoft.JScript.IColorizeText">
      <summary>Defines services for colorizing text when JScript code is being authored in an editor.</summary>
    </member>
    <member name="M:Microsoft.JScript.IColorizeText.Colorize(System.String,Microsoft.JScript.SourceState)">
      <summary>When implemented in a class, scans the specified source code for individual units of code and identifies the color that each should have.</summary>
      <returns>An enumeration of <see cref="T:Microsoft.JScript.ITokenColorInfo" /> objects that represent units of code to colorize.</returns>
      <param name="sourceCode">The source code to colorize.</param>
      <param name="state">The current state (normal, comment, string) of the source code.</param>
    </member>
    <member name="M:Microsoft.JScript.IColorizeText.GetStateForText(System.String,Microsoft.JScript.SourceState)">
      <summary>When implemented in a class, scans the specified source code for individual units of code and identifies the state (normal, comment, string) of the specified code.</summary>
      <returns>The state of the source code.</returns>
      <param name="sourceCode">The source code to analyze.</param>
      <param name="currentState">The current state (normal, comment, string) of the source code.</param>
    </member>
    <member name="T:Microsoft.JScript.IDebugConvert">
      <summary>Defines a set of utility methods that convert data from one type to another. Includes methods that convert values to <see cref="T:System.String" /> objects so that they can be displayed by the debugger.</summary>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.BooleanToString(System.Boolean)">
      <summary>When implemented in a class, converts the specified <see cref="T:System.Boolean" /> value to a <see cref="T:System.String" />.</summary>
      <returns>The literal string "true" or the literal string "false".</returns>
      <param name="value">The value to convert.</param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.ByteToString(System.Byte,System.Int32)">
      <summary>When implemented in a class, converts the specified <see cref="T:System.Byte" /> value to a <see cref="T:System.String" />.</summary>
      <returns>The string representation of <paramref name="value" /> in base <paramref name="radix" />.</returns>
      <param name="value">The value to convert.</param>
      <param name="radix">The base of the return value. The base must be 2, 8, 10, or 16.</param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.DoubleToDateString(System.Double)">
      <summary>When implemented in a class, creates a string representation of the specified <see cref="T:System.Double" />. The string representation contains the day of the week, the month, the date, the time, the time zone, and the year.</summary>
      <returns>The string representation of <paramref name="value" />.</returns>
      <param name="value">The value to convert.</param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.DoubleToString(System.Double)">
      <summary>When implemented in a class, converts the specified <see cref="T:System.Double" /> value to a <see cref="T:System.String" />.</summary>
      <returns>The string representation of <paramref name="value" />.</returns>
      <param name="value">The value to convert.</param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.GetErrorMessageForHR(System.Int32,Microsoft.JScript.Vsa.IJSVsaEngine)">
      <summary>When implemented in a class, gets an error message that is created from the specified <see cref="P:System.Exception.HResult" /> and the <see cref="T:System.Globalization.CultureInfo" /> of the specified <see cref="T:Microsoft.JScript.Vsa.IJSVsaEngine" />.</summary>
      <returns>A localized string that contains information about the error.</returns>
      <param name="hr">The HRESULT error code.</param>
      <param name="engine">A reference to the scripting engine.</param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.GetManagedCharObject(System.UInt16)">
      <summary>When implemented in a class, creates a managed object that has the specified primitive <see cref="T:System.Char" /> value.</summary>
      <returns>
        <paramref name="i" /> converted to a <see cref="T:System.Char" /> and then an <see cref="T:System.Object" />.</returns>
      <param name="i">The value to convert.</param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.GetManagedInt64Object(System.Int64)">
      <summary>When implemented in a class, creates a managed object that has the specified primitive <see cref="T:System.Int64" /> value.</summary>
      <returns>
        <paramref name="i" /> converted to an <see cref="T:System.Object" />.</returns>
      <param name="i">The value to convert.</param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.GetManagedObject(System.Object)">
      <summary>When implemented in a class, creates a managed object that has the specified primitive value.</summary>
      <returns>
        <paramref name="value" /> converted to a managed <see cref="T:System.Object" />.</returns>
      <param name="value">The value to convert.</param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.GetManagedUInt64Object(System.UInt64)">
      <summary>When implemented in a class, creates a managed object that has the specified primitive <see cref="T:System.UInt64" /> value.</summary>
      <returns>
        <paramref name="i" /> converted to an <see cref="T:System.Object" />.</returns>
      <param name="i">The value to convert.</param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.Int16ToString(System.Int16,System.Int32)">
      <summary>When implemented in a class, converts the specified <see cref="T:System.Int16" /> value to a <see cref="T:System.String" />.</summary>
      <returns>The string representation of <paramref name="value" /> in base <paramref name="radix" />.</returns>
      <param name="value">The value to convert.</param>
      <param name="radix">The base of the return value. The base must be 2, 8, 10, or 16.</param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.Int32ToString(System.Int32,System.Int32)">
      <summary>When implemented in a class, converts the specified <see cref="T:System.Int32" /> value to a <see cref="T:System.String" />.</summary>
      <returns>The string representation of <paramref name="value" /> in base <paramref name="radix" />.</returns>
      <param name="value">The value to convert.</param>
      <param name="radix">The base of the return value. The base must be 2, 8, 10, or 16.</param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.Int64ToString(System.Int64,System.Int32)">
      <summary>When implemented in a class, converts the specified <see cref="T:System.Int64" /> value to a <see cref="T:System.String" />.</summary>
      <returns>The string representation of <paramref name="value" /> in base <paramref name="radix" />.</returns>
      <param name="value">The value to convert.</param>
      <param name="radix">The base of the return value. The base must be 2, 8, 10, or 16.</param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.RegexpToString(System.String,System.Boolean,System.Boolean,System.Boolean)">
      <summary>When implemented in a class, converts the specified regular expression information to a <see cref="T:System.String" />.</summary>
      <returns>The string representation of the regular expression information.</returns>
      <param name="source">The regular expression pattern to match.</param>
      <param name="ignoreCase">true to use case-insensitive matching; otherwise, false.</param>
      <param name="global">true to use a global match; otherwise, false.</param>
      <param name="multiline">true to use a multiline match; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.SByteToString(System.SByte,System.Int32)">
      <summary>When implemented in a class, converts the specified <see cref="T:System.SByte" /> value to a <see cref="T:System.String" />.</summary>
      <returns>The string representation of <paramref name="value" /> in base <paramref name="radix" />.</returns>
      <param name="value">The value to convert.</param>
      <param name="radix">The base of the return value. The base must be 2, 8, 10, or 16.</param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.SingleToString(System.Single)">
      <summary>When implemented in a class, converts the specified <see cref="T:System.Single" /> value to a <see cref="T:System.String" />.</summary>
      <returns>The string representation of <paramref name="value" />.</returns>
      <param name="value">The value to convert.</param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.StringToPrintable(System.String)">
      <summary>When implemented in a class, converts the specified <see cref="T:System.String" /> to a <see cref="T:System.String" /> that contains escape characters for non-printable characters.</summary>
      <returns>The string representation of <paramref name="source" /> that contains escape characters.</returns>
      <param name="source">The value to convert.</param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.ToPrimitive(System.Object,System.TypeCode,System.Boolean)">
      <summary>When implemented in a class, converts the specified value to the specified <see cref="T:System.TypeCode" />, optionally allowing data loss.</summary>
      <returns>
        <paramref name="value" /> converted to the <paramref name="typeCode" /> type.</returns>
      <param name="value">The value to convert to a new type.</param>
      <param name="typeCode">The type to convert <paramref name="value" /> to.</param>
      <param name="truncationPermitted">true to allow data loss; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.UInt16ToString(System.UInt16,System.Int32)">
      <summary>When implemented in a class, converts the specified <see cref="T:System.UInt16" /> value to a <see cref="T:System.String" />.</summary>
      <returns>The string representation of <paramref name="value" /> in base <paramref name="radix" />.</returns>
      <param name="value">The value to convert.</param>
      <param name="radix">The base of the return value. The base must be 2, 8, 10, or 16.</param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.UInt32ToString(System.UInt32,System.Int32)">
      <summary>When implemented in a class, converts the specified <see cref="T:System.UInt32" /> value to a <see cref="T:System.String" />.</summary>
      <returns>The string representation of <paramref name="value" /> in base <paramref name="radix" />.</returns>
      <param name="value">The value to convert.</param>
      <param name="radix">The base of the return value. The base must be 2, 8, 10, or 16.</param>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert.UInt64ToString(System.UInt64,System.Int32)">
      <summary>When implemented in a class, converts the specified <see cref="T:System.UInt64" /> value to a <see cref="T:System.String" />.</summary>
      <returns>The string representation of <paramref name="value" /> in base <paramref name="radix" />.</returns>
      <param name="value">The value to convert.</param>
      <param name="radix">The base of the return value. The base must be 2, 8, 10, or 16.</param>
    </member>
    <member name="T:Microsoft.JScript.IDebugConvert2">
      <summary>Defines utility methods that convert data from one type to another. Includes methods that convert values to <see cref="T:System.String" /> objects so that they can be displayed by the debugger.</summary>
    </member>
    <member name="M:Microsoft.JScript.IDebugConvert2.DecimalToString(System.Decimal)">
      <summary>When implemented in a class, converts the specified <see cref="T:System.Decimal" /> value to a <see cref="T:System.String" />.</summary>
      <returns>The string representation of <paramref name="value" />.</returns>
      <param name="value">The value to convert.</param>
    </member>
    <member name="T:Microsoft.JScript.IDebuggerObject">
      <summary>Defines methods that provide information about debugger objects. This interface is implemented by all <see cref="T:System.Reflection.IReflect" /> objects that are implemented by the debugger. Currently, this interface serves only to flag these objects as such to the scripting engine.</summary>
    </member>
    <member name="M:Microsoft.JScript.IDebuggerObject.HasEnumerableMember(System.String)">
      <summary>When implemented in a class, determines whether the current object has a member that has the specified name and that is enumerable.</summary>
      <returns>true if the current object has an enumerable member named <paramref name="name" />; otherwise, false.</returns>
      <param name="name">The name of the member to search for.</param>
    </member>
    <member name="M:Microsoft.JScript.IDebuggerObject.IsCOMObject">
      <summary>When implemented in a class, determines whether the current object is a true COM object or a proxy to a managed object.</summary>
      <returns>true if the current object is a COM object; false if the current object is a proxy to a managed object.</returns>
    </member>
    <member name="M:Microsoft.JScript.IDebuggerObject.IsEqual(Microsoft.JScript.IDebuggerObject)">
      <summary>When implemented in a class, determines whether the current object is equal to the specified object.</summary>
      <returns>true if the current object is the same as <paramref name="o" />; otherwise, false.</returns>
      <param name="o">The object to test for equality.</param>
    </member>
    <member name="M:Microsoft.JScript.IDebuggerObject.IsScriptFunction">
      <summary>When implemented in a class, determines whether the current object is a proxy to a managed JScript function.</summary>
      <returns>true if the current object is a proxy to a managed JScript function; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.JScript.IDebuggerObject.IsScriptObject">
      <summary>When implemented in a class, determines whether the current object is a proxy to a managed JScript object.</summary>
      <returns>true if the current object is a proxy to a managed JScript object; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.JScript.IDebugScriptScope">
      <summary>Defines methods that set the this value that is associated with the global scope. Used by the <see cref="T:Microsoft.JScript.Vsa.VsaEngine" />.</summary>
    </member>
    <member name="M:Microsoft.JScript.IDebugScriptScope.SetThisValue(System.Object)">
      <summary>When implemented in a class, sets the this value that is associated with the global scope.</summary>
      <param name="thisValue">The value that is used as the this object for the global scope.</param>
    </member>
    <member name="T:Microsoft.JScript.IDebugType">
      <summary>Defines methods that provide information about debugger objects. This interface is implemented by debugger objects that represent a type in the debugger target. </summary>
    </member>
    <member name="M:Microsoft.JScript.IDebugType.HasInstance(System.Object)">
      <summary>When implemented in a class, determines whether the specified object is an instance of the current type.</summary>
      <returns>true if <paramref name="o" /> is an instance of the current type; otherwise, false.</returns>
      <param name="o">The object to test.</param>
    </member>
    <member name="T:Microsoft.JScript.IDebugVsaScriptCodeItem">
      <summary>Defines methods that evaluate expressions and parse strings. This interface is typically implemented by an object that represents a code block, and it is typically called by a debugger. This interface provides extra functionality that is needed by an IActiveScript host.</summary>
    </member>
    <member name="M:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate">
      <summary>When implemented in a class, evaluates the block, expression, or statement represented by the code item and returns the value. It is typically called by a debugger that needs to evaluate an expression (in a Watch window, for example). For expressions, the value is the result of the expression. For blocks and statements, the resulting expression is the last expression calculated by the block or statement. </summary>
      <returns>Returns a value that represents the evaluation of the statement, expression, or block.</returns>
    </member>
    <member name="M:Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)">
      <summary>When implemented in a class, parses strings and returns the parsed-out information. This method is typically called by a debugger that needs to parse information about a breakpoint that is represented as a string. The debugger might have a breakpoint typed in by the user in the form functionname-arguments-ILoffset. A named breakpoint string can have a complex format, for example, F.B(C.D[], int, arg : double ) : C.Abc + 123. The parameter list is optional, as is the IL offset.</summary>
      <returns>Returns true if the named breakpoint is successfully parsed, false otherwise.</returns>
      <param name="input">A well-formed named breakpoint string giving a function, optional argument list, and optional IL offset.</param>
      <param name="functionName">Out parameter returning the name of the function parsed out of the input string, or the empty string if the input string is not well formed.</param>
      <param name="nargs">Out parameter returning the number of arguments in the optional argument list. Returns zero if there is no arguments list or if the string is not well formed.</param>
      <param name="arguments">Out parameter returning a space-separated list of the names of the types of all the arguments in the arguments list, or an empty string if the arguments list was missing or the input string was not well formed.</param>
      <param name="returnType">Out parameter returning a string containing the return type of the function named in the input, or the empty string if the return type was missing or the input string was not well formed.</param>
      <param name="offset">Unsigned long integer giving the IL offset from the input string, or zero if there was no IL offset or the string was not well formed.</param>
    </member>
    <member name="T:Microsoft.JScript.IDefineEvent">
      <summary>Defines extra functionality that is needed by an active script host. </summary>
    </member>
    <member name="M:Microsoft.JScript.IDefineEvent.AddEvent(System.String,System.Int32)">
      <summary>Used by an active script host to define an event.</summary>
      <returns>The event, if it was successfully added.</returns>
      <param name="code">The code that contains the event.</param>
      <param name="startLine">The line number where the code starts.</param>
    </member>
    <member name="T:Microsoft.JScript.IEngine2">
      <summary>Defines extra functionality that is needed by an IActiveScript host. Implemented by the <see cref="T:Microsoft.JScript.Vsa.VsaEngine" /> engine.  </summary>
    </member>
    <member name="M:Microsoft.JScript.IEngine2.Clone(System.AppDomain)">
      <summary>When implemented in a class, creates a new identical engine that runs in a new application domain, with the same compiled state and named items. This is not implemented in JScript.</summary>
      <returns>The new engine.</returns>
      <param name="domain">The application domain in which to create the new engine.</param>
    </member>
    <member name="M:Microsoft.JScript.IEngine2.CompileEmpty">
      <summary>When implemented in a class, triggers compilation of all the state currently in the engine. All references, code items, host items, and resources are run through the compiler.</summary>
      <returns>true if the compilation was successful, otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.JScript.IEngine2.ConnectEvents">
      <summary>When implemented in a class, communicates to the engine that it can connect any registered event sources that have events to any global event handlers. This is not implemented in JScript. </summary>
    </member>
    <member name="M:Microsoft.JScript.IEngine2.DisconnectEvents">
      <summary>When implemented in a class, directs the engine to unhook event sources from event handlers. This is not implemented in JScript.</summary>
    </member>
    <member name="M:Microsoft.JScript.IEngine2.GetAssembly">
      <summary>When implemented in a class, gets the compiled assembly that is produced by the compilation step.</summary>
      <returns>The compiled assembly.</returns>
    </member>
    <member name="M:Microsoft.JScript.IEngine2.GetGlobalScope">
      <summary>When implemented in a class, gets the global scope object.</summary>
      <returns>The global scope object.</returns>
    </member>
    <member name="M:Microsoft.JScript.IEngine2.GetModule">
      <summary>When implemented in a class, gets the code module from the compiled assembly.</summary>
      <returns>The code module from the compiled assembly.</returns>
    </member>
    <member name="M:Microsoft.JScript.IEngine2.InitVsaEngine(System.String,Microsoft.JScript.Vsa.IJSVsaSite)">
      <summary>When implemented in a class, initializes the <see cref="T:Microsoft.JScript.Vsa.VsaEngine" />.</summary>
      <param name="rootMoniker">The root moniker of the script engine. For more information, see <see cref="P:Microsoft.Vsa.IVsaEngine.RootMoniker" />.</param>
      <param name="site">The host-implemented <see cref="T:Microsoft.Vsa.IVsaSite" /> object that is used by the script engine to communicate with the host. For more information, see <see cref="P:Microsoft.Vsa.IVsaEngine.Site" />.</param>
    </member>
    <member name="M:Microsoft.JScript.IEngine2.Interrupt">
      <summary>When implemented in a class, calls <see cref="M:System.Threading.Thread.Abort" /> on the thread that is running the script code.</summary>
    </member>
    <member name="M:Microsoft.JScript.IEngine2.RegisterEventSource(System.String)">
      <summary>When implemented in a class, specifies the name of an item that is marked as an event source, so that the <see cref="M:Microsoft.JScript.IEngine2.ConnectEvents" /> method can determine which events to connect. This is not implemented in JScript.</summary>
      <param name="name">The name of an added item that provides events.</param>
    </member>
    <member name="M:Microsoft.JScript.IEngine2.Restart">
      <summary>When implemented in a class, this method is called by the debugger when it has to reset the engine to a clean state before evaluating a new expression. The method resets the added items and the global scope back to their original state.</summary>
    </member>
    <member name="M:Microsoft.JScript.IEngine2.Run(System.AppDomain)">
      <summary>When implemented in a class, runs the compiled code in the specified application domain. This is not implemented in JScript because managed engines do not support running code in user-provided application domains.</summary>
      <param name="domain">The application domain in which to run the compiled code.</param>
    </member>
    <member name="M:Microsoft.JScript.IEngine2.RunEmpty">
      <summary>When implemented in a class, runs the compiled code in the current <see cref="T:System.AppDomain" />.</summary>
    </member>
    <member name="T:Microsoft.JScript.IErrorHandler">
      <summary>Defines methods to handle errors that occur when code is being parsed.</summary>
    </member>
    <member name="M:Microsoft.JScript.IErrorHandler.OnCompilerError(Microsoft.JScript.IVsaFullErrorInfo)">
      <summary>When implemented in a class, determines how to handle an error that occurs when code is being parsed.</summary>
      <returns>false to handle the error; true to ignore the error and continue parsing.</returns>
      <param name="error">An object that contains information about the error.</param>
    </member>
    <member name="T:Microsoft.JScript.IMessageReceiver">
      <summary>Defines methods that receive output from a scripting engine. This interface acts as a callback object to capture output that would otherwise go to the console.</summary>
    </member>
    <member name="M:Microsoft.JScript.IMessageReceiver.Message(System.String)">
      <summary>When implemented in a class, captures the specified output.</summary>
      <param name="strValue">The output to capture.</param>
    </member>
    <member name="T:Microsoft.JScript.IMethodsCompletionInfo">
      <summary>This is a marker interface and has no methods.</summary>
    </member>
    <member name="T:Microsoft.JScript.Import">
      <summary>Imports namespaces for use in code. This class belongs to the abstract syntax tree category.</summary>
    </member>
    <member name="M:Microsoft.JScript.Import.JScriptImport(System.String,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>Imports the specified namespace for use by the specified scripting engine.</summary>
      <param name="name">The namespace to import.</param>
      <param name="engine">A reference to the scripting engine.</param>
    </member>
    <member name="T:Microsoft.JScript.In">
      <summary>Determines whether an object is contained in another object. This class belongs to the abstract syntax tree category.</summary>
    </member>
    <member name="M:Microsoft.JScript.In.JScriptIn(System.Object,System.Object)">
      <summary>Determines whether the first specified object is contained in the second specified object.</summary>
      <returns>true if <paramref name="v1" /> is contained in <paramref name="v2" />; otherwise, false.</returns>
      <param name="v1">The object to search for.</param>
      <param name="v2">The object to search in.</param>
    </member>
    <member name="T:Microsoft.JScript.INeedEngine">
      <summary>Defines methods that get and set references to the scripting engine. </summary>
    </member>
    <member name="M:Microsoft.JScript.INeedEngine.GetEngine">
      <summary>When implemented in a class, gets a reference to the scripting engine.</summary>
      <returns>A reference to the scripting engine.</returns>
    </member>
    <member name="M:Microsoft.JScript.INeedEngine.SetEngine(Microsoft.JScript.Vsa.VsaEngine)">
      <summary>When implemented in a class, sets a reference to the scripting engine.</summary>
      <param name="engine">A reference to the scripting engine.</param>
    </member>
    <member name="T:Microsoft.JScript.Instanceof">
      <summary>Determines whether an object can be coerced to the type of another object. This class belongs to the abstract syntax tree category.</summary>
    </member>
    <member name="M:Microsoft.JScript.Instanceof.JScriptInstanceof(System.Object,System.Object)">
      <summary>Determines whether the first specified object can be coerced to the type of the second specified object.</summary>
      <returns>true if <paramref name="v1" /> can be coerced to the type of object v2; otherwise, false.</returns>
      <param name="v1">The object to coerce to the type of object <paramref name="v2" />.</param>
      <param name="v2">The object that has the desired type.</param>
    </member>
    <member name="T:Microsoft.JScript.IObjectCompletionInfo">
      <summary>This is a marker interface and has no methods.</summary>
    </member>
    <member name="T:Microsoft.JScript.IParseText">
      <summary>Defines methods for parsing text when JScript code is being authored in an editor.</summary>
    </member>
    <member name="M:Microsoft.JScript.IParseText.Parse(System.String,Microsoft.JScript.IErrorHandler)">
      <summary>When implemented in a class, parses the specified source code.</summary>
      <param name="code">The source code to parse.</param>
      <param name="error">An object that contains information about errors that occur when <paramref name="code" /> is being parsed.</param>
    </member>
    <member name="T:Microsoft.JScript.IRedirectOutput">
      <summary>Defines methods that capture output that would otherwise go to the console. This interface is implemented by the <see cref="T:Microsoft.JScript.Vsa.VsaEngine" />.</summary>
    </member>
    <member name="M:Microsoft.JScript.IRedirectOutput.SetOutputStream(Microsoft.JScript.IMessageReceiver)">
      <summary>When implemented in a class, redirects the specified output stream to a new stream or data storage.</summary>
      <param name="output">The output to redirect. </param>
    </member>
    <member name="T:Microsoft.JScript.ISite2">
      <summary>Defines methods that are used by the <see cref="T:Microsoft.JScript.Vsa.VsaEngine" /> for name resolution. Provides extra functionality that is needed by an IActiveScript host. </summary>
    </member>
    <member name="M:Microsoft.JScript.ISite2.GetParentChain(System.Object)">
      <summary>When implemented in a class, gets the parent object hierarchy for the specified object.</summary>
      <returns>An array that contains the parent objects of <paramref name="obj" />.</returns>
      <param name="obj">An <see cref="T:System.Reflection.IReflect" /> object to get the parent hierarchy of.</param>
    </member>
    <member name="T:Microsoft.JScript.ITokenColorInfo">
      <summary>Defines properties for coloring specific units of code.</summary>
    </member>
    <member name="P:Microsoft.JScript.ITokenColorInfo.Color">
      <summary>When implemented in a class, gets the color that should be used to show a unit of code.</summary>
      <returns>The color that should be used to show the unit of code.</returns>
    </member>
    <member name="P:Microsoft.JScript.ITokenColorInfo.EndPosition">
      <summary>When implemented in a class, gets the position where a unit of code ends.</summary>
      <returns>The position where the unit of code ends.</returns>
    </member>
    <member name="P:Microsoft.JScript.ITokenColorInfo.StartPosition">
      <summary>When implemented in a class, gets the position where a unit of code starts.</summary>
      <returns>The position where the unit of code starts.</returns>
    </member>
    <member name="T:Microsoft.JScript.ITokenEnumerator">
      <summary>Defines methods for iterating over a collection of <see cref="T:Microsoft.JScript.ITokenColorInfo" /> objects.</summary>
    </member>
    <member name="M:Microsoft.JScript.ITokenEnumerator.GetNext">
      <summary>When implemented in a class, returns the next item in a collection of <see cref="T:Microsoft.JScript.ITokenColorInfo" /> objects.</summary>
      <returns>The next item in the collection.</returns>
    </member>
    <member name="M:Microsoft.JScript.ITokenEnumerator.Reset">
      <summary>When implemented in a class, sets the enumerator to its initial position before the first item in a collection of <see cref="T:Microsoft.JScript.ITokenColorInfo" /> objects.</summary>
    </member>
    <member name="T:Microsoft.JScript.IVsaFullErrorInfo">
      <summary>Defines properties to obtain information about errors. This interface provides extra functionality that is needed by an IActiveScript host.</summary>
    </member>
    <member name="P:Microsoft.JScript.IVsaFullErrorInfo.EndLine">
      <summary>When implemented in a class, gets the end line of the code in which an error occurred.</summary>
      <returns>The end line of the code in which an error occurred.</returns>
    </member>
    <member name="T:Microsoft.JScript.IVsaScriptCodeItem">
      <summary>Defines extra functionality that is needed by an IActiveScript host. </summary>
    </member>
    <member name="M:Microsoft.JScript.IVsaScriptCodeItem.Execute">
      <summary>When implemented in a class, compiles and runs this code.</summary>
      <returns>The return value from running the code, if there is any; otherwise, null.</returns>
    </member>
    <member name="P:Microsoft.JScript.IVsaScriptCodeItem.StartColumn">
      <summary>When implemented in a class, gets or sets the column number in the line where this code starts.</summary>
      <returns>The column number where this code starts.</returns>
    </member>
    <member name="P:Microsoft.JScript.IVsaScriptCodeItem.StartLine">
      <summary>When implemented in a class, gets or sets the line number where this code starts.</summary>
      <returns>The line number where this code starts.</returns>
    </member>
    <member name="T:Microsoft.JScript.IVsaScriptScope">
      <summary>Defines methods for resolving scope. The global scope object of the <see cref="T:Microsoft.JScript.Vsa.VsaEngine" /> implements this interface.</summary>
    </member>
    <member name="M:Microsoft.JScript.IVsaScriptScope.AddItem(System.String,Microsoft.JScript.Vsa.JSVsaItemType)">
      <summary>When implemented in a class, adds an item to the scope. </summary>
      <returns>The new item, if it is successfully added.</returns>
      <param name="itemName">The name of the item.</param>
      <param name="type">One of the enumeration values. Specifies the type of the item to add.</param>
    </member>
    <member name="M:Microsoft.JScript.IVsaScriptScope.CreateDynamicItem(System.String,Microsoft.JScript.Vsa.JSVsaItemType)">
      <summary>When implemented in a class, adds an item to the scope. The <see cref="T:Microsoft.JScript.Vsa.VsaEngine" /> must be running to use this method.</summary>
      <returns>The new item, if it is successfully added.</returns>
      <param name="itemName">The name of the item.</param>
      <param name="type">One of the enumeration values. Specifies the type of the item to add.</param>
    </member>
    <member name="M:Microsoft.JScript.IVsaScriptScope.GetItem(System.String)">
      <summary>When implemented in a class, gets the item from the scope that is designated by the specified name.</summary>
      <returns>The item that is named <paramref name="itemName" />.</returns>
      <param name="itemName">The name of the item to get.</param>
    </member>
    <member name="M:Microsoft.JScript.IVsaScriptScope.GetItemAtIndex(System.Int32)">
      <summary>When implemented in a class, gets the item from the scope that is designated by the specified index value.</summary>
      <returns>The item at <paramref name="index" />.</returns>
      <param name="index">The index of the item to get.</param>
    </member>
    <member name="M:Microsoft.JScript.IVsaScriptScope.GetItemCount">
      <summary>When implemented in a class, gets the number of items in the scope.</summary>
      <returns>The number of items in the scope.</returns>
    </member>
    <member name="M:Microsoft.JScript.IVsaScriptScope.GetObject">
      <summary>When implemented in a class, gets a reference to the global scope.</summary>
      <returns>A reference to the global scope.</returns>
    </member>
    <member name="P:Microsoft.JScript.IVsaScriptScope.Parent">
      <summary>When implemented in a class, gets a reference to the parent object.</summary>
      <returns>The parent scope.</returns>
    </member>
    <member name="M:Microsoft.JScript.IVsaScriptScope.RemoveItem(Microsoft.JScript.Vsa.IJSVsaItem)">
      <summary>When implemented in a class, removes the specified <see cref="T:Microsoft.JScript.Vsa.IJSVsaItem" /> object from the scope.</summary>
      <param name="item">The item to remove.</param>
    </member>
    <member name="M:Microsoft.JScript.IVsaScriptScope.RemoveItem(System.String)">
      <summary>When implemented in a class, removes the item that is designated by the specified name from the scope.</summary>
      <param name="itemName">The name of the item to remove.</param>
    </member>
    <member name="M:Microsoft.JScript.IVsaScriptScope.RemoveItemAtIndex(System.Int32)">
      <summary>When implemented in a class, removes the item that is designated by the specified index value from the scope.</summary>
      <param name="index">The index of the item to remove.</param>
    </member>
    <member name="T:Microsoft.JScript.IWrappedMember">
      <summary>Defines methods for accessing the object that a member is defined on.</summary>
    </member>
    <member name="M:Microsoft.JScript.IWrappedMember.GetWrappedObject">
      <summary>When implemented in a class, returns the object that a member is defined on.</summary>
      <returns>The object that a member is defined on.</returns>
    </member>
    <member name="T:Microsoft.JScript.JSAuthor">
      <summary>Provides services for authoring JScript code in an editor. </summary>
    </member>
    <member name="M:Microsoft.JScript.JSAuthor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.JSAuthor" /> class.</summary>
    </member>
    <member name="M:Microsoft.JScript.JSAuthor.GetCodeSense">
      <summary>Gets an object that is used to add IntelliSense to text when JScript code is being authored in an editor.</summary>
      <returns>An object that is used to add IntelliSense to text.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSAuthor.GetColorizer">
      <summary>Gets an object that is used to colorize text when JScript code is being authored in an editor.</summary>
      <returns>An object that is used to colorize text.</returns>
    </member>
    <member name="T:Microsoft.JScript.JSBuiltin">
      <summary>Specifies the built-in JScript functions. These functions correspond to the static methods of the intrinsic JScript objects. The members of this enumeration are used to create <see cref="T:Microsoft.JScript.JSFunctionAttribute" /> objects.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Array_concat">
      <summary>The static <see cref="M:Microsoft.JScript.ArrayPrototype.concat(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Object[])" /> method of the <see cref="T:Microsoft.JScript.ArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Array_join">
      <summary>The static <see cref="M:Microsoft.JScript.ArrayPrototype.join(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.ArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Array_pop">
      <summary>The static <see cref="M:Microsoft.JScript.ArrayPrototype.pop(System.Object)" /> method of the <see cref="T:Microsoft.JScript.ArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Array_push">
      <summary>The static <see cref="M:Microsoft.JScript.ArrayPrototype.push(System.Object,System.Object[])" /> method of the <see cref="T:Microsoft.JScript.ArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Array_reverse">
      <summary>The static <see cref="M:Microsoft.JScript.ArrayPrototype.reverse(System.Object)" /> method of the <see cref="T:Microsoft.JScript.ArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Array_shift">
      <summary>The static <see cref="M:Microsoft.JScript.ArrayPrototype.shift(System.Object)" /> method of the <see cref="T:Microsoft.JScript.ArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Array_slice">
      <summary>The static <see cref="M:Microsoft.JScript.ArrayPrototype.slice(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Double,System.Object)" /> method of the <see cref="T:Microsoft.JScript.ArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Array_sort">
      <summary>The static <see cref="M:Microsoft.JScript.ArrayPrototype.sort(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.ArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Array_splice">
      <summary>The static <see cref="M:Microsoft.JScript.ArrayPrototype.splice(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Double,System.Double,System.Object[])" /> method of the <see cref="T:Microsoft.JScript.ArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Array_toLocaleString">
      <summary>The static <see cref="M:Microsoft.JScript.ArrayPrototype.toLocaleString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.ArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Array_toString">
      <summary>The static <see cref="M:Microsoft.JScript.ArrayPrototype.toString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.ArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Array_unshift">
      <summary>The static <see cref="M:Microsoft.JScript.ArrayPrototype.unshift(System.Object,System.Object[])" /> method of the <see cref="T:Microsoft.JScript.ArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Boolean_toString">
      <summary>The static <see cref="M:Microsoft.JScript.BooleanPrototype.toString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.BooleanPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Boolean_valueOf">
      <summary>The static <see cref="M:Microsoft.JScript.BooleanPrototype.valueOf(System.Object)" /> method of the <see cref="T:Microsoft.JScript.BooleanPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getDate">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.getDate(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getDay">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.getDay(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getFullYear">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.getFullYear(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getHours">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.getHours(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getMilliseconds">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.getMilliseconds(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getMinutes">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.getMinutes(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getMonth">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.getMonth(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getSeconds">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.getSeconds(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getTime">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.getTime(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getTimezoneOffset">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.getTimezoneOffset(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getUTCDate">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.getUTCDate(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getUTCDay">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.getUTCDay(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getUTCFullYear">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.getUTCFullYear(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getUTCHours">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.getUTCHours(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getUTCMilliseconds">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.getUTCMilliseconds(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getUTCMinutes">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.getUTCMinutes(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getUTCMonth">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.getUTCMonth(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getUTCSeconds">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.getUTCSeconds(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getVarDate">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.getVarDate(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_getYear">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.getYear(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_parse">
      <summary>The static <see cref="M:Microsoft.JScript.DateConstructor.parse(System.String)" /> method of the <see cref="T:Microsoft.JScript.DateConstructor" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setDate">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.setDate(System.Object,System.Double)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setFullYear">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.setFullYear(System.Object,System.Double,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setHours">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.setHours(System.Object,System.Double,System.Object,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setMilliseconds">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.setMilliseconds(System.Object,System.Double)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setMinutes">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.setMinutes(System.Object,System.Double,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setMonth">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.setMonth(System.Object,System.Double,System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setSeconds">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.setSeconds(System.Object,System.Double,System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setTime">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.setTime(System.Object,System.Double)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setUTCDate">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.setUTCDate(System.Object,System.Double)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setUTCFullYear">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.setUTCFullYear(System.Object,System.Double,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setUTCHours">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.setUTCHours(System.Object,System.Double,System.Object,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setUTCMilliseconds">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.setUTCMilliseconds(System.Object,System.Double)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setUTCMinutes">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.setUTCMinutes(System.Object,System.Double,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setUTCMonth">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.setUTCMonth(System.Object,System.Double,System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setUTCSeconds">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.setUTCSeconds(System.Object,System.Double,System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_setYear">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.setYear(System.Object,System.Double)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_toDateString">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.toDateString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_toGMTString">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.toGMTString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_toLocaleDateString">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.toLocaleDateString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_toLocaleString">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.toLocaleString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_toLocaleTimeString">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.toLocaleTimeString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_toString">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.toString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_toTimeString">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.toTimeString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_toUTCString">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.toUTCString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_UTC">
      <summary>The static <see cref="M:Microsoft.JScript.DateConstructor.UTC(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.DateConstructor" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Date_valueOf">
      <summary>The static <see cref="M:Microsoft.JScript.DatePrototype.valueOf(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Enumerator_atEnd">
      <summary>The static <see cref="M:Microsoft.JScript.EnumeratorPrototype.atEnd(System.Object)" /> method of the <see cref="T:Microsoft.JScript.EnumeratorPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Enumerator_item">
      <summary>The static <see cref="M:Microsoft.JScript.EnumeratorPrototype.item(System.Object)" /> method of the <see cref="T:Microsoft.JScript.EnumeratorPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Enumerator_moveFirst">
      <summary>The static <see cref="M:Microsoft.JScript.EnumeratorPrototype.moveFirst(System.Object)" /> method of the <see cref="T:Microsoft.JScript.EnumeratorPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Enumerator_moveNext">
      <summary>The static <see cref="M:Microsoft.JScript.EnumeratorPrototype.moveNext(System.Object)" /> method of the <see cref="T:Microsoft.JScript.EnumeratorPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Error_toString">
      <summary>The static <see cref="M:Microsoft.JScript.ErrorPrototype.toString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.ErrorPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Function_apply">
      <summary>The static <see cref="M:Microsoft.JScript.FunctionPrototype.apply(System.Object,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.FunctionPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Function_call">
      <summary>The static <see cref="M:Microsoft.JScript.FunctionPrototype.call(System.Object,System.Object,System.Object[])" /> method of the <see cref="T:Microsoft.JScript.FunctionPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Function_toString">
      <summary>The static <see cref="M:Microsoft.JScript.FunctionPrototype.toString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.FunctionPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_CollectGarbage">
      <summary>The static <see cref="M:Microsoft.JScript.GlobalObject.CollectGarbage" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_decodeURI">
      <summary>The static <see cref="M:Microsoft.JScript.GlobalObject.decodeURI(System.Object)" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_decodeURIComponent">
      <summary>The static <see cref="M:Microsoft.JScript.GlobalObject.decodeURIComponent(System.Object)" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_encodeURI">
      <summary>The static <see cref="M:Microsoft.JScript.GlobalObject.encodeURI(System.Object)" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_encodeURIComponent">
      <summary>The static <see cref="M:Microsoft.JScript.GlobalObject.encodeURIComponent(System.Object)" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_escape">
      <summary>The static <see cref="M:Microsoft.JScript.GlobalObject.escape(System.Object)" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_eval">
      <summary>The static <see cref="M:Microsoft.JScript.GlobalObject.eval(System.Object)" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_GetObject">
      <summary>The static <see cref="M:Microsoft.JScript.GlobalObject.GetObject(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_isFinite">
      <summary>The static <see cref="M:Microsoft.JScript.GlobalObject.isFinite(System.Double)" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_isNaN">
      <summary>The static <see cref="M:Microsoft.JScript.GlobalObject.isNaN(System.Object)" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_parseFloat">
      <summary>The static <see cref="M:Microsoft.JScript.GlobalObject.parseFloat(System.Object)" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_parseInt">
      <summary>The static <see cref="M:Microsoft.JScript.GlobalObject.parseInt(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_ScriptEngine">
      <summary>The static <see cref="M:Microsoft.JScript.GlobalObject.ScriptEngine" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_ScriptEngineBuildVersion">
      <summary>The static <see cref="M:Microsoft.JScript.GlobalObject.ScriptEngineBuildVersion" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_ScriptEngineMajorVersion">
      <summary>The static <see cref="M:Microsoft.JScript.GlobalObject.ScriptEngineMajorVersion" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_ScriptEngineMinorVersion">
      <summary>The static <see cref="M:Microsoft.JScript.GlobalObject.ScriptEngineMinorVersion" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Global_unescape">
      <summary>The static <see cref="M:Microsoft.JScript.GlobalObject.unescape(System.Object)" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_abs">
      <summary>The static <see cref="M:Microsoft.JScript.MathObject.abs(System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_acos">
      <summary>The static <see cref="M:Microsoft.JScript.MathObject.acos(System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_asin">
      <summary>The static <see cref="M:Microsoft.JScript.MathObject.asin(System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_atan">
      <summary>The static <see cref="M:Microsoft.JScript.MathObject.atan(System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_atan2">
      <summary>The static <see cref="M:Microsoft.JScript.MathObject.atan2(System.Double,System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_ceil">
      <summary>The static <see cref="M:Microsoft.JScript.MathObject.ceil(System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_cos">
      <summary>The static <see cref="M:Microsoft.JScript.MathObject.cos(System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_exp">
      <summary>The static <see cref="M:Microsoft.JScript.MathObject.exp(System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_floor">
      <summary>The static <see cref="M:Microsoft.JScript.MathObject.floor(System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_log">
      <summary>The static <see cref="M:Microsoft.JScript.MathObject.log(System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_max">
      <summary>The static <see cref="M:Microsoft.JScript.MathObject.max(System.Object,System.Object,System.Object[])" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_min">
      <summary>The static <see cref="M:Microsoft.JScript.MathObject.min(System.Object,System.Object,System.Object[])" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_pow">
      <summary>The static <see cref="M:Microsoft.JScript.MathObject.pow(System.Double,System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_random">
      <summary>The static <see cref="M:Microsoft.JScript.MathObject.random" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_round">
      <summary>The static <see cref="M:Microsoft.JScript.MathObject.round(System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_sin">
      <summary>The static <see cref="M:Microsoft.JScript.MathObject.sin(System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_sqrt">
      <summary>The static <see cref="M:Microsoft.JScript.MathObject.sqrt(System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Math_tan">
      <summary>The static <see cref="M:Microsoft.JScript.MathObject.tan(System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.None">
      <summary>No method. This is the default value.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Number_toExponential">
      <summary>The static <see cref="M:Microsoft.JScript.NumberPrototype.toExponential(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.NumberPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Number_toFixed">
      <summary>The static <see cref="M:Microsoft.JScript.NumberPrototype.toFixed(System.Object,System.Double)" /> method of the <see cref="T:Microsoft.JScript.NumberPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Number_toLocaleString">
      <summary>The static <see cref="M:Microsoft.JScript.NumberPrototype.toLocaleString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.NumberPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Number_toPrecision">
      <summary>The static <see cref="M:Microsoft.JScript.NumberPrototype.toPrecision(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.NumberPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Number_toString">
      <summary>The static <see cref="M:Microsoft.JScript.NumberPrototype.toString(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.NumberPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Number_valueOf">
      <summary>The static <see cref="M:Microsoft.JScript.NumberPrototype.valueOf(System.Object)" /> method of the <see cref="T:Microsoft.JScript.NumberPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Object_hasOwnProperty">
      <summary>The static <see cref="M:Microsoft.JScript.ObjectPrototype.hasOwnProperty(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.ObjectPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Object_isPrototypeOf">
      <summary>The static <see cref="M:Microsoft.JScript.ObjectPrototype.isPrototypeOf(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.ObjectPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Object_propertyIsEnumerable">
      <summary>The static <see cref="M:Microsoft.JScript.ObjectPrototype.propertyIsEnumerable(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.ObjectPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Object_toLocaleString">
      <summary>The static <see cref="M:Microsoft.JScript.ObjectPrototype.toLocaleString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.ObjectPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Object_toString">
      <summary>The static <see cref="M:Microsoft.JScript.ObjectPrototype.toString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.ObjectPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.Object_valueOf">
      <summary>The static <see cref="M:Microsoft.JScript.ObjectPrototype.valueOf(System.Object)" /> method of the <see cref="T:Microsoft.JScript.ObjectPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.RegExp_compile">
      <summary>The static <see cref="M:Microsoft.JScript.RegExpPrototype.compile(System.Object,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.RegExpPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.RegExp_exec">
      <summary>The static <see cref="M:Microsoft.JScript.RegExpPrototype.exec(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.RegExpPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.RegExp_test">
      <summary>The static <see cref="M:Microsoft.JScript.RegExpPrototype.test(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.RegExpPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.RegExp_toString">
      <summary>The static <see cref="M:Microsoft.JScript.RegExpPrototype.toString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.RegExpPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_anchor">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.anchor(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_big">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.big(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_blink">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.blink(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_bold">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.bold(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_charAt">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.charAt(System.Object,System.Double)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_charCodeAt">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.charCodeAt(System.Object,System.Double)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_concat">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.concat(System.Object,System.Object[])" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_fixed">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.fixed(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_fontcolor">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.fontcolor(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_fontsize">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.fontsize(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_fromCharCode">
      <summary>The static <see cref="M:Microsoft.JScript.StringConstructor.fromCharCode(System.Object[])" /> method of the <see cref="T:Microsoft.JScript.StringConstructor" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_indexOf">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.indexOf(System.Object,System.Object,System.Double)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_italics">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.italics(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_lastIndexOf">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.lastIndexOf(System.Object,System.Object,System.Double)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_link">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.link(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_localeCompare">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.localeCompare(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_match">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.match(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_replace">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.replace(System.Object,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_search">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.search(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_slice">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.slice(System.Object,System.Double,System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_small">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.small(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_split">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.split(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_strike">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.strike(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_sub">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.sub(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_substr">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.substr(System.Object,System.Double,System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_substring">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.substring(System.Object,System.Double,System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_sup">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.sup(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_toLocaleLowerCase">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.toLocaleLowerCase(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_toLocaleUpperCase">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.toLocaleUpperCase(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_toLowerCase">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.toLowerCase(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_toString">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.toString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_toUpperCase">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.toUpperCase(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.String_valueOf">
      <summary>The static <see cref="M:Microsoft.JScript.StringPrototype.valueOf(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.VBArray_dimensions">
      <summary>The static <see cref="M:Microsoft.JScript.VBArrayPrototype.dimensions(System.Object)" /> method of the <see cref="T:Microsoft.JScript.VBArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.VBArray_getItem">
      <summary>The static <see cref="M:Microsoft.JScript.VBArrayPrototype.getItem(System.Object,System.Object[])" /> method of the <see cref="T:Microsoft.JScript.VBArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.VBArray_lbound">
      <summary>The static <see cref="M:Microsoft.JScript.VBArrayPrototype.lbound(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.VBArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.VBArray_toArray">
      <summary>The static <see cref="M:Microsoft.JScript.VBArrayPrototype.toArray(System.Object,Microsoft.JScript.Vsa.VsaEngine)" /> method of the <see cref="T:Microsoft.JScript.VBArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSBuiltin.VBArray_ubound">
      <summary>The static <see cref="M:Microsoft.JScript.VBArrayPrototype.ubound(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.VBArrayPrototype" /> class.</summary>
    </member>
    <member name="T:Microsoft.JScript.JSConstructor">
      <summary>Wraps a <see cref="T:Microsoft.JScript.FunctionObject" />. </summary>
    </member>
    <member name="P:Microsoft.JScript.JSConstructor.Attributes">
      <summary>Gets the attributes that are associated with this constructor.</summary>
      <returns>A bitwise combination of the enumeration values.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSConstructor.DeclaringType">
      <summary>Gets the type that declares this constructor.</summary>
      <returns>The Type object for the class that declares this member.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSConstructor.GetCustomAttributes(System.Boolean)">
      <summary>Returns an array that contains the custom attributes that are attached to this constructor.</summary>
      <returns>An array of custom attributes that are attached to this method, or, if there are none, an array that has zero elements.</returns>
      <param name="inherit">true to search this member's inheritance hierarchy to find the attributes.</param>
    </member>
    <member name="M:Microsoft.JScript.JSConstructor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Returns an array that contains the custom attributes that are attached to this constructor, searching only for attributes of the specified type.</summary>
      <returns>An array of <see cref="T:System.Object" /> objects that has zero elements.</returns>
      <param name="t">The type of attribute to search for.</param>
      <param name="inherit">true to search this member's inheritance hierarchy to find the attributes.</param>
    </member>
    <member name="M:Microsoft.JScript.JSConstructor.GetMethodImplementationFlags">
      <summary>Returns information about the implementation of this method.</summary>
      <returns>
        <see cref="F:System.Reflection.MethodImplAttributes.Managed" /> and <see cref="F:System.Reflection.MethodImplAttributes.IL" />.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSConstructor.GetParameters">
      <summary>Gets the parameters of this constructor.</summary>
      <returns>An array that contains information that matches the signature of this constructor.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSConstructor.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
      <summary>Invokes the constructor on the specified object, using the specified culture and binding information.</summary>
      <returns>An instance of the class associated with the constructor.</returns>
      <param name="obj">The object to call the constructor on.</param>
      <param name="options">A bitwise combination of the enumeration values that control the binding.</param>
      <param name="binder">An object that converts the type from actual argument type to formal argument type.</param>
      <param name="parameters">The argument list to pass to the constructor.</param>
      <param name="culture">Provides information about a specific culture or locale. Used to format numbers, dates, and strings correctly.</param>
    </member>
    <member name="M:Microsoft.JScript.JSConstructor.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
      <summary>Invokes the constructor, using the specified culture and binding information.</summary>
      <returns>An instance of the class associated with the constructor.</returns>
      <param name="options">A bitwise combination of the enumeration values that control the binding.</param>
      <param name="binder">An object that converts the type from actual argument type to formal argument type.</param>
      <param name="parameters">The argument list to pass to the constructor.</param>
      <param name="culture">Provides information about a specific culture or locale. Used to format numbers, dates, and strings correctly.</param>
    </member>
    <member name="M:Microsoft.JScript.JSConstructor.IsDefined(System.Type,System.Boolean)">
      <summary>Determines whether the specified attribute type is attached to this constructor.</summary>
      <returns>false in all cases.</returns>
      <param name="type">The attribute type to search for.</param>
      <param name="inherit">true to search this member's inheritance hierarchy to find the attributes.</param>
    </member>
    <member name="P:Microsoft.JScript.JSConstructor.MemberType">
      <summary>Gets the type of member that this method is. Identifies the type of class derived from <see cref="T:System.Reflection.MemberInfo" /> that this class derives from.</summary>
      <returns>
        <see cref="F:System.Reflection.MemberTypes.Constructor" />, because this class derives from <see cref="T:System.Reflection.ConstructorInfo" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSConstructor.MethodHandle">
      <summary>Gets a handle to the internal metadata representation of this constructor.</summary>
      <returns>A handle to the internal metadata representation of this constructor.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSConstructor.Name">
      <summary>Gets the name of this constructor.</summary>
      <returns>The name of this constructor.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSConstructor.ReflectedType">
      <summary>Gets the class object that was used to obtain this instance through reflection.</summary>
      <returns>The Type object for the class that declares this member.</returns>
    </member>
    <member name="T:Microsoft.JScript.JScriptCodeProvider">
      <summary>Provides access to instances of the JScript code generator and code compiler. </summary>
    </member>
    <member name="M:Microsoft.JScript.JScriptCodeProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.JScriptCodeProvider" /> class.</summary>
    </member>
    <member name="M:Microsoft.JScript.JScriptCodeProvider.CreateCompiler">
      <summary>Returns an instance of the JScript code compiler.</summary>
      <returns>An instance of the JScript code compiler.</returns>
    </member>
    <member name="M:Microsoft.JScript.JScriptCodeProvider.CreateGenerator">
      <summary>Returns an instance of the JScript code generator.</summary>
      <returns>An instance of the JScript code generator.</returns>
    </member>
    <member name="P:Microsoft.JScript.JScriptCodeProvider.FileExtension">
      <summary>Gets the file name extension for JScript code files.</summary>
      <returns>The string literal "js".</returns>
    </member>
    <member name="T:Microsoft.JScript.JScriptException">
      <summary>The exception that is thrown by JScript to notify a common language runtime (CLR) host or program that an error occurred. A <see cref="T:Microsoft.JScript.JScriptException" /> usually takes a <see cref="T:Microsoft.JScript.JSError" /> enumeration value. </summary>
    </member>
    <member name="M:Microsoft.JScript.JScriptException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.JScriptException" /> class.</summary>
    </member>
    <member name="M:Microsoft.JScript.JScriptException.#ctor(Microsoft.JScript.JSError)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.JScriptException" /> class, using the specified <see cref="T:Microsoft.JScript.JSError" />.</summary>
      <param name="errorNumber">One of the enumeration values. The value specifies the error.</param>
    </member>
    <member name="M:Microsoft.JScript.JScriptException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.JScriptException" /> class, using the specified serialized data.</summary>
      <param name="info">The serialized object data about the exception that is being thrown.</param>
      <param name="context">Contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.JScript.JScriptException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.JScriptException" /> class, using the specified error message.</summary>
      <param name="m">The message that describes the error.</param>
    </member>
    <member name="M:Microsoft.JScript.JScriptException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.JScriptException" /> class, using the specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="m">The message that describes the error.</param>
      <param name="e">The exception that is the cause of the current exception.</param>
    </member>
    <member name="P:Microsoft.JScript.JScriptException.Column">
      <summary>Gets the column in the code in which the error occurs.</summary>
      <returns>The column in the code in which the error occurs, or 0 if the <see cref="T:Microsoft.JScript.Context" /> is null.</returns>
    </member>
    <member name="P:Microsoft.JScript.JScriptException.Description">
      <summary>Gets a message that describes the error.</summary>
      <returns>A message that describes the error.</returns>
    </member>
    <member name="P:Microsoft.JScript.JScriptException.EndColumn">
      <summary>Gets the column in the code in which the error ends.</summary>
      <returns>The column in the code in which the error ends, or 0 if the <see cref="T:Microsoft.JScript.Context" /> is null.</returns>
    </member>
    <member name="P:Microsoft.JScript.JScriptException.EndLine">
      <summary>Gets the line of code in which the error ends.</summary>
      <returns>The line of code in which the error ends, or 0 if the <see cref="T:Microsoft.JScript.Context" /> is null.</returns>
    </member>
    <member name="P:Microsoft.JScript.JScriptException.ErrorNumber">
      <summary>Gets the <see cref="P:System.Exception.HResult" /> code of the error.</summary>
      <returns>The <see cref="P:System.Exception.HResult" /> code of the error.</returns>
    </member>
    <member name="M:Microsoft.JScript.JScriptException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Stores information about the exception, including IsError and Code values, in the <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</summary>
      <param name="info">The serialized object data about the exception that is being thrown.</param>
      <param name="context">Contextual information about the source or destination.</param>
    </member>
    <member name="P:Microsoft.JScript.JScriptException.Line">
      <summary>Gets the line of code in which the error occurs.</summary>
      <returns>The line of code in which the error occurs, or 0 if the <see cref="T:Microsoft.JScript.Context" /> is null.</returns>
    </member>
    <member name="P:Microsoft.JScript.JScriptException.LineText">
      <summary>Gets the text of the code in which the error occurs.</summary>
      <returns>The text of the code, or an empty string if the <see cref="T:Microsoft.JScript.Context" /> is null.</returns>
    </member>
    <member name="P:Microsoft.JScript.JScriptException.Message">
      <summary>Gets a message that describes the error.</summary>
      <returns>A message that describes the error.</returns>
    </member>
    <member name="P:Microsoft.JScript.JScriptException.Microsoft#JScript#Vsa#IJSVsaError#Description">
      <summary>Gets a message that describes the error.</summary>
      <returns>A message that describes the error.</returns>
    </member>
    <member name="P:Microsoft.JScript.JScriptException.Microsoft#JScript#Vsa#IJSVsaError#Number">
      <summary>Gets the <see cref="P:System.Exception.HResult" /> code of the error.</summary>
      <returns>The <see cref="P:System.Exception.HResult" /> code of the error.</returns>
    </member>
    <member name="P:Microsoft.JScript.JScriptException.Number">
      <summary>Gets the <see cref="P:System.Exception.HResult" /> code of the error.</summary>
      <returns>The <see cref="P:System.Exception.HResult" /> code of the error.</returns>
    </member>
    <member name="P:Microsoft.JScript.JScriptException.Severity">
      <summary>Gets a number between 0 (most severe) and 4 (least severe) that indicates the severity of the error. 0 is the default.</summary>
      <returns>A number between 0 and 4.</returns>
    </member>
    <member name="P:Microsoft.JScript.JScriptException.SourceItem">
      <summary>Gets the source code item that caused the error.</summary>
      <returns>The source code item; or throws a <see cref="T:Microsoft.JScript.NoContextException" /> if the <see cref="T:Microsoft.JScript.Context" /> is null.</returns>
    </member>
    <member name="P:Microsoft.JScript.JScriptException.SourceMoniker">
      <summary>Gets the name of the source code file that contains the error.</summary>
      <returns>The name of the source code file, or the string literal "no source" if the <see cref="T:Microsoft.JScript.Context" /> is null.</returns>
    </member>
    <member name="P:Microsoft.JScript.JScriptException.StackTrace">
      <summary>Gets the stack trace information at the time of the error.</summary>
      <returns>The stack trace information.</returns>
    </member>
    <member name="P:Microsoft.JScript.JScriptException.StartColumn">
      <summary>Gets the column in the code in which the error occurs.</summary>
      <returns>The column in the code in which the error occurs, or 0 if the <see cref="T:Microsoft.JScript.Context" /> is null.</returns>
    </member>
    <member name="T:Microsoft.JScript.JSError">
      <summary>Specifies the JScript error messages. This class belongs to the compilation and run-time state category.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.AbstractCannotBePrivate">
      <summary>An abstract method cannot be private.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.AbstractCannotBeStatic">
      <summary>Static methods cannot be abstract.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.AbstractWithBody">
      <summary>An abstract function cannot have a body.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ActionNotSupported">
      <summary>The object does not support this action.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.AmbiguousBindingBecauseOfEval">
      <summary>The presence of <see cref="T:Microsoft.JScript.Eval" /> has made the use of this name ambiguous.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.AmbiguousBindingBecauseOfWith">
      <summary>The <see cref="T:Microsoft.JScript.With" /> statement has made the use of this name ambiguous.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.AmbiguousConstructorCall">
      <summary>More than one constructor matches this parameter list.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.AmbiguousMatch">
      <summary>More than one method or property matches this parameter list.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ArrayLengthAssignIncorrect">
      <summary>Array length must be assigned a finite positive number.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ArrayLengthConstructIncorrect">
      <summary>Array length must be a finite positive integer.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ArrayMayBeCopied">
      <summary>Assigning a JScript array to a <see cref="T:System.Array" /> may cause the array to be copied.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.AssemblyAttributesMustBeGlobal">
      <summary>Assembly custom attributes cannot be part of another construct.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.AssignmentToReadOnly">
      <summary>Cannot assign to read-only field or property.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BadBreak">
      <summary>Cannot have break outside the loop.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BadContinue">
      <summary>Cannot have continue outside the loop.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BadFunctionDeclaration">
      <summary>Possible invalid function declaration, function missing, or unrecognized syntax error.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BadHexDigit">
      <summary>Expected hexadecimal digit.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BadLabel">
      <summary>There is already a label that has that name.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BadModifierInInterface">
      <summary>This modifier cannot be used on an interface member.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BadOctalLiteral">
      <summary>Malformed octal literal treated as decimal literal.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BadPropertyDeclaration">
      <summary>Invalid property declaration. The get accessor must not have arguments and the set accessor must have one argument.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BadReturn">
      <summary>Return statement cannot appear outside the function.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BadSwitch">
      <summary>Missing case or default statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BadThrow">
      <summary>A throw statement must have an argument unless it is inside the catch block of a try statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BadVariableDeclaration">
      <summary>Possible invalid variable declaration, var missing, or unrecognized syntax error.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BadWayToLeaveFinally">
      <summary>It is slow and potentially confusing to leave a finally block this way.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BaseClassIsExpandoAlready">
      <summary>A base class is already marked <see cref="T:Microsoft.JScript.Expando" />; current specification will be ignored.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.BooleanExpected">
      <summary>No Boolean value found.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CannotAssignToFunctionResult">
      <summary>Cannot assign to a function result.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CannotBeAbstract">
      <summary>Cannot be abstract unless class is marked as abstract.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CannotCallSecurityMethodLateBound">
      <summary>The <see cref="M:System.Security.CodeAccessPermission.Deny" />, <see cref="M:System.Security.CodeAccessPermission.PermitOnly" />, and <see cref="M:System.Security.CodeAccessPermission.Assert" /> security methods cannot be called using late binding.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CannotChangeVisibility">
      <summary>Cannot change visibility specification of a base method.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CannotInstantiateAbstractClass">
      <summary>It is not possible to construct an instance of an abstract class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CannotNestPositionDirective">
      <summary>Position directive must be ended before a new one can be started.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CannotReturnValueFromVoidFunction">
      <summary>Cannot return a value from a void function or constructor.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CannotUseNameOfClass">
      <summary>Only a constructor function can have the same name as the class it appears in.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CannotUseStaticSecurityAttribute">
      <summary>JScript does not support static security attributes.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CantAssignThis">
      <summary>Cannot assign to this.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CantCreateObject">
      <summary>Cannot create object.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CcInvalidElif">
      <summary>Unmatched @elif; no @if defined.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CcInvalidElse">
      <summary>Unmatched @else; no @if defined.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CcInvalidEnd">
      <summary>Unmatched @end; no @if defined.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CcInvalidInDebugger">
      <summary>Conditional compilation directives and variables cannot be used in the debugger.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CcOff">
      <summary>Conditional compilation is turned off.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CircularDefinition">
      <summary>Circular definition.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ClashWithProperty">
      <summary>The name of the field conflicts with the name of the property.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ClassNotAllowed">
      <summary>Class definition not allowed in this context.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ConstructorMayNotHaveReturnType">
      <summary>A constructor cannot have a return type.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.CustomAttributeUsedMoreThanOnce">
      <summary>This type of attribute must be unique.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.DateExpected">
      <summary>Date object expected.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.DelegatesShouldNotBeExplicitlyConstructed">
      <summary>Delegates should not be explicitly constructed; simply use the method name.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.Deprecated">
      <summary>The specified type is deprecated.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.DifferentReturnTypeFromBase">
      <summary>Method in base has a different return type.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.DoesNotHaveAnAddress">
      <summary>Expression does not have an address.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.DupDefault">
      <summary>default can appear only once in a switch statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.DuplicateMethod">
      <summary>This method has the same name, parameter types, and return type as another method in this class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.DuplicateName">
      <summary>Identifier already in use.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.DuplicateNamedParameter">
      <summary>Duplicate named parameter.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.DupVisibility">
      <summary>Visibility modifier already defined.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.EnumeratorExpected">
      <summary>Enumerator object expected.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.EnumNotAllowed">
      <summary>enum definition not allowed in this context.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ErrEOF">
      <summary>Expecting more source characters.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ExceptionFromHResult">
      <summary>Exception from HRESULT.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ExecutablesCannotBeLocalized">
      <summary>Executables cannot be localized; <see cref="P:System.Reflection.AssemblyCultureAttribute.Culture" /> should always be empty.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ExpandoClassShouldNotImpleEnumerable">
      <summary>
        <see cref="T:Microsoft.JScript.Expando" /> classes should not implement <see cref="T:System.Collections.IEnumerable" />. The interface is implicitly defined on <see cref="T:Microsoft.JScript.Expando" /> classes.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ExpandoMustBePublic">
      <summary>
        <see cref="T:Microsoft.JScript.Expando" /> methods must be public.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ExpandoPrecludesAbstract">
      <summary>
        <see cref="T:Microsoft.JScript.Expando" /> methods cannot be abstract.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ExpandoPrecludesOverride">
      <summary>
        <see cref="T:Microsoft.JScript.Expando" /> methods cannot override base class methods.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ExpandoPrecludesStatic">
      <summary>
        <see cref="T:Microsoft.JScript.Expando" /> methods cannot be static.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ExpectedAssembly">
      <summary>Expected assembly.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ExpressionExpected">
      <summary>Expected expression.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.FileNotFound">
      <summary>File not found.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.FinalPrecludesAbstract">
      <summary>final and abstract cannot be used together.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.FractionOutOfRange">
      <summary>The number of fractional digits is out of range.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.FuncEvalAborted">
      <summary>Function evaluation was aborted.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.FuncEvalBadLocation">
      <summary>Function evaluation cannot be done when stopped at this point in the program.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.FuncEvalBadThreadNotStarted">
      <summary>Function evaluation failed and the thread has not started.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.FuncEvalBadThreadState">
      <summary>Function evaluation failed. The thread can contain incorrect data.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.FuncEvalThreadSleepWaitJoin">
      <summary>Function evaluation failed. The thread is sleeping, waiting for an object, or waiting for another thread to finish.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.FuncEvalThreadSuspended">
      <summary>Function evaluation failed. The thread is suspended.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.FuncEvalTimedout">
      <summary>Function evaluation timed out.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.FuncEvalWebMethod">
      <summary>Cannot call a Web method in the debugger.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.FunctionExpected">
      <summary>A function was expected.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.GetAndSetAreInconsistent">
      <summary>The get and set methods of this property do not match each other.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.HidesAbstractInBase">
      <summary>Method hides abstract in a base class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.HidesParentMember">
      <summary>base class already contains a member by this name.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.IllegalAssignment">
      <summary>Invalid assignment.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.IllegalChar">
      <summary>Invalid character.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.IllegalEval">
      <summary>An <see cref="T:Microsoft.JScript.Eval" /> cannot be called by an alias.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.IllegalParamArrayAttribute">
      <summary>A variable argument list must be of an array type.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.IllegalUseOfSuper">
      <summary>It is not valid to use the base class in this way.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.IllegalUseOfThis">
      <summary>It is not valid to use this in the current context.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.IllegalVisibility">
      <summary>Invalid visibility modifier.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ImplicitlyReferencedAssemblyNotFound">
      <summary>A referenced assembly depends on another assembly that is not referenced or could not be found.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ImpossibleConversion">
      <summary>The specified conversion or coercion is not possible.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.IncompatibleAssemblyReference">
      <summary>The assembly referenced is incompatible.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.IncompatibleVisibility">
      <summary>Incompatible visibility modifier.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.IncorrectNumberOfIndices">
      <summary>The number of indices does not match the dimension of the array.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InstanceNotAccessibleFromStatic">
      <summary>A non-static member is not accessible from a static scope.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InterfaceIllegalInInterface">
      <summary>Interfaces cannot be declared in an interface.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InternalError">
      <summary>An internal error has been thrown.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InvalidAssemblyKeyFile">
      <summary>An invalid assembly key file has been used.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InvalidBaseTypeForEnum">
      <summary>enum base type must be a primitive integral type.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InvalidCall">
      <summary>Invalid procedure call or argument.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InvalidCustomAttribute">
      <summary>A custom attribute class must derive from <see cref="T:System.Attribute" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InvalidCustomAttributeArgument">
      <summary>Only primitive types are allowed in a custom attribute constructor arguments list.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InvalidCustomAttributeClassOrCtor">
      <summary>Unknown custom attribute class or constructor.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InvalidCustomAttributeTarget">
      <summary>This attribute is not valid for this type of declaration.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InvalidDebugDirective">
      <summary>Invalid debug directive.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InvalidElse">
      <summary>Unmatched else; no if defined.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InvalidImport">
      <summary>The import statement is not valid in this context.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InvalidLanguageOption">
      <summary>Must specify either "fast" or "versionSafe" language option.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InvalidPositionDirective">
      <summary>An unknown position directive was discovered.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InvalidPrototype">
      <summary>This function does not have a valid prototype object.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.InvalidResource">
      <summary>This is not a valid .resources file.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ItemNotAllowedOnExpandoClass">
      <summary>Cannot define the property Item on an <see cref="T:Microsoft.JScript.Expando" /> class. This Item is reserved for the <see cref="T:Microsoft.JScript.Expando" /> fields.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.KeywordUsedAsIdentifier">
      <summary>You cannot use a reserved word as an identifier.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.MemberInitializerCannotContainFuncExpr">
      <summary>A member initializer cannot contain a function expression.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.MemberTypeCLSCompliantMismatch">
      <summary>Class member cannot be marked Common Language Specification (CLS) compliant because the class is not marked CLS compliant.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.MethodClashOnExpandoSuperClass">
      <summary>Cannot create the <see cref="T:Microsoft.JScript.Expando" /> class because a property named Item is already defined in the class hierarchy.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.MethodInBaseIsNotVirtual">
      <summary>A method in a base class that is final or not virtualoverride is ignored. Specify hide.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.MethodNotAllowedOnExpandoClass">
      <summary>Cannot define a property named Item on an <see cref="T:Microsoft.JScript.Expando" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.MissingConstructForAttributes">
      <summary>The list of attributes does not apply to the current context.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.MissingNameParameter">
      <summary>The specified named parameter name is not one of the formal parameters.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.MoreNamedParametersThanArguments">
      <summary>Too few arguments specified. The number of named parameter names cannot exceed the number of arguments passed in.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.MustBeEOL">
      <summary>Directive cannot be followed by other code on the same line.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.MustImplementMethod">
      <summary>The class must provide an implementation of the method.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.MustProvideNameForNamedParameter">
      <summary>Cannot provide null or empty named parameter name.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NeedArrayObject">
      <summary>A "|" is not an array object. Array object expected.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NeedCompileTimeConstant">
      <summary>An expression must be a compile-time constant.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NeedInstance">
      <summary>An instance is expected.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NeedInterface">
      <summary>An interface name is expected.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NeedObject">
      <summary>An object is required.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NeedType">
      <summary>A type name is expected.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NestedInstanceTypeCannotBeExtendedByStatic">
      <summary>A non-static nested type can be extended only by a non-static type nested in the same class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NewNotSpecifiedInMethodDeclaration">
      <summary>A method matches a method in a base class. Must specify override or hide.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoAt">
      <summary>Expected @.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoCatch">
      <summary>Expected catch.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoCcEnd">
      <summary>Expected @end.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoColon">
      <summary>Expected ":".</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoComma">
      <summary>Expected ",".</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoCommaOrTypeDefinitionError">
      <summary>Expected "," or invalid type declaration; write "&lt;Identifier&gt; : &lt;Type&gt;" not "&lt;Type&gt; &lt;Identifier&gt;".</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoCommentEnd">
      <summary>Comment not terminated.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoConstructor">
      <summary>No such constructor.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoEqual">
      <summary>Expected "=".</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoError">
      <summary>No error. This is the default (0) value for the enumeration.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoFuncEvalAllowed">
      <summary>Function evaluation aborted. To turn on property evaluation, click Options on the Tools menu and then select the Debugging in the tree view.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoIdentifier">
      <summary>Expected identifier.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoLabel">
      <summary>Label not found.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoLeftCurly">
      <summary>Expected "{".</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoLeftParen">
      <summary>Expected "(".</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoMemberIdentifier">
      <summary>Expected identifier or string.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoMethodInBaseToNew">
      <summary>There is no member in a base class to hide.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoMethodInBaseToOverride">
      <summary>There is no member in a base class to override.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NonCLSCompliantMember">
      <summary>The specified member is not CLS compliant.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NonCLSCompliantType">
      <summary>The specified type is not CLS compliant.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NonClsException">
      <summary>A target threw a non-CLS exception.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NonStaticWithTypeName">
      <summary>A non-static member cannot be accessed with the class name.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NonSupportedInDebugger">
      <summary>The expression cannot be evaluated in the debugger.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoRightBracket">
      <summary>Expected "]".</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoRightBracketOrComma">
      <summary>Expected "," or "]".</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoRightCurly">
      <summary>Expected "}".</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoRightParen">
      <summary>Expected ")".</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoRightParenOrComma">
      <summary>Expected "," or ")".</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoSemicolon">
      <summary>Expected ";".</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoSuchMember">
      <summary>Objects of this type do not have such a member.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoSuchStaticMember">
      <summary>Type does not have such a static member.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoSuchType">
      <summary>Type could not be found. An assembly reference might be missing.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NotAccessible">
      <summary>The object or member is not accessible from this scope.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NotAllowedInSuperConstructorCall">
      <summary>Object or member is not allowed in a call to the base class constructor.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NotAnExpandoFunction">
      <summary>Class members used as constructors should be marked as <see cref="T:Microsoft.JScript.Expando" /> functions.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NotCollection">
      <summary>This object is not a collection.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NotConst">
      <summary>Expected constant.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NotDeletable">
      <summary>The object or member cannot be deleted.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NotIndexable">
      <summary>Objects of this type are not indexable.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NotInsideClass">
      <summary>Valid only inside a class definition.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NotMeantToBeCalledDirectly">
      <summary>You cannot call this method directly. If possible, use property accessors instead.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NotOKToCallSuper">
      <summary>It is not valid to call a base class constructor from this location.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NotValidForConstructor">
      <summary>Not valid for a constructor.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NotValidVersionString">
      <summary>Not a valid version string.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NotYetImplemented">
      <summary>Not yet implemented.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoVarInEnum">
      <summary>enum member declarations should not use the var keyword.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NoWhile">
      <summary>Expected while.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.NumberExpected">
      <summary>Expected a number.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ObjectExpected">
      <summary>Expected an object.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.OctalLiteralsAreDeprecated">
      <summary>Octal literals are deprecated.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.OLENoPropOrMethod">
      <summary>Object does not support this property or method.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.OnlyClassesAllowed">
      <summary>Only classes are allowed inside a package.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.OnlyClassesAndPackagesAllowed">
      <summary>Only classes and packages are allowed inside a library.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.OutOfMemory">
      <summary>Out of memory.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.OutOfStack">
      <summary>Out of stack space.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.OverrideAndHideUsedTogether">
      <summary>Cannot use override and hide together in a member declaration.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.PackageExpected">
      <summary>Package name expected.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.PackageInWrongContext">
      <summary>Package definition is not allowed in this context.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ParamListNotLast">
      <summary>A variable argument list must be the last argument.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.PossibleBadConversion">
      <summary>This conversion may fail at runtime.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.PossibleBadConversionFromString">
      <summary>Converting a string to a number or Boolean is slow and may fail at run time.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.PrecisionOutOfRange">
      <summary>The precision is out of range.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.PropertyLevelAttributesMustBeOnGetter">
      <summary>An attribute that targets the property must be specified on the get accessor, if the get accessor is present.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.RefParamsNonSupportedInDebugger">
      <summary>Methods with ref parameters cannot be called in the debugger.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.RegExpExpected">
      <summary>
        <see cref="T:Microsoft.JScript.RegExpObject" /> object expected.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.RegExpSyntax">
      <summary>Syntax error in regular expression.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.ShouldBeAbstract">
      <summary>A function without a body should be abstract.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.SideEffectsDisallowed">
      <summary>The expression causes side effects and will not be evaluated.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.StaticIsAlreadyFinal">
      <summary>Static methods cannot be final.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.StaticMethodsCannotHide">
      <summary>Static methods cannot hide base class methods.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.StaticMethodsCannotOverride">
      <summary>Static methods cannot override base class methods.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.StaticMissingInStaticInit">
      <summary>Static initializer must specify the static keyword.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.StaticRequiresTypeName">
      <summary>A static member must be accessed by the class name.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.StaticVarNotAvailable">
      <summary>A static variable is not available.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.StringConcatIsSlow">
      <summary>The plus operator is a slow way to concatenate strings. Consider using <see cref="T:System.Text.StringBuilder" /> instead.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.StringExpected">
      <summary>String expected.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.SuperClassConstructorNotAccessible">
      <summary>Base class constructor is not accessible from this scope.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.SuspectAssignment">
      <summary>If condition cannot contain an assignment.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.SuspectLoopCondition">
      <summary>Loop condition cannot contain a function call.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.SuspectSemicolon">
      <summary>Empty statement found in if statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.SyntaxError">
      <summary>Discovered syntax error.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.TooFewParameters">
      <summary>Not all required parameters have been supplied.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.TooManyParameters">
      <summary>There are too many actual parameters. The excess parameters will be ignored.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.TooManyTokensSkipped">
      <summary>Too many errors. The file might not be a JScript file.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.TypeAssemblyCLSCompliantMismatch">
      <summary>Type cannot be marked CLS compliant because the assembly is not marked as CLS compliant.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.TypeCannotBeExtended">
      <summary>Type cannot be extended.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.TypeMismatch">
      <summary>Type mismatch.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.TypeNameTooLong">
      <summary>The fully qualified type name is too long. It must be less than 1,024 characters.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.TypeObjectNotAvailable">
      <summary>The type object for this type is not available.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.UncaughtException">
      <summary>Exception thrown and not caught.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.UndeclaredVariable">
      <summary>Variable has not been declared.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.UndefinedIdentifier">
      <summary>Undefined identifier.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.UnexpectedSemicolon">
      <summary>Unexpected ";".</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.UnreachableCatch">
      <summary>Catch clause will never be reached.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.UnterminatedString">
      <summary>String constant not terminated.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.URIDecodeError">
      <summary>The URI to be decoded is not a valid encoding.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.URIEncodeError">
      <summary>The URI to be encoded contains an invalid character.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.UselessAssignment">
      <summary>An assignment creates an <see cref="T:Microsoft.JScript.Expando" /> property that is immediately thrown away.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.UselessExpression">
      <summary>Expression has no effect.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.VariableLeftUninitialized">
      <summary>Uninitialized variables are dangerous and slow to use. Did you intend to leave it uninitialized?</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.VariableMightBeUnitialized">
      <summary>Variable might not be initialized.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.VarIllegalInInterface">
      <summary>Variables cannot be declared in an interface.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.VBArrayExpected">
      <summary>A VBArray is expected.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.WriteOnlyProperty">
      <summary>The property is write-only.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.WrongDirective">
      <summary>Wrong debugger directive or wrong position for the directive.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSError.WrongUseOfAddressOf">
      <summary>The address of operator can be used only in a list of arguments.</summary>
    </member>
    <member name="T:Microsoft.JScript.JSField">
      <summary>Supports all fields in JScript. This is the base class for all fields that are defined by JScript. This class belongs to the name binding category.</summary>
    </member>
    <member name="M:Microsoft.JScript.JSField.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.JSField" /> class.</summary>
    </member>
    <member name="P:Microsoft.JScript.JSField.Attributes">
      <summary>Gets the attributes that are associated with this field.</summary>
      <returns>
        <see cref="F:System.Reflection.FieldAttributes.PrivateScope" />
      </returns>
    </member>
    <member name="P:Microsoft.JScript.JSField.DeclaringType">
      <summary>Gets the type that declares this field.</summary>
      <returns>null in all cases.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSField.FieldHandle">
      <summary>Gets a handle to the internal metadata representation of this field.</summary>
      <returns>A handle to the internal metadata representation of this field.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSField.FieldType">
      <summary>Gets the type of this field.</summary>
      <returns>The type of <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSField.GetCustomAttributes(System.Boolean)">
      <summary>Returns an array that contains the custom attributes that are attached to this field.</summary>
      <returns>An array of <see cref="T:System.Reflection.FieldInfo" /> objects that has zero elements.</returns>
      <param name="inherit">true to search this member's inheritance hierarchy to find the attributes.</param>
    </member>
    <member name="M:Microsoft.JScript.JSField.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Returns an array that contains the custom attributes that are attached to this field, searching only for attributes of the specified type.</summary>
      <returns>An array of <see cref="T:System.Reflection.FieldInfo" /> objects that has zero elements.</returns>
      <param name="t">The type of attribute to search for.</param>
      <param name="inherit">true to search this member's inheritance hierarchy to find the attributes.</param>
    </member>
    <member name="M:Microsoft.JScript.JSField.IsDefined(System.Type,System.Boolean)">
      <summary>Determines whether the specified attribute type is attached to this field.</summary>
      <returns>false in all cases.</returns>
      <param name="type">The attribute type to search for.</param>
      <param name="inherit">true to search this member's inheritance hierarchy to find the attributes.</param>
    </member>
    <member name="P:Microsoft.JScript.JSField.MemberType">
      <summary>Gets the type of member that this field is. Identifies the type of class derived from <see cref="T:System.Reflection.MemberInfo" /> that this class derives from.</summary>
      <returns>
        <see cref="F:System.Reflection.MemberTypes.Field" />, because this class derives from <see cref="T:System.Reflection.FieldInfo" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSField.Name">
      <summary>Gets the name of this field.</summary>
      <returns>The name of this field.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSField.ReflectedType">
      <summary>Gets the class object that was used to obtain this instance through reflection.</summary>
      <returns>The type that declares this method.</returns>
    </member>
    <member name="T:Microsoft.JScript.JSFieldInfo">
      <summary>Wraps a <see cref="T:System.Reflection.FieldInfo" /> object. </summary>
    </member>
    <member name="P:Microsoft.JScript.JSFieldInfo.Attributes">
      <summary>Gets the attributes that are associated with this field.</summary>
      <returns>A bitwise combination of the enumeration values.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSFieldInfo.DeclaringType">
      <summary>Gets the type that declares this field.</summary>
      <returns>The Type object for the class that declares this member.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSFieldInfo.FieldHandle">
      <summary>Gets a handle to the internal metadata representation of this field.</summary>
      <returns>A handle to the internal metadata representation of this field.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSFieldInfo.FieldType">
      <summary>Gets the type of this field.</summary>
      <returns>The type of this field.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSFieldInfo.GetCustomAttributes(System.Boolean)">
      <summary>Returns an array that contains the custom attributes that are attached to this field.</summary>
      <returns>An array of <see cref="T:System.Reflection.FieldInfo" /> objects that has zero elements.</returns>
      <param name="inherit">true to search this member's inheritance hierarchy to find the attributes.</param>
    </member>
    <member name="M:Microsoft.JScript.JSFieldInfo.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Returns an array that contains the custom attributes that are attached to this field, searching only for attributes of the specified type.</summary>
      <returns>An array of <see cref="T:System.Reflection.FieldInfo" /> objects that has zero elements.</returns>
      <param name="t">The type of attribute to search for.</param>
      <param name="inherit">true to search this member's inheritance hierarchy to find the attributes.</param>
    </member>
    <member name="M:Microsoft.JScript.JSFieldInfo.GetValue(System.Object)">
      <summary>Gets the value of the field.</summary>
      <returns>The value of the field.</returns>
      <param name="obj">The object whose field value will be returned.</param>
    </member>
    <member name="M:Microsoft.JScript.JSFieldInfo.IsDefined(System.Type,System.Boolean)">
      <summary>Determines whether the specified attribute type is attached to this field.</summary>
      <returns>false in all cases.</returns>
      <param name="type">The attribute type to search for.</param>
      <param name="inherit">true to search this member's inheritance hierarchy to find the attributes.</param>
    </member>
    <member name="P:Microsoft.JScript.JSFieldInfo.MemberType">
      <summary>Gets the type of member that this field is. Identifies the type of class derived from <see cref="T:System.Reflection.MemberInfo" /> that this class derives from.</summary>
      <returns>
        <see cref="F:System.Reflection.MemberTypes.Field" />, because this class derives from <see cref="T:System.Reflection.FieldInfo" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSFieldInfo.Name">
      <summary>Gets the name of this field.</summary>
      <returns>The name of this field.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSFieldInfo.ReflectedType">
      <summary>Gets the class object that was used to obtain this instance through reflection.</summary>
      <returns>The Type object that was used to obtain this method.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSFieldInfo.SetValue(System.Object,System.Object)">
      <summary>Sets the value of the field, using the specified value.</summary>
      <param name="obj">The object whose field value will be set.</param>
      <param name="value">The value to assign to the field.</param>
    </member>
    <member name="M:Microsoft.JScript.JSFieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)">
      <summary>Sets the value of the field, using the specified value, culture, and binding information.</summary>
      <param name="obj">The object whose field value will be set.</param>
      <param name="value">The value to assign to the field.</param>
      <param name="invokeAttr">A bitwise combination of the enumeration values that control the binding.</param>
      <param name="binder">A set of properties that enables the binding, coercion of argument types, and invocation of members through reflection.</param>
      <param name="culture">Provides information about a specific culture or locale. Used to format numbers, dates, and strings correctly.</param>
    </member>
    <member name="T:Microsoft.JScript.JSFunctionAttribute">
      <summary>Used with <see cref="T:Microsoft.JScript.JSFunctionAttributeEnum" /> to annotate the calling conventions of methods and constructors that are generated by the JScript compiler.</summary>
    </member>
    <member name="M:Microsoft.JScript.JSFunctionAttribute.#ctor(Microsoft.JScript.JSFunctionAttributeEnum)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.JSFunctionAttribute" /> class, using the specified calling conventions.</summary>
      <param name="value">The calling conventions of the method or constructor.</param>
    </member>
    <member name="M:Microsoft.JScript.JSFunctionAttribute.#ctor(Microsoft.JScript.JSFunctionAttributeEnum,Microsoft.JScript.JSBuiltin)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.JSFunctionAttribute" /> class, using the specified calling conventions. The attribute identifies the specified built-in function.</summary>
      <param name="value">The calling conventions of the method or constructor.</param>
      <param name="builtinFunction">The built-in function that this attribute identifies.</param>
    </member>
    <member name="M:Microsoft.JScript.JSFunctionAttribute.GetAttributeValue">
      <summary>Gets the calling conventions of the method or constructor.</summary>
      <returns>The calling conventions of the method or constructor.</returns>
    </member>
    <member name="T:Microsoft.JScript.JSFunctionAttributeEnum">
      <summary>Specifies the calling conventions of functions that are generated by the JScript compiler. Used with the <see cref="T:Microsoft.JScript.JSFunctionAttribute" /> custom attribute.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSFunctionAttributeEnum.ClassicFunction">
      <summary>Specifies the aggregate of <see cref="F:Microsoft.JScript.JSFunctionAttributeEnum.HasArguments" />, <see cref="F:Microsoft.JScript.JSFunctionAttributeEnum.HasEngine" />, and <see cref="F:Microsoft.JScript.JSFunctionAttributeEnum.HasThisObject" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSFunctionAttributeEnum.ClassicNestedFunction">
      <summary>Specifies the aggregate of <see cref="F:Microsoft.JScript.JSFunctionAttributeEnum.ClassicFunction" /> and <see cref="F:Microsoft.JScript.JSFunctionAttributeEnum.NestedFunction" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSFunctionAttributeEnum.HasArguments">
      <summary>Specifies that the third parameter of the function is of type Object. The caller should pass in an object that implements the JScript arguments object, typically an instance of <see cref="T:Microsoft.JScript.ArgumentsObject" />. The JScript runtime assumes that if <see cref="F:Microsoft.JScript.JSFunctionAttributeEnum.HasArguments" /> is set, then <see cref="F:Microsoft.JScript.JSFunctionAttributeEnum.HasStackFrame" /> and <see cref="F:Microsoft.JScript.JSFunctionAttributeEnum.HasThisObject" /> are also set.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSFunctionAttributeEnum.HasEngine">
      <summary>Specifies that the second parameter of the function is of type <see cref="T:Microsoft.JScript.Vsa.VsaEngine" />. The caller should pass in an instance of <see cref="T:Microsoft.JScript.Vsa.VsaEngine" /> from which the function can retrieve the runtime infrastructure. The JScript runtime assumes that if <see cref="F:Microsoft.JScript.JSFunctionAttributeEnum.HasEngine" /> is set then <see cref="F:Microsoft.JScript.JSFunctionAttributeEnum.HasThisObject" /> is also set.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSFunctionAttributeEnum.HasStackFrame">
      <summary>Specifies that the function copies its local variables into a stack frame object maintained by the JScript runtime before making a call out. It copies the variables back from the stack frame object to its locals when control is returned to the function. This flag is set on functions that contain nested functions that access the parent function's locals.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSFunctionAttributeEnum.HasThisObject">
      <summary>Specifies that the first parameter of the function is of type Object and that it is usually named <paramref name="thisob" />. The caller should pass in an instance of the object that the function acts on.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSFunctionAttributeEnum.HasVarArgs">
      <summary>Specifies that the function takes a variable number of arguments. The last parameter is of type array of Object, which holds any arguments that are explicitly specified.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSFunctionAttributeEnum.IsExpandoMethod">
      <summary>Specifies that the function is a constructor function for a prototype-based object. For more information, see Prototype-based Objects and expando Modifier.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSFunctionAttributeEnum.IsInstanceNestedClassConstructor">
      <summary>Specifies that the function is a constructor for a nested instance class. The first parameter of the function an instance of the parent class.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSFunctionAttributeEnum.IsNested">
      <summary>Specifies that the function is nested in another JScript function.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSFunctionAttributeEnum.NestedFunction">
      <summary>Specifies the aggregate of <see cref="F:Microsoft.JScript.JSFunctionAttributeEnum.HasStackFrame" />, <see cref="F:Microsoft.JScript.JSFunctionAttributeEnum.IsNested" />, and <see cref="F:Microsoft.JScript.JSFunctionAttributeEnum.HasEngine" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSFunctionAttributeEnum.None">
      <summary>Specifies a regular .NET Framework method with no special calling conventions. Typically not used as in this case the JSFunctionAttribute is not emitted.</summary>
    </member>
    <member name="T:Microsoft.JScript.JSLocalField">
      <summary>Represents a local variable.</summary>
    </member>
    <member name="M:Microsoft.JScript.JSLocalField.#ctor(System.String,System.RuntimeTypeHandle,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.JSLocalField" /> class, using the specified name, handle, and slot number.</summary>
      <param name="name">The name of this field.</param>
      <param name="handle">A handle to the internal metadata representation of this field.</param>
      <param name="slotNumber">The slot number of the variable.</param>
    </member>
    <member name="P:Microsoft.JScript.JSLocalField.FieldType">
      <summary>Gets the type of this field.</summary>
      <returns>The type of this field.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSLocalField.GetValue(System.Object)">
      <summary>Gets the value of the field.</summary>
      <returns>The value of the field.</returns>
      <param name="obj">The object whose field value will be returned.</param>
    </member>
    <member name="M:Microsoft.JScript.JSLocalField.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)">
      <summary>Sets the value of the field, using the specified value, culture, and binding information.</summary>
      <param name="obj">The object whose field value will be set.</param>
      <param name="value">The value to assign to the field.</param>
      <param name="invokeAttr">A bitwise combination of the enumeration values that control the binding.</param>
      <param name="binder">A set of properties that enables the binding, coercion of argument types, and invocation of members through reflection.</param>
      <param name="locale">Provides information about a specific culture or locale. Used to format numbers, dates, and strings correctly.</param>
    </member>
    <member name="T:Microsoft.JScript.JSMethod">
      <summary>Represents a JScript method. This class belongs to the name binding category.</summary>
    </member>
    <member name="M:Microsoft.JScript.JSMethod.GetBaseDefinition">
      <summary>Returns the <see cref="T:System.Reflection.MethodInfo" /> object for the method on the direct or indirect base class in which this method was first declared.</summary>
      <returns>this in all cases.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSMethod.GetCustomAttributes(System.Boolean)">
      <summary>Returns an array that contains the custom attributes that are attached to this method.</summary>
      <returns>An array of <see cref="T:System.Object" /> objects that has zero elements.</returns>
      <param name="inherit">true to search this member's inheritance hierarchy to find the attributes.</param>
    </member>
    <member name="M:Microsoft.JScript.JSMethod.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Returns an array that contains the custom attributes that are attached to this method, searching only for attributes of the specified type.</summary>
      <returns>An array of <see cref="T:System.Object" /> objects that has zero elements.</returns>
      <param name="t">The type of attribute to search for.</param>
      <param name="inherit">true to search this member's inheritance hierarchy to find the attributes.</param>
    </member>
    <member name="M:Microsoft.JScript.JSMethod.GetMethodImplementationFlags">
      <summary>Returns information about the implementation of this method.</summary>
      <returns>
        <see cref="F:System.Reflection.MethodImplAttributes.Managed" /> and <see cref="F:System.Reflection.MethodImplAttributes.IL" />.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSMethod.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
      <summary>Invokes the method, using the specified information.</summary>
      <returns>The return value of the call to the method.</returns>
      <param name="obj">The object to call the method on.</param>
      <param name="options">A bitwise combination of the enumeration values that control the binding.</param>
      <param name="binder">An object that converts the type from actual argument type to formal argument type.</param>
      <param name="parameters">The argument list to pass to the method.</param>
      <param name="culture">Provides information about a specific culture or locale. Used to format numbers, dates, and strings correctly.</param>
    </member>
    <member name="M:Microsoft.JScript.JSMethod.IsDefined(System.Type,System.Boolean)">
      <summary>Determines whether the specified attribute type is attached to this method.</summary>
      <returns>false in all cases.</returns>
      <param name="type">The attribute type to search for.</param>
      <param name="inherit">true to search this member's inheritance hierarchy to find the attributes.</param>
    </member>
    <member name="P:Microsoft.JScript.JSMethod.MemberType">
      <summary>Gets the type of member that this method is. Identifies the type of class derived from <see cref="T:System.Reflection.MemberInfo" /> that this class derives from.</summary>
      <returns>
        <see cref="F:System.Reflection.MemberTypes.Method" />, because this class derives from <see cref="T:System.Reflection.MethodInfo" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSMethod.MethodHandle">
      <summary>Gets a handle to the internal metadata representation of this method.</summary>
      <returns>A handle to the internal metadata representation of this method.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSMethod.ReflectedType">
      <summary>Gets the class object that was used to obtain this instance through reflection.</summary>
      <returns>The type that declares this method.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSMethod.ReturnTypeCustomAttributes">
      <summary>Gets the custom attributes for the type of the return value of this method.</summary>
      <returns>null in all cases.</returns>
    </member>
    <member name="T:Microsoft.JScript.JSMethodInfo">
      <summary>Wraps a <see cref="T:System.Reflection.MethodInfo" /> object. </summary>
    </member>
    <member name="P:Microsoft.JScript.JSMethodInfo.Attributes">
      <summary>Gets the attributes that are associated with this method.</summary>
      <returns>A bitwise combination of the enumeration values.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSMethodInfo.DeclaringType">
      <summary>Gets the type that declares this method.</summary>
      <returns>The Type object for the class that declares this member.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSMethodInfo.GetBaseDefinition">
      <summary>Returns the <see cref="T:System.Reflection.MethodInfo" /> object for the method of the direct or indirect base class in which this method was first declared.</summary>
      <returns>The first implementation of this method in the hierarchy.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSMethodInfo.GetCustomAttributes(System.Boolean)">
      <summary>Returns an array that contains the custom attributes that are attached to this method.</summary>
      <returns>An array that contains the custom attributes that are attached to this method, or, if there are none, an array that has zero elements.</returns>
      <param name="inherit">true to search this member's inheritance hierarchy to find the attributes.</param>
    </member>
    <member name="M:Microsoft.JScript.JSMethodInfo.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Returns an array that contains the custom attributes that are attached to this method, searching only for attributes of the specified type.</summary>
      <returns>An array that contains the custom attributes that are attached to this method, or, if there are none, an array that has zero elements.</returns>
      <param name="type">The type of attribute to search for.</param>
      <param name="inherit">true to search this member's inheritance hierarchy to find the attributes.</param>
    </member>
    <member name="M:Microsoft.JScript.JSMethodInfo.GetMethodImplementationFlags">
      <summary>Returns information about the implementation of this method.</summary>
      <returns>A bitwise combination of the enumeration values.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSMethodInfo.GetParameters">
      <summary>Gets the parameters of this method.</summary>
      <returns>An array that contains information that matches the signature of this method.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSMethodInfo.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
      <summary>Invokes the method, using the specified information.</summary>
      <returns>The return value of the call to the method.</returns>
      <param name="obj">The object to call the method on.</param>
      <param name="options">A bitwise combination of the enumeration values that control the binding.</param>
      <param name="binder">An object that converts the type from actual argument type to formal argument type.</param>
      <param name="parameters">The argument list to pass to the method.</param>
      <param name="culture">Provides information about a specific culture or locale. Used to format numbers, dates, and strings correctly.</param>
    </member>
    <member name="M:Microsoft.JScript.JSMethodInfo.IsDefined(System.Type,System.Boolean)">
      <summary>Determines whether the specified attribute type is attached to this method.</summary>
      <returns>true if one or more instances of the specified attribute <paramref name="type" /> is attached to this method; otherwise, false.</returns>
      <param name="type">The attribute type to search for.</param>
      <param name="inherit">true to search this member's inheritance hierarchy to find the attributes.</param>
    </member>
    <member name="P:Microsoft.JScript.JSMethodInfo.MemberType">
      <summary>Gets the type of member that this method is. Identifies the type of class derived from <see cref="T:System.Reflection.MemberInfo" /> that this class derives from.</summary>
      <returns>
        <see cref="F:System.Reflection.MemberTypes.Method" />, because this class derives from <see cref="T:System.Reflection.MethodInfo" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSMethodInfo.MethodHandle">
      <summary>Gets a handle to the internal metadata representation of this method.</summary>
      <returns>A handle to the internal metadata representation of this method.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSMethodInfo.Name">
      <summary>Gets the name of this method.</summary>
      <returns>The name of this method.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSMethodInfo.ReflectedType">
      <summary>Gets the class object that was used to obtain this instance through reflection.</summary>
      <returns>The Type object that was used to obtain this method.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSMethodInfo.ReturnType">
      <summary>Gets the type of the return value of this method.</summary>
      <returns>The type of the return value of this method.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSMethodInfo.ReturnTypeCustomAttributes">
      <summary>Gets the custom attributes for the type of the return value of this method.</summary>
      <returns>The custom attributes for the type of the return value of this method.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSMethodInfo.ToString">
      <summary>Returns a string that represents the method.</summary>
      <returns>A string that represents the method.</returns>
    </member>
    <member name="T:Microsoft.JScript.JSObject">
      <summary>Represents an object in JScript. This class belongs to the objects and functions category.</summary>
    </member>
    <member name="M:Microsoft.JScript.JSObject.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.JSObject" /> class.</summary>
    </member>
    <member name="M:Microsoft.JScript.JSObject.AddField(System.String)">
      <summary>Adds the specified field to the object.</summary>
      <returns>The new field, if it is successfully added.</returns>
      <param name="name">The name of the field to add.</param>
    </member>
    <member name="F:Microsoft.JScript.JSObject.field_table">
      <summary>Stores a list of fields that are dynamically added and removed from the object.</summary>
    </member>
    <member name="M:Microsoft.JScript.JSObject.GetMember(System.String,System.Reflection.BindingFlags)">
      <summary>Gets an array of <see cref="T:System.Reflection.MemberInfo" /> objects that correspond to all members that match the specified name.</summary>
      <returns>An array of members that match the <paramref name="name" /> argument.</returns>
      <param name="name">The name of the member to search for.</param>
      <param name="bindingAttr">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</param>
    </member>
    <member name="M:Microsoft.JScript.JSObject.GetMembers(System.Reflection.BindingFlags)">
      <summary>Gets an array of <see cref="T:System.Reflection.MemberInfo" /> objects that correspond to all members of the current script object.</summary>
      <returns>An array of objects that contains all members of the current object.</returns>
      <param name="bindingAttr">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</param>
    </member>
    <member name="M:Microsoft.JScript.JSObject.SetMemberValue2(System.String,System.Object)">
      <summary>Sets the value of a field that was dynamically added to the object and stored in <see cref="F:Microsoft.JScript.JSObject.field_table" />.</summary>
      <param name="name">The name of the field for which to set the value.</param>
      <param name="value">The new value of the field.</param>
    </member>
    <member name="M:Microsoft.JScript.JSObject.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that iterates through the members of the object.</summary>
      <returns>An enumerator object that is used to iterate through the members of the object.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#AddMethod(System.String,System.Delegate)">
      <summary>Adds the specified method to the object. <see cref="M:Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#AddMethod(System.String,System.Delegate)" /> is not implemented in JScript.</summary>
      <returns>null in all cases.</returns>
      <param name="name">The name of the method to add.</param>
      <param name="method">The delegate to the method.</param>
    </member>
    <member name="M:Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#AddProperty(System.String)">
      <summary>Adds the specified property to the object. This method is not implemented in JScript.</summary>
      <returns>null in all cases.</returns>
      <param name="name">The name of the property to add.</param>
    </member>
    <member name="M:Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#RemoveMember(System.Reflection.MemberInfo)">
      <summary>Removes the specified member from the object.</summary>
      <param name="m">The name of the member to remove.</param>
    </member>
    <member name="M:Microsoft.JScript.JSObject.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="T:Microsoft.JScript.JSParser">
      <summary>Parses JScript code. This class belongs to the scanning and parsing category. For more information about scanning and parsing, see Create a Language Compiler for the .NET Framework.</summary>
    </member>
    <member name="M:Microsoft.JScript.JSParser.#ctor(Microsoft.JScript.Context)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.JSParser" /> class, specifying the source code to parse.</summary>
      <param name="context">The source code to parse.</param>
    </member>
    <member name="M:Microsoft.JScript.JSParser.Parse">
      <summary>Parses the source code.</summary>
      <returns>The root of the abstract syntax tree that is created by parsing the code.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSParser.ParseEvalBody">
      <summary>Parses the source code. Use this method instead of <see cref="M:Microsoft.JScript.JSParser.Parse" /> when the source code is inside an eval method call.</summary>
      <returns>The root of the abstract syntax tree that is created by parsing the code.</returns>
    </member>
    <member name="T:Microsoft.JScript.JSPrototypeObject">
      <summary>Adds a constructor function property to a <see cref="T:Microsoft.JScript.JSObject" /> for early binding purposes. This class belongs to the objects and functions category.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSPrototypeObject.constructor">
      <summary>Stores a constructor function object that defines a prototype-based object.</summary>
    </member>
    <member name="T:Microsoft.JScript.JSScanner">
      <summary>Scans JScript code searching for individual units of code, or tokens. This class belongs to the scanning and parsing category. For more information about scanning and parsing, see Create a Language Compiler for the .NET Framework.</summary>
    </member>
    <member name="M:Microsoft.JScript.JSScanner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.JSScanner" /> class.</summary>
    </member>
    <member name="M:Microsoft.JScript.JSScanner.#ctor(Microsoft.JScript.Context)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.JSScanner" /> class, specifying the source code to scan.</summary>
      <param name="sourceContext">The source code to scan.</param>
    </member>
    <member name="M:Microsoft.JScript.JSScanner.GetCurrentLine">
      <summary>Gets the current line number in the code. This is a pointer that moves as the code is scanned.</summary>
      <returns>The current line number in the code.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSScanner.GetCurrentPosition(System.Boolean)">
      <summary>Gets the current position in the code string. This is a pointer that moves as the code is scanned.</summary>
      <returns>The current position in the code string.</returns>
      <param name="absolute">This parameter is ignored.</param>
    </member>
    <member name="M:Microsoft.JScript.JSScanner.GetNextToken">
      <summary>Scans for the next token in the code.</summary>
    </member>
    <member name="M:Microsoft.JScript.JSScanner.GetSourceCode">
      <summary>Gets the source code that is associated with this scanner object.</summary>
      <returns>The source code to scan.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSScanner.GetStartLinePosition">
      <summary>Gets the position in the code string where the first line of the current code starts. All lines of code are stored in a single string. This is a pointer that moves as the code is scanned.</summary>
      <returns>The position in the code string where the first line of the current code starts.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSScanner.GetStringLiteral">
      <summary>Gets a string that has been scanned and had all its escape sequences replaced.</summary>
      <returns>A string that has been scanned and had all its escape sequences replaced.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSScanner.GotEndOfLine">
      <summary>Indicates whether the end of a line was reached after the scanner scans or peeks for a token.</summary>
      <returns>true if the end of the line was reached; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSScanner.IsKeyword(Microsoft.JScript.JSToken)">
      <summary>Determines whether the specified token is a keyword in the JScript language.</summary>
      <returns>true if the token is a keyword; otherwise, false.</returns>
      <param name="token">The token to check.</param>
    </member>
    <member name="M:Microsoft.JScript.JSScanner.IsOperator(Microsoft.JScript.JSToken)">
      <summary>Determines whether the specified token is an operator in the JScript language.</summary>
      <returns>true if the token is an operator; otherwise, false.</returns>
      <param name="token">The token to check.</param>
    </member>
    <member name="M:Microsoft.JScript.JSScanner.SetAuthoringMode(System.Boolean)">
      <summary>Sets a flag that indicates whether the scanner is operating in authoring mode.</summary>
      <param name="mode">true to indicate authoring mode; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.JScript.JSScanner.SetSource(Microsoft.JScript.Context)">
      <summary>Sets the source code to scan.</summary>
      <param name="sourceContext">The source code to scan.</param>
    </member>
    <member name="M:Microsoft.JScript.JSScanner.SkipMultiLineComment">
      <summary>Skips a comment that spans multiple lines, and advances the pointers that identify the current position in the code.</summary>
      <returns>The new current position in the code string.</returns>
    </member>
    <member name="T:Microsoft.JScript.JSToken">
      <summary>Specifies the individual units of code, or tokens, that make up the JScript language.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Abstract">
      <summary>The abstract modifier.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.AccessField">
      <summary>The . field accessor symbol.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Assert">
      <summary>The assert reserved word.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Assign">
      <summary>The = assignment operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.BitwiseAnd">
      <summary>The &amp; bitwise AND operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.BitwiseAndAssign">
      <summary>The &amp;= bitwise AND assignment operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.BitwiseNot">
      <summary>The ~ bitwise NOT operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.BitwiseOr">
      <summary>The | bitwise OR operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.BitwiseOrAssign">
      <summary>The |= bitwise OR assignment operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.BitwiseXor">
      <summary>The ^ bitwise XOR operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.BitwiseXorAssign">
      <summary>The ^= bitwise XOR assignment operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Boolean">
      <summary>The boolean data type.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Break">
      <summary>The break statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Byte">
      <summary>The byte data type.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Case">
      <summary>The case keyword of a switch statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Catch">
      <summary>The catch keyword of a try statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Char">
      <summary>The char data type.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Class">
      <summary>The class statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Colon">
      <summary>The : ternary operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Comma">
      <summary>The , comma operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Comment">
      <summary>Comment text.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.ConditionalIf">
      <summary>The ? ternary operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Const">
      <summary>The const statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Continue">
      <summary>The continue statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Debugger">
      <summary>The debugger statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Decimal">
      <summary>The decimal data type.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Decrement">
      <summary>The -- decrement operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Default">
      <summary>The default keyword of a switch statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Delete">
      <summary>The delete operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Divide">
      <summary>The / division operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.DivideAssign">
      <summary>The /= division assignment operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Do">
      <summary>The do statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Double">
      <summary>The double data type.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.DoubleColon">
      <summary>The :: reserved word.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Else">
      <summary>The else keyword of an if statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.EndOfFile">
      <summary>The end of the file being scanned or parsed. This is the default value.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.EndOfLine">
      <summary>The end of the line being parsed.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Ensure">
      <summary>The ensure reserved word.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Enum">
      <summary>The enum statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Equal">
      <summary>The == equality comparison operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Event">
      <summary>The event reserved word.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Export">
      <summary>The export reserved word.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Extends">
      <summary>The extends keyword of a class statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.False">
      <summary>The false literal.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Final">
      <summary>The final modifier.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Finally">
      <summary>The finally keyword of a try statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.FirstBinaryOp">
      <summary>A placeholder enumeration member that enables comparisons such as if JSToken.FirstBinaryOp &lt;= token &amp;&amp; token &lt;= JSToken.LastBinaryOp then...</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.FirstOp">
      <summary>A placeholder enumeration member that enables comparisons such as if JSToken.FirstOp &lt;= token &amp;&amp; token &lt;= JSToken.LastOp then...</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Float">
      <summary>The float data type.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.For">
      <summary>The for statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Function">
      <summary>The function statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Get">
      <summary>The get keyword of a function get statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Goto">
      <summary>The goto reserved word.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.GreaterThan">
      <summary>The &gt; relational comparison operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.GreaterThanEqual">
      <summary>The &gt;= relational comparison operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Identifier">
      <summary>An identifier.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.If">
      <summary>The if statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Implements">
      <summary>The implements keyword of a class or interface statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Import">
      <summary>The import statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.In">
      <summary>The in operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Increment">
      <summary>The ++ increment operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Instanceof">
      <summary>The instanceof operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Int">
      <summary>The int data type.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.IntegerLiteral">
      <summary>An integer literal.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Interface">
      <summary>The interface statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Internal">
      <summary>The internal modifier.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Invariant">
      <summary>The invariant reserved word.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.LastAssign">
      <summary>A placeholder enumeration member that enables comparisons such as if JSToken.Assign &lt;= token &amp;&amp; token &lt;= JSToken.LastAssign then...</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.LastBinaryOp">
      <summary>A placeholder enumeration member that enables comparisons such as if JSToken.FirstBinaryOp &lt;= token &amp;&amp; token &lt;= JSToken.LastBinaryOp then...</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.LastOp">
      <summary>A placeholder enumeration member that enables comparisons such as if JSToken.FirstBinaryOp &lt;= token &amp;&amp; token &lt;= JSToken.LastOp then...</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.LastPPOperator">
      <summary>A placeholder enumeration member that enables comparisons such as if JSToken.FirstBinaryOp &lt;= token &amp;&amp; token &lt;= JSToken.LastPPOperator then... PPOperators are operations that can be pre-processed.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.LeftBracket">
      <summary>The [ symbol.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.LeftCurly">
      <summary>The { symbol.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.LeftParen">
      <summary>The ( symbol.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.LeftShift">
      <summary>The &lt;&lt; bitwise left shift operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.LeftShiftAssign">
      <summary>The &lt;&lt;= left shift assignment operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.LessThan">
      <summary>The &lt; relational comparison operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.LessThanEqual">
      <summary>The &lt;= relational comparison operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.LogicalAnd">
      <summary>The &amp;&amp; logical AND operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.LogicalNot">
      <summary>The ! logical NOT operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.LogicalOr">
      <summary>The || logical OR operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Long">
      <summary>The long data type.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Minus">
      <summary>The - subtraction operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.MinusAssign">
      <summary>The -= subtraction assignment operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Modulo">
      <summary>The % modulus operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.ModuloAssign">
      <summary>The %= modulus assignment operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Multiply">
      <summary>The * multiplication operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.MultiplyAssign">
      <summary>The *= multiplication assignment operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Namespace">
      <summary>The namespace reserved word.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Native">
      <summary>The native reserved word.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.New">
      <summary>The new operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.None">
      <summary>No token. For example, before scanning any tokens, or in error situations.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.NotEqual">
      <summary>The != inequality comparison operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Null">
      <summary>The null literal.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.NumericLiteral">
      <summary>A numeric literal.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Package">
      <summary>The package statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.ParamArray">
      <summary>The ... reserved word.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Plus">
      <summary>The + addition operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.PlusAssign">
      <summary>The += addition assignment operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.PreProcessDirective">
      <summary>A preprocessor directive.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.PreProcessorConstant">
      <summary>A preprocessor constant.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Private">
      <summary>The private modifier.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Protected">
      <summary>The protected modifier.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Public">
      <summary>The public modifier.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Require">
      <summary>The require reserved word.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Return">
      <summary>The return statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.RightBracket">
      <summary>The ] symbol.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.RightCurly">
      <summary>The } symbol.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.RightParen">
      <summary>The ) symbol.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.RightShift">
      <summary>The &gt;&gt; bitwise right shift operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.RightShiftAssign">
      <summary>The &gt;&gt;= right shift assignment operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Sbyte">
      <summary>The sbyte data type.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Semicolon">
      <summary>The ; symbol.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Set">
      <summary>The set keyword of a function set statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Short">
      <summary>The short data type.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Static">
      <summary>The static modifier.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.StrictEqual">
      <summary>The === identity comparison operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.StrictNotEqual">
      <summary>The !== identity comparison operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.StringLiteral">
      <summary>A numeric literal.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Super">
      <summary>The super statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Switch">
      <summary>The switch statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Synchronized">
      <summary>The synchronized reserved word.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.This">
      <summary>The this statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Throw">
      <summary>The throw statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Throws">
      <summary>The throws reserved word.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Transient">
      <summary>The transient reserved word.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.True">
      <summary>The true literal.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Try">
      <summary>The try statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Typeof">
      <summary>The typeof operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Uint">
      <summary>The uint data type.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Ulong">
      <summary>The ulong data type.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.UnsignedRightShift">
      <summary>The &gt;&gt;&gt; unsigned right shift operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.UnsignedRightShiftAssign">
      <summary>The &gt;&gt;&gt;= unsigned right shift assignment operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.UnterminatedComment">
      <summary>An un-terminated comment.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Use">
      <summary>The use reserved word.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Ushort">
      <summary>The ushort data type.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Var">
      <summary>The var statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Void">
      <summary>The void operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.Volatile">
      <summary>The volatile reserved word.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.While">
      <summary>The while statement.</summary>
    </member>
    <member name="F:Microsoft.JScript.JSToken.With">
      <summary>The with statement.</summary>
    </member>
    <member name="T:Microsoft.JScript.JSVariableField">
      <summary>Supports variable fields in JScript. This is the base class for parameters, local variables, global variables, and class members. </summary>
    </member>
    <member name="P:Microsoft.JScript.JSVariableField.Attributes">
      <summary>Gets the attributes that are associated with this field.</summary>
      <returns>A bitwise combination of the enumeration values.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSVariableField.DeclaringType">
      <summary>Gets the type that declares this field.</summary>
      <returns>The Type object for the class that declares this member.</returns>
    </member>
    <member name="P:Microsoft.JScript.JSVariableField.FieldType">
      <summary>Gets the type of this field.</summary>
      <returns>The type of this field.</returns>
    </member>
    <member name="M:Microsoft.JScript.JSVariableField.GetCustomAttributes(System.Boolean)">
      <summary>Returns an array that contains the custom attributes that are attached to this field.</summary>
      <returns>An array that contains the custom attributes that are attached to this field, or, if there are none, an array that has zero elements.</returns>
      <param name="inherit">true to search this member's inheritance hierarchy to find the attributes.</param>
    </member>
    <member name="P:Microsoft.JScript.JSVariableField.Name">
      <summary>Gets the name of this field.</summary>
      <returns>The name of this field.</returns>
    </member>
    <member name="T:Microsoft.JScript.LateBinding">
      <summary>Represents a reference to a class member, callable expression, or variable name. This class attempts to resolve the reference to the correct value at run time. </summary>
    </member>
    <member name="M:Microsoft.JScript.LateBinding.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.LateBinding" /> class, using the specified identifier.</summary>
      <param name="name">A string that identifies the binding reference.</param>
    </member>
    <member name="M:Microsoft.JScript.LateBinding.#ctor(System.String,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.LateBinding" /> class, using the specified identifier and object.</summary>
      <param name="name">A string that identifies the binding reference.</param>
      <param name="obj">The object that the binding reference is defined on.</param>
    </member>
    <member name="M:Microsoft.JScript.LateBinding.Call(System.Object[],System.Boolean,System.Boolean,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>Resolves the binding reference by calling a member.</summary>
      <returns>The return value of the call to the member.</returns>
      <param name="arguments">The arguments to pass to the member.</param>
      <param name="construct">true to use the construct method; otherwise, false.</param>
      <param name="brackets">true if the binding reference contains brackets; otherwise, false.</param>
      <param name="engine">A reference to the scripting engine.</param>
    </member>
    <member name="M:Microsoft.JScript.LateBinding.CallValue(System.Object,System.Object,System.Object[],System.Boolean,System.Boolean,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>Resolves the binding reference by calling a member.</summary>
      <returns>The return value of the call to the member.</returns>
      <param name="thisob">The object that the binding reference is defined on.</param>
      <param name="val">Information about the member to call.</param>
      <param name="arguments">The arguments to pass to the member.</param>
      <param name="construct">true to use the construct method; otherwise, false.</param>
      <param name="brackets">true if the binding reference contains brackets; otherwise, false.</param>
      <param name="engine">A reference to the scripting engine.</param>
    </member>
    <member name="M:Microsoft.JScript.LateBinding.CallValue2(System.Object,System.Object,System.Object[],System.Boolean,System.Boolean,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>Resolves the binding reference by calling a member.</summary>
      <returns>The return value of the call to the member.</returns>
      <param name="val">Information about the member to call.</param>
      <param name="thisob">The object that the binding reference is defined on.</param>
      <param name="arguments">The arguments to pass to the member.</param>
      <param name="construct">true to use the construct method; otherwise, false.</param>
      <param name="brackets">true if the binding reference contains brackets; otherwise, false.</param>
      <param name="engine">A reference to the scripting engine.</param>
    </member>
    <member name="M:Microsoft.JScript.LateBinding.Delete">
      <summary>Deletes the binding reference member from the object that the binding reference is defined on.</summary>
      <returns>true if the member was successfully deleted; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.JScript.LateBinding.DeleteMember(System.Object,System.String)">
      <summary>Deletes the specified member from the specified object.</summary>
      <returns>true if the member was successfully deleted; otherwise, false.</returns>
      <param name="obj">The object to delete from.</param>
      <param name="name">The member to delete.</param>
    </member>
    <member name="M:Microsoft.JScript.LateBinding.GetNonMissingValue">
      <summary>Gets the value of the binding reference, and converts a <see cref="T:Microsoft.JScript.Missing" /> value to null.</summary>
      <returns>The value of the binding reference; otherwise, null.</returns>
    </member>
    <member name="M:Microsoft.JScript.LateBinding.GetValue2">
      <summary>Gets the value of the binding reference, and throws an exception if it cannot be resolved.</summary>
      <returns>The value of the binding reference.</returns>
    </member>
    <member name="F:Microsoft.JScript.LateBinding.obj">
      <summary>Stores a reference to the object that the binding reference is defined on.</summary>
    </member>
    <member name="M:Microsoft.JScript.LateBinding.SetIndexedPropertyValueStatic(System.Object,System.Object[],System.Object)">
      <summary>Sets an indexed property.</summary>
      <param name="obj">The object that the binding reference is defined on.</param>
      <param name="arguments">The arguments to pass to the member.</param>
      <param name="value">The new value of the property.</param>
    </member>
    <member name="M:Microsoft.JScript.LateBinding.SetValue(System.Object)">
      <summary>Sets a property.</summary>
      <param name="value">The new value of the property.</param>
    </member>
    <member name="T:Microsoft.JScript.LenientArrayPrototype">
      <summary>Stores objects that represent the static methods of the <see cref="T:Microsoft.JScript.ArrayPrototype" /> class. The <see cref="T:Microsoft.JScript.LenientArrayPrototype" /> class belongs to the built-in object model category.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientArrayPrototype.concat">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.ArrayPrototype.concat(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Object[])" /> method of the <see cref="T:Microsoft.JScript.ArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientArrayPrototype.constructor">
      <summary>Stores a reference to an <see cref="T:Microsoft.JScript.ArrayConstructor" /> object.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientArrayPrototype.join">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.ArrayPrototype.join(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.ArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientArrayPrototype.pop">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.ArrayPrototype.pop(System.Object)" /> method of the <see cref="T:Microsoft.JScript.ArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientArrayPrototype.push">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.ArrayPrototype.push(System.Object,System.Object[])" /> method of the <see cref="T:Microsoft.JScript.ArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientArrayPrototype.reverse">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.ArrayPrototype.reverse(System.Object)" /> method of the <see cref="T:Microsoft.JScript.ArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientArrayPrototype.shift">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.ArrayPrototype.shift(System.Object)" /> method of the <see cref="T:Microsoft.JScript.ArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientArrayPrototype.slice">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.ArrayPrototype.slice(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Double,System.Object)" /> method of the <see cref="T:Microsoft.JScript.ArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientArrayPrototype.sort">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.ArrayPrototype.sort(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.ArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientArrayPrototype.splice">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.ArrayPrototype.splice(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Double,System.Double,System.Object[])" /> method of the <see cref="T:Microsoft.JScript.ArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientArrayPrototype.toLocaleString">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.ArrayPrototype.toLocaleString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.ArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientArrayPrototype.toString">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.ArrayPrototype.toString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.ArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientArrayPrototype.unshift">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.ArrayPrototype.unshift(System.Object,System.Object[])" /> method of the <see cref="T:Microsoft.JScript.ArrayPrototype" /> class.</summary>
    </member>
    <member name="T:Microsoft.JScript.LenientBooleanPrototype">
      <summary>Stores objects that represent the static methods of the <see cref="T:Microsoft.JScript.BooleanPrototype" /> class. The <see cref="T:Microsoft.JScript.LenientBooleanPrototype" /> class belongs to the built-in object model category.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientBooleanPrototype.constructor">
      <summary>Stores a reference to a <see cref="T:Microsoft.JScript.BooleanConstructor" /> object.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientBooleanPrototype.toString">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.BooleanPrototype.toString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.BooleanPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientBooleanPrototype.valueOf">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.BooleanPrototype.valueOf(System.Object)" /> method of the <see cref="T:Microsoft.JScript.BooleanPrototype" /> class.</summary>
    </member>
    <member name="T:Microsoft.JScript.LenientDateConstructor">
      <summary>Stores objects that represent the static methods of the <see cref="T:Microsoft.JScript.DateConstructor" /> class. The <see cref="T:Microsoft.JScript.LenientDateConstructor" /> class belongs to the built-in object model category.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDateConstructor.parse">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DateConstructor.parse(System.String)" /> method of the <see cref="T:Microsoft.JScript.DateConstructor" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDateConstructor.UTC">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DateConstructor.UTC(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.DateConstructor" /> class.</summary>
    </member>
    <member name="T:Microsoft.JScript.LenientDatePrototype">
      <summary>Stores objects that represent the static methods of the <see cref="T:Microsoft.JScript.DatePrototype" /> class. The <see cref="T:Microsoft.JScript.LenientDatePrototype" /> class belongs to the built-in object model category.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.constructor">
      <summary>Stores a reference to a <see cref="T:Microsoft.JScript.DateConstructor" /> object.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getDate">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.getDate(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getDay">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.getDay(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getFullYear">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.getFullYear(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getHours">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.getHours(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getMilliseconds">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.getMilliseconds(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getMinutes">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.getMinutes(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getMonth">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.getMonth(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getSeconds">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.getSeconds(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getTime">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.getTime(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getTimezoneOffset">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.getTimezoneOffset(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getUTCDate">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.getUTCDate(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getUTCDay">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.getUTCDay(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getUTCFullYear">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.getUTCFullYear(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getUTCHours">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.getUTCHours(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getUTCMilliseconds">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.getUTCMilliseconds(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getUTCMinutes">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.getUTCMinutes(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getUTCMonth">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.getUTCMonth(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getUTCSeconds">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.getUTCSeconds(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getVarDate">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.getVarDate(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.getYear">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.getYear(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setDate">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.setDate(System.Object,System.Double)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setFullYear">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.setFullYear(System.Object,System.Double,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setHours">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.setHours(System.Object,System.Double,System.Object,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setMilliseconds">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.setMilliseconds(System.Object,System.Double)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setMinutes">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.setMinutes(System.Object,System.Double,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setMonth">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.setMonth(System.Object,System.Double,System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setSeconds">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.setSeconds(System.Object,System.Double,System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setTime">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.setTime(System.Object,System.Double)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setUTCDate">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.setUTCDate(System.Object,System.Double)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setUTCFullYear">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.setUTCFullYear(System.Object,System.Double,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setUTCHours">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.setUTCHours(System.Object,System.Double,System.Object,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setUTCMilliseconds">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.setUTCMilliseconds(System.Object,System.Double)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setUTCMinutes">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.setUTCMinutes(System.Object,System.Double,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setUTCMonth">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.setUTCMonth(System.Object,System.Double,System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setUTCSeconds">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.setUTCSeconds(System.Object,System.Double,System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.setYear">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.setYear(System.Object,System.Double)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.toDateString">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.toDateString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.toGMTString">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.toGMTString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.toLocaleDateString">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.toLocaleDateString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.toLocaleString">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.toLocaleString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.toLocaleTimeString">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.toLocaleTimeString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.toString">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.toString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.toTimeString">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.toTimeString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.toUTCString">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.toUTCString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientDatePrototype.valueOf">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.DatePrototype.valueOf(System.Object)" /> method of the <see cref="T:Microsoft.JScript.DatePrototype" /> class.</summary>
    </member>
    <member name="T:Microsoft.JScript.LenientEnumeratorPrototype">
      <summary>Stores objects that represent the static methods of the <see cref="T:Microsoft.JScript.EnumeratorPrototype" /> class. The <see cref="T:Microsoft.JScript.LenientEnumeratorPrototype" /> class belongs to the built-in object model category.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientEnumeratorPrototype.atEnd">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.EnumeratorPrototype.atEnd(System.Object)" /> method of the <see cref="T:Microsoft.JScript.EnumeratorPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientEnumeratorPrototype.constructor">
      <summary>Stores a reference to an <see cref="T:Microsoft.JScript.EnumeratorConstructor" /> object.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientEnumeratorPrototype.item">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.EnumeratorPrototype.item(System.Object)" /> method of the <see cref="T:Microsoft.JScript.EnumeratorPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientEnumeratorPrototype.moveFirst">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.EnumeratorPrototype.moveFirst(System.Object)" /> method of the <see cref="T:Microsoft.JScript.EnumeratorPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientEnumeratorPrototype.moveNext">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.EnumeratorPrototype.moveNext(System.Object)" /> method of the <see cref="T:Microsoft.JScript.EnumeratorPrototype" /> class.</summary>
    </member>
    <member name="T:Microsoft.JScript.LenientErrorPrototype">
      <summary>Stores objects that represent the static methods of the <see cref="T:Microsoft.JScript.ErrorPrototype" /> class. The <see cref="T:Microsoft.JScript.LenientErrorPrototype" /> class belongs to the built-in object model category.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientErrorPrototype.constructor">
      <summary>Stores a reference to an <see cref="T:Microsoft.JScript.ErrorConstructor" /> object.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientErrorPrototype.name">
      <summary>Stores a string that contains the name of the subtype of the error.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientErrorPrototype.toString">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.ErrorPrototype.toString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.ErrorPrototype" /> class.</summary>
    </member>
    <member name="T:Microsoft.JScript.LenientFunctionPrototype">
      <summary>Stores objects that represent the static methods of the <see cref="T:Microsoft.JScript.FunctionPrototype" /> class. The <see cref="T:Microsoft.JScript.LenientFunctionPrototype" /> class belongs to the built-in object model category.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientFunctionPrototype.apply">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.FunctionPrototype.apply(System.Object,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.FunctionPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientFunctionPrototype.call">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.FunctionPrototype.call(System.Object,System.Object,System.Object[])" /> method of the <see cref="T:Microsoft.JScript.FunctionPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientFunctionPrototype.constructor">
      <summary>Stores a reference to a <see cref="T:Microsoft.JScript.FunctionConstructor" /> object.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientFunctionPrototype.toString">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.FunctionPrototype.toString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.FunctionPrototype" /> class.</summary>
    </member>
    <member name="T:Microsoft.JScript.LenientGlobalObject">
      <summary>Stores constructor function objects, data type information, and objects that represent the static methods of the <see cref="T:Microsoft.JScript.GlobalObject" /> class. The <see cref="T:Microsoft.JScript.LenientGlobalObject" /> class belongs to the built-in object model category.</summary>
    </member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.ActiveXObject">
      <summary>Gets or sets a prototype-based object that is defined by an <see cref="T:Microsoft.JScript.ActiveXObjectConstructor" /> constructor function object.</summary>
      <returns>An <see cref="T:Microsoft.JScript.ActiveXObjectConstructor" /> object.</returns>
    </member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.Array">
      <summary>Gets or sets a prototype-based object that is defined by an <see cref="T:Microsoft.JScript.ArrayConstructor" /> constructor function object.</summary>
      <returns>An <see cref="T:Microsoft.JScript.ArrayConstructor" /> object.</returns>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.boolean">
      <summary>Stores the managed type that corresponds to the JScript boolean data type.</summary>
    </member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.Boolean">
      <summary>Gets or sets a prototype-based object that is defined by a <see cref="T:Microsoft.JScript.BooleanConstructor" /> constructor function object.</summary>
      <returns>A <see cref="T:Microsoft.JScript.BooleanConstructor" /> object.</returns>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.byte">
      <summary>Stores the managed type that corresponds to the JScript byte data type.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.char">
      <summary>Stores the managed type that corresponds to the JScript char data type.</summary>
    </member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.Date">
      <summary>Gets or sets a prototype-based object that is defined by a <see cref="T:Microsoft.JScript.LenientDateConstructor" /> constructor function object.</summary>
      <returns>A <see cref="T:Microsoft.JScript.LenientDateConstructor" /> object.</returns>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.decimal">
      <summary>Stores the managed type that corresponds to the JScript decimal data type.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.decodeURI">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.GlobalObject.decodeURI(System.Object)" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.decodeURIComponent">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.GlobalObject.decodeURIComponent(System.Object)" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.double">
      <summary>Stores the managed type that corresponds to the JScript double data type.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.encodeURI">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.GlobalObject.encodeURI(System.Object)" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.encodeURIComponent">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.GlobalObject.encodeURIComponent(System.Object)" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.Enumerator">
      <summary>Gets or sets a prototype-based object that is defined by an <see cref="T:Microsoft.JScript.EnumeratorConstructor" /> constructor function object.</summary>
      <returns>An <see cref="T:Microsoft.JScript.EnumeratorConstructor" /> object.</returns>
    </member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.Error">
      <summary>Gets or sets a prototype-based object that is defined by an <see cref="T:Microsoft.JScript.ErrorConstructor" /> constructor function object.</summary>
      <returns>An <see cref="T:Microsoft.JScript.ErrorConstructor" /> object.</returns>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.escape">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.GlobalObject.escape(System.Object)" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.eval">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.GlobalObject.eval(System.Object)" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.EvalError">
      <summary>Gets or sets a prototype-based object that is defined by an <see cref="T:Microsoft.JScript.ErrorConstructor" /> constructor function object, and that is initialized as an <see cref="F:Microsoft.JScript.ErrorType.EvalError" />.</summary>
      <returns>An <see cref="T:Microsoft.JScript.ErrorConstructor" /> object.</returns>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.float">
      <summary>Stores the managed type that corresponds to the JScript float data type.</summary>
    </member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.Function">
      <summary>Gets or sets a prototype-based object that is defined by a <see cref="T:Microsoft.JScript.FunctionConstructor" /> constructor function object.</summary>
      <returns>A <see cref="T:Microsoft.JScript.FunctionConstructor" /> object.</returns>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.GetObject">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.GlobalObject.GetObject(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.Infinity">
      <summary>Represents positive infinity.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.int">
      <summary>Stores the managed type that corresponds to the JScript int data type.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.isFinite">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.GlobalObject.isFinite(System.Double)" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.isNaN">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.GlobalObject.isNaN(System.Object)" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.long">
      <summary>Stores the managed type that corresponds to the JScript long data type.</summary>
    </member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.Math">
      <summary>Gets or sets a <see cref="T:Microsoft.JScript.LenientMathObject" /> object.</summary>
      <returns>A <see cref="T:Microsoft.JScript.LenientMathObject" /> object.</returns>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.NaN">
      <summary>Represents a value that is not a number (NaN).</summary>
    </member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.Number">
      <summary>Gets or sets a prototype-based object that is defined by a <see cref="T:Microsoft.JScript.NumberConstructor" /> constructor function object.</summary>
      <returns>A <see cref="T:Microsoft.JScript.NumberConstructor" /> object.</returns>
    </member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.Object">
      <summary>Gets or sets a prototype-based object that is defined by an <see cref="T:Microsoft.JScript.ObjectConstructor" /> constructor function object.</summary>
      <returns>An <see cref="T:Microsoft.JScript.ObjectConstructor" /> object.</returns>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.parseFloat">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.GlobalObject.parseFloat(System.Object)" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.parseInt">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.GlobalObject.parseInt(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.RangeError">
      <summary>Gets or sets a prototype-based object that is defined by an <see cref="T:Microsoft.JScript.ErrorConstructor" /> constructor function object, and that is initialized as a <see cref="F:Microsoft.JScript.ErrorType.RangeError" />.</summary>
      <returns>An <see cref="T:Microsoft.JScript.ErrorConstructor" /> object.</returns>
    </member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.ReferenceError">
      <summary>Gets or sets a prototype-based object that is defined by an <see cref="T:Microsoft.JScript.ErrorConstructor" /> constructor function object, and that is initialized as a <see cref="F:Microsoft.JScript.ErrorType.ReferenceError" />.</summary>
      <returns>An <see cref="T:Microsoft.JScript.ErrorConstructor" /> object.</returns>
    </member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.RegExp">
      <summary>Gets or sets a prototype-based object that is defined by a <see cref="T:Microsoft.JScript.RegExpConstructor" /> constructor function object.</summary>
      <returns>A <see cref="T:Microsoft.JScript.RegExpConstructor" /> object.</returns>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.sbyte">
      <summary>Stores the managed type that corresponds to the JScript sbyte data type.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.ScriptEngine">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.GlobalObject.ScriptEngine" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.ScriptEngineBuildVersion">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.GlobalObject.ScriptEngineBuildVersion" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.ScriptEngineMajorVersion">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.GlobalObject.ScriptEngineMajorVersion" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.ScriptEngineMinorVersion">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.GlobalObject.ScriptEngineMinorVersion" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.short">
      <summary>Stores the managed type that corresponds to the JScript short data type.</summary>
    </member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.String">
      <summary>Gets or sets a prototype-based object that is defined by a <see cref="T:Microsoft.JScript.LenientStringConstructor" /> constructor function object.</summary>
      <returns>A <see cref="T:Microsoft.JScript.LenientStringConstructor" /> object.</returns>
    </member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.SyntaxError">
      <summary>Gets or sets a prototype-based object that is defined by an <see cref="T:Microsoft.JScript.ErrorConstructor" /> constructor function object, and that is initialized as a <see cref="F:Microsoft.JScript.ErrorType.SyntaxError" />.</summary>
      <returns>An <see cref="T:Microsoft.JScript.ErrorConstructor" /> object.</returns>
    </member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.TypeError">
      <summary>Gets or sets a prototype-based object that is defined by an <see cref="T:Microsoft.JScript.ErrorConstructor" /> constructor function object, and that is initialized as a <see cref="F:Microsoft.JScript.ErrorType.TypeError" />.</summary>
      <returns>An <see cref="T:Microsoft.JScript.ErrorConstructor" /> object.</returns>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.uint">
      <summary>Stores the managed type that corresponds to the JScript uint data type.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.ulong">
      <summary>Stores the managed type that corresponds to the JScript ulong data type.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.undefined">
      <summary>Represents a value that is null.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.unescape">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.GlobalObject.unescape(System.Object)" /> method of the <see cref="T:Microsoft.JScript.GlobalObject" /> class.</summary>
    </member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.URIError">
      <summary>Gets or sets a prototype-based object that is defined by an <see cref="T:Microsoft.JScript.ErrorConstructor" /> constructor function object, and that is initialized as a <see cref="F:Microsoft.JScript.ErrorType.URIError" />.</summary>
      <returns>An <see cref="T:Microsoft.JScript.ErrorConstructor" /> object.</returns>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.ushort">
      <summary>Stores the managed type that corresponds to the JScript ushort data type.</summary>
    </member>
    <member name="P:Microsoft.JScript.LenientGlobalObject.VBArray">
      <summary>Gets or sets a prototype-based object that is defined by a <see cref="T:Microsoft.JScript.VBArrayConstructor" /> constructor function object.</summary>
      <returns>A <see cref="T:Microsoft.JScript.VBArrayConstructor" /> object.</returns>
    </member>
    <member name="F:Microsoft.JScript.LenientGlobalObject.void">
      <summary>Stores the managed type that corresponds to the return value of a function that does not return a value.</summary>
    </member>
    <member name="T:Microsoft.JScript.LenientMathObject">
      <summary>Stores objects that represent the static methods of the <see cref="T:Microsoft.JScript.MathObject" /> class. The <see cref="T:Microsoft.JScript.LenientMathObject" /> class belongs to the built-in object model category.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.abs">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.MathObject.abs(System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.acos">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.MathObject.acos(System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.asin">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.MathObject.asin(System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.atan">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.MathObject.atan(System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.atan2">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.MathObject.atan2(System.Double,System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.ceil">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.MathObject.ceil(System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.cos">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.MathObject.cos(System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.E">
      <summary>Stores a value that represents Euler's constant, the base of the natural logarithm, specified by the constant e.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.exp">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.MathObject.exp(System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.floor">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.MathObject.floor(System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.LN10">
      <summary>Stores a value that represents the logarithm base e of 10, the natural logarithm of 10.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.LN2">
      <summary>Stores a value that represents the logarithm base e of 2, the natural logarithm of 2.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.log">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.MathObject.log(System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.LOG10E">
      <summary>Stores a value that represents the logarithm base 10 of e, the common logarithm of e.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.LOG2E">
      <summary>Stores a value that represents the logarithm base 2 of e, the binary logarithm of e.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.max">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.MathObject.max(System.Object,System.Object,System.Object[])" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.min">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.MathObject.min(System.Object,System.Object,System.Object[])" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.PI">
      <summary>Stores a value that represents the ratio of the circumference of a circle to its diameter, specified by the constant π.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.pow">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.MathObject.pow(System.Double,System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.random">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.MathObject.random" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.round">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.MathObject.round(System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.sin">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.MathObject.sin(System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.sqrt">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.MathObject.sqrt(System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.SQRT1_2">
      <summary>Stores a value that represents the following equivalent values: (√2)/2, √(½), and 1/(√2).</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.SQRT2">
      <summary>Stores a value that represents √2.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientMathObject.tan">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.MathObject.tan(System.Double)" /> method of the <see cref="T:Microsoft.JScript.MathObject" /> class.</summary>
    </member>
    <member name="T:Microsoft.JScript.LenientNumberPrototype">
      <summary>Stores objects that represent the static methods of the <see cref="T:Microsoft.JScript.NumberPrototype" /> class. The <see cref="T:Microsoft.JScript.LenientNumberPrototype" /> class belongs to the built-in object model category.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientNumberPrototype.constructor">
      <summary>Stores a reference to a <see cref="T:Microsoft.JScript.NumberConstructor" /> object.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientNumberPrototype.toExponential">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.NumberPrototype.toExponential(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.NumberPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientNumberPrototype.toFixed">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.NumberPrototype.toFixed(System.Object,System.Double)" /> method of the <see cref="T:Microsoft.JScript.NumberPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientNumberPrototype.toLocaleString">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.NumberPrototype.toLocaleString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.NumberPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientNumberPrototype.toPrecision">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.NumberPrototype.toPrecision(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.NumberPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientNumberPrototype.toString">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.NumberPrototype.toString(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.NumberPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientNumberPrototype.valueOf">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.NumberPrototype.valueOf(System.Object)" /> method of the <see cref="T:Microsoft.JScript.NumberPrototype" /> class.</summary>
    </member>
    <member name="T:Microsoft.JScript.LenientObjectPrototype">
      <summary>Stores objects that represent the static methods of the <see cref="T:Microsoft.JScript.ObjectPrototype" /> class. The <see cref="T:Microsoft.JScript.LenientObjectPrototype" /> class belongs to the built-in object model category.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientObjectPrototype.constructor">
      <summary>Stores a reference to an <see cref="T:Microsoft.JScript.ObjectConstructor" /> object.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientObjectPrototype.hasOwnProperty">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.ObjectPrototype.hasOwnProperty(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.ObjectPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientObjectPrototype.isPrototypeOf">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.ObjectPrototype.isPrototypeOf(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.ObjectPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientObjectPrototype.propertyIsEnumerable">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.ObjectPrototype.propertyIsEnumerable(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.ObjectPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientObjectPrototype.toLocaleString">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.ObjectPrototype.toLocaleString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.ObjectPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientObjectPrototype.toString">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.ObjectPrototype.toString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.ObjectPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientObjectPrototype.valueOf">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.ObjectPrototype.valueOf(System.Object)" /> method of the <see cref="T:Microsoft.JScript.ObjectPrototype" /> class.</summary>
    </member>
    <member name="T:Microsoft.JScript.LenientRegExpPrototype">
      <summary>Stores objects that represent the static methods of the <see cref="T:Microsoft.JScript.RegExpPrototype" /> class. The <see cref="T:Microsoft.JScript.LenientRegExpPrototype" /> class belongs to the built-in object model category.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientRegExpPrototype.compile">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.RegExpPrototype.compile(System.Object,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.RegExpPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientRegExpPrototype.constructor">
      <summary>Stores a reference to a <see cref="T:Microsoft.JScript.RegExpConstructor" /> object.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientRegExpPrototype.exec">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.RegExpPrototype.exec(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.RegExpPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientRegExpPrototype.test">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.RegExpPrototype.test(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.RegExpPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientRegExpPrototype.toString">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.RegExpPrototype.toString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.RegExpPrototype" /> class.</summary>
    </member>
    <member name="T:Microsoft.JScript.LenientStringConstructor">
      <summary>Stores objects that represent the static methods of the <see cref="T:Microsoft.JScript.StringConstructor" /> class. The <see cref="T:Microsoft.JScript.LenientStringConstructor" /> class belongs to the built-in object model category.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringConstructor.fromCharCode">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.StringConstructor.fromCharCode(System.Object[])" /> method of the <see cref="T:Microsoft.JScript.StringConstructor" /> class.</summary>
    </member>
    <member name="T:Microsoft.JScript.LenientStringPrototype">
      <summary>Stores objects that represent the static methods of the <see cref="T:Microsoft.JScript.StringPrototype" /> class. The <see cref="T:Microsoft.JScript.LenientStringPrototype" /> class belongs to the built-in object model category.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.anchor">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.StringPrototype.anchor(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.big">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.StringPrototype.big(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.blink">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.StringPrototype.blink(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.bold">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.StringPrototype.bold(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.charAt">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.StringPrototype.charAt(System.Object,System.Double)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.charCodeAt">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.StringPrototype.charCodeAt(System.Object,System.Double)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.concat">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.StringPrototype.concat(System.Object,System.Object[])" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.constructor">
      <summary>Stores a reference to a <see cref="T:Microsoft.JScript.StringConstructor" /> object.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.fixed">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.StringPrototype.fixed(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.fontcolor">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.StringPrototype.fontcolor(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.fontsize">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.StringPrototype.fontsize(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.indexOf">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.StringPrototype.indexOf(System.Object,System.Object,System.Double)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.italics">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.StringPrototype.italics(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.lastIndexOf">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.StringPrototype.lastIndexOf(System.Object,System.Object,System.Double)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.link">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.StringPrototype.link(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.localeCompare">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.StringPrototype.localeCompare(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.match">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.StringPrototype.match(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.replace">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.StringPrototype.replace(System.Object,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.search">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.StringPrototype.search(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.slice">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.StringPrototype.slice(System.Object,System.Double,System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.small">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.StringPrototype.small(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.split">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.StringPrototype.split(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.strike">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.StringPrototype.strike(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.sub">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.StringPrototype.sub(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.substr">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.StringPrototype.substr(System.Object,System.Double,System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.substring">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.StringPrototype.substring(System.Object,System.Double,System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.sup">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.StringPrototype.sup(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.toLocaleLowerCase">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.StringPrototype.toLocaleLowerCase(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.toLocaleUpperCase">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.StringPrototype.toLocaleUpperCase(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.toLowerCase">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.StringPrototype.toLowerCase(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.toString">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.StringPrototype.toString(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.toUpperCase">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.StringPrototype.toUpperCase(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientStringPrototype.valueOf">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.StringPrototype.valueOf(System.Object)" /> method of the <see cref="T:Microsoft.JScript.StringPrototype" /> class.</summary>
    </member>
    <member name="T:Microsoft.JScript.LenientVBArrayPrototype">
      <summary>Stores objects that represent the static methods of the <see cref="T:Microsoft.JScript.VBArrayPrototype" /> class. The <see cref="T:Microsoft.JScript.LenientVBArrayPrototype" /> class belongs to the built-in object model category.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientVBArrayPrototype.constructor">
      <summary>Stores a reference to a <see cref="T:Microsoft.JScript.VBArrayConstructor" /> object.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientVBArrayPrototype.dimensions">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.VBArrayPrototype.dimensions(System.Object)" /> method of the <see cref="T:Microsoft.JScript.VBArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientVBArrayPrototype.getItem">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.VBArrayPrototype.getItem(System.Object,System.Object[])" /> method of the <see cref="T:Microsoft.JScript.VBArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientVBArrayPrototype.lbound">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.VBArrayPrototype.lbound(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.VBArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientVBArrayPrototype.toArray">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.VBArrayPrototype.toArray(System.Object,Microsoft.JScript.Vsa.VsaEngine)" /> method of the <see cref="T:Microsoft.JScript.VBArrayPrototype" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.LenientVBArrayPrototype.ubound">
      <summary>Stores an object that represents the static <see cref="M:Microsoft.JScript.VBArrayPrototype.ubound(System.Object,System.Object)" /> method of the <see cref="T:Microsoft.JScript.VBArrayPrototype" /> class.</summary>
    </member>
    <member name="T:Microsoft.JScript.MathObject">
      <summary>Provides constants and static methods for trigonometric functions, logarithmic functions, and other common mathematical functions. This class belongs to the built-in object model category.</summary>
    </member>
    <member name="M:Microsoft.JScript.MathObject.abs(System.Double)">
      <summary>Calculates the absolute value of the specified number.</summary>
      <returns>The absolute value of <paramref name="d" />.</returns>
      <param name="d">The number to calculate the absolute value of.</param>
    </member>
    <member name="M:Microsoft.JScript.MathObject.acos(System.Double)">
      <summary>Calculates the inverse cosine of the specified number.</summary>
      <returns>The inverse cosine of <paramref name="x" />, measured in radians.</returns>
      <param name="x">The number to calculate the inverse cosine of.</param>
    </member>
    <member name="M:Microsoft.JScript.MathObject.asin(System.Double)">
      <summary>Calculates the inverse sine of the specified number.</summary>
      <returns>The inverse sine of <paramref name="x" />, measured in radians.</returns>
      <param name="x">The number to calculate the inverse sine of.</param>
    </member>
    <member name="M:Microsoft.JScript.MathObject.atan(System.Double)">
      <summary>Calculates the inverse tangent of the specified number.</summary>
      <returns>The inverse tangent of <paramref name="x" />, measured in radians.</returns>
      <param name="x">The number to calculate the inverse tangent of.</param>
    </member>
    <member name="M:Microsoft.JScript.MathObject.atan2(System.Double,System.Double)">
      <summary>Calculates the inverse tangent of the quotient of the specified numbers.</summary>
      <returns>The inverse tangent of <paramref name="dy" />/<paramref name="dx" />, measured in radians.</returns>
      <param name="dy">The numerator of the quotient to calculate the inverse tangent of.</param>
      <param name="dx">The denominator of the quotient to calculate the inverse tangent of.</param>
    </member>
    <member name="M:Microsoft.JScript.MathObject.ceil(System.Double)">
      <summary>Calculates the ceiling of the specified number, which is the smallest integer that is greater than or equal to the specified number.</summary>
      <returns>The ceiling of <paramref name="x" />.</returns>
      <param name="x">The number to calculate the ceiling of.</param>
    </member>
    <member name="M:Microsoft.JScript.MathObject.cos(System.Double)">
      <summary>Calculates the cosine of the specified angle.</summary>
      <returns>The cosine of <paramref name="x" />.</returns>
      <param name="x">An angle, measured in radians.</param>
    </member>
    <member name="F:Microsoft.JScript.MathObject.E">
      <summary>Stores a value that represents Euler's constant, which is the base of the natural logarithm, specified by the constant e.</summary>
    </member>
    <member name="M:Microsoft.JScript.MathObject.exp(System.Double)">
      <summary>Calculates the number e to the raised specified power, where e is Euler's constant, the base of the natural logarithm.</summary>
      <returns>The number e raised to the <paramref name="x" /> power.</returns>
      <param name="x">The power to raise <paramref name="e" /> to.</param>
    </member>
    <member name="M:Microsoft.JScript.MathObject.floor(System.Double)">
      <summary>Calculates the floor of the specified number, which is the largest integer that is less than or equal to the specified number.</summary>
      <returns>The floor of <paramref name="x" />.</returns>
      <param name="x">The number to calculate the floor of.</param>
    </member>
    <member name="F:Microsoft.JScript.MathObject.LN10">
      <summary>Stores a value that represents the logarithm base e of 10, the natural logarithm of 10.</summary>
    </member>
    <member name="F:Microsoft.JScript.MathObject.LN2">
      <summary>Stores a value that represents the logarithm base e of 2, the natural logarithm of 2.</summary>
    </member>
    <member name="M:Microsoft.JScript.MathObject.log(System.Double)">
      <summary>Calculates the logarithm base e of the specified number, which is the natural logarithm of the specified number.</summary>
      <returns>The natural logarithm of <paramref name="x" />.</returns>
      <param name="x">The number to calculate the natural logarithm of.</param>
    </member>
    <member name="F:Microsoft.JScript.MathObject.LOG10E">
      <summary>Stores a value that represents the logarithm base 10 of e, the common logarithm of e.</summary>
    </member>
    <member name="F:Microsoft.JScript.MathObject.LOG2E">
      <summary>Stores a value that represents the logarithm base 2 of e, the binary logarithm of e.</summary>
    </member>
    <member name="M:Microsoft.JScript.MathObject.max(System.Object,System.Object,System.Object[])">
      <summary>Returns the largest of two or more specified numbers.</summary>
      <returns>The largest of <paramref name="x" />, <paramref name="y" />, and the numbers that are contained in <paramref name="args" />.</returns>
      <param name="x">The first number to compare.</param>
      <param name="y">The second number to compare.</param>
      <param name="args">Additional numbers to compare.</param>
    </member>
    <member name="M:Microsoft.JScript.MathObject.min(System.Object,System.Object,System.Object[])">
      <summary>Returns the smallest of two or more specified numbers.</summary>
      <returns>The smallest of <paramref name="x" />, <paramref name="y" />, and the numbers that are contained in <paramref name="args" />.</returns>
      <param name="x">The first number to compare.</param>
      <param name="y">The second number to compare.</param>
      <param name="args">Additional numbers to compare.</param>
    </member>
    <member name="F:Microsoft.JScript.MathObject.PI">
      <summary>Stores a value that represents the ratio of the circumference of a circle to its diameter, specified by the constant π.</summary>
    </member>
    <member name="M:Microsoft.JScript.MathObject.pow(System.Double,System.Double)">
      <summary>Calculates the specified number raised to the specified power.</summary>
      <returns>The number <paramref name="dx" /> raised to the <paramref name="dy" /> power.</returns>
      <param name="dx">The number to raise to the <paramref name="dy" /> power.</param>
      <param name="dy">The power to raise <paramref name="dx" /> to.</param>
    </member>
    <member name="M:Microsoft.JScript.MathObject.random">
      <summary>Generates a random number between 0 and 1. This method does not generate a cryptographically secure random number.</summary>
      <returns>A number that is greater than or equal to 0, and less than 1.</returns>
    </member>
    <member name="M:Microsoft.JScript.MathObject.round(System.Double)">
      <summary>Rounds the specified number down or up to the nearest integer.</summary>
      <returns>If the fractional part of <paramref name="d" /> is less than halfway to the next integer, <paramref name="d" /> rounded down. If the fractional part of <paramref name="d" /> is halfway or more to the next integer, <paramref name="d" /> rounded up.</returns>
      <param name="d">The number to round.</param>
    </member>
    <member name="M:Microsoft.JScript.MathObject.sin(System.Double)">
      <summary>Calculates the sine of the specified angle.</summary>
      <returns>The sine of <paramref name="x" />.</returns>
      <param name="x">An angle, measured in radians.</param>
    </member>
    <member name="M:Microsoft.JScript.MathObject.sqrt(System.Double)">
      <summary>Calculates the square root of the specified number.</summary>
      <returns>The square root of <paramref name="x" />.</returns>
      <param name="x">The number to calculate the square root of.</param>
    </member>
    <member name="F:Microsoft.JScript.MathObject.SQRT1_2">
      <summary>Stores a value that represents the following equivalent values: (√2)/2, √(½), and 1/(√2).</summary>
    </member>
    <member name="F:Microsoft.JScript.MathObject.SQRT2">
      <summary>Stores a value that represents √2.</summary>
    </member>
    <member name="M:Microsoft.JScript.MathObject.tan(System.Double)">
      <summary>Calculates the tangent of the specified angle.</summary>
      <returns>The tangent of <paramref name="x" />.</returns>
      <param name="x">An angle, measured in radians.</param>
    </member>
    <member name="T:Microsoft.JScript.MemberInfoInitializer">
      <summary>Defines methods that an external COM object must implement. This interface is used by an external COM implementation to expose its objects to JScript because JScript needs a managed <see cref="T:System.Reflection.MemberInfo" /> to bind to an external object. This interface is implemented by <see cref="T:Microsoft.JScript.COMFieldInfo" />, <see cref="T:Microsoft.JScript.COMMethodInfo" />, and <see cref="T:Microsoft.JScript.COMPropertyInfo" />.</summary>
    </member>
    <member name="M:Microsoft.JScript.MemberInfoInitializer.GetCOMMemberInfo">
      <summary>When implemented in a class, gets a managed object that enables JScript to communicate with an external COM member.</summary>
      <returns>A managed object that enables JScript to communicate with an external COM member.</returns>
    </member>
    <member name="M:Microsoft.JScript.MemberInfoInitializer.Initialize(System.String,Microsoft.JScript.COMMemberInfo)">
      <summary>When implemented in a class, initializes the information that enables JScript to communicate with the specified external COM member.</summary>
      <param name="name">The name of the external COM member.</param>
      <param name="dispatch">Information that enables JScript to call, get, and set the external COM member.</param>
    </member>
    <member name="T:Microsoft.JScript.MemberInfoList">
      <summary>Maintains a list of <see cref="T:System.Reflection.MemberInfo" /> elements.</summary>
    </member>
    <member name="T:Microsoft.JScript.MethodInvoker">
      <summary>Represents the invoker for a particular method. Used by the <see cref="T:Microsoft.JScript.JSMethodInfo" /> class to invoke methods.</summary>
    </member>
    <member name="M:Microsoft.JScript.MethodInvoker.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.MethodInvoker" /> class.</summary>
    </member>
    <member name="M:Microsoft.JScript.MethodInvoker.Invoke(System.Object,System.Object[])">
      <summary>When overridden in a derived class, invokes the method.</summary>
      <returns>The result of invoking the method.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="parameters">The arguments to use for the method.</param>
    </member>
    <member name="T:Microsoft.JScript.Missing">
      <summary>Represents the value of a variable that has been instantiated but that has not yet had its value set.</summary>
    </member>
    <member name="F:Microsoft.JScript.Missing.Value">
      <summary>Specifies the value of a variable that has been instantiated but that has not yet had its value set.</summary>
    </member>
    <member name="T:Microsoft.JScript.Namespace">
      <summary>Represents a namespace.</summary>
    </member>
    <member name="M:Microsoft.JScript.Namespace.GetNamespace(System.String,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>Creates and returns a new instance of the <see cref="T:Microsoft.JScript.Namespace" /> class.</summary>
      <returns>A new instance of the <see cref="T:Microsoft.JScript.Namespace" /> class.</returns>
      <param name="name">The name of the namespace.</param>
      <param name="engine">A reference to the scripting engine.</param>
    </member>
    <member name="T:Microsoft.JScript.NoContextException">
      <summary>The exception that is thrown when there is no code <see cref="T:Microsoft.JScript.Context" /> associated with a <see cref="T:Microsoft.JScript.JScriptException" />.</summary>
    </member>
    <member name="M:Microsoft.JScript.NoContextException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.NoContextException" /> class.</summary>
    </member>
    <member name="M:Microsoft.JScript.NoContextException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.NoContextException" /> class, using the specified serialized data.</summary>
      <param name="s">The serialized object data about the exception that is being thrown.</param>
      <param name="c">Contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.JScript.NoContextException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.NoContextException" /> class, using the specified error message.</summary>
      <param name="m">The message that describes the error.</param>
    </member>
    <member name="M:Microsoft.JScript.NoContextException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.NoContextException" /> class, using the specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="m">The message that describes the error.</param>
      <param name="e">The exception that is the cause of the current exception.</param>
    </member>
    <member name="T:Microsoft.JScript.NotRecommended">
      <summary>Indicates that a method or field is not recommended.</summary>
    </member>
    <member name="M:Microsoft.JScript.NotRecommended.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.NotRecommended" /> attribute class.</summary>
      <param name="message">The name of the method or field that is not recommended.</param>
    </member>
    <member name="P:Microsoft.JScript.NotRecommended.IsError">
      <summary>Gets a value that indicates whether using a method or field that is not recommended is an error.</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="P:Microsoft.JScript.NotRecommended.Message">
      <summary>Gets the name of the method or field that is not recommended.</summary>
      <returns>The name of the method or field that is not recommended.</returns>
    </member>
    <member name="T:Microsoft.JScript.NumberConstructor">
      <summary>Represents a prototype-based object that is defined by a constructor function. This class belongs to the built-in object model category.</summary>
    </member>
    <member name="M:Microsoft.JScript.NumberConstructor.CreateInstance(System.Object[])">
      <summary>Creates an instance of the prototype-based object, passing in the specified arguments.</summary>
      <returns>An instance of the object.</returns>
      <param name="args">The arguments to pass to the constructor.</param>
    </member>
    <member name="M:Microsoft.JScript.NumberConstructor.Invoke(System.Object)">
      <summary>Converts the specified object to a number.</summary>
      <returns>
        <paramref name="arg" /> expressed as a number, if that is possible.</returns>
      <param name="arg">The object to convert.</param>
    </member>
    <member name="F:Microsoft.JScript.NumberConstructor.MAX_VALUE">
      <summary>Represents the largest possible value of a <see cref="T:System.Double" />. This field is constant.</summary>
    </member>
    <member name="F:Microsoft.JScript.NumberConstructor.MIN_VALUE">
      <summary>Represents the smallest positive <see cref="T:System.Double" /> value that is greater than zero. This field is constant.</summary>
    </member>
    <member name="F:Microsoft.JScript.NumberConstructor.NaN">
      <summary>Represents a value that is not a number (NaN). This field is constant.</summary>
    </member>
    <member name="F:Microsoft.JScript.NumberConstructor.NEGATIVE_INFINITY">
      <summary>Represents negative infinity. This field is constant.</summary>
    </member>
    <member name="F:Microsoft.JScript.NumberConstructor.POSITIVE_INFINITY">
      <summary>Represents positive infinity. This field is constant.</summary>
    </member>
    <member name="T:Microsoft.JScript.NumberObject">
      <summary>Represents a number object. This class belongs to the built-in object model category.</summary>
    </member>
    <member name="M:Microsoft.JScript.NumberObject.#ctor(Microsoft.JScript.ScriptObject,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.NumberObject" /> class.</summary>
      <param name="parent">The parent of the object.</param>
      <param name="value">The underlying value that the class represents.</param>
    </member>
    <member name="M:Microsoft.JScript.NumberObject.GetType">
      <summary>Returns the type of the underlying value object, or returns <see cref="T:Microsoft.JScript.NumberObject" />.</summary>
      <returns>The type of the underlying value object, or <see cref="T:Microsoft.JScript.NumberObject" />.</returns>
    </member>
    <member name="T:Microsoft.JScript.NumberPrototype">
      <summary>Provides static methods and properties for <see cref="T:Microsoft.JScript.NumberObject" /> objects. All methods of this class are called by passing in a reference to the object that is requesting access to the method. This class belongs to the built-in object model category.</summary>
    </member>
    <member name="P:Microsoft.JScript.NumberPrototype.constructor">
      <summary>Gets a reference to a prototype-based object that is using this prototype.</summary>
      <returns>A reference to a prototype-based object.</returns>
    </member>
    <member name="M:Microsoft.JScript.NumberPrototype.toExponential(System.Object,System.Object)">
      <summary>Creates a string representation of the specified <see cref="T:Microsoft.JScript.NumberObject" /> that uses scientific (E) notation.</summary>
      <returns>A string representation of <paramref name="thisob" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="fractionDigits">A number between 0 and 20 that represents the number of decimal places to display. The default is 16.</param>
    </member>
    <member name="M:Microsoft.JScript.NumberPrototype.toFixed(System.Object,System.Double)">
      <summary>Creates a string representation of the specified <see cref="T:Microsoft.JScript.NumberObject" /> that displays the specified number of decimal digits.</summary>
      <returns>A string representation of <paramref name="thisob" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="fractionDigits">A number between 0 and 20 that represents the number of decimal places to display. The default is 0.</param>
    </member>
    <member name="M:Microsoft.JScript.NumberPrototype.toLocaleString(System.Object)">
      <summary>Creates a string representation of the specified object that is based on <see cref="P:System.Globalization.NumberFormatInfo.CurrentInfo" /> and <see cref="T:System.Globalization.CultureInfo" />.</summary>
      <returns>A string representation of <paramref name="thisob" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.NumberPrototype.toPrecision(System.Object,System.Object)">
      <summary>Creates a string representation of the specified <see cref="T:Microsoft.JScript.NumberObject" /> that displays the specified number of precision digits.</summary>
      <returns>A string representation of <paramref name="thisob" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="precision">A number between 0 and 21 that represents the number of precision digits to display. <paramref name="Precision digits" /> are the digits of the decimal and the exponent combined.</param>
    </member>
    <member name="M:Microsoft.JScript.NumberPrototype.toString(System.Object,System.Object)">
      <summary>Creates a string representation of the specified object.</summary>
      <returns>A string representation of <paramref name="thisob" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="radix">A number between 2 and 36 that represents the base of the number system that <paramref name="thisob" /> is expressed in. The default is 10.</param>
    </member>
    <member name="M:Microsoft.JScript.NumberPrototype.valueOf(System.Object)">
      <summary>Returns the value of the specified <see cref="T:Microsoft.JScript.NumberObject" />.</summary>
      <returns>The value of <paramref name="thisob" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="T:Microsoft.JScript.NumericBinary">
      <summary>Performs binary operations on numeric operands. This class belongs to the abstract syntax tree category.</summary>
    </member>
    <member name="M:Microsoft.JScript.NumericBinary.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.NumericBinary" /> class.</summary>
      <param name="operatorTok">One of the <see cref="T:Microsoft.JScript.JSToken" /> enumeration values. Specifies the operation to perform.</param>
    </member>
    <member name="M:Microsoft.JScript.NumericBinary.DoOp(System.Object,System.Object,Microsoft.JScript.JSToken)">
      <summary>Performs the specified binary operation on the specified numeric operands.</summary>
      <returns>The result of the operation.</returns>
      <param name="v1">The first operand.</param>
      <param name="v2">The second operand.</param>
      <param name="operatorTok">One of the <see cref="T:Microsoft.JScript.JSToken" /> enumeration values. Specifies the operation to perform.</param>
    </member>
    <member name="M:Microsoft.JScript.NumericBinary.EvaluateNumericBinary(System.Object,System.Object)">
      <summary>Performs a binary operation on the specified numeric operands.</summary>
      <returns>The result of the operation.</returns>
      <param name="v1">The first operand.</param>
      <param name="v2">The second operand.</param>
    </member>
    <member name="T:Microsoft.JScript.NumericUnary">
      <summary>Performs unary operations on numeric operands. This class belongs to the abstract syntax tree category.</summary>
    </member>
    <member name="M:Microsoft.JScript.NumericUnary.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.NumericUnary" /> class.</summary>
      <param name="operatorTok">One of the <see cref="T:Microsoft.JScript.JSToken" /> enumeration values. Specifies the operation to perform.</param>
    </member>
    <member name="M:Microsoft.JScript.NumericUnary.EvaluateUnary(System.Object)">
      <summary>Performs a unary operation on a numeric operand.</summary>
      <returns>The result of the operation.</returns>
      <param name="v">The operand.</param>
    </member>
    <member name="T:Microsoft.JScript.ObjectConstructor">
      <summary>Represents a prototype-based object that is defined by a constructor function. This class belongs to the built-in object model category.</summary>
    </member>
    <member name="M:Microsoft.JScript.ObjectConstructor.ConstructObject">
      <summary>Creates an instance of the prototype-based object.</summary>
      <returns>The instance of the object.</returns>
    </member>
    <member name="M:Microsoft.JScript.ObjectConstructor.CreateInstance(System.Object[])">
      <summary>Creates an instance of the prototype-based object, passing in the specified arguments.</summary>
      <returns>The instance of the object.</returns>
      <param name="args">The arguments to pass to the constructor.</param>
    </member>
    <member name="M:Microsoft.JScript.ObjectConstructor.Invoke(System.Object[])">
      <summary>Invokes a method of the prototype-based object, passing in the specified arguments.</summary>
      <returns>The result of the call to the method.</returns>
      <param name="args">The arguments to pass to the method.</param>
    </member>
    <member name="T:Microsoft.JScript.ObjectPrototype">
      <summary>Provides static methods and properties for <see cref="T:Microsoft.JScript.JSObject" /> objects. All methods of this class are called by passing in a reference to the object that is requesting access to the method. This class belongs to the built-in object model category.</summary>
    </member>
    <member name="P:Microsoft.JScript.ObjectPrototype.constructor">
      <summary>Gets a reference to a prototype-based object that is using this prototype.</summary>
      <returns>A reference to a prototype-based object.</returns>
    </member>
    <member name="M:Microsoft.JScript.ObjectPrototype.hasOwnProperty(System.Object,System.Object)">
      <summary>Determines whether the specified object contains the specified property.</summary>
      <returns>true if <paramref name="name" /> is a property of <paramref name="thisob" /> and has been set; otherwise, false.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="name">The property to search for.</param>
    </member>
    <member name="M:Microsoft.JScript.ObjectPrototype.isPrototypeOf(System.Object,System.Object)">
      <summary>Determines whether the first specified object can be instantiated as the type of the second specified object.</summary>
      <returns>true if <paramref name="ob" /> is in the inheritance hierarchy of <paramref name="thisob" />; otherwise, false.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="ob">The object that has the desired type.</param>
    </member>
    <member name="M:Microsoft.JScript.ObjectPrototype.propertyIsEnumerable(System.Object,System.Object)">
      <summary>Determines whether the specified property of the specified object is enumerable.</summary>
      <returns>true if <paramref name="name" /> is an enumerable property; otherwise, false.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="name">The property to test.</param>
    </member>
    <member name="M:Microsoft.JScript.ObjectPrototype.toLocaleString(System.Object)">
      <summary>Creates a string representation of the specified object by using the <see cref="T:Microsoft.JScript.Convert" /> class.</summary>
      <returns>A string representation of <paramref name="thisob" /> that is created by the <see cref="T:Microsoft.JScript.Convert" /> class.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.ObjectPrototype.toString(System.Object)">
      <summary>Creates a string representation of the specified object.</summary>
      <returns>The name of the class of the object, if it has one defined; otherwise, the <see cref="P:System.Reflection.MemberInfo.Name" /> of the <see cref="T:System.Type" /> of the object.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.ObjectPrototype.valueOf(System.Object)">
      <summary>Returns the specified object.</summary>
      <returns>
        <paramref name="thisob" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="T:Microsoft.JScript.Override">
      <summary>Indicates that a method or field overrides a method or field in a base class.</summary>
    </member>
    <member name="M:Microsoft.JScript.Override.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.Override" /> class.</summary>
    </member>
    <member name="T:Microsoft.JScript.Package">
      <summary>Creates packages of JScript code for use by other code. This class belongs to the abstract syntax tree category.</summary>
    </member>
    <member name="M:Microsoft.JScript.Package.JScriptPackage(System.String,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>Creates the specified package by using the specified scripting engine.</summary>
      <param name="rootName">The name of the package.</param>
      <param name="engine">A reference to the scripting engine.</param>
    </member>
    <member name="T:Microsoft.JScript.ParserException">
      <summary>This class is used by the JScript parser to represent parser exceptions.</summary>
    </member>
    <member name="T:Microsoft.JScript.Plus">
      <summary>Performs addition and concatenation operations. This class belongs to the abstract syntax tree category.</summary>
    </member>
    <member name="M:Microsoft.JScript.Plus.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.Plus" /> class.</summary>
    </member>
    <member name="M:Microsoft.JScript.Plus.DoOp(System.Object,System.Object)">
      <summary>Performs an addition or concatenation operation.</summary>
      <returns>The result of the operation.</returns>
      <param name="v1">The first operand.</param>
      <param name="v2">The second operand.</param>
    </member>
    <member name="M:Microsoft.JScript.Plus.EvaluatePlus(System.Object,System.Object)">
      <summary>Performs an addition or concatenation operation.</summary>
      <returns>The result of the operation.</returns>
      <param name="v1">The first operand.</param>
      <param name="v2">The second operand.</param>
    </member>
    <member name="T:Microsoft.JScript.PostOrPrefixOperator">
      <summary>Performs increment and decrement operations that correspond to the prefix and postfix syntax. This class belongs to the abstract syntax tree category.</summary>
    </member>
    <member name="M:Microsoft.JScript.PostOrPrefixOperator.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.PostOrPrefixOperator" /> class.</summary>
      <param name="operatorTok">One of the <see cref="T:Microsoft.JScript.JSToken" /> enumeration values. Specifies the operation to perform.</param>
    </member>
    <member name="M:Microsoft.JScript.PostOrPrefixOperator.EvaluatePostOrPrefix(System.Object@)">
      <summary>Performs an increment or decrement operation on the specified operand.</summary>
      <returns>The result of the operation.</returns>
      <param name="v">The operand.</param>
    </member>
    <member name="T:Microsoft.JScript.RangeErrorObject">
      <summary>Represents a range error. For example, a range error can occur when you use an incorrect index to access an array element.</summary>
    </member>
    <member name="T:Microsoft.JScript.ReferenceAttribute">
      <summary>Represents a reference to an assembly.</summary>
    </member>
    <member name="M:Microsoft.JScript.ReferenceAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.ReferenceAttribute" /> class.</summary>
      <param name="reference">The reference to the assembly.</param>
    </member>
    <member name="F:Microsoft.JScript.ReferenceAttribute.reference">
      <summary>Specifies the reference to the assembly.</summary>
    </member>
    <member name="T:Microsoft.JScript.ReferenceErrorObject">
      <summary>Represents a reference error. For example, a reference error can occur when you reference an undeclared variable.</summary>
    </member>
    <member name="T:Microsoft.JScript.RegExpConstructor">
      <summary>Represents a prototype-based object that is defined by a constructor function. This class belongs to the built-in object model category.</summary>
    </member>
    <member name="M:Microsoft.JScript.RegExpConstructor.Construct(System.String,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Creates a new <see cref="T:Microsoft.JScript.RegExpObject" /> object for the specified regular expression pattern and flags.</summary>
      <returns>A new <see cref="T:Microsoft.JScript.RegExpObject" /> object.</returns>
      <param name="pattern">The regular expression pattern to match.</param>
      <param name="ignoreCase">true to use case-insensitive matching; otherwise, false.</param>
      <param name="global">true to use a global match; otherwise, false.</param>
      <param name="multiline">true to use a multiline match; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.JScript.RegExpConstructor.CreateInstance(System.Object[])">
      <summary>Creates an instance of the prototype-based object, passing in the specified arguments.</summary>
      <returns>An instance of the object.</returns>
      <param name="args">The arguments to pass to the constructor.</param>
    </member>
    <member name="P:Microsoft.JScript.RegExpConstructor.index">
      <summary>Gets the index of the last successful match, before advancing the index.</summary>
      <returns>The index of the last successful match, if there was one. </returns>
    </member>
    <member name="P:Microsoft.JScript.RegExpConstructor.input">
      <summary>Gets or sets the input string for a regular expression search.</summary>
      <returns>The input string for a regular expression search.</returns>
    </member>
    <member name="M:Microsoft.JScript.RegExpConstructor.Invoke(System.Object[])">
      <summary>Creates an instance of a prototype-based object, passing in the specified arguments.</summary>
      <returns>An instance of the object.</returns>
      <param name="args">The arguments to pass to the constructor.</param>
    </member>
    <member name="P:Microsoft.JScript.RegExpConstructor.lastIndex">
      <summary>Gets the index of the last successful match, after advancing the index.</summary>
      <returns>The index of the last successful match, if there was one.</returns>
    </member>
    <member name="P:Microsoft.JScript.RegExpConstructor.lastMatch">
      <summary>Gets a string representation of the last successful match.</summary>
      <returns>A string representation of the last successful match, if there was one.</returns>
    </member>
    <member name="P:Microsoft.JScript.RegExpConstructor.lastParen">
      <summary>Gets the last <see cref="T:System.Text.RegularExpressions.Group" /> from the <see cref="P:System.Text.RegularExpressions.Match.Groups" /> of the last match.</summary>
      <returns>A string representation of the last group, if there was one.</returns>
    </member>
    <member name="P:Microsoft.JScript.RegExpConstructor.leftContext">
      <summary>Gets a substring of the input string between the start of the input and the start of the last successful match.</summary>
      <returns>A substring of the input string, if there was one.</returns>
    </member>
    <member name="P:Microsoft.JScript.RegExpConstructor.rightContext">
      <summary>Gets a substring of the input string between the start of the last successful match and the end of the input.</summary>
      <returns>A substring of the input string, if there was one.</returns>
    </member>
    <member name="T:Microsoft.JScript.RegExpMatch">
      <summary>Represents the results from a regular expression match. This class belongs to the built-in object model category.</summary>
    </member>
    <member name="T:Microsoft.JScript.RegExpObject">
      <summary>Represents a regular expression object. This class belongs to the built-in object model category.</summary>
    </member>
    <member name="P:Microsoft.JScript.RegExpObject.global">
      <summary>Gets a value indicating whether searches are performed with the global flag (/g), matching all occurrences.</summary>
      <returns>true if global searches are performed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.JScript.RegExpObject.ignoreCase">
      <summary>Gets a value indicating whether searches are performed with the case-insensitive flag (/i).</summary>
      <returns>true if case-insensitive searches are performed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.JScript.RegExpObject.lastIndex">
      <summary>Gets or sets the index of the last successful match.</summary>
      <returns>The index of the last successful match, if there was one.</returns>
    </member>
    <member name="P:Microsoft.JScript.RegExpObject.multiline">
      <summary>Gets a value indicating whether searches are performed with the multiline flag (/m).</summary>
      <returns>true if searches are performed in multiline mode; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.JScript.RegExpObject.source">
      <summary>Gets the regular expression pattern that is represented by this object.</summary>
      <returns>The regular expression pattern that is represented by this object.</returns>
    </member>
    <member name="M:Microsoft.JScript.RegExpObject.ToString">
      <summary>Creates a string representation of this object that contains the regular expression pattern and flags.</summary>
      <returns>A string representation of this object.</returns>
    </member>
    <member name="T:Microsoft.JScript.RegExpPrototype">
      <summary>Provides static methods and properties for <see cref="T:Microsoft.JScript.RegExpObject" /> objects. All methods of this class are called by passing in a reference to the object that is requesting access to the method. This class belongs to the built-in object model category.</summary>
    </member>
    <member name="M:Microsoft.JScript.RegExpPrototype.compile(System.Object,System.Object,System.Object)">
      <summary>Creates and compiles a new <see cref="T:Microsoft.JScript.RegExpObject" /> object for the specified regular expression pattern and flags.</summary>
      <returns>A new <see cref="T:Microsoft.JScript.RegExpObject" /> object.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="source">The regular expression pattern to search for.</param>
      <param name="flags">Flags for the ignore case, global, and multiline modes.</param>
    </member>
    <member name="P:Microsoft.JScript.RegExpPrototype.constructor">
      <summary>Gets a reference to a prototype-based object that is using this prototype.</summary>
      <returns>A reference to a prototype-based object.</returns>
    </member>
    <member name="M:Microsoft.JScript.RegExpPrototype.exec(System.Object,System.Object)">
      <summary>Runs a search for the specified regular expression pattern on the specified object.</summary>
      <returns>The result of the search for the regular expression pattern.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="input">The regular expression pattern to search for.</param>
    </member>
    <member name="M:Microsoft.JScript.RegExpPrototype.test(System.Object,System.Object)">
      <summary>Tests the search for the specified regular expression pattern on the specified object.</summary>
      <returns>true if the search succeeds; otherwise, false.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="input">The regular expression pattern to search for.</param>
    </member>
    <member name="M:Microsoft.JScript.RegExpPrototype.toString(System.Object)">
      <summary>Creates a string representation of the specified object that contains the regular expression pattern and flags.</summary>
      <returns>A string representation of <paramref name="thisob" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="T:Microsoft.JScript.Relational">
      <summary>Performs relational comparison operations. This class belongs to the abstract syntax tree category.</summary>
    </member>
    <member name="M:Microsoft.JScript.Relational.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.Relational" /> class.</summary>
      <param name="operatorTok">One of the <see cref="T:Microsoft.JScript.JSToken" /> enumeration values. Specifies the comparison to perform.</param>
    </member>
    <member name="M:Microsoft.JScript.Relational.EvaluateRelational(System.Object,System.Object)">
      <summary>Performs a relational comparison operation on the specified operands.</summary>
      <returns>The result of the operation.</returns>
      <param name="v1">The first operand.</param>
      <param name="v2">The second operand.</param>
    </member>
    <member name="M:Microsoft.JScript.Relational.JScriptCompare(System.Object,System.Object)">
      <summary>Performs a relational comparison operation on the specified operands.</summary>
      <returns>The result of the operation.</returns>
      <param name="v1">The first operand.</param>
      <param name="v2">The second operand.</param>
    </member>
    <member name="T:Microsoft.JScript.ReturnOutOfFinally">
      <summary>Represents the exception state when code execution returns out of a finally block.  </summary>
    </member>
    <member name="M:Microsoft.JScript.ReturnOutOfFinally.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.ReturnOutOfFinally" /> class.</summary>
    </member>
    <member name="M:Microsoft.JScript.ReturnOutOfFinally.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.ReturnOutOfFinally" /> class, using the specified error message.</summary>
      <param name="m">The message that describes the error.</param>
    </member>
    <member name="M:Microsoft.JScript.ReturnOutOfFinally.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.ReturnOutOfFinally" /> class, using the specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="m">The message that describes the error.</param>
      <param name="e">The exception that is the cause of the current exception.</param>
    </member>
    <member name="T:Microsoft.JScript.Runtime">
      <summary>Provides utility functions.</summary>
    </member>
    <member name="M:Microsoft.JScript.Runtime.DoubleToInt64(System.Double)">
      <summary>Converts the specified <see cref="T:System.Double" /> value to an <see cref="T:System.Int64" />.</summary>
      <returns>
        <paramref name="val" /> converted to an <see cref="T:System.Int64" />.</returns>
      <param name="val">The value to convert.</param>
    </member>
    <member name="M:Microsoft.JScript.Runtime.Equals(System.Object,System.Object)">
      <summary>Determines whether two specified values are equal.</summary>
      <returns>true if the values are equal; false if the values are not equal.</returns>
      <param name="v1">The first operand.</param>
      <param name="v2">The second operand.</param>
    </member>
    <member name="M:Microsoft.JScript.Runtime.UncheckedDecimalToInt64(System.Decimal)">
      <summary>Converts the specified <see cref="T:System.Decimal" /> value to an <see cref="T:System.Int64" />.</summary>
      <returns>
        <paramref name="val" /> converted to an <see cref="T:System.Int64" />.</returns>
      <param name="val">The value to convert.</param>
    </member>
    <member name="T:Microsoft.JScript.ScriptBlock">
      <summary>Represents a block of JScript code. This class belongs to the abstract syntax tree category.</summary>
    </member>
    <member name="T:Microsoft.JScript.ScriptFunction">
      <summary>Represents a prototype-based object that is defined by a constructor function. Most of the constructor function classes, such as <see cref="T:Microsoft.JScript.DateConstructor" />, <see cref="T:Microsoft.JScript.NumberConstructor" />, <see cref="T:Microsoft.JScript.StringConstructor" />, and <see cref="T:Microsoft.JScript.ObjectConstructor" />, inherit from this class. This class belongs to the objects and functions category.</summary>
    </member>
    <member name="M:Microsoft.JScript.ScriptFunction.#ctor(Microsoft.JScript.ScriptObject,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.ScriptFunction" /> class.</summary>
      <param name="parent">The parent prototype of the object that this function constructs.</param>
      <param name="name">The name of the object that this function constructs.</param>
    </member>
    <member name="M:Microsoft.JScript.ScriptFunction.CreateInstance(System.Object[])">
      <summary>Creates an instance of the prototype-based object, passing in the specified arguments.</summary>
      <returns>An instance of the object.</returns>
      <param name="args">The arguments to pass to the constructor.</param>
    </member>
    <member name="M:Microsoft.JScript.ScriptFunction.GetPrototypeForConstructedObject">
      <summary>Gets the prototype object for this constructor function.</summary>
      <returns>The prototype object for this constructor function.</returns>
    </member>
    <member name="F:Microsoft.JScript.ScriptFunction.ilength">
      <summary>Stores the number of elements that are in the <paramref name="args" /> parameter of the <see cref="M:Microsoft.JScript.ScriptFunction.CreateInstance(System.Object[])" /> method.</summary>
    </member>
    <member name="M:Microsoft.JScript.ScriptFunction.Invoke(System.Object,System.Object[])">
      <summary>Invokes a method of the prototype-based object, passing in the specified arguments.</summary>
      <returns>The result of the call to the method.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="args">The arguments to pass to the method.</param>
    </member>
    <member name="M:Microsoft.JScript.ScriptFunction.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
      <summary>Invokes the specified member.</summary>
      <returns>The return value of the call to the member.</returns>
      <param name="name">The name of the member to invoke.</param>
      <param name="invokeAttr">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</param>
      <param name="binder">An object that performs type conversion from actual argument type to formal argument type.</param>
      <param name="target">The object on which to invoke the member. This must be the current script object.</param>
      <param name="args">An array of objects that contains the number, order, and type of the parameters of the member to be invoked. This is an empty array if there are no parameters.</param>
      <param name="modifiers">An array that has the same length as the <paramref name="args" /> parameter. It represents the invoked member's argument attributes in the metadata.</param>
      <param name="culture">Provides information about a specific culture or locale. Used to format numbers, dates, and strings correctly.</param>
      <param name="namedParameters">An array of parameters.</param>
    </member>
    <member name="P:Microsoft.JScript.ScriptFunction.length">
      <summary>Gets or sets the number of elements that are in the <paramref name="args" /> parameter of the <see cref="M:Microsoft.JScript.ScriptFunction.CreateInstance(System.Object[])" /> method.</summary>
      <returns>The number of elements that are in the <paramref name="args" /> parameter of the <see cref="M:Microsoft.JScript.ScriptFunction.CreateInstance(System.Object[])" /> method.</returns>
    </member>
    <member name="P:Microsoft.JScript.ScriptFunction.prototype">
      <summary>Gets or sets the prototype object for this constructor function.</summary>
      <returns>The prototype object for this constructor function.</returns>
    </member>
    <member name="M:Microsoft.JScript.ScriptFunction.ToString">
      <summary>Returns a string representation of the constructor function.</summary>
      <returns>A string that contains the name of the constructor function and a placeholder for the code.</returns>
    </member>
    <member name="T:Microsoft.JScript.ScriptObject">
      <summary>Supports all JScript classes. This is the ultimate base class of all JScript classes. This class belongs to the objects and functions category.</summary>
    </member>
    <member name="F:Microsoft.JScript.ScriptObject.engine">
      <summary>Stores a reference to the scripting engine.</summary>
    </member>
    <member name="M:Microsoft.JScript.ScriptObject.GetField(System.String,System.Reflection.BindingFlags)">
      <summary>Gets a field that has the specified name.</summary>
      <returns>A field that has the specified <paramref name="name" />, or null if the script object does not contain the field.</returns>
      <param name="name">The name of the field to get.</param>
      <param name="bindingAttr">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</param>
    </member>
    <member name="M:Microsoft.JScript.ScriptObject.GetFields(System.Reflection.BindingFlags)">
      <summary>Gets an array of <see cref="T:System.Reflection.FieldInfo" /> objects that correspond to all fields of the current script object.</summary>
      <returns>An array of objects that contains all fields of the current script object.</returns>
      <param name="bindingAttr">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</param>
    </member>
    <member name="M:Microsoft.JScript.ScriptObject.GetMember(System.String,System.Reflection.BindingFlags)">
      <summary>When overridden in a derived class, gets an array of <see cref="T:System.Reflection.MemberInfo" /> objects that correspond to all members that match a specified name.</summary>
      <returns>An array of objects that match the <paramref name="name" /> argument.</returns>
      <param name="name">The name of the member to search for.</param>
      <param name="bindingAttr">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</param>
    </member>
    <member name="M:Microsoft.JScript.ScriptObject.GetMembers(System.Reflection.BindingFlags)">
      <summary>When overridden in a derived class, gets an array of <see cref="T:System.Reflection.MemberInfo" /> objects that correspond to all members of the current script object.</summary>
      <returns>An array of objects that contains all members of the current script object.</returns>
      <param name="bindingAttr">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</param>
    </member>
    <member name="M:Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags)">
      <summary>Gets a method that has the specified name.</summary>
      <returns>A method that has the specified <paramref name="name" />, or null if the script object does not contain the method.</returns>
      <param name="name">The name of the method to get.</param>
      <param name="bindingAttr">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</param>
    </member>
    <member name="M:Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
      <summary>Gets a method that has the specified name by using the specified selection criteria.</summary>
      <returns>A method that has the specified <paramref name="name" />, or null if the script object does not contain the method.</returns>
      <param name="name">The name of the method to search for.</param>
      <param name="bindingAttr">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</param>
      <param name="binder">An object that performs type conversion from actual argument type to formal argument type.</param>
      <param name="types">The parameter types that are used to locate a matching method.</param>
      <param name="modifiers">An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</param>
    </member>
    <member name="M:Microsoft.JScript.ScriptObject.GetMethods(System.Reflection.BindingFlags)">
      <summary>Gets an array of <see cref="T:System.Reflection.MethodInfo" /> objects that correspond to all methods of the current script object.</summary>
      <returns>An array of objects that contains all methods of the current script object.</returns>
      <param name="bindingAttr">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</param>
    </member>
    <member name="M:Microsoft.JScript.ScriptObject.GetParent">
      <summary>Gets a reference to the parent object.</summary>
      <returns>A reference to the parent object.</returns>
    </member>
    <member name="M:Microsoft.JScript.ScriptObject.GetProperties(System.Reflection.BindingFlags)">
      <summary>Gets an array of <see cref="T:System.Reflection.PropertyInfo" /> objects that correspond to all properties of the current script object.</summary>
      <returns>An array of objects that contains all properties of the current script object.</returns>
      <param name="bindingAttr">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</param>
    </member>
    <member name="M:Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags)">
      <summary>Gets a property that has the specified name.</summary>
      <returns>A property that has the specified <paramref name="name" />, or null if the script object does not contain the property.</returns>
      <param name="name">The name of the property to get.</param>
      <param name="bindingAttr">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</param>
    </member>
    <member name="M:Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
      <summary>Gets a property that has the specified name by using the specified selection criteria.</summary>
      <returns>A property that has the specified <paramref name="name" />, or null if the script object does not contain the property.</returns>
      <param name="name">The name of the property to search for.</param>
      <param name="bindingAttr">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</param>
      <param name="binder">An object that performs type conversion from actual argument type to formal argument type.</param>
      <param name="returnType">The type of the return value that the property must have.</param>
      <param name="types">The index types of the property being searched for. Used for index properties, such as the indexer for a class.</param>
      <param name="modifiers">An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</param>
    </member>
    <member name="M:Microsoft.JScript.ScriptObject.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
      <summary>Invokes the specified member.</summary>
      <returns>The return value of the call to the member.</returns>
      <param name="name">The name of the member to invoke.</param>
      <param name="invokeAttr">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</param>
      <param name="binder">An object that performs type conversion from actual argument type to formal argument type.</param>
      <param name="target">The object on which to invoke the member. This must be the current script object.</param>
      <param name="args">An array of objects that contains the number, order, and type of the parameters of the member to be invoked. This is an empty array if there are no parameters.</param>
      <param name="modifiers">An array that has the same length as the args parameter. It represents the invoked member's argument attributes in the metadata.</param>
      <param name="locale">Provides information about a specific culture or locale. Used to format numbers, dates, and strings correctly.</param>
      <param name="namedParameters">An array of parameters.</param>
    </member>
    <member name="P:Microsoft.JScript.ScriptObject.Item(System.Double)">
      <summary>Gets or sets a member of the script object that is designated by the specified <see cref="T:System.Double" /> index value.</summary>
      <returns>The value of the member that is at <paramref name="index" />.</returns>
      <param name="index">The index of the member.</param>
    </member>
    <member name="P:Microsoft.JScript.ScriptObject.Item(System.Int32)">
      <summary>Gets or sets a member of the script object that is designated by the specified <see cref="T:System.Int32" /> index value.</summary>
      <returns>The value of the member that is at <paramref name="index" />.</returns>
      <param name="index">The index of the member.</param>
    </member>
    <member name="P:Microsoft.JScript.ScriptObject.Item(System.Object[])">
      <summary>Gets or sets a member of the script object that is designated by the specified name, <see cref="T:System.Double" /> index value, or <see cref="T:System.Int32" /> index value.</summary>
      <returns>The value of the member that is specified in <paramref name="pars" />.</returns>
      <param name="pars">The name or index of the member.</param>
    </member>
    <member name="P:Microsoft.JScript.ScriptObject.Item(System.String)">
      <summary>Gets or sets a member of the script object that is designated by the specified name.</summary>
      <returns>The value of the member that is named <paramref name="name" />.</returns>
      <param name="name">The name of the member.</param>
    </member>
    <member name="F:Microsoft.JScript.ScriptObject.parent">
      <summary>Stores a reference to the parent object.</summary>
    </member>
    <member name="P:Microsoft.JScript.ScriptObject.UnderlyingSystemType">
      <summary>Gets the type of the script object.</summary>
      <returns>The type of the script object.</returns>
    </member>
    <member name="M:Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo,System.Object)">
      <summary>Creates a wrapped object that contains the specified member together with the specified object.</summary>
      <returns>A one-element array that has a wrapped object that contains the member information and <paramref name="obj" />.</returns>
      <param name="member">The member to wrap.</param>
      <param name="obj">The object that <paramref name="member" /> is defined on.</param>
    </member>
    <member name="M:Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object)">
      <summary>Creates an array of wrapped objects that contain the specified members together with the specified object.</summary>
      <returns>An array of wrapped objects, each of which contains member information and a copy of <paramref name="obj" />.</returns>
      <param name="members">The members to wrap.</param>
      <param name="obj">The object that <paramref name="members" /> are defined on.</param>
    </member>
    <member name="M:Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object,Microsoft.JScript.SimpleHashtable)">
      <summary>Creates an array of wrapped objects that contain the specified members together with the specified object, caching the results in the specified data storage.</summary>
      <returns>An array of wrapped objects, each of which contains member information and a copy of <paramref name="obj" />.</returns>
      <param name="members">The members to wrap.</param>
      <param name="obj">The object that <paramref name="members" /> are defined on.</param>
      <param name="cache">Temporary data storage for the wrapped objects.</param>
    </member>
    <member name="T:Microsoft.JScript.ScriptStream">
      <summary>Represents a stream of data. This class sends its data to either a <see cref="T:Microsoft.JScript.COMCharStream" /> or a <see cref="T:System.Console" /> stream. </summary>
    </member>
    <member name="M:Microsoft.JScript.ScriptStream.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.ScriptStream" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.ScriptStream.Error">
      <summary>Stores a reference to either the standard console <see cref="P:System.Console.Error" /> stream or a custom <see cref="T:Microsoft.JScript.COMCharStream" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.ScriptStream.Out">
      <summary>Stores a reference to either the standard console <see cref="P:System.Console.Out" /> stream or a custom <see cref="T:Microsoft.JScript.COMCharStream" />.</summary>
    </member>
    <member name="M:Microsoft.JScript.ScriptStream.PrintStackTrace">
      <summary>Writes a string that describes the current contents of the call stack. The string is written to the <see cref="F:Microsoft.JScript.ScriptStream.Out" /> stream.</summary>
    </member>
    <member name="M:Microsoft.JScript.ScriptStream.PrintStackTrace(System.Exception)">
      <summary>Writes a string that describes the contents of the call stack at the time the specified exception was thrown. The string is written to the <see cref="F:Microsoft.JScript.ScriptStream.Out" /> stream.</summary>
      <param name="e">The exception that was thrown.</param>
    </member>
    <member name="M:Microsoft.JScript.ScriptStream.Write(System.String)">
      <summary>Writes the specified string to the stream. The string is written to the <see cref="F:Microsoft.JScript.ScriptStream.Out" /> stream.</summary>
      <param name="str">The string to write to the stream.</param>
    </member>
    <member name="M:Microsoft.JScript.ScriptStream.WriteLine(System.String)">
      <summary>Writes the specified string to the stream, followed by the line terminator. The string is written to the <see cref="F:Microsoft.JScript.ScriptStream.Out" /> stream.</summary>
      <param name="str">The string to write to the stream.</param>
    </member>
    <member name="T:Microsoft.JScript.SimpleHashtable">
      <summary>A hash table for the internal storage of items.</summary>
    </member>
    <member name="M:Microsoft.JScript.SimpleHashtable.#ctor(System.UInt32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.SimpleHashtable" /> class, using the specified threshold.</summary>
      <param name="threshold">The number of items at which the hash table must be resized.</param>
    </member>
    <member name="M:Microsoft.JScript.SimpleHashtable.GetEnumerator">
      <summary>Gets an enumerator for the hash table.</summary>
      <returns>An enumerator for the hash table.</returns>
    </member>
    <member name="P:Microsoft.JScript.SimpleHashtable.Item(System.Object)">
      <summary>Gets or sets the item that has the specified key.</summary>
      <returns>The value of the item that has the specified <paramref name="key" />.</returns>
      <param name="key">The key of the item to get or set.</param>
    </member>
    <member name="M:Microsoft.JScript.SimpleHashtable.Remove(System.Object)">
      <summary>Removes the item with the specified key from the hash table.</summary>
      <param name="key">The key of the item to remove.</param>
    </member>
    <member name="T:Microsoft.JScript.SourceState">
      <summary>Specifies the state of source code text. This class is used together with other classes that provide information to color JScript code in an editor.</summary>
    </member>
    <member name="F:Microsoft.JScript.SourceState.STATE_COLOR_COMMENT">
      <summary>Comment text.</summary>
    </member>
    <member name="F:Microsoft.JScript.SourceState.STATE_COLOR_NORMAL">
      <summary>Normal text.</summary>
    </member>
    <member name="F:Microsoft.JScript.SourceState.STATE_COLOR_STRING">
      <summary>String literal text.</summary>
    </member>
    <member name="T:Microsoft.JScript.StackFrame">
      <summary>Represents a stack frame for executing code. This class contains methods for resolving scope. It belongs to the compilation and run-time state category.</summary>
    </member>
    <member name="F:Microsoft.JScript.StackFrame.closureInstance">
      <summary>Stores a reference to the caller of the current stack frame.</summary>
    </member>
    <member name="M:Microsoft.JScript.StackFrame.GetDefaultThisObject">
      <summary>Gets the current default scope, which will be either the contained object of a with statement scope, or the global scope.</summary>
      <returns>The current default scope.</returns>
    </member>
    <member name="M:Microsoft.JScript.StackFrame.GetField(System.String,System.Int32)">
      <summary>Gets a field that has the specified name by searching the scope hierarchy. This method searches only the scope that is specified by the lexical level.</summary>
      <returns>null in all cases.</returns>
      <param name="name">The name of the field to search for.</param>
      <param name="lexLevel">The lexical level to search.</param>
    </member>
    <member name="M:Microsoft.JScript.StackFrame.GetGlobalScope">
      <summary>Gets the global scope by searching the scope hierarchy until it finds a scope that includes static variables, for example, a module scope.</summary>
      <returns>The global scope.</returns>
    </member>
    <member name="M:Microsoft.JScript.StackFrame.GetMember(System.String,System.Reflection.BindingFlags)">
      <summary>Retrieves an array of <see cref="T:System.Reflection.MemberInfo" /> objects that correspond to all members that match a specified name.</summary>
      <returns>An array of objects that match the <paramref name="name" /> argument.</returns>
      <param name="name">The member name to search for.</param>
      <param name="bindingAttr">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</param>
    </member>
    <member name="M:Microsoft.JScript.StackFrame.GetMembers(System.Reflection.BindingFlags)">
      <summary>Retrieves an array of <see cref="T:System.Reflection.MemberInfo" /> objects that correspond to all members of the current object.</summary>
      <returns>An array of objects that contains all members of the current object.</returns>
      <param name="bindingAttr">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</param>
    </member>
    <member name="M:Microsoft.JScript.StackFrame.GetMemberValue(System.String,System.Int32)">
      <summary>Gets the value of the specified member by searching the scope hierarchy. This method searches only the scope that is specified by the lexical level.</summary>
      <returns>The value of the member <paramref name="name" />.</returns>
      <param name="name">The name of the member to search for.</param>
      <param name="lexlevel">The lexical level to search.</param>
    </member>
    <member name="F:Microsoft.JScript.StackFrame.localVars">
      <summary>Stores the local variables for this stack frame.</summary>
    </member>
    <member name="M:Microsoft.JScript.StackFrame.Microsoft#JScript#IActivationObject#GetLocalField(System.String)">
      <summary>Gets the local declaration of a field that has the specified name. This method is used at compile time for error checking.</summary>
      <returns>The local declaration of the field.</returns>
      <param name="name">The name of the field.</param>
    </member>
    <member name="M:Microsoft.JScript.StackFrame.PushStackFrameForMethod(System.Object,Microsoft.JScript.JSLocalField[],Microsoft.JScript.Vsa.VsaEngine)">
      <summary>Creates a new <see cref="T:Microsoft.JScript.StackFrame" /> object for a method and pushes it onto the global scope stack.</summary>
      <param name="thisob">The object that contains the method.</param>
      <param name="fields">The local variables for the stack frame.</param>
      <param name="engine">A reference to the scripting engine.</param>
    </member>
    <member name="M:Microsoft.JScript.StackFrame.PushStackFrameForStaticMethod(System.RuntimeTypeHandle,Microsoft.JScript.JSLocalField[],Microsoft.JScript.Vsa.VsaEngine)">
      <summary>Creates a new <see cref="T:Microsoft.JScript.StackFrame" /> object for a static method and pushes it onto the global scope stack.</summary>
      <param name="thisclass">The class that contains the static method.</param>
      <param name="fields">The local variables for the stack frame.</param>
      <param name="engine">A reference to the scripting engine.</param>
    </member>
    <member name="T:Microsoft.JScript.StrictEquality">
      <summary>Performs comparison operations. This class belongs to the abstract syntax tree category.</summary>
    </member>
    <member name="M:Microsoft.JScript.StrictEquality.JScriptStrictEquals(System.Object,System.Object)">
      <summary>Performs a comparison operation.</summary>
      <returns>The result of the operation.</returns>
      <param name="v1">The first operand.</param>
      <param name="v2">The second operand.</param>
    </member>
    <member name="T:Microsoft.JScript.StringConstructor">
      <summary>Represents a prototype-based object that is defined by a constructor function. This class belongs to the built-in object model category.</summary>
    </member>
    <member name="M:Microsoft.JScript.StringConstructor.CreateInstance(System.Object[])">
      <summary>Creates an instance of the prototype-based object, passing in the specified arguments.</summary>
      <returns>An instance of the object.</returns>
      <param name="args">The arguments to pass to the constructor.</param>
    </member>
    <member name="M:Microsoft.JScript.StringConstructor.fromCharCode(System.Object[])">
      <summary>Converts each element of the specified array to a character and concatenates them.</summary>
      <returns>A string representation of <paramref name="arg" />.</returns>
      <param name="args">The elements to convert to a string.</param>
    </member>
    <member name="M:Microsoft.JScript.StringConstructor.Invoke(System.Object)">
      <summary>Converts the specified object to a string.</summary>
      <returns>A string representation of <paramref name="arg" />.</returns>
      <param name="arg">The object to convert to a string.</param>
    </member>
    <member name="T:Microsoft.JScript.StringObject">
      <summary>Represents a string object. This class belongs to the built-in object model category.</summary>
    </member>
    <member name="M:Microsoft.JScript.StringObject.#ctor(Microsoft.JScript.ScriptObject,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.StringObject" /> class. </summary>
      <param name="prototype">The parent of the object.</param>
      <param name="value">The underlying value that the class represents.</param>
    </member>
    <member name="M:Microsoft.JScript.StringObject.Equals(System.Object)">
      <summary>Determines whether this string and the specified string have the same value.</summary>
      <returns>true if this string and <paramref name="ob" /> have the same value; otherwise, false.</returns>
      <param name="ob">The string to compare.</param>
    </member>
    <member name="M:Microsoft.JScript.StringObject.GetHashCode">
      <summary>Returns the hash code for this string.</summary>
      <returns>A hash code for this string.</returns>
    </member>
    <member name="M:Microsoft.JScript.StringObject.GetType">
      <summary>Returns <see cref="T:System.String" /> or <see cref="T:Microsoft.JScript.StringObject" />.</summary>
      <returns>
        <see cref="T:System.String" /> or <see cref="T:Microsoft.JScript.StringObject" />.</returns>
    </member>
    <member name="P:Microsoft.JScript.StringObject.length">
      <summary>Gets the number of characters in the string.</summary>
      <returns>The number of characters in the string.</returns>
    </member>
    <member name="T:Microsoft.JScript.StringPrototype">
      <summary>Provides static methods and properties for <see cref="T:Microsoft.JScript.StringObject" /> objects. All methods of this class are called by passing in a reference to the object that is requesting access to the method. This class belongs to the built-in object model category.</summary>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.anchor(System.Object,System.Object)">
      <summary>Converts the specified object to text enclosed in anchor tags, and gives the anchor element the specified name attribute.</summary>
      <returns>A string in the form "&lt;A NAME=\""+ <paramref name="anchorName" /> +"\"&gt;"+ <paramref name="thisob" /> +"&lt;/A&gt;".</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="anchorName">The name attribute of the anchor element.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.big(System.Object)">
      <summary>Converts the specified object to text enclosed in bigger text markup tags.</summary>
      <returns>A string in the form "&lt;BIG&gt;"+ <paramref name="thisob" /> +"&lt;/BIG&gt;".</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.blink(System.Object)">
      <summary>Converts the specified object to text enclosed in blink markup tags.</summary>
      <returns>A string in the form "&lt;BLINK&gt;"+ <paramref name="thisob" /> +"&lt;/BLINK&gt;".</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.bold(System.Object)">
      <summary>Converts the specified object to text enclosed in bold text markup tags.</summary>
      <returns>A string in the form "&lt;B&gt;"+ <paramref name="thisob" /> +"&lt;/B&gt;".</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.charAt(System.Object,System.Double)">
      <summary>Returns the character at the specified position in the specified object.</summary>
      <returns>The character at <paramref name="pos" />, if there is one.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="pos">The position of the character to return.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.charCodeAt(System.Object,System.Double)">
      <summary>Returns the ASCII code of the character at the specified position in the specified object.</summary>
      <returns>The code of the character at <paramref name="pos" />, if there is one.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="pos">The position of the character whose code you want to return.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.concat(System.Object,System.Object[])">
      <summary>Appends the specified arguments to the specified object.</summary>
      <returns>A string representation of <paramref name="thisob" />, with <paramref name="args" /> appended.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="args">The arguments to append to <paramref name="thisob" />.</param>
    </member>
    <member name="P:Microsoft.JScript.StringPrototype.constructor">
      <summary>Gets a reference to a prototype-based object that is using this prototype.</summary>
      <returns>A reference to a prototype-based object.</returns>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.fixed(System.Object)">
      <summary>Converts the specified object to text enclosed in fixed-width text markup tags.</summary>
      <returns>A string in the form "&lt;TT&gt;"+ <paramref name="thisob" /> +"&lt;/TT&gt;".</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.fontcolor(System.Object,System.Object)">
      <summary>Converts the specified object to text enclosed in font tags, and gives the element the specified color attribute.</summary>
      <returns>A string in the form "&lt;FONT COLOR=\""+ <paramref name="colorName" /> +"\"&gt;"+ <paramref name="thisob" /> +"&lt;/FONT&gt;".</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="colorName">The color attribute of the font element.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.fontsize(System.Object,System.Object)">
      <summary>Converts the specified object to text enclosed in font tags, and gives the element the specified size attribute.</summary>
      <returns>A string in the form "&lt;FONT SIZE=\""+ <paramref name="fontSize" /> +"\"&gt;"+ <paramref name="thisob" /> +"&lt;/FONT&gt;".</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="fontSize">The size attribute of the font element.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.indexOf(System.Object,System.Object,System.Double)">
      <summary>Searches for the first occurrence of the specified string in the specified object, starting from the specified character position.</summary>
      <returns>The position of the first occurrence of <paramref name="searchString" />, if it is found.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="searchString">The string to search for.</param>
      <param name="position">The position at which to start the search.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.italics(System.Object)">
      <summary>Converts the specified object to text enclosed in italic text markup tags.</summary>
      <returns>A string in the form "&lt;I&gt;"+ <paramref name="thisob" /> +"&lt;/I&gt;".</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.lastIndexOf(System.Object,System.Object,System.Double)">
      <summary>Searches for the last occurrence of the specified string in the specified object, starting from the specified character position.</summary>
      <returns>The position of the last occurrence of <paramref name="searchString" />, if it is found.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="searchString">The string to search for.</param>
      <param name="position">The position at which to start the search.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.link(System.Object,System.Object)">
      <summary>Converts the specified object to text enclosed in anchor tags, and gives the anchor element the link target attribute that is specified.</summary>
      <returns>A string in the form "&lt;A HREF=\""+ <paramref name="linkRef" /> +"\"&gt;"+ <paramref name="thisob" /> +"&lt;/A&gt;".</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="linkRef">The target attribute of the anchor element.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.localeCompare(System.Object,System.Object)">
      <summary>Compares the two specified strings and returns an integer that indicates the lexical relationship between them.</summary>
      <returns>A negative value when <paramref name="thisob" /> is less than <paramref name="thatob" />; zero when <paramref name="thisob" /> equals <paramref name="thatob" />; a positive value when <paramref name="thisob" /> is greater than <paramref name="thatob" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="thatob">The string to compare to <paramref name="thisob" />.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.match(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Object)">
      <summary>Runs a search for the specified regular expression pattern on the specified object.</summary>
      <returns>The result of the search for the regular expression pattern.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="engine">A reference to the scripting engine.</param>
      <param name="regExp">The regular expression pattern to search for.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.replace(System.Object,System.Object,System.Object)">
      <summary>Runs a search for the specified regular expression pattern on the first specified object, and replaces any matches with the third specified object.</summary>
      <returns>The new string, after the replacement is made.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="regExp">The regular expression pattern to search for.</param>
      <param name="replacement">The replacement for any matches.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.search(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Object)">
      <summary>Runs a search for the specified regular expression pattern on the specified object.</summary>
      <returns>If the search is successful, the index of the match; otherwise, -1.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="engine">A reference to the scripting engine.</param>
      <param name="regExp">The regular expression pattern to search for.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.slice(System.Object,System.Double,System.Object)">
      <summary>Creates a new string that contains the specified consecutive characters from the specified string.</summary>
      <returns>A new string that contains the consecutive characters between <paramref name="start" /> and <paramref name="end" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="start">The first consecutive character to get.</param>
      <param name="end">The last consecutive character to get.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.small(System.Object)">
      <summary>Converts the specified object to text enclosed in smaller text markup tags.</summary>
      <returns>A string in the form "&lt;SMALL&gt;"+ <paramref name="thisob" /> +"&lt;/SMALL&gt;".</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.split(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Object,System.Object)">
      <summary>Returns an array that contains the substrings in the specified object that are delimited by the specified characters. The number of substrings in the array is constrained by the specified limit.</summary>
      <returns>An array that contains the substrings in <paramref name="thisob" /> that are delimited by <paramref name="separator" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="engine">A reference to the scripting engine.</param>
      <param name="separator">The characters that delimit the substrings in <paramref name="thisob" />.</param>
      <param name="limit">The maximum number of substrings to return.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.strike(System.Object)">
      <summary>Converts the specified object to text enclosed in strikethrough markup tags.</summary>
      <returns>A string in the form "&lt;STRIKE&gt;"+ <paramref name="thisob" /> +"&lt;/STRIKE&gt;".</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.sub(System.Object)">
      <summary>Converts the specified object to text enclosed in subscript markup tags.</summary>
      <returns>A string in the form "&lt;SUB&gt;"+ <paramref name="thisob" /> +"&lt;/SUB&gt;".</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.substr(System.Object,System.Double,System.Object)">
      <summary>Creates a new string that contains the specified number of consecutive characters from the specified string, starting from the specified character position. Use <see cref="M:Microsoft.JScript.StringPrototype.substring(System.Object,System.Double,System.Object)" /> instead, if you can.</summary>
      <returns>A new string that contains <paramref name="count" /> consecutive characters, starting at <paramref name="start" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="start">The first consecutive character to get.</param>
      <param name="count">The number of characters to get.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.substring(System.Object,System.Double,System.Object)">
      <summary>Creates a new string that contains the specified consecutive characters from the specified string.</summary>
      <returns>A new string that contains the consecutive characters between <paramref name="start" /> and <paramref name="end" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="start">The first consecutive character to get.</param>
      <param name="end">The last consecutive character to get.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.sup(System.Object)">
      <summary>Converts the specified object to text enclosed in superscript markup tags.</summary>
      <returns>A string in the form "&lt;SUP&gt;"+ <paramref name="thisob" /> +"&lt;/SUP&gt;".</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.toLocaleLowerCase(System.Object)">
      <summary>Returns a copy of the specified string converted to lowercase, based on the casing rules of <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" />.</summary>
      <returns>A lowercase string.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.toLocaleUpperCase(System.Object)">
      <summary>Returns a copy of the specified string converted to uppercase, based on the casing rules of <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" />.</summary>
      <returns>An uppercase string.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.toLowerCase(System.Object)">
      <summary>Returns a copy of the specified string converted to lowercase, based on the casing rules of <see cref="P:System.Globalization.CultureInfo.InvariantCulture" />.</summary>
      <returns>A lowercase string.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.toString(System.Object)">
      <summary>Creates a string representation of the specified object.</summary>
      <returns>A string representation of <paramref name="thisob" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.toUpperCase(System.Object)">
      <summary>Returns a copy of the specified string converted to uppercase, based on the casing rules of <see cref="P:System.Globalization.CultureInfo.InvariantCulture" />.</summary>
      <returns>An uppercase string.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.StringPrototype.valueOf(System.Object)">
      <summary>Returns the value of the specified object.</summary>
      <returns>The value of <paramref name="thisob" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="T:Microsoft.JScript.SuperTypeMembersSorter">
      <summary>Stores members from base classes and interfaces.</summary>
    </member>
    <member name="T:Microsoft.JScript.SyntaxErrorObject">
      <summary>Represents a syntax error. For example, a syntax error can occur when you omit a semicolon.</summary>
    </member>
    <member name="T:Microsoft.JScript.Throw">
      <summary>Throws an exception. This class belongs to the abstract syntax tree category.</summary>
    </member>
    <member name="M:Microsoft.JScript.Throw.JScriptThrow(System.Object)">
      <summary>Returns the specified object as an exception, converting if it has to.</summary>
      <returns>An exception that represents <paramref name="value" />.</returns>
      <param name="value">The exception to throw. </param>
    </member>
    <member name="T:Microsoft.JScript.TokenColor">
      <summary>Specifies the colors that individual units of code should have when text is being colorized in an editor. The members of this enumeration are used by the <see cref="P:Microsoft.JScript.ITokenColorInfo.Color" /> property of <see cref="T:Microsoft.JScript.ITokenColorInfo" /> objects.</summary>
    </member>
    <member name="F:Microsoft.JScript.TokenColor.COLOR_COMMENT">
      <summary>The color for a unit of code that represents a comment.</summary>
    </member>
    <member name="F:Microsoft.JScript.TokenColor.COLOR_CONDITIONAL_COMP">
      <summary>Not used.</summary>
    </member>
    <member name="F:Microsoft.JScript.TokenColor.COLOR_IDENTIFIER">
      <summary>The color for a unit of code that represents an identifier.</summary>
    </member>
    <member name="F:Microsoft.JScript.TokenColor.COLOR_KEYWORD">
      <summary>The color for a unit of code that represents a keyword.</summary>
    </member>
    <member name="F:Microsoft.JScript.TokenColor.COLOR_NUMBER">
      <summary>The color for a unit of code that represents a numeric literal.</summary>
    </member>
    <member name="F:Microsoft.JScript.TokenColor.COLOR_OPERATOR">
      <summary>The color for a unit of code that represents an operator.</summary>
    </member>
    <member name="F:Microsoft.JScript.TokenColor.COLOR_STRING">
      <summary>The color for a unit of code that represents a string literal.</summary>
    </member>
    <member name="F:Microsoft.JScript.TokenColor.COLOR_TEXT">
      <summary>The color for a unit of code that represents text. This is the default value.</summary>
    </member>
    <member name="T:Microsoft.JScript.Try">
      <summary>Identifies blocks of code to run in error handling scopes. This class belongs to the abstract syntax tree category.</summary>
    </member>
    <member name="M:Microsoft.JScript.Try.JScriptExceptionValue(System.Object,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>Returns the specified object as an exception, converting it to a specific <see cref="T:Microsoft.JScript.JScriptException" /> if it can.</summary>
      <returns>The exception <paramref name="e" />, converted to a specific <see cref="T:Microsoft.JScript.JScriptException" /> if that is possible.</returns>
      <param name="e">The object that represents the exception.</param>
      <param name="engine">A reference to the scripting engine.</param>
    </member>
    <member name="M:Microsoft.JScript.Try.PushHandlerScope(Microsoft.JScript.Vsa.VsaEngine,System.String,System.Int32)">
      <summary>Creates a new <see cref="T:Microsoft.JScript.BlockScope" /> object for the try block and pushes it onto the global scope stack.</summary>
      <param name="engine">A reference to the scripting engine.</param>
      <param name="id">The name of the scope of the try block.</param>
      <param name="scopeId">The ID of the scope of the try block.</param>
    </member>
    <member name="T:Microsoft.JScript.TypedArray">
      <summary>Represents a reflectable reference to the <see cref="T:System.Array" /> class. This class stores the element type of a typed array, but this class does not store data. </summary>
    </member>
    <member name="M:Microsoft.JScript.TypedArray.#ctor(System.Reflection.IReflect,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.TypedArray" /> class.</summary>
      <param name="elementType">The element type of a typed array.</param>
      <param name="rank">The rank (number of dimensions) of the array.</param>
    </member>
    <member name="M:Microsoft.JScript.TypedArray.Equals(System.Object)">
      <summary>Determines whether the specified typed array has the same element type and rank as the current typed array.</summary>
      <returns>true if <paramref name="obj" /> has the same element type and rank as the current typed array; otherwise, false.</returns>
      <param name="obj">The typed array to compare with the current typed array.</param>
    </member>
    <member name="M:Microsoft.JScript.TypedArray.GetField(System.String,System.Reflection.BindingFlags)">
      <summary>Gets a field of the <see cref="T:System.Array" /> class type that has the specified name.</summary>
      <returns>A field that has the specified name, if one is found; otherwise, null.</returns>
      <param name="name">The name of the field to get.</param>
      <param name="bindingAttr">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</param>
    </member>
    <member name="M:Microsoft.JScript.TypedArray.GetFields(System.Reflection.BindingFlags)">
      <summary>Gets an array of <see cref="T:System.Reflection.FieldInfo" /> objects that correspond to all fields of the <see cref="T:System.Array" /> class type.</summary>
      <returns>An array of objects that contains all fields of the <see cref="T:System.Array" /> class type.</returns>
      <param name="bindingAttr">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</param>
    </member>
    <member name="M:Microsoft.JScript.TypedArray.GetHashCode">
      <summary>Serves as a hash function for the element type of the typed array.</summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="M:Microsoft.JScript.TypedArray.GetMember(System.String,System.Reflection.BindingFlags)">
      <summary>Gets an array of <see cref="T:System.Reflection.MemberInfo" /> objects that correspond to all members of the <see cref="T:System.Array" /> class type that match a specified name.</summary>
      <returns>An array of objects that match the <paramref name="name" /> argument.</returns>
      <param name="name">The name of the member to search for.</param>
      <param name="bindingAttr">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</param>
    </member>
    <member name="M:Microsoft.JScript.TypedArray.GetMembers(System.Reflection.BindingFlags)">
      <summary>Gets an array of <see cref="T:System.Reflection.MemberInfo" /> objects that correspond to all members of the <see cref="T:System.Array" /> class type.</summary>
      <returns>An array of objects that contains all members of the <see cref="T:System.Array" /> class type.</returns>
      <param name="bindingAttr">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</param>
    </member>
    <member name="M:Microsoft.JScript.TypedArray.GetMethod(System.String,System.Reflection.BindingFlags)">
      <summary>Gets a method of the <see cref="T:System.Array" /> class type that has the specified name.</summary>
      <returns>A method that has the specified name, if one is found; otherwise, null.</returns>
      <param name="name">The name of the method to get.</param>
      <param name="bindingAttr">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</param>
    </member>
    <member name="M:Microsoft.JScript.TypedArray.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
      <summary>Gets a method of the <see cref="T:System.Array" /> class type that has the specified name by using the specified selection criteria.</summary>
      <returns>A method that has the specified name, if one is found; otherwise, null.</returns>
      <param name="name">The name of the method to get.</param>
      <param name="bindingAttr">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</param>
      <param name="binder">An object that performs type conversion from actual argument type to formal argument type.</param>
      <param name="types">The parameter types that are used to locate a matching method.</param>
      <param name="modifiers">An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</param>
    </member>
    <member name="M:Microsoft.JScript.TypedArray.GetMethods(System.Reflection.BindingFlags)">
      <summary>Gets an array of <see cref="T:System.Reflection.MethodInfo" /> objects that correspond to all methods of the <see cref="T:System.Array" /> class type.</summary>
      <returns>An array of objects that contains all methods of the <see cref="T:System.Array" /> class type.</returns>
      <param name="bindingAttr">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</param>
    </member>
    <member name="M:Microsoft.JScript.TypedArray.GetProperties(System.Reflection.BindingFlags)">
      <summary>Gets an array of <see cref="T:System.Reflection.PropertyInfo" /> objects that correspond to all properties of the <see cref="T:System.Array" /> class type.</summary>
      <returns>An array of objects that contains all properties of the <see cref="T:System.Array" /> class type.</returns>
      <param name="bindingAttr">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</param>
    </member>
    <member name="M:Microsoft.JScript.TypedArray.GetProperty(System.String,System.Reflection.BindingFlags)">
      <summary>Gets a property of the <see cref="T:System.Array" /> class type that has the specified name.</summary>
      <returns>A property that has the specified name, if one is found; otherwise, null.</returns>
      <param name="name">The name of the property to get.</param>
      <param name="bindingAttr">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</param>
    </member>
    <member name="M:Microsoft.JScript.TypedArray.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
      <summary>Gets a property of the <see cref="T:System.Array" /> class type that has the specified name by using the specified selection criteria.</summary>
      <returns>A property that has the specified name, if one is found; otherwise, null.</returns>
      <param name="name">The name of the property to get.</param>
      <param name="bindingAttr">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</param>
      <param name="binder">An object that performs type conversion from actual argument type to formal argument type.</param>
      <param name="returnType">The type of the return value that the property must have.</param>
      <param name="types">The index types of the property being searched for. Used for index properties, such as the indexer for a class.</param>
      <param name="modifiers">An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</param>
    </member>
    <member name="M:Microsoft.JScript.TypedArray.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
      <summary>Invokes the specified member of the element type or the <see cref="T:System.Array" /> class type.</summary>
      <returns>The return value of the call to the member.</returns>
      <param name="name">The name of the member to invoke.</param>
      <param name="flags">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</param>
      <param name="binder">An object that performs type conversion from actual argument type to formal argument type.</param>
      <param name="target">The object on which to invoke the member. This must be the current script object.</param>
      <param name="args">An array of objects that contains the number, order, and type of the parameters of the member to be invoked. This is an empty array if there are no parameters.</param>
      <param name="modifiers">An array that has the same length as the <paramref name="args" /> parameter. It represents the invoked member's argument attributes in the metadata.</param>
      <param name="locale">Provides information about a specific culture or locale. Used to format numbers, dates, and strings correctly.</param>
      <param name="namedParameters">An array of parameters.</param>
    </member>
    <member name="M:Microsoft.JScript.TypedArray.ToString">
      <summary>Returns a string that contains the element type of the typed array and the rank information.</summary>
      <returns>A string that contains the element type of the typed array and the rank information.</returns>
    </member>
    <member name="P:Microsoft.JScript.TypedArray.UnderlyingSystemType">
      <summary>Gets the type of the <see cref="T:Microsoft.JScript.TypedArray" /> object.</summary>
      <returns>The type of the <see cref="T:Microsoft.JScript.TypedArray" /> object.</returns>
    </member>
    <member name="T:Microsoft.JScript.TypeErrorObject">
      <summary>Represents a type error. For example, a type error can occur when you pass an object of one type to a method that expects an object of another type.</summary>
    </member>
    <member name="T:Microsoft.JScript.Typeof">
      <summary>Determines the data types of objects. This class belongs to the abstract syntax tree category.</summary>
    </member>
    <member name="M:Microsoft.JScript.Typeof.JScriptTypeof(System.Object)">
      <summary>Determines the data type of the specified object.</summary>
      <returns>The type of <paramref name="value" />.</returns>
      <param name="value">The object to determine the type of.</param>
    </member>
    <member name="T:Microsoft.JScript.TypeReflector">
      <summary>Provides an implementation of <see cref="M:Microsoft.JScript.TypeReflector.GetMember(System.String,System.Reflection.BindingFlags)" /> that is faster than <see cref="M:System.Type.GetMember(System.String,System.Reflection.BindingFlags)" />.</summary>
    </member>
    <member name="M:Microsoft.JScript.TypeReflector.GetMember(System.String,System.Reflection.BindingFlags)">
      <summary>Searches for the specified member, using the specified binding constraints.</summary>
      <returns>An array of <see cref="T:System.Reflection.MemberInfo" /> objects that represents the public members that have the specified name, if found; otherwise, an empty array.</returns>
      <param name="name">The name of the member to search for.</param>
      <param name="bindingAttr">A bitwise combination of the enumeration values that specify the way in which the search for members and types is conducted by the reflection operation.</param>
    </member>
    <member name="M:Microsoft.JScript.TypeReflector.GetMembers(System.Reflection.BindingFlags)">
      <summary>Throws a <see cref="T:Microsoft.JScript.JScriptException" /> exception in all cases.</summary>
      <returns>Throws a <see cref="T:Microsoft.JScript.JScriptException" /> exception in all cases.</returns>
      <param name="bindingAttr">A bitwise combination of the enumeration values that specify the way in which the search for members and types is conducted by the reflection operation.</param>
    </member>
    <member name="T:Microsoft.JScript.UnaryOp">
      <summary>Represents the base class for classes that perform operations on single operands, such as <see cref="T:Microsoft.JScript.Typeof" /> and <see cref="T:Microsoft.JScript.PostOrPrefixOperator" />. This class belongs to the abstract syntax tree category.</summary>
    </member>
    <member name="F:Microsoft.JScript.UnaryOp.operand">
      <summary>Represents the operand.</summary>
    </member>
    <member name="T:Microsoft.JScript.URIErrorObject">
      <summary>Represents a Uniform Resource Identifier (URI) error. For example, a URI error can occur when you try to encode or decode a URI.</summary>
    </member>
    <member name="T:Microsoft.JScript.VBArrayConstructor">
      <summary>Represents a prototype-based object that is defined by a constructor function. This class belongs to the built-in object model category.</summary>
    </member>
    <member name="M:Microsoft.JScript.VBArrayConstructor.CreateInstance(System.Object[])">
      <summary>Creates an instance of the prototype-based object, passing in the specified arguments.</summary>
      <returns>An instance of the object.</returns>
      <param name="args">The arguments to pass to the constructor.</param>
    </member>
    <member name="T:Microsoft.JScript.VBArrayObject">
      <summary>Represents a VBArray object. This class belongs to the built-in object model category.</summary>
    </member>
    <member name="M:Microsoft.JScript.VBArrayObject.#ctor(Microsoft.JScript.VBArrayPrototype,System.Array)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.VBArrayObject" /> class.</summary>
      <param name="parent">The parent of the object.</param>
      <param name="array">The underlying array that the class represents.</param>
    </member>
    <member name="T:Microsoft.JScript.VBArrayPrototype">
      <summary>Provides static methods and properties for <see cref="T:Microsoft.JScript.VBArrayObject" /> objects. All methods of this class are called by passing in a reference to the object that is requesting access to the method. This class belongs to the built-in object model category.</summary>
    </member>
    <member name="P:Microsoft.JScript.VBArrayPrototype.constructor">
      <summary>Gets a reference to a prototype-based object that is using this prototype.</summary>
      <returns>A reference to a prototype-based object.</returns>
    </member>
    <member name="M:Microsoft.JScript.VBArrayPrototype.dimensions(System.Object)">
      <summary>Determines the number of dimensions in the specified array.</summary>
      <returns>The number of dimensions in <paramref name="thisob" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
    </member>
    <member name="M:Microsoft.JScript.VBArrayPrototype.getItem(System.Object,System.Object[])">
      <summary>Gets the value at the specified position in the specified array.</summary>
      <returns>The value at the specified position in <paramref name="thisob" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="args">An array that represents the indexes of each dimension that specifies the position of the element to get.</param>
    </member>
    <member name="M:Microsoft.JScript.VBArrayPrototype.lbound(System.Object,System.Object)">
      <summary>Gets the lower bound of the specified dimension in the specified array.</summary>
      <returns>The lower bound of <paramref name="dimension" /> in <paramref name="thisob" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="dimension">The dimension whose lower bound is determined.</param>
    </member>
    <member name="M:Microsoft.JScript.VBArrayPrototype.toArray(System.Object,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>Converts a <see cref="T:Microsoft.JScript.VBArrayObject" /> object to an <see cref="T:Microsoft.JScript.ArrayObject" /> object.</summary>
      <returns>
        <paramref name="thisob" /> expressed as an <see cref="T:Microsoft.JScript.ArrayObject" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="engine">A reference to the scripting engine.</param>
    </member>
    <member name="M:Microsoft.JScript.VBArrayPrototype.ubound(System.Object,System.Object)">
      <summary>Gets the upper bound of the specified dimension in the specified array.</summary>
      <returns>The upper bound of <paramref name="dimension" /> in <paramref name="thisob" />.</returns>
      <param name="thisob">The object that this method is acting upon.</param>
      <param name="dimension">The dimension whose upper bound is determined.</param>
    </member>
    <member name="T:Microsoft.JScript.VsaItem">
      <summary>Represents items added to the .NET script engine. This includes code items, reference items, and global items.</summary>
    </member>
    <member name="F:Microsoft.JScript.VsaItem.flag">
      <summary>Specifies the type of the item as <see cref="F:Microsoft.Vsa.VsaItemFlag.Class" />, <see cref="F:Microsoft.Vsa.VsaItemFlag.Module" />, or <see cref="F:Microsoft.Vsa.VsaItemFlag.None" />.</summary>
    </member>
    <member name="M:Microsoft.JScript.VsaItem.GetOption(System.String)">
      <summary>Gets the codebase option.</summary>
      <returns>The value of the codebase option.</returns>
      <param name="name">The string literal "codebase".</param>
    </member>
    <member name="F:Microsoft.JScript.VsaItem.isDirty">
      <summary>Specifies whether the current in-memory representation of the item differs from the persisted representation.</summary>
    </member>
    <member name="P:Microsoft.JScript.VsaItem.IsDirty">
      <summary>Gets or sets a value that indicates whether the current in-memory representation of the item differs from the persisted representation.</summary>
      <returns>true if the in-memory representation differs from the persisted representation; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.JScript.VsaItem.ItemType">
      <summary>Gets the type of the item.</summary>
      <returns>One of the enumeration values. The value indicates the type of the item.</returns>
    </member>
    <member name="F:Microsoft.JScript.VsaItem.name">
      <summary>Specifies the name of the item.</summary>
    </member>
    <member name="P:Microsoft.JScript.VsaItem.Name">
      <summary>Gets or sets the name of the item.</summary>
      <returns>The string literal name of the item.</returns>
    </member>
    <member name="M:Microsoft.JScript.VsaItem.SetOption(System.String,System.Object)">
      <summary>Sets the codebase option.</summary>
      <param name="name">The string literal "codebase".</param>
      <param name="value">The new value for the option.</param>
    </member>
    <member name="F:Microsoft.JScript.VsaItem.type">
      <summary>Specifies the type of the item as <see cref="F:Microsoft.Vsa.VsaItemType.Code" />, <see cref="F:Microsoft.Vsa.VsaItemType.Reference" />, or <see cref="F:Microsoft.Vsa.VsaItemType.AppGlobal" />.</summary>
    </member>
    <member name="T:Microsoft.JScript.VsaItems">
      <summary>Represents a collection of <see cref="T:Microsoft.Vsa.IVsaItem" /> objects that can be addressed either by name or by index.</summary>
    </member>
    <member name="M:Microsoft.JScript.VsaItems.#ctor(Microsoft.JScript.Vsa.VsaEngine)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.VsaItems" /> class.</summary>
      <param name="engine">A reference to the scripting engine.</param>
    </member>
    <member name="M:Microsoft.JScript.VsaItems.Close">
      <summary>Disconnects each item in the collection from the scripting engine.</summary>
    </member>
    <member name="P:Microsoft.JScript.VsaItems.Count">
      <summary>Gets the number of items in the collection.</summary>
      <returns>The number of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.JScript.VsaItems.CreateItem(System.String,Microsoft.JScript.Vsa.JSVsaItemType,Microsoft.JScript.Vsa.JSVsaItemFlag)">
      <summary>Creates a new item and adds it to the collection.</summary>
      <returns>The newly created item.</returns>
      <param name="name">The name of the new item.</param>
      <param name="itemType">One of the enumeration values. The value specifies the type of the new item as <see cref="F:Microsoft.JScript.Vsa.JSVsaItemType.Code" />, <see cref="F:Microsoft.JScript.Vsa.JSVsaItemType.Reference" />, or <see cref="F:Microsoft.JScript.Vsa.JSVsaItemType.AppGlobal" />.</param>
      <param name="itemFlag">One of the enumeration values. The value specifies the initial content of a <see cref="F:Microsoft.JScript.Vsa.JSVsaItemType.Code" /> item as <see cref="F:Microsoft.JScript.Vsa.JSVsaItemFlag.Class" />, <see cref="F:Microsoft.JScript.Vsa.JSVsaItemFlag.Module" />, or <see cref="F:Microsoft.JScript.Vsa.JSVsaItemFlag.None" />.</param>
    </member>
    <member name="M:Microsoft.JScript.VsaItems.GetEnumerator">
      <summary>Gets an enumerator that iterates over the collection.</summary>
      <returns>An enumerator that iterates over the collection.</returns>
    </member>
    <member name="P:Microsoft.JScript.VsaItems.Item(System.Int32)">
      <summary>Gets the item from the collection that is designated by the specified index value.</summary>
      <returns>The item at <paramref name="index" />.</returns>
      <param name="index">The index of the item to get.</param>
    </member>
    <member name="P:Microsoft.JScript.VsaItems.Item(System.String)">
      <summary>Gets the item from the collection that is designated by the specified name.</summary>
      <returns>The item that is named <paramref name="itemName" />.</returns>
      <param name="itemName">The name of the item to get.</param>
    </member>
    <member name="M:Microsoft.JScript.VsaItems.Remove(System.Int32)">
      <summary>Removes the item that is designated by the specified index value from the collection.</summary>
      <param name="itemIndex">The index of the item to remove.</param>
    </member>
    <member name="M:Microsoft.JScript.VsaItems.Remove(System.String)">
      <summary>Removes the item that is designated by the specified name from the collection.</summary>
      <param name="itemName">The name of the item to remove.</param>
    </member>
    <member name="T:Microsoft.JScript.VSAITEMTYPE2">
      <summary>Extends the <see cref="T:Microsoft.Vsa.VsaItemType" /> enumeration. Provides extra functionality that is needed by an IActiveScript host. </summary>
    </member>
    <member name="F:Microsoft.JScript.VSAITEMTYPE2.EXPRESSION">
      <summary>Specifies an expression. This applies to an <see cref="T:Microsoft.JScript.IVsaScriptCodeItem" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.VSAITEMTYPE2.HOSTOBJECT">
      <summary>Specifies a host object.</summary>
    </member>
    <member name="F:Microsoft.JScript.VSAITEMTYPE2.HOSTSCOPE">
      <summary>Specifies the scope.</summary>
    </member>
    <member name="F:Microsoft.JScript.VSAITEMTYPE2.HOSTSCOPEANDOBJECT">
      <summary>Specifies both the scope and the object.</summary>
    </member>
    <member name="F:Microsoft.JScript.VSAITEMTYPE2.None">
      <summary>Specifies none. This is the default value.</summary>
    </member>
    <member name="F:Microsoft.JScript.VSAITEMTYPE2.SCRIPTBLOCK">
      <summary>Specifies a script block. This applies to an <see cref="T:Microsoft.JScript.IVsaScriptCodeItem" />.</summary>
    </member>
    <member name="F:Microsoft.JScript.VSAITEMTYPE2.SCRIPTSCOPE">
      <summary>Specifies the script scope.</summary>
    </member>
    <member name="F:Microsoft.JScript.VSAITEMTYPE2.STATEMENT">
      <summary>Specifies a single statement. This applies to an <see cref="T:Microsoft.JScript.IVsaScriptCodeItem" />.</summary>
    </member>
    <member name="T:Microsoft.JScript.With">
      <summary>Represents the with statement. This class belongs to the abstract syntax tree category.</summary>
    </member>
    <member name="M:Microsoft.JScript.With.JScriptWith(System.Object,Microsoft.JScript.Vsa.VsaEngine)">
      <summary>Establishes the default object for a with statement block by adding it to the scope stack.</summary>
      <returns>
        <paramref name="withOb" /> converted to an object.</returns>
      <param name="withOb">The default object.</param>
      <param name="engine">A reference to the scripting engine.</param>
    </member>
    <member name="T:Microsoft.JScript.Vsa.BaseVsaEngine">
      <summary>Implements <see cref="T:Microsoft.JScript.Vsa.IJSVsaEngine" /> interface.</summary>
    </member>
    <member name="P:Microsoft.JScript.Vsa.BaseVsaEngine.AppDomain">
      <summary>Gets or sets the application domain.</summary>
      <returns>The application domain.</returns>
    </member>
    <member name="P:Microsoft.JScript.Vsa.BaseVsaEngine.ApplicationBase">
      <summary>Gets or sets the application base.</summary>
      <returns>The application base.</returns>
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.applicationPath">
      <summary>Gets or sets the application path.</summary>
    </member>
    <member name="P:Microsoft.JScript.Vsa.BaseVsaEngine.Assembly">
      <summary>Gets a reference to the running assembly generated by Run method.</summary>
      <returns>Reference to the currently running assembly.</returns>
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.assemblyVersion">
      <summary>Gets or sets the assembly version.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.Close">
      <summary>Closes the engine.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.Compile">
      <summary>Causes the engine to compile the existing source state.</summary>
      <returns>true on successful compilation; otherwise, false.</returns>
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.compiledRootNamespace">
      <summary>Gets or sets the compiled root namespace.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.DoClose">
      <summary>Closes the engine.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.DoCompile">
      <summary>Causes the script engine to compile the existing source state.</summary>
      <returns>true on successful compilation; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.DoLoadSourceState(Microsoft.JScript.Vsa.IJSVsaPersistSite)">
      <summary>Directs the engine to load source items.</summary>
      <param name="site">The site from which the specified source items are loaded.</param>
    </member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.DoSaveCompiledState(System.Byte[]@,System.Byte[]@)">
      <summary>Saves the compiled state of the script engine; optionally, it also saves debugging information.</summary>
      <param name="pe"> The compiled state of the engine.</param>
      <param name="debugInfo"> Specifies debugging information contained in the .PDB file.</param>
    </member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.DoSaveSourceState(Microsoft.JScript.Vsa.IJSVsaPersistSite)">
      <summary>Directs the script engine to persist its source state to the specified object.</summary>
      <param name="site"> The site to which source state is saved.</param>
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.engineMoniker">
      <summary>Gets or sets the engine moniker.</summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.engineName">
      <summary>Gets or sets the engine name.</summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.engineSite">
      <summary>Gets or sets the engine site</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.Error(Microsoft.JScript.Vsa.JSVsaError)">
      <summary>Returns an error.</summary>
      <returns>An exception with the specified error number.</returns>
      <param name="vsaErrorNumber">The error number to be returned.</param>
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.errorLocale">
      <summary>Gets or sets the error locale.</summary>
    </member>
    <member name="P:Microsoft.JScript.Vsa.BaseVsaEngine.Evidence">
      <summary>Provides evidence for the purpose of validating the current object's identity.</summary>
      <returns>Returns a reference to an Evidence object.</returns>
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.executionEvidence">
      <summary>Gets or sets the execution evidence.</summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.failedCompilation">
      <summary>Gets or sets a value that indicates whether the compilation failed.</summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.genDebugInfo">
      <summary>Gets or sets a value that indicates whether debug information is generated.</summary>
    </member>
    <member name="P:Microsoft.JScript.Vsa.BaseVsaEngine.GenerateDebugInfo">
      <summary>Sets or gets a Boolean value that signifies whether the script engine produces debug information when the Compile method is called.</summary>
      <returns>true to produce debug information; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.GetCustomOption(System.String)">
      <summary>Gets implementation-specific options for the engine.</summary>
      <returns>The value of the option.</returns>
      <param name="name">The name of the option to get.</param>
    </member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.GetOption(System.String)">
      <summary>Gets implementation-specific options for the engine.</summary>
      <returns>The value of the option.</returns>
      <param name="name">The name of the option to get.</param>
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.haveCompiledState">
      <summary>Gets or sets a value that indicates whether there is a compiled state.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.InitNew">
      <summary>Provides a notification that the initialization phase is complete.</summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.isClosed">
      <summary>Gets or sets a value that indicates whether the engine is closed.</summary>
    </member>
    <member name="P:Microsoft.JScript.Vsa.BaseVsaEngine.IsCompiled">
      <summary>Gets or sets a value that indicates whether the source is compiled.</summary>
      <returns>true if the source is compiled; otherwise, false.</returns>
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.isDebugInfoSupported">
      <summary>Gets or sets a value that indicates whether debug information is supported.</summary>
    </member>
    <member name="P:Microsoft.JScript.Vsa.BaseVsaEngine.IsDirty">
      <summary>Gets or sets a value that indicates whether the current in-memory representation of the item differs from the persisted representation.</summary>
      <returns>true if the in-memory representation differs from the persisted representation; otherwise, false.</returns>
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.isEngineCompiled">
      <summary>Gets or sets a value that indicates whether the engine is compiled.</summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.isEngineDirty">
      <summary>Gets or sets a value that indicates whether the current in-memory representation of the item differs from the persisted representation.</summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.isEngineInitialized">
      <summary>Gets or sets a value that indicates whether the engine is initialized.</summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.isEngineRunning">
      <summary>Gets or sets a value that indicates whether the engine is running.</summary>
    </member>
    <member name="P:Microsoft.JScript.Vsa.BaseVsaEngine.IsRunning">
      <summary>Gets a Boolean value that reports whether the engine is currently in run mode.</summary>
      <returns>true if the engine is in run mode; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.IsValidIdentifier(System.String)">
      <summary>Checks whether the supplied identifier is valid for the engine.</summary>
      <returns>true if the identifier is valid; otherwise, it returns false.</returns>
      <param name="ident">A string value provided as identifier.</param>
    </member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.IsValidNamespaceName(System.String)">
      <summary>Checks whether the supplied namespace is valid for the engine.</summary>
      <returns>true if the namespace is valid; otherwise, it returns false.</returns>
      <param name="name">A string value provided as identifier.</param>
    </member>
    <member name="P:Microsoft.JScript.Vsa.BaseVsaEngine.Items">
      <summary>Gets the collection of IJSVsaItem objects, which represent all items added to the engine.</summary>
      <returns>The collection of items.</returns>
    </member>
    <member name="P:Microsoft.JScript.Vsa.BaseVsaEngine.Language">
      <summary>Gets the name of the programming language supported by the engine.</summary>
      <returns>The name of the programming language.</returns>
    </member>
    <member name="P:Microsoft.JScript.Vsa.BaseVsaEngine.LCID">
      <summary>Gets or sets the geographical locale and language in which to report exception messages.</summary>
      <returns>An integer value representing the locale in which exception messages are to be reported.</returns>
    </member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.LoadCompiledState">
      <summary>Loads the compiled state.</summary>
      <returns>The compiled state.</returns>
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.loadedAssembly">
      <summary>Gets or sets the loaded assembly.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.LoadSourceState(Microsoft.JScript.Vsa.IJSVsaPersistSite)">
      <summary>Directs the engine to load source items from their point of persistence, as specified by the host-provided object.</summary>
      <param name="site">The site from which the specified source items is loaded.</param>
    </member>
    <member name="P:Microsoft.JScript.Vsa.BaseVsaEngine.Name">
      <summary>Sets or gets the display name of the engine.</summary>
      <returns>The name of the engine.</returns>
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.nameTable">
      <summary>Gets or sets the name table.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.Preconditions(Microsoft.JScript.Vsa.BaseVsaEngine.Pre)">
      <summary>Sets the precondition flags.</summary>
      <param name="flags">The flags to set.</param>
    </member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.Reset">
      <summary>Removes the engine from the running state and disconnects automatically bound event handlers.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.ResetCompiledState">
      <summary>Resets the compiled state.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.RevokeCache">
      <summary>Invalidates the cached assembly for the engine, as specified by its root moniker.</summary>
    </member>
    <member name="P:Microsoft.JScript.Vsa.BaseVsaEngine.RootMoniker">
      <summary>Sets or gets a script engine's root moniker.</summary>
      <returns>The root moniker of the engine.</returns>
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.rootNamespace">
      <summary>Gets or sets the root namespace.</summary>
    </member>
    <member name="P:Microsoft.JScript.Vsa.BaseVsaEngine.RootNamespace">
      <summary>Sets or gets the root namespace used by the engine.</summary>
      <returns>The namespace of the engine.</returns>
    </member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.Run">
      <summary>Initiates execution of compiled code in the engine and binds all event handlers</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.SaveCompiledState(System.Byte[]@,System.Byte[]@)">
      <summary>Saves the compiled state of the engine; optionally, it also saves debugging information.</summary>
      <param name="pe">The compiled state of the script engine.</param>
      <param name="debugInfo">Specifies debugging information contained in the .PDB file corresponding to the PE (portable executable).</param>
    </member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.SaveSourceState(Microsoft.JScript.Vsa.IJSVsaPersistSite)">
      <summary>Directs the engine to persist its source state.</summary>
      <param name="site">The site to which source state is saved. </param>
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.scriptLanguage">
      <summary>Gets or sets the script language.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.SetCustomOption(System.String,System.Object)">
      <summary>Sets implementation-specific options for the engine.</summary>
      <param name="name">The name of the option to set.</param>
      <param name="value">The value for the option being set.</param>
    </member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.SetOption(System.String,System.Object)">
      <summary>Sets implementation-specific options for the engine.</summary>
      <param name="name">The name of the option to set.</param>
      <param name="value">The value for the option being set.</param>
    </member>
    <member name="P:Microsoft.JScript.Vsa.BaseVsaEngine.Site">
      <summary>Sets or gets the host-implemented IJSVsaSite object that is used by the engine to communicate with the host.</summary>
      <returns>The host-implemented object.</returns>
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.startupClass">
      <summary>Gets or sets the startup class.</summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.startupInstance">
      <summary>Gets or sets the startup instance.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaEngine.ValidateRootMoniker(System.String)">
      <summary>Validates the root moniker.</summary>
      <param name="rootMoniker">The root moniker to validate.</param>
    </member>
    <member name="P:Microsoft.JScript.Vsa.BaseVsaEngine.Version">
      <summary>Gets the current version of the language compiler supported by the engine, in the form Major.Minor.Revision.Build.</summary>
      <returns>The current version.</returns>
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.vsaItems">
      <summary>Gets or sets the collection of IVsaItem objects.</summary>
    </member>
    <member name="T:Microsoft.JScript.Vsa.BaseVsaEngine.Pre">
      <summary>Provides enumeration for the <see cref="T:Microsoft.JScript.Vsa.BaseVsaEngine" /> class.</summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.Pre.EngineCompiled">
      <summary>The engine is compiled.</summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.Pre.EngineInitialised">
      <summary>The engine is initialized.</summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.Pre.EngineNotClosed">
      <summary>The engine is not closed.</summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.Pre.EngineNotInitialised">
      <summary>The engine is not initialized.</summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.Pre.EngineNotRunning">
      <summary>The engine is not running.</summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.Pre.EngineRunning">
      <summary>The engine is running.</summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.Pre.None">
      <summary>No engine is set.</summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.Pre.RootMonikerNotSet">
      <summary>The root moniker is not set.</summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.Pre.RootMonikerSet">
      <summary>The root moniker is set.</summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.Pre.RootNamespaceSet">
      <summary>The root namespace is set.</summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.Pre.SiteNotSet">
      <summary>The site is not set.</summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.Pre.SiteSet">
      <summary>The site is set.</summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaEngine.Pre.SupportForDebug">
      <summary>The debug features are switched on.</summary>
    </member>
    <member name="T:Microsoft.JScript.Vsa.BaseVsaSite">
      <summary>Enables communication between the host and the script engine.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaSite.#ctor">
      <summary>Creates a new site.</summary>
    </member>
    <member name="P:Microsoft.JScript.Vsa.BaseVsaSite.Assembly">
      <summary>An assembly for this site.</summary>
      <returns>An assembly for this site.</returns>
    </member>
    <member name="P:Microsoft.JScript.Vsa.BaseVsaSite.DebugInfo">
      <summary>Debug information for this site.</summary>
      <returns>Debug information for this site.</returns>
    </member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaSite.GetCompiledState(System.Byte[]@,System.Byte[]@)">
      <summary>Sets an assembly and debug info for this site.</summary>
      <param name="pe">An assembly to be set.</param>
      <param name="debugInfo">Debug info object to be set.</param>
    </member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaSite.GetEventSourceInstance(System.String,System.String)">
      <summary>Gets a reference to an event source previously added to a script engine using the <see cref="M:Microsoft.Vsa.IVsaCodeItem.AddEventSource(System.String,System.String)" /> method.</summary>
      <returns>Returns the event source to the engine.</returns>
      <param name="itemName">The specified item name.</param>
      <param name="eventSourceName">The specified event source name.</param>
    </member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaSite.GetGlobalInstance(System.String)">
      <summary>Gets a reference to a global item, such as the host-provided application object.</summary>
      <returns>Returns a reference to the global object.</returns>
      <param name="name">Gets a reference to a global item, such as the host-provided application object.</param>
    </member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaSite.Notify(System.String,System.Object)">
      <summary>Notifies the host about events generated by the script engine.</summary>
      <param name="notify">Notifies the host about events generated by the script engine.</param>
      <param name="optional">Notifies the host about events generated by the engine.</param>
    </member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaSite.OnCompilerError(Microsoft.JScript.Vsa.IJSVsaError)">
      <summary>Notifies the host about how to respond to compiler errors encountered by the script engine.</summary>
      <returns>Returns TRUE if the compiler is directed to continue reporting further errors to the <see cref="T:Microsoft.Vsa.IVsaSite" /> object. Returns FALSE if the compiler is directed to stop reporting further errors to the IVsaSite object.</returns>
      <param name="error">The <see cref="T:Microsoft.Vsa.IVsaError" /> object representing the offending error.</param>
    </member>
    <member name="T:Microsoft.JScript.Vsa.BaseVsaStartup">
      <summary>Used to start and reset base VSA engine.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaStartup.#ctor">
      <summary>Creates a new object of this class.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaStartup.SetSite(Microsoft.JScript.Vsa.IJSVsaSite)">
      <summary>Sets a VSA site for this engine.</summary>
      <param name="site">A VSA site for this engine.</param>
    </member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaStartup.Shutdown">
      <summary>Used to perform operations at engine shut down.</summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.BaseVsaStartup.site">
      <summary>The VSA site for this engine.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.BaseVsaStartup.Startup">
      <summary>Used to perform operations at engine startup.</summary>
    </member>
    <member name="T:Microsoft.JScript.Vsa.IJSVsaCodeItem">
      <summary>Represents a code item to be compiled by the script engine.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaCodeItem.AddEventSource(System.String,System.String)">
      <summary>Adds an event source to the code item. The code item uses the event source to hook up an event to the named event source by calling the IVsaSite.GetEventSourceInstance method, which is implemented by the host.</summary>
      <param name="eventSourceName">A programmatic name of the event source.</param>
      <param name="eventSourceType">The type name of the event source.</param>
    </member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaCodeItem.AppendSourceText(System.String)">
      <summary>Appends specified text to the end of the code item.</summary>
      <param name="text">The text to be appended to the code item.</param>
    </member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaCodeItem.CodeDOM">
      <summary>Gets the code document object model (CodeDOM) represented in the code item.</summary>
      <returns>Returns the CodeDOM for the code item.</returns>
    </member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaCodeItem.RemoveEventSource(System.String)">
      <summary>Removes the specified event source from the code item.</summary>
      <param name="eventSourceName">The programmatic name of the event source to be removed.</param>
    </member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaCodeItem.SourceText">
      <summary>Sets or gets the text of a specified code item, including auto-generated code, if any.</summary>
      <returns>Returns the source text of the code item.</returns>
    </member>
    <member name="T:Microsoft.JScript.Vsa.IJSVsaEngine">
      <summary>Defines the methods and properties that a script engine must support and provides programmatic access to the script engine.</summary>
    </member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaEngine.Assembly">
      <summary>Gets a reference to the running assembly generated by Run method.</summary>
      <returns>Reference to the currently running assembly.</returns>
    </member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaEngine.Close">
      <summary>Closes the engine.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaEngine.Compile">
      <summary>Causes the engine to compile the existing source state.</summary>
      <returns>true on successful compilation; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaEngine.Evidence">
      <summary>Provides evidence for the purpose of validating the current object's identity.</summary>
      <returns>Returns a reference to an Evidence object.</returns>
    </member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaEngine.GenerateDebugInfo">
      <summary>Sets or gets a Boolean value that signifies whether the script engine produces debug information when the Compile method is called.</summary>
      <returns>true to produce debug information; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaEngine.GetOption(System.String)">
      <summary>Gets implementation-specific options for the engine.</summary>
      <returns>The value of the option.</returns>
      <param name="name">The name of the option to get.</param>
    </member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaEngine.InitNew">
      <summary>Provides a notification that the initialization phase is complete.</summary>
    </member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaEngine.IsCompiled">
      <summary>Gets or sets a value that indicates whether the source is compiled.</summary>
      <returns>true if the source is compiled; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaEngine.IsDirty">
      <summary>Gets or sets a value that indicates whether the current in-memory representation of the item differs from the persisted representation.</summary>
      <returns>true if the in-memory representation differs from the persisted representation; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaEngine.IsRunning">
      <summary>Gets a Boolean value that reports whether the script engine is currently in run mode.</summary>
      <returns>true if the engine is in run mode; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaEngine.IsValidIdentifier(System.String)">
      <summary>Checks whether the supplied identifier is valid for the engine.</summary>
      <returns>true if the identifier is valid; otherwise, it returns false.</returns>
      <param name="identifier">A string value provided as identifier.</param>
    </member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaEngine.Items">
      <summary>Gets the collection of IJSVsaItem objects, which represent all items added to the script engine.</summary>
      <returns>The collection of items.</returns>
    </member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaEngine.Language">
      <summary>Gets the name of the programming language supported by the script engine.</summary>
      <returns>The name of the programming language.</returns>
    </member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaEngine.LCID">
      <summary>Gets or sets the geographical locale and language in which to report exception messages.</summary>
      <returns>An integer value representing the locale in which exception messages are to be reported.</returns>
    </member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaEngine.LoadSourceState(Microsoft.JScript.Vsa.IJSVsaPersistSite)">
      <summary>Directs the engine to load source items from their point of persistence, as specified by the host-provided object.</summary>
      <param name="site">The site from which the specified source items is loaded.</param>
    </member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaEngine.Name">
      <summary>Sets or gets the display name of the script engine.</summary>
      <returns>The name of the engine.</returns>
    </member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaEngine.Reset">
      <summary>Removes the script engine from the running state and disconnects automatically bound event handlers.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaEngine.RevokeCache">
      <summary>Invalidates the cached assembly for the engine, as specified by its root moniker.</summary>
    </member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaEngine.RootMoniker">
      <summary>Sets or gets a script engine's root moniker.</summary>
      <returns>The root moniker of the engine.</returns>
    </member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaEngine.RootNamespace">
      <summary>Sets or gets the root namespace used by the script engine.</summary>
      <returns>The namespace of the engine.</returns>
    </member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaEngine.Run">
      <summary>Initiates execution of compiled code in the script engine and binds all event handlers.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaEngine.SaveCompiledState(System.Byte[]@,System.Byte[]@)">
      <summary>Saves the compiled state of the script engine; optionally, it also saves debugging information.</summary>
      <param name="pe">The compiled state of the script engine.</param>
      <param name="pdb">Specifies debugging information contained in the .PDB file corresponding to the PE (portable executable).</param>
    </member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaEngine.SaveSourceState(Microsoft.JScript.Vsa.IJSVsaPersistSite)">
      <summary>Directs the script engine to persist its source state.</summary>
      <param name="site">The site to which source state is saved. </param>
    </member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaEngine.SetOption(System.String,System.Object)">
      <summary>Sets implementation-specific options for a script engine.</summary>
      <param name="name">The name of the option to set.</param>
      <param name="value">The value for the option being set.</param>
    </member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaEngine.Site">
      <summary>Sets or gets the host-implemented IJSVsaSite object that is used by the script engine to communicate with the host.</summary>
      <returns>The host-implemented object.</returns>
    </member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaEngine.Version">
      <summary>Gets the current version of the language compiler supported by the script engine, in the form Major.Minor.Revision.Build.</summary>
      <returns>The current version.</returns>
    </member>
    <member name="T:Microsoft.JScript.Vsa.IJSVsaError">
      <summary>Provides access to compilation errors encountered during execution.</summary>
    </member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaError.Description">
      <summary>Gets a brief description of the error, in some instances returning a reference to the token in the source code that is causing the error.</summary>
      <returns>Returns a string literal description of the error.</returns>
    </member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaError.EndColumn">
      <summary>Gets the ending column number for the source text that caused the error, if available.</summary>
      <returns>Returns the ending column number for the source text that caused the error, if available.</returns>
    </member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaError.Line">
      <summary>Gets the line number on which an error occurs.</summary>
      <returns>Returns the line number on which the error has occurred.</returns>
    </member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaError.LineText">
      <summary>Gets the text of the source code from the line that caused the error.</summary>
      <returns>Returns the string literal source code from the line that caused the error.</returns>
    </member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaError.Number">
      <summary>Gets a number that uniquely identifies the error.</summary>
      <returns>Returns the number that uniquely identifies the error.</returns>
    </member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaError.Severity">
      <summary>Sets the severity of the error.</summary>
      <returns>Returns an integer (0-4) that represents the error severity.</returns>
    </member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaError.SourceItem">
      <summary>Gets a reference to the IVsaItem object that generated the error.</summary>
      <returns>Returns a reference to the object that generated the error.</returns>
    </member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaError.SourceMoniker">
      <summary>Gets the fully qualified name of the source item that contained the error, in a format recognizable by the script engine.</summary>
      <returns>Returns the fully qualified name of the source item that contained the error.</returns>
    </member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaError.StartColumn">
      <summary>Gets the starting column number for the source text that caused the error, if available.</summary>
      <returns>Returns the starting column number for the source text that caused the error, if available.</returns>
    </member>
    <member name="T:Microsoft.JScript.Vsa.IJSVsaGlobalItem">
      <summary>Describes global objects added to the script engine.</summary>
    </member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaGlobalItem.ExposeMembers">
      <summary>Sets a value indicating whether the members of the global object should be made available to the script engine. [Not presently supported.]</summary>
      <returns>Returns TRUE if public members of the global object are available to the script engine without qualification, as if they are part of the global namespace. Returns FALSE if a member of the global object must be qualified with the object's name.</returns>
    </member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaGlobalItem.TypeString">
      <summary>Gets or sets the type of the global item.</summary>
      <returns>Returns the item type of the global item.</returns>
    </member>
    <member name="T:Microsoft.JScript.Vsa.IJSVsaItem">
      <summary>Defines an interface for all items added to the .NET script engine, including code items, reference items, and global items. It defines generic properties and methods that apply to all item types recognized by the engine.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaItem.GetOption(System.String)">
      <summary>Gets implementation-specific options for a script engine.</summary>
      <returns>Returns the value of the specified option.</returns>
      <param name="name">The name of the option to retrieve.</param>
    </member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaItem.IsDirty">
      <summary>Returns a value indicating whether the current in-memory representation of the item differs from the persisted representation.</summary>
      <returns>Returns true if the item is dirty, and thus requires saving; returns false if the item is not dirty.</returns>
    </member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaItem.ItemType">
      <summary>Gets the specified object's type, as determined by the <see cref="M:Microsoft.JScript.Vsa.IJSVsaItems.CreateItem(System.String,Microsoft.JScript.Vsa.JSVsaItemType,Microsoft.JScript.Vsa.JSVsaItemFlag)" /> method.</summary>
      <returns>A type as enumerated by the <see cref="T:Microsoft.JScript.Vsa.JSVsaItemType" /> enumeration.</returns>
    </member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaItem.Name">
      <summary>Sets or gets the name of the item.</summary>
      <returns>Returns the string literal name of the item.</returns>
    </member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaItem.SetOption(System.String,System.Object)">
      <summary>Sets implementation-specific options for a script engine.</summary>
      <param name="name">The name of the option to set.</param>
      <param name="value">A new value for the option.</param>
    </member>
    <member name="T:Microsoft.JScript.Vsa.IJSVsaItems">
      <summary>Defines an interface for a collection of <see cref="T:Microsoft.JScript.Vsa.IJSVsaItem" /> objects, which can be addressed either by name or by index.</summary>
    </member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaItems.Count">
      <summary>Gets the number of items in the specified collection.</summary>
      <returns>Returns the integer value for the number of items in the collection.</returns>
    </member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaItems.CreateItem(System.String,Microsoft.JScript.Vsa.JSVsaItemType,Microsoft.JScript.Vsa.JSVsaItemFlag)">
      <summary>Creates a new instance of one of the <see cref="T:Microsoft.JScript.Vsa.IJSVsaItem" /> types, as defined in the <see cref="T:Microsoft.JScript.Vsa.JSVsaItemType" /> enumeration.</summary>
      <returns>Returns a reference to the <see cref="T:Microsoft.JScript.Vsa.IJSVsaItem" /> object created.</returns>
      <param name="name">The name to associate with the new item. In cases where the item is a reference item type, the name parameter must be exactly the same as the name of the referenced assembly, as set with the <see cref="P:Microsoft.JScript.Vsa.IJSVsaReferenceItem.AssemblyName" /> property. In JScript, however, if you do not specify an AssemblyName, JScript will use the ItemName as the name of the assembly.</param>
      <param name="itemType">The type of item created, as defined in the <see cref="T:Microsoft.JScript.Vsa.JSVsaItemType" /> enumeration.</param>
      <param name="itemFlag">The optional flag to specify the initial content of a Code item. </param>
    </member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaItems.Item(System.Int32)">
      <summary>Gets an item from the collection by its index value.</summary>
      <returns>Returns the item at the specified index.</returns>
      <param name="index">A 0-based index of the retrievable items.</param>
    </member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaItems.Item(System.String)">
      <summary>Gets an item from the collection by its name.</summary>
      <returns>Returns the item specified by name.</returns>
      <param name="name">The name of the item to retrieve from the collection. </param>
    </member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaItems.Remove(System.Int32)">
      <summary>Removes an item from the collection, as specified by its index value.</summary>
      <param name="index">The index value of the item to be removed. </param>
    </member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaItems.Remove(System.String)">
      <summary>Removes an item from the collection, as specified by its name.</summary>
      <param name="name">The name of the item to be removed from the collection.</param>
    </member>
    <member name="T:Microsoft.JScript.Vsa.IJSVsaPersistSite">
      <summary>Manages project persistence and stores and retrieves code and other items using save and load operations implemented by the host.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaPersistSite.LoadElement(System.String)">
      <summary>Gets the source string previously saved using the <see cref="M:Microsoft.JScript.Vsa.IJSVsaPersistSite.SaveElement(System.String,System.String)" /> method.</summary>
      <returns>Returns the contents of the source-code element associated with the name parameter.</returns>
      <param name="name">The name of the code item to be loaded. This can be a null reference when loading the Project file.</param>
    </member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaPersistSite.SaveElement(System.String,System.String)">
      <summary>Saves an arbitrary source string with a given name parameter, which can then be used in a call to the <see cref="M:Microsoft.JScript.Vsa.IJSVsaPersistSite.LoadElement(System.String)" /> method to reload the string.</summary>
      <param name="name">A name to associate with the specified source item. This can be a null reference when saving the Project file.</param>
      <param name="source">The source string for the item.</param>
    </member>
    <member name="T:Microsoft.JScript.Vsa.IJSVsaReferenceItem">
      <summary>Describes a reference added to the script engine.</summary>
    </member>
    <member name="P:Microsoft.JScript.Vsa.IJSVsaReferenceItem.AssemblyName">
      <summary>Gets or sets the name of the referenced assembly.</summary>
      <returns>Returns the string literal name of the referenced assembly.</returns>
    </member>
    <member name="T:Microsoft.JScript.Vsa.IJSVsaSite">
      <summary>Enables communication between the host and the script engine. This interface is implemented by the host.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaSite.GetCompiledState(System.Byte[]@,System.Byte[]@)">
      <summary>Gets the compiled state of a script engine, and, optionally, associated debugging information.</summary>
      <param name="pe">The compiled state of the engine; an assembly in byte form.</param>
      <param name="debugInfo">The debugging information for the assembly, or a null reference if such information does not exist or is not available. </param>
    </member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaSite.GetEventSourceInstance(System.String,System.String)">
      <summary>Gets a reference to an event source previously added to a script engine using the <see cref="M:Microsoft.JScript.Vsa.IJSVsaCodeItem.AddEventSource(System.String,System.String)" /> method.</summary>
      <returns>Returns the event source to the engine.</returns>
      <param name="itemName">The specified item name.</param>
      <param name="eventSourceName">The specified event source name.</param>
    </member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaSite.GetGlobalInstance(System.String)">
      <summary>Gets a reference to a global item, such as the host-provided application object.</summary>
      <returns>Returns a reference to the global object.</returns>
      <param name="name">Gets a reference to a global item, such as the host-provided application object.</param>
    </member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaSite.Notify(System.String,System.Object)">
      <summary>Notifies the host about events generated by the .NET script engine.</summary>
      <param name="notify">Notifies the host about events generated by the .NET script engine.</param>
      <param name="info">Notifies the host about events generated by the .NET script engine.</param>
    </member>
    <member name="M:Microsoft.JScript.Vsa.IJSVsaSite.OnCompilerError(Microsoft.JScript.Vsa.IJSVsaError)">
      <summary>Notifies the host about how to respond to compiler errors encountered by the script engine.</summary>
      <returns>Returns TRUE if the compiler is directed to continue reporting further errors to the <see cref="T:Microsoft.JScript.Vsa.IJSVsaSite" /> object. Returns FALSE if the compiler is directed to stop reporting further errors to the IVsaSite object.</returns>
      <param name="error">The <see cref="T:Microsoft.JScript.Vsa.IJSVsaError" /> object representing the offending error. </param>
    </member>
    <member name="T:Microsoft.JScript.Vsa.JSVsaError">
      <summary>Defines the set of exceptions that can be thrown by a .NET script engine.</summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.AppDomainCannotBeSet">
      <summary>Value: 0x80133000 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.AppDomainInvalid">
      <summary>Value: 0x80133001 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.ApplicationBaseCannotBeSet">
      <summary>Value: 0x80133002 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.ApplicationBaseInvalid">
      <summary>Value: 0x80133003 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.AssemblyExpected">
      <summary>Value: 0x80133004 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.AssemblyNameInvalid">
      <summary>Value: 0x80133005 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.BadAssembly">
      <summary>Value: 0x80133006 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.BrowserNotExist">
      <summary>Value: 0x8013303D </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.CachedAssemblyInvalid">
      <summary>Value: 0x80133007 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.CallbackUnexpected">
      <summary>Value: 0x80133008 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.CannotAttachToWebServer">
      <summary>Value: 0x8013304C </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.CodeDOMNotAvailable">
      <summary>Value: 0x80133009 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.CompiledStateNotFound">
      <summary>Value: 0x8013300A </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.DebuggeeNotStarted">
      <summary>Value: 0x8013303E </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.DebugInfoNotSupported">
      <summary>Value: 0x8013300B </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.ElementNameInvalid">
      <summary>Value: 0x8013300C </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.ElementNotFound">
      <summary>Value: 0x8013300D </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.EngineBusy">
      <summary>Value: 0x8013300E </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.EngineCannotClose">
      <summary>Value: 0x8013300F </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.EngineCannotReset">
      <summary>Value: 0x80133010 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.EngineClosed">
      <summary>Value: 0x80133011 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.EngineEmpty">
      <summary>Value: 0x80133012 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.EngineInitialized">
      <summary>Value: 0x80133013 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.EngineNameInUse">
      <summary>Value: 0x80133014 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.EngineNameInvalid">
      <summary>Value: 0x8013303F </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.EngineNameNotSet">
      <summary>Value: 0x8013303F </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.EngineNotCompiled">
      <summary>Value: 0x80133015 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.EngineNotExist">
      <summary>Value: 0x80133040 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.EngineNotInitialized">
      <summary>Value: 0x80133016 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.EngineNotRunning">
      <summary>Value: 0x80133017 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.EngineRunning">
      <summary>Value: 0x80133018 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.EventSourceInvalid">
      <summary>Value: 0x80133019 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.EventSourceNameInUse">
      <summary>Value: 0x8013301A </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.EventSourceNameInvalid">
      <summary>Value: 0x8013301B </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.EventSourceNotFound">
      <summary>Value: 0x8013301C </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.EventSourceTypeInvalid">
      <summary>Value: 0x8013301D </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.FileFormatUnsupported">
      <summary>Value: 0x80133041 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.FileTypeUnknown">
      <summary>Value: 0x80133042 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.GetCompiledStateFailed">
      <summary>Value: 0x8013301E </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.GlobalInstanceInvalid">
      <summary>Value: 0x8013301F </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.GlobalInstanceTypeInvalid">
      <summary>Value: 0x80133020 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.InternalCompilerError">
      <summary>Value: 0x80133021 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.ItemCannotBeRemoved">
      <summary>Value: 0x80133022 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.ItemCannotBeRenamed">
      <summary>Value: 0x80133043 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.ItemFlagNotSupported">
      <summary>Value: 0x80133023 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.ItemNameInUse">
      <summary>Value: 0x80133024 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.ItemNameInvalid">
      <summary>Value: 0x80133025 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.ItemNotFound">
      <summary>Value: 0x80133026 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.ItemTypeNotSupported">
      <summary>Value: 0x80133027 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.LCIDNotSupported">
      <summary>Value: 0x80133028 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.LoadElementFailed">
      <summary>Value: 0x80133029 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.MissingPdb">
      <summary>Value: 0x8013304A </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.MissingSource">
      <summary>Value: 0x80133044 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.NameTooLong">
      <summary>Value: 0x80133046 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.NotClientSideAndNoUrl">
      <summary>Value: 0x8013304B </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.NotificationInvalid">
      <summary>Value: 0x8013302A </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.NotInitCompleted">
      <summary>Value: 0x80133045 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.OptionInvalid">
      <summary>Value: 0x8013302B </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.OptionNotSupported">
      <summary>Value: 0x8013302C </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.ProcNameInUse">
      <summary>Value: 0x80133047 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.ProcNameInvalid">
      <summary>Value: 0x80133048 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.RevokeFailed">
      <summary>Value: 0x8013302D </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.RootMonikerAlreadySet">
      <summary>Value: 0x8013302E </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.RootMonikerInUse">
      <summary>Value: 0x8013302F </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.RootMonikerInvalid">
      <summary>Value: 0x80133030 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.RootMonikerNotSet">
      <summary>Value: 0x80133031 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.RootMonikerProtocolInvalid">
      <summary>Value: 0x80133032 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.RootNamespaceInvalid">
      <summary>Value: 0x80133033 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.RootNamespaceNotSet">
      <summary>Value: 0x80133034 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.SaveCompiledStateFailed">
      <summary>Value: 0x80133035 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.SaveElementFailed">
      <summary>Value: 0x80133036 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.SiteAlreadySet">
      <summary>Value: 0x80133037 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.SiteInvalid">
      <summary>Value: 0x80133038 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.SiteNotSet">
      <summary>Value: 0x80133039 </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.SourceItemNotAvailable">
      <summary>Value: 0x8013303A </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.SourceMonikerNotAvailable">
      <summary>Value: 0x8013303B </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.UnknownError">
      <summary>Value: 0x801330FF </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.URLInvalid">
      <summary>Value: 0x8013303C </summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaError.VsaServerDown">
      <summary>Value: 0x80133049 </summary>
    </member>
    <member name="T:Microsoft.JScript.Vsa.JSVsaException">
      <summary>This type supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.JSVsaException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.Vsa.JSVsaException" /> class with a system-supplied message that describes the error. This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.JSVsaException.#ctor(Microsoft.JScript.Vsa.JSVsaError)">
      <summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <param name="error">A <see cref="T:Microsoft.JScript.Vsa.JSVsaError" /> value that describes the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.JScript.Vsa.JSVsaException.#ctor(Microsoft.JScript.Vsa.JSVsaError,System.String)">
      <summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <param name="error">A <see cref="T:Microsoft.JScript.Vsa.JSVsaError" /> value that describes the reason for the exception.</param>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture. </param>
    </member>
    <member name="M:Microsoft.JScript.Vsa.JSVsaException.#ctor(Microsoft.JScript.Vsa.JSVsaError,System.String,System.Exception)">
      <summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <param name="error">A <see cref="T:Microsoft.JScript.Vsa.JSVsaError" /> value that describes the reason for the exception.</param>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture. </param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not null, the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="M:Microsoft.JScript.Vsa.JSVsaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.Vsa.JSVsaException" /> class with serialized data. This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <param name="info">The object that holds the serialized object data. </param>
      <param name="context">The contextual information about the source or destination. </param>
    </member>
    <member name="M:Microsoft.JScript.Vsa.JSVsaException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.Vsa.JSVsaException" /> class with a specified message that describes the error. This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</param>
    </member>
    <member name="M:Microsoft.JScript.Vsa.JSVsaException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.Vsa.JSVsaException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception. This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture. </param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not null, the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="P:Microsoft.JScript.Vsa.JSVsaException.ErrorCode">
      <summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <returns>A <see cref="T:Microsoft.JScript.Vsa.JSVsaError" /> value that describes the reason for the exception.</returns>
    </member>
    <member name="M:Microsoft.JScript.Vsa.JSVsaException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.JScript.Vsa.JSVsaException" /> class with serialized data. This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <param name="info">The object that holds the serialized object data. </param>
      <param name="context">The contextual information about the source or destination. </param>
    </member>
    <member name="M:Microsoft.JScript.Vsa.JSVsaException.ToString">
      <summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <returns>A string representation of the current exception.</returns>
    </member>
    <member name="T:Microsoft.JScript.Vsa.JSVsaItemFlag">
      <summary>Identifies the type of code item as Class, Module, or None.</summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaItemFlag.Class">
      <summary>Used when the code item is generic or when the item type does not accept flags. In such cases, no special flags are required to create the item.</summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaItemFlag.Module">
      <summary>Used when the code item is a module.</summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaItemFlag.None">
      <summary>Used when the code item is a class.</summary>
    </member>
    <member name="T:Microsoft.JScript.Vsa.JSVsaItemType">
      <summary>Represents the type of the item.</summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaItemType.AppGlobal">
      <summary>Used to add a global object to the .NET script engine. This type is used to create an IJSVsaGlobalItem object.</summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaItemType.Code">
      <summary>Used to create a code item for storing source code for the .NET script engine.</summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.JSVsaItemType.Reference">
      <summary>Used to add a reference to an external .NET assembly, which can then be referenced from code. This type is used to create an IJSVsaReferenceItem object</summary>
    </member>
    <member name="T:Microsoft.JScript.Vsa.ResInfo">
      <summary>This class, member, or property is internal to the script engine and should not be called from your code.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.ResInfo.#ctor(System.String,System.Boolean)">
      <summary>This class, member, or property is internal to the script engine and should not be called from your code.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.ResInfo.#ctor(System.String,System.String,System.Boolean,System.Boolean)">
      <summary>This class, member, or property is internal to the script engine and should not be called from your code.</summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.ResInfo.filename">
      <summary>This class, member, or property is internal to the script engine and should not be called from your code.</summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.ResInfo.fullpath">
      <summary>This class, member, or property is internal to the script engine and should not be called from your code.</summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.ResInfo.isLinked">
      <summary>This class, member, or property is internal to the script engine and should not be called from your code.</summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.ResInfo.isPublic">
      <summary>This class, member, or property is internal to the script engine and should not be called from your code.</summary>
    </member>
    <member name="F:Microsoft.JScript.Vsa.ResInfo.name">
      <summary>This class, member, or property is internal to the script engine and should not be called from your code.</summary>
    </member>
    <member name="T:Microsoft.JScript.Vsa.VsaEngine">
      <summary>Implements <see cref="T:Microsoft.Vsa.IVsaEngine" /> interface. </summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.#ctor">
      <summary>This class, member, or property is internal to the script engine and should not be called from your code.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.#ctor(System.Boolean)">
      <summary>This class, member, or property is internal to the script engine and should not be called from your code.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.Clone(System.AppDomain)">
      <summary>This class, member, or property is internal to the script engine and should not be called from your code.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.CompileEmpty">
      <summary>This class, member, or property is internal to the script engine and should not be called from your code.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.ConnectEvents">
      <summary>This class, member, or property is internal to the script engine and should not be called from your code.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.CreateEngine">
      <summary>This class, member, or property is internal to the script engine and should not be called from your code.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.CreateEngineAndGetGlobalScope(System.Boolean,System.String[])">
      <summary>This class, member, or property is internal to the script engine and should not be called from your code.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.CreateEngineAndGetGlobalScopeWithType(System.Boolean,System.String[],System.RuntimeTypeHandle)">
      <summary>This class, member, or property is internal to the script engine and should not be called from your code.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.CreateEngineAndGetGlobalScopeWithTypeAndRootNamespace(System.Boolean,System.String[],System.RuntimeTypeHandle,System.String)">
      <summary>This class, member, or property is internal to the script engine and should not be called from your code.</summary>
      <returns>Returns <see cref="T:Microsoft.JScript.GlobalScope" />.</returns>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.CreateEngineWithType(System.RuntimeTypeHandle)">
      <summary>This class, member, or property is internal to the script engine and should not be called from your code.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.DisconnectEvents">
      <summary>This class, member, or property is internal to the script engine and should not be called from your code.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.GetAssembly">
      <summary>This class, member, or property is internal to the script engine and should not be called from your code.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.GetGlobalScope">
      <summary>This class, member, or property is internal to the script engine and should not be called from your code.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.GetItem(System.String)">
      <summary>This class, member, or property is internal to the script engine and should not be called from your code.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.GetItemAtIndex(System.Int32)">
      <summary>This class, member, or property is internal to the script engine and should not be called from your code.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.GetItemCount">
      <summary>This class, member, or property is internal to the script engine and should not be called from your code.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.GetMainScope">
      <summary>This class, member, or property is internal to the script engine and should not be called from your code.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.GetModule">
      <summary>This class, member, or property is internal to the script engine and should not be called from your code.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.GetOriginalArrayConstructor">
      <summary>This class, member, or property is internal to the script engine and should not be called from your code.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.GetOriginalObjectConstructor">
      <summary>This class, member, or property is internal to the script engine and should not be called from your code.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.GetOriginalRegExpConstructor">
      <summary>This class, member, or property is internal to the script engine and should not be called from your code.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.InitVsaEngine(System.String,Microsoft.JScript.Vsa.IJSVsaSite)">
      <summary>This class, member, or property is internal to the script engine and should not be called from your code.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.Interrupt">
      <summary>This class, member, or property is internal to the script engine and should not be called from your code.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.IsValidIdentifier(System.String)">
      <summary>This class, member, or property is internal to the script engine and should not be called from your code.</summary>
    </member>
    <member name="P:Microsoft.JScript.Vsa.VsaEngine.LenientGlobalObject">
      <summary>This class, member, or property is internal to the script engine and should not be called from your code.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.PopScriptObject">
      <summary>This class, member, or property is internal to the script engine and should not be called from your code.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.PushScriptObject(Microsoft.JScript.ScriptObject)">
      <summary>This class, member, or property is internal to the script engine and should not be called from your code.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.RegisterEventSource(System.String)">
      <summary>This class, member, or property is internal to the script engine and should not be called from your code.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.Reset">
      <summary>This class, member, or property is internal to the script engine and should not be called from your code.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.Restart">
      <summary>This class, member, or property is internal to the script engine and should not be called from your code.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.Run(System.AppDomain)">
      <summary>This class, member, or property is internal to the script engine and should not be called from your code.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.RunEmpty">
      <summary>This class, member, or property is internal to the script engine and should not be called from your code.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.ScriptObjectStackTop">
      <summary>This class, member, or property is internal to the script engine and should not be called from your code.</summary>
    </member>
    <member name="M:Microsoft.JScript.Vsa.VsaEngine.SetOutputStream(Microsoft.JScript.IMessageReceiver)">
      <summary>This class, member, or property is internal to the script engine and should not be called from your code.</summary>
    </member>
  </members>
</doc>