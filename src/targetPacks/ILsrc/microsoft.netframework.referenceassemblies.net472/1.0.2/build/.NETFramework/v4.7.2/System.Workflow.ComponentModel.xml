<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Workflow.ComponentModel</name>
  </assembly>
  <members>
    <member name="E:System.Workflow.ComponentModel.Activity.Canceling">
      <summary>Occurs when the activity execution is canceled. </summary>
    </member>
    <member name="E:System.Workflow.ComponentModel.Activity.Closed">
      <summary>Occurs when an <see cref="T:System.Workflow.ComponentModel.Activity" /> has completed execution.</summary>
    </member>
    <member name="E:System.Workflow.ComponentModel.Activity.Compensating">
      <summary>Occurs when running a compensation method on the <see cref="T:System.Workflow.ComponentModel.Activity" />.</summary>
    </member>
    <member name="E:System.Workflow.ComponentModel.Activity.Executing">
      <summary>Occurs when the <see cref="T:System.Workflow.ComponentModel.Activity" /> is run.</summary>
    </member>
    <member name="E:System.Workflow.ComponentModel.Activity.Faulting">
      <summary>Occurs when an exception is raised during the running of the instance.</summary>
    </member>
    <member name="E:System.Workflow.ComponentModel.Activity.StatusChanged">
      <summary>Occurs when the <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> of a running <see cref="T:System.Workflow.ComponentModel.Activity" /> changes.</summary>
    </member>
    <member name="E:System.Workflow.ComponentModel.ActivityCollection.ListChanged">
      <summary>Raised whenever a change is made to the contents of this <see cref="T:System.Collections.ICollection" />.</summary>
    </member>
    <member name="E:System.Workflow.ComponentModel.Compiler.ITypeProvider.TypeLoadErrorsChanged">
      <summary>Occurs when the collection <see cref="P:System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrors" /> is modified.</summary>
    </member>
    <member name="E:System.Workflow.ComponentModel.Compiler.ITypeProvider.TypesChanged">
      <summary>Occurs when the types in the type provider that implements this interface change. This can happen when an assembly or <see cref="T:System.CodeDom.CodeCompileUnit" /> is added or removed from the type provider.</summary>
    </member>
    <member name="E:System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrorsChanged">
      <summary>Occurs when the collection <see cref="P:System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrors" /> is modified.</summary>
    </member>
    <member name="E:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged">
      <summary>Occurs when the collection of defined types is modified.</summary>
    </member>
    <member name="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed">
      <summary>Represents the method that handles the <see langword="Disposed" /> event of a component.</summary>
    </member>
    <member name="E:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.ConnectorAdded">
      <summary>Occurs when a <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> is added to the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" />. </summary>
    </member>
    <member name="E:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.ConnectorChanged">
      <summary>Occurs when a user changes the <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> locations associated with a <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> displayed by the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" />. </summary>
    </member>
    <member name="E:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.ConnectorRemoved">
      <summary>Occurs when a user removes a connector from the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" />. </summary>
    </member>
    <member name="E:System.Workflow.ComponentModel.Design.WorkflowOutline.Expanding">
      <summary>Event raised when the TreeView for the document outline is expanding.</summary>
    </member>
    <member name="E:System.Workflow.ComponentModel.Design.WorkflowTheme.ThemeChanged">
      <summary>Occurs when a theme changes.</summary>
    </member>
    <member name="E:System.Workflow.ComponentModel.Design.WorkflowView.Idle">
      <summary>Occurs when the <see langword="WorkflowView" /> finishes processing and is about to enter the idle state.</summary>
    </member>
    <member name="E:System.Workflow.ComponentModel.Design.WorkflowView.RootDesignerChanged">
      <summary>Raised when the root designer is changed.</summary>
    </member>
    <member name="E:System.Workflow.ComponentModel.Design.WorkflowView.ZoomChanged">
      <summary>Occurs when the zoom setting for the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> changes.</summary>
    </member>
    <member name="E:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager.ResolveName">
      <summary>Occurs when <see cref="M:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager.GetName(System.Object)" /> cannot locate the specified name in the serialization manager name table.</summary>
    </member>
    <member name="E:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager.SerializationComplete">
      <summary>Occurs when serialization is complete.</summary>
    </member>
    <member name="E:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ResolveName">
      <summary>Occurs when <see cref="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)" /> cannot locate the specified name in the serialization manager's name table. </summary>
    </member>
    <member name="E:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SerializationComplete">
      <summary>Occurs when serialization is complete.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty">
      <summary>The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that represents the <see cref="T:System.Guid" /> of the <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> that is associated with the <see cref="T:System.Workflow.ComponentModel.Activity" />.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Activity.CancelingEvent">
      <summary>Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="E:System.Workflow.ComponentModel.Activity.Canceling" /> event.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Activity.ClosedEvent">
      <summary>Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="E:System.Workflow.ComponentModel.Activity.Closed" /> event.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Activity.CompensatingEvent">
      <summary>Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="E:System.Workflow.ComponentModel.Activity.Compensating" /> event.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Activity.ExecutingEvent">
      <summary>Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="E:System.Workflow.ComponentModel.Activity.Executing" /> event, which occurs when the activity is executed.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Activity.FaultingEvent">
      <summary>The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that represents the <see cref="E:System.Workflow.ComponentModel.Activity.Faulting" /> event.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Activity.StatusChangedEvent">
      <summary>Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="E:System.Workflow.ComponentModel.Activity.StatusChanged" /> event.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.ActivityExecutionContext.CurrentExceptionProperty">
      <summary>Represents an exception that has occurred during the execution of the workflow instance. This property has a value only when an activity is in the faulting state.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.CompensateActivity.TargetActivityNameProperty">
      <summary>Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.ComponentModel.CompensateActivity.TargetActivityName" /> property.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerGlyph.HighestPriority">
      <summary>Represents the highest priority possible for a <see cref="T:System.Workflow.ComponentModel.Design.DesignerGlyph" />. This value is a constant.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerGlyph.LowestPriority">
      <summary>Represents the lowest priority possible for a <see cref="T:System.Workflow.ComponentModel.Design.DesignerGlyph" />. This value is a constant.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerGlyph.NormalPriority">
      <summary>Represents the normal priority for a <see cref="T:System.Workflow.ComponentModel.Design.DesignerGlyph" />. This value is a constant.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.BreakpointActionMenu">
      <summary>Gets the <see cref="T:System.ComponentModel.Design.CommandID" /> for the breakpoint action menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.BreakpointConditionMenu">
      <summary>Gets the <see cref="T:System.ComponentModel.Design.CommandID" /> for the breakpoint condition menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.BreakpointConstraintsMenu">
      <summary>Gets the <see cref="T:System.ComponentModel.Design.CommandID" /> for the breakpoint constraints menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.BreakpointHitCountMenu">
      <summary>Gets the <see cref="T:System.ComponentModel.Design.CommandID" /> for the breakpoint hit count menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.BreakpointLocationMenu">
      <summary>Gets the <see cref="T:System.ComponentModel.Design.CommandID" /> for the breakpoint location menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ChangeTheme">
      <summary>Gets the <see cref="T:System.ComponentModel.Design.CommandID" /> for the change theme menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ClearBreakpointsMenu">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the clear breakpoints menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Collapse">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the collapse menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.CopyToClipboard">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the copy menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.CreateTheme">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the create theme menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.DebugCommandSetId">
      <summary>Provides a unique identifier for the debug command set. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.DebugStepBranchMenu">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the debug step branch menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.DebugStepInstanceMenu">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the debug step instance menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.DebugWorkflowGroupId">
      <summary>Provides a unique identifier for the debug workflow group of menus. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.DefaultFilter">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the default filter menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.DefaultPage">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the default page menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.DesignerActionsMenu">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the designer actions menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.DesignerProperties">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the designer properties menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Disable">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the disable menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Enable">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the enable menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.EnableBreakpointMenu">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the enable breakpoint menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ExecutionStateMenu">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the execution state menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Expand">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the expand menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.FirstZoomCommand">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the zoom first menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.GotoDisassemblyMenu">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the goto disassembly menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.InsertBreakpointMenu">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the insert breakpoint menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.InsertTracePointMenu">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the insert tracepoint menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.LastZoomCommand">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the zoom last menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.MenuGuid">
      <summary>Provides a unique identifier for the menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.NewDataBreakpointMenu">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the new data breakpoint menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.NewFileTracePointMenu">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the new file tracepoint menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.PageDown">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the PageDown menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.PageLayoutMenu">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the page layout menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.PageSetup">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the page setup menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.PageUp">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the PageUp menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Pan">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the pan menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.PanMenu">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the pan menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Print">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the print menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.PrintPreview">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the print preview menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.PrintPreviewPage">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the print preview page menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.RunToCursorMenu">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the run to cursor menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.SaveAsImage">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the save as image menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.SelectionMenu">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the selection menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.SetNextStatementMenu">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the set next statement menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ShowAll">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the show all menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ShowNextStatementMenu">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the show next statement menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ToggleBreakpointMenu">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the toggle breakpoint menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.VerbGroupActions">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the verb group actions menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.VerbGroupDesignerActions">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the verb group designer actions menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.VerbGroupEdit">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the edit verb group menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.VerbGroupGeneral">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the general verb group menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.VerbGroupMisc">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the miscellaneous verb group menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.VerbGroupOptions">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the options verb group menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.VerbGroupView">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the view verb group menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.WorkflowCommandSetId">
      <summary>Provides a unique identifier for the workflow command set. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.WorkflowToolBar">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the workflow toolbar menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Zoom100Mode">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the zoom 100% menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Zoom150Mode">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the zoom 150% menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Zoom200Mode">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the zoom 200% menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Zoom300Mode">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the zoom 300% menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Zoom400Mode">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the zoom 400% menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Zoom50Mode">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the zoom 50% menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Zoom75Mode">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the zoom 75% menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ZoomIn">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the zoom in menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ZoomLevelCombo">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the zoom level combo menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ZoomLevelListHandler">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the zoom level list handler menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ZoomMenu">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the zoom menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ZoomOut">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the zoom out menu. This field is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.FaultHandlerActivity.FaultTypeProperty">
      <summary>Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.ComponentModel.FaultHandlerActivity.FaultType" /> property.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializer.MarkupFileNameProperty">
      <summary>The name of the markup file to write to. </summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Serialization.ActivityMarkupSerializer.EndColumnProperty">
      <summary>The index of the last character in the activity definition.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Serialization.ActivityMarkupSerializer.EndLineProperty">
      <summary>The index of the last line in the activity definition.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Serialization.ActivityMarkupSerializer.StartColumnProperty">
      <summary>The index of the first character in the activity definition.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Serialization.ActivityMarkupSerializer.StartLineProperty">
      <summary>The index of the first line in the activity definition.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ClrNamespacesProperty">
      <summary>Represents an attached <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that is used to define which assemblies to reference for custom activities.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.EventsProperty">
      <summary>Represents an attached <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that defines the names for event handler properties.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.XClassProperty">
      <summary>Represents an attached <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that defines the type name, which will be created during compilation. </summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.XCodeProperty">
      <summary>Represents a code example, embedded into XAML <see langword="x:Code" /> element.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.SuspendActivity.ErrorProperty">
      <summary>Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.ComponentModel.SuspendActivity.Error" /> property.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.TerminateActivity.ErrorProperty">
      <summary>Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.ComponentModel.TerminateActivity.Error" /> property. </summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.ThrowActivity.FaultProperty">
      <summary>The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> representing the <see cref="P:System.Workflow.ComponentModel.ThrowActivity.Fault" /> property for this instance.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.ThrowActivity.FaultTypeProperty">
      <summary>The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> representing the <see cref="P:System.Workflow.ComponentModel.ThrowActivity.FaultType" /> property for this instance.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty">
      <summary>Specifies the condition that must be satisfied to apply the <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" />.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.WorkflowParameterBinding.ParameterNameProperty">
      <summary>The dependency property which targets <see cref="P:System.Workflow.ComponentModel.WorkflowParameterBinding.ParameterName" />.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.WorkflowParameterBinding.ValueProperty">
      <summary>The dependency property which targets <see cref="P:System.Workflow.ComponentModel.WorkflowParameterBinding.Value" />.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.WorkflowTransactionOptions.IsolationLevelProperty">
      <summary>The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> representing <see cref="P:System.Workflow.ComponentModel.WorkflowTransactionOptions.IsolationLevel" />.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.WorkflowTransactionOptions.TimeoutDurationProperty">
      <summary>The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> representing <see cref="P:System.Workflow.ComponentModel.WorkflowTransactionOptions.TimeoutDuration" />.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Activity" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Activity" /> class, while initializing the <see cref="P:System.Workflow.ComponentModel.Activity.Name" />. </summary>
      <param name="name">The name to associate with this instance. The name must conform to the variable naming conventions for the programming language that is being used in the Workflow project, and must be unique in the workflow.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="name" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <summary>Called by the workflow runtime to cancel execution of an activity that is currently executing.</summary>
      <param name="executionContext">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> that contains the instance to cancel.</param>
      <returns>The status at the end of the operation that determines whether the activity remains in the canceling state or transitions to the closed state.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.Clone">
      <summary>Creates a deep copy of the <see cref="T:System.Workflow.ComponentModel.Activity" />.</summary>
      <returns>A deep copy of the <see cref="T:System.Workflow.ComponentModel.Activity" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <summary>Called by the workflow runtime to execute an activity. </summary>
      <param name="executionContext">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> to associate with this <see cref="T:System.Workflow.ComponentModel.Activity" /> and execution.</param>
      <returns>The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> of the run task, which determines whether the activity remains in the executing state, or transitions to the closed state.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)">
      <summary>Returns the instance of the <see cref="T:System.Workflow.ComponentModel.Activity" /> whose name is requested from the set of all activities running under the root activity of this instance, which is within the workflow.</summary>
      <param name="activityQualifiedName">The name of the <see cref="T:System.Workflow.ComponentModel.Activity" /> to search for.</param>
      <returns>The instance of the <see cref="T:System.Workflow.ComponentModel.Activity" /> whose name is requested from the set of all activities running under the root activity of this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="activityQualifiedID" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)">
      <summary>Returns the instance of the <see cref="T:System.Workflow.ComponentModel.Activity" /> whose name is requested from the set of all activities under the root the <see cref="T:System.Workflow.ComponentModel.Activity" /> of this instance if the second parameter is <see langword="false" /> and under the current <see cref="T:System.Workflow.ComponentModel.Activity" /> if the second parameter is <see langword="true" />.</summary>
      <param name="activityQualifiedName">The name of the <see cref="T:System.Workflow.ComponentModel.Activity" /> to search for.</param>
      <param name="withinThisActivityOnly">The value that indicates whether to limit the search to activities contained within this instance.</param>
      <returns>The instance of the <see cref="T:System.Workflow.ComponentModel.Activity" /> whose name is requested from the set of all activities under the root the <see cref="T:System.Workflow.ComponentModel.Activity" /> of this instance if the second parameter is <see langword="false" /> and under the current <see cref="T:System.Workflow.ComponentModel.Activity" /> if the second parameter is <see langword="true" />.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="activityQualifiedID" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)">
      <summary>Called when an exception is raised within the context of the execution of this instance.</summary>
      <param name="executionContext">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> for this instance.</param>
      <param name="exception">The <see cref="T:System.Exception" /> that caused this fault.</param>
      <returns>The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> that results from an attempt to cancel this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="executionContext" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="exception" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)">
      <summary>Called by the workflow runtime to initialize an activity during the construction of a new workflow instance. This method is called during the construction of a dynamic <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />.</summary>
      <param name="provider">The <see cref="T:System.IServiceProvider" /> that provides the initialization service.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="provider" /> is a null reference (<see langword="Nothing " />in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)">
      <summary>Subscribes an <see cref="T:System.EventHandler" /> and invokes that delegate.</summary>
      <param name="handler">The <see cref="T:System.EventHandler" /> to be invoked.</param>
      <param name="e">The <see cref="T:System.EventArgs" /> to associate with this event</param>
      <typeparam name="T">The specified type.</typeparam>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)">
      <summary>Subscribes an <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> and invokes that delegate.</summary>
      <param name="eventListener">The <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> to be invoked.</param>
      <param name="e">The <see cref="T:System.EventArgs" /> to associate with this event</param>
      <typeparam name="T">The specified type.</typeparam>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)">
      <summary>Loads an instance of an <see cref="T:System.Workflow.ComponentModel.Activity" /> from a <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream">The <see cref="T:System.IO.Stream" /> from which to load.</param>
      <param name="outerActivity">The <see cref="T:System.Workflow.ComponentModel.Activity" /> that owns the context for the deserialized <see cref="T:System.Workflow.ComponentModel.Activity" />.</param>
      <returns>An instance of an <see cref="T:System.Workflow.ComponentModel.Activity" /> from a <see cref="T:System.IO.Stream" />.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="stream" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)">
      <summary>Loads an instance of an <see cref="T:System.Workflow.ComponentModel.Activity" /> from a <see cref="T:System.IO.Stream" /> using the custom <see cref="T:System.Runtime.Serialization.IFormatter" /> for deserialization.</summary>
      <param name="stream">The target <see cref="T:System.IO.Stream" /> of the load operation.</param>
      <param name="outerActivity">The <see cref="T:System.Workflow.ComponentModel.Activity" /> that owns the context for the deserialized <see cref="T:System.Workflow.ComponentModel.Activity" />.</param>
      <param name="formatter">The <see cref="T:System.Runtime.Serialization.IFormatter" /> used to read from the <see cref="T:System.IO.Stream" />.</param>
      <returns>An instance of an <see cref="T:System.Workflow.ComponentModel.Activity" /> from a <see cref="T:System.IO.Stream" />.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="stream" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="formatter" /> is a null reference (<see langword="Nothing" />).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)">
      <summary>Called by the workflow runtime whenever an <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> is loaded. For example, this method is called during the creation of an <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> as well as every time the <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> is reincarnated when a workflow instance is loaded from persistent storage.</summary>
      <param name="provider">The <see cref="T:System.IServiceProvider" /> that provides the service.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)">
      <summary>Called by the workflow runtime whenever an <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> is unloaded. For example, this method is called during completion of an <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> as well as every time the <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> is unloaded when a workflow instance is persisted.</summary>
      <param name="provider">The <see cref="T:System.IServiceProvider" /> that provides the service.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)">
      <summary>Called by the workflow runtime as part of the activity's transition to the closed state.</summary>
      <param name="provider">The <see cref="T:System.IServiceProvider" /> that provides the service.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)">
      <summary>Raises an <see cref="F:System.Reflection.MemberTypes.Event" /> associated with the specified dependency property.</summary>
      <param name="dependencyEvent">The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> associated with this <see cref="F:System.Reflection.MemberTypes.Event" />.</param>
      <param name="sender">The <see cref="T:System.Object" /> source of the <see cref="F:System.Reflection.MemberTypes.Event" />.</param>
      <param name="e">The <see cref="T:System.EventArgs" /> associated with the <see cref="F:System.Reflection.MemberTypes.Event" />.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)">
      <summary>Raises the event associated with the referenced <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</summary>
      <param name="dependencyEvent">The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> associated with this <see cref="F:System.Reflection.MemberTypes.Event" />.</param>
      <param name="sender">The <see cref="T:System.Object" /> source of the event.</param>
      <param name="e">The <see cref="T:System.EventArgs" /> associated with the <see cref="F:System.Reflection.MemberTypes.Event" />.</param>
      <typeparam name="T">The specified type.</typeparam>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})">
      <summary>Registers the specified <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> for the status change event.</summary>
      <param name="dependencyProp">The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> to register.</param>
      <param name="activityStatusChangeListener">The object that implements the Event Listener interface for this registration.</param>
      <exception cref="T:System.ArgumentException">
              <paramref name="dependencyProp" /> is not one of the following:
                  <see cref="F:System.Workflow.ComponentModel.Activity.ExecutingEvent" />
                
                  <see cref="F:System.Workflow.ComponentModel.Activity.CancelingEvent" />
                
                  <see cref="F:System.Workflow.ComponentModel.Activity.ClosedEvent" />
                
                  <see cref="F:System.Workflow.ComponentModel.Activity.CompensatingEvent" />
                
                  <see cref="F:System.Workflow.ComponentModel.Activity.FaultingEvent" />
                
                  <see cref="F:System.Workflow.ComponentModel.Activity.StatusChangedEvent" />
                </exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)">
      <summary>Writes the <see cref="T:System.Workflow.ComponentModel.Activity" /> to a <see cref="T:System.IO.Stream" /> for persistence.</summary>
      <param name="stream">The <see cref="T:System.IO.Stream" /> to which to save the <see cref="T:System.Workflow.ComponentModel.Activity" />.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="stream" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)">
      <summary>Writes the <see cref="T:System.Workflow.ComponentModel.Activity" /> to a <see cref="T:System.IO.Stream" /> for persistence using the custom <see cref="T:System.Runtime.Serialization.IFormatter" /> provided for serialization.</summary>
      <param name="stream">The target <see cref="T:System.IO.Stream" /> of the save operation.</param>
      <param name="formatter">The binary or custom <see cref="T:System.Runtime.Serialization.IFormatter" /> for the serialization.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="stream" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="formatter" /> is a null reference (<see langword="Nothing" />).</exception>
      <exception cref="T:System.InvalidOperationException">This instance is in design mode.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.ToString">
      <summary>Provides a string that represents this instance.</summary>
      <returns>This instance.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)">
      <summary>Informs the run-time tracking infrastructure of pending tracking information.</summary>
      <param name="userData">
            <see cref="T:System.Object" /> that contains the tracking information.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="userData" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)">
      <summary>Informs the run-time tracking infrastructure of pending tracking information.</summary>
      <param name="userDataKey">The key to the user data that has changed.</param>
      <param name="userData">
            <see cref="T:System.Object" /> that contains the tracking information.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="userData" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)">
      <summary>When overridden in a derived class, provides un-initialization by a service provider for the activity. </summary>
      <param name="provider">The <see cref="T:System.IServiceProvider" /> that provides the service.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})">
      <summary>Un-registers the specified <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> for the status change event.</summary>
      <param name="dependencyProp">The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> to un-register.</param>
      <param name="activityStatusChangeListener">The object that implements the Event Listener interface for this registration.</param>
      <exception cref="T:System.ArgumentException">
              <paramref name="dependencyProp" /> is not one of the following:
                  <see cref="F:System.Workflow.ComponentModel.Activity.ExecutingEvent" />
                
                  <see cref="F:System.Workflow.ComponentModel.Activity.CancelingEvent" />
                
                  <see cref="F:System.Workflow.ComponentModel.Activity.ClosedEvent" />
                
                  <see cref="F:System.Workflow.ComponentModel.Activity.CompensatingEvent" />
                
                  <see cref="F:System.Workflow.ComponentModel.Activity.FaultingEvent" />
                
                  <see cref="F:System.Workflow.ComponentModel.Activity.StatusChangedEvent" />
                </exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityBind.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityBind.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> class with the <paramref name="name" /> parameter.</summary>
      <param name="name">The name of the <see cref="T:System.Workflow.ComponentModel.Activity" />.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityBind.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> class with <paramref name="name" /> and <paramref name="path" /> parameters.</summary>
      <param name="name">The name of the <see cref="T:System.Workflow.ComponentModel.Activity" />.</param>
      <param name="path">The path of the new <see cref="T:System.Workflow.ComponentModel.ActivityBind" />.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityBind.GetRuntimeValue(System.Workflow.ComponentModel.Activity)">
      <summary>Gets the <see cref="T:System.Object" /> representing the run-time value of this <see cref="T:System.Workflow.ComponentModel.ActivityBind" />.</summary>
      <param name="activity">The <see cref="T:System.Workflow.ComponentModel.Activity" /> that owns this bind.</param>
      <returns>The <see cref="T:System.Object" /> representing the run-time value of this <see cref="T:System.Workflow.ComponentModel.ActivityBind" />.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="activity" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityBind.GetRuntimeValue(System.Workflow.ComponentModel.Activity,System.Type)">
      <summary>Gets the <see cref="T:System.Object" /> representing the run-time value of this <see cref="T:System.Workflow.ComponentModel.ActivityBind" />.</summary>
      <param name="activity">The <see cref="T:System.Workflow.ComponentModel.Activity" /> that owns this bind.</param>
      <param name="targetType">The <see cref="T:System.Type" /> of the object if a <see cref="T:System.Delegate" />; otherwise a null reference (<see langword="Nothing" /> in Visual Basic). <paramref name="activity" /> is null.</param>
      <returns>The <see cref="T:System.Object" /> representing the run-time value of this <see cref="T:System.Workflow.ComponentModel.ActivityBind" />.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="activity" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityBind.ProvideValue(System.IServiceProvider)">
      <summary>Returns the current instance of this class. </summary>
      <param name="provider">An <see cref="T:System.IServiceProvider" />.</param>
      <returns>The current instance of this class. </returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityBind.SetRuntimeValue(System.Workflow.ComponentModel.Activity,System.Object)">
      <summary>Sets the run-time value.</summary>
      <param name="activity">The <see cref="T:System.Workflow.ComponentModel.Activity" /> owning this bind.</param>
      <param name="value">The <see cref="T:System.Object" /> to set the run-time value to.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="activity" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityBind.ToString">
      <summary>Calculates and returns a combination of the <see cref="P:System.Workflow.ComponentModel.ActivityBind.Name" /> and <see cref="P:System.Workflow.ComponentModel.ActivityBind.Path" /> property strings.</summary>
      <returns>A combination of the <see cref="P:System.Workflow.ComponentModel.ActivityBind.Name" /> and <see cref="P:System.Workflow.ComponentModel.ActivityBind.Path" /> property strings.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityChangeAction.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.ActivityChangeAction" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityChangeAction.#ctor(System.Workflow.ComponentModel.CompositeActivity)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.ActivityChangeAction" /> class, initializing the associated <see cref="T:System.Workflow.ComponentModel.CompositeActivity" />.</summary>
      <param name="compositeActivity">The <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> associated with the change.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="compositeActivity" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityChangeAction.ValidateChanges(System.Workflow.ComponentModel.Activity)">
      <summary>Validates the changes pending on the target activity.</summary>
      <param name="contextActivity">The activity to have its changes validated.</param>
      <returns>A <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" /> that contains any <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationError" /> resulting from running each <see cref="T:System.Workflow.ComponentModel.Compiler.Validator" /> defined for the target activity.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="contextActivity" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.#ctor(System.Workflow.ComponentModel.Activity)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.ActivityCollection" /> class, initializing an owner <see cref="T:System.Workflow.ComponentModel.Activity" />.</summary>
      <param name="owner">The <see cref="T:System.Workflow.ComponentModel.Activity" /> designated as owning this instance.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="owner" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">
              <paramref name="owner" /> is not a descendent of <see cref="T:System.Workflow.ComponentModel.Activity" />.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.Add(System.Workflow.ComponentModel.Activity)">
      <summary>Adds the <see cref="T:System.Workflow.ComponentModel.Activity" /> to the <see cref="T:System.Collections.ICollection" />.</summary>
      <param name="item">The <see cref="T:System.Workflow.ComponentModel.Activity" /> to be added to the <see cref="T:System.Collections.ICollection" />.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.Clear">
      <summary>Removes every <see cref="T:System.Workflow.ComponentModel.Activity" /> from the <see cref="T:System.Collections.ICollection" />.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.Contains(System.Workflow.ComponentModel.Activity)">
      <summary>Provides a test for membership of the <see cref="T:System.Workflow.ComponentModel.Activity" /> in the <see cref="T:System.Collections.ICollection" />.</summary>
      <param name="item">The <see cref="T:System.Workflow.ComponentModel.Activity" /> being tested for membership.</param>
      <returns>
          <see langword="true" /> if the <see cref="T:System.Workflow.ComponentModel.Activity" /> belongs to the <see cref="T:System.Collections.ICollection" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.GetEnumerator">
      <summary>Implements an enumeration interface to the <see cref="T:System.Collections.ICollection" />.  </summary>
      <returns>Returns an enumerator that can iterate through the <see cref="T:System.Collections.ReadOnlyCollectionBase" /> instance. </returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.IndexOf(System.Workflow.ComponentModel.Activity)">
      <summary>Gets the index of the <see cref="T:System.Workflow.ComponentModel.Activity" /> in the <see cref="T:System.Collections.ICollection" />.</summary>
      <param name="item">The activity for which to acquire the index. </param>
      <returns>The index of the <see cref="T:System.Workflow.ComponentModel.Activity" /> in the <see cref="T:System.Collections.ICollection" />. Otherwise -1 (if <see cref="T:System.Workflow.ComponentModel.Activity" /> is not in the <see cref="T:System.Collections.ICollection" />).</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.Insert(System.Int32,System.Workflow.ComponentModel.Activity)">
      <summary>Inserts the item at the index in the <see cref="T:System.Collections.ICollection" />. </summary>
      <param name="index">Zero-based index of the collection at which to insert the item.</param>
      <param name="item">The <see cref="T:System.Workflow.ComponentModel.Activity" /> to be inserted into the collection.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.Remove(System.Workflow.ComponentModel.Activity)">
      <summary>Removes the activity specified in the call from the <see cref="T:System.Collections.ICollection" />.</summary>
      <param name="item">The activity to remove from the <see cref="T:System.Collections.ICollection" />.</param>
      <returns>
          <see langword="true" /> if the operation succeeded; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Workflow.ComponentModel.Activity" /> in the <see cref="T:System.Collections.ICollection" /> at the specified <paramref name="index" />.</summary>
      <param name="index">Position in a zero-based index to remove the activity from the collection.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Add(System.Workflow.ComponentModel.Activity)">
      <summary>Adds an object to the <see cref="T:System.Collections.IList" /> at the end of the <see cref="T:System.Collections.IList" />.</summary>
      <param name="item">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Clear">
      <summary>Clears all activities from the <see cref="T:System.Collections.IList" />.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Contains(System.Workflow.ComponentModel.Activity)">
      <summary>Gets a value that indicates whether the <see cref="T:System.Object" /> is a member of the collection.</summary>
      <param name="item">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />. </param>
      <returns>
          <see langword="true" /> if value is in the collection; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#CopyTo(System.Workflow.ComponentModel.Activity[],System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</summary>
      <param name="array">The <see cref="T:System.Array" /> which is the target of the copy operation.</param>
      <param name="arrayIndex">The zero-based index within the <see cref="T:System.Collections.ICollection" /> where the copy starts.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="array" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="index" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
              <paramref name="array" /> is multidimensional.
              <paramref name="index" /> is equal to or greater than the length of <paramref name="array" />.The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination array.</exception>
      <exception cref="T:System.InvalidCastException">The type <see cref="T:System.Workflow.ComponentModel.Activity" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Remove(System.Workflow.ComponentModel.Activity)">
      <summary>Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />. </summary>
      <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />. </param>
      <returns>
          <see langword="true" /> if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, <see langword="false" />. This method also returns <see langword="false" /> if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />. </returns>
      <exception cref="T:System.NotSupportedException">The <see langword="ICollection" /> is read-only.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IEnumerable{System#Workflow#ComponentModel#Activity}#GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection. </summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#IndexOf(System.Workflow.ComponentModel.Activity)">
      <summary>Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.</summary>
      <param name="item">The object to locate in the <see cref="T:System.Collections.IList" />.</param>
      <returns>The index of <paramref name="item" /> if found in the list; otherwise, -1. </returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Insert(System.Int32,System.Workflow.ComponentModel.Activity)">
      <summary>Inserts an <see cref="T:System.Object" /> into the <see cref="T:System.Collections.IList" /> at the zero-based index specified.</summary>
      <param name="index">The zero-based position of the insertion.</param>
      <param name="item">The object to insert. It must be of type <see cref="T:System.Workflow.ComponentModel.Activity" />.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Collections.IList" /> item at the specified index.</summary>
      <param name="index">The zero-based index of the item to remove.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</exception>
      <exception cref="T:System.NotSupportedException">The <see langword="ICollection" /> is read-only.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</summary>
      <param name="array">The <see cref="T:System.Array" /> which is the target of the copy operation.</param>
      <param name="index">The zero-based index within the <see cref="T:System.Collections.ICollection" /> where the copy starts.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the underlying <see cref="T:System.Collections.IList" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Add(System.Object)">
      <summary>Adds an object to the <see cref="T:System.Collections.IList" /> at the end of the <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Collections.IList" />.</param>
      <returns>Returns <see cref="T:System.Int32" />.The zero-based index of the <see cref="T:System.Object" /> that was just added.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Clear">
      <summary>Removes all <see cref="T:System.Workflow.ComponentModel.Activity" /> from the <see cref="T:System.Collections.ICollection" />.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Contains(System.Object)">
      <summary>Gets a value that indicates whether the <see cref="T:System.Object" /> is a member of the collection.</summary>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />. </param>
      <returns>Returns <see cref="T:System.Boolean" /><see langword="true" /> if <paramref name="value" /> is in the collection; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>Gets the zero-based index of the <see cref="T:System.Object" /> in the underlying activities collection.</summary>
      <param name="value">The <see cref="T:System.Object" /> to be indexed.</param>
      <returns>The zero-based index of the <paramref name="value" /> in the underlying activities collection or -1 if not found in the collection.</returns>
      <exception cref="T:System.ArgumentException">The <paramref name="value" /> is not of type <see cref="T:System.Workflow.ComponentModel.Activity" /> and the exception object contains "Error_InvalidListItem" error message.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Inserts an <see cref="T:System.Object" /> into the <see cref="T:System.Collections.IList" /> at the zero-based index specified.</summary>
      <param name="index">The zero-based position of the insertion.</param>
      <param name="value">The object to insert. It must be of type <see cref="T:System.Workflow.ComponentModel.Activity" />.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Remove(System.Object)">
      <summary>Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList" /> is read-only. 
              <see cref="T:System.Collections.IList" /> has a fixed size.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs.#ctor(System.Int32,System.Collections.Generic.ICollection{System.Workflow.ComponentModel.Activity},System.Collections.Generic.ICollection{System.Workflow.ComponentModel.Activity},System.Object,System.Workflow.ComponentModel.ActivityCollectionChangeAction)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" /> class.  </summary>
      <param name="index">The index of the change within the subject <see cref="T:System.Workflow.ComponentModel.ActivityCollection" />.</param>
      <param name="removedItems">A strongly typed <see cref="T:System.Collections.ICollection" /> of type <see cref="T:System.Workflow.ComponentModel.Activity" /> containing each removed <see cref="T:System.Workflow.ComponentModel.Activity" />.</param>
      <param name="addedItems">A strongly typed <see cref="T:System.Collections.ICollection" /> of type <see cref="T:System.Workflow.ComponentModel.Activity" /> containing each added <see cref="T:System.Workflow.ComponentModel.Activity" />.</param>
      <param name="owner">The <see cref="T:System.Object" /> which originated the event.</param>
      <param name="action">The <see cref="T:System.Workflow.ComponentModel.ActivityCollectionChangeAction" /> corresponding to the event.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs.#ctor(System.Int32,System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.Activity,System.Object,System.Workflow.ComponentModel.ActivityCollectionChangeAction)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" /> class.  </summary>
      <param name="index">The index of the change within the subject <see cref="T:System.Workflow.ComponentModel.ActivityCollection" />.</param>
      <param name="removedActivity">The <see cref="T:System.Workflow.ComponentModel.Activity" /> which was removed from the collection.</param>
      <param name="addedActivity">The <see cref="T:System.Workflow.ComponentModel.Activity" /> which was added to the collection.</param>
      <param name="owner">The <see cref="T:System.Object" /> which originated the event.</param>
      <param name="action">The <see cref="T:System.Workflow.ComponentModel.ActivityCollectionChangeAction" /> corresponding to the event.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCondition.#ctor">
      <summary>When implemented in a derived class, initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.ActivityCondition" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCondition.Evaluate(System.Workflow.ComponentModel.Activity,System.IServiceProvider)">
      <summary>Evaluates the underlying condition. </summary>
      <param name="activity">The <see cref="T:System.Workflow.ComponentModel.Activity" /> associated with this condition.</param>
      <param name="provider">The <see cref="T:System.IServiceProvider" /> for this condition evaluation.</param>
      <returns>The <see langword="Boolean" /> resulting from evaluating the underlying expression.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityExecutionContext.CancelActivity(System.Workflow.ComponentModel.Activity)">
      <summary>Called by a composite activity to schedule the cancellation of a child activity. The workflow runtime disallows cancellation of a child activity that is not in the <see cref="E:System.Workflow.ComponentModel.Activity.Executing" /> state.</summary>
      <param name="activity">The canceled <see cref="T:System.Workflow.ComponentModel.Activity" />.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="activity" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
              <paramref name="activity" /> is not a valid child of the <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />. This means that either the argument is equal to the associated <see cref="P:System.Workflow.ComponentModel.ActivityExecutionContext.Activity" /> or that the argument is not in the commented state and is a child of the <see cref="P:System.Workflow.ComponentModel.ActivityExecutionContext.Activity" /> associated with this <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> has been disposed.</exception>
      <exception cref="T:System.InvalidOperationException">
              <paramref name="activity" /> is not in the <see cref="E:System.Workflow.ComponentModel.Activity.Executing" /> state.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityExecutionContext.CloseActivity">
      <summary>Indicates to the workflow runtime that the currently executing activity should transition to the <see cref="E:System.Workflow.ComponentModel.Activity.Closed" /> state.</summary>
      <exception cref="T:System.InvalidOperationException">The status of the associated <see cref="P:System.Workflow.ComponentModel.ActivityExecutionContext.Activity" /> is not equal to <see cref="E:System.Workflow.ComponentModel.Activity.Executing" /> or <see cref="E:System.Workflow.ComponentModel.Activity.Canceling" /> or <see cref="E:System.Workflow.ComponentModel.Activity.Compensating" /> or <see cref="E:System.Workflow.ComponentModel.Activity.Closed" />.</exception>
      <exception cref="T:System.ObjectDisposedException">The disposed <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity(System.Workflow.ComponentModel.Activity)">
      <summary>Called by a composite activity to schedule the execution of a child activity. The workflow runtime disallows execution of a child activity that is not in the initialized state.</summary>
      <param name="activity">The executed <see cref="T:System.Workflow.ComponentModel.Activity" />.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="activity" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">
              <paramref name="activity" /> is not a valid child of the <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />. This means that either the argument is equal to the associated <see cref="P:System.Workflow.ComponentModel.ActivityExecutionContext.Activity" /> or that the argument is not in the commented state and is a child of the <see cref="P:System.Workflow.ComponentModel.ActivityExecutionContext.Activity" /> associated with this <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />.</exception>
      <exception cref="T:System.InvalidOperationException">The status is neither initialized nor <see cref="E:System.Workflow.ComponentModel.Activity.Closed" />.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> has been disposed.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityExecutionContext.GetService(System.Type)">
      <summary>Returns a service of the specified type.</summary>
      <param name="serviceType">The <see cref="T:System.Type" /> of the service.</param>
      <returns>A service <see cref="T:System.Object" /> of the specified <see cref="T:System.Type" />.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> has been disposed.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityExecutionContext.GetService``1">
      <summary>Returns a service provider of the specified <see cref="T:System.Type" />.</summary>
      <typeparam name="T">The specified type for which the provider is to be returned.</typeparam>
      <returns>A service provider <see cref="T:System.Object" /> of the specified <see cref="T:System.Type" />.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> has been disposed.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityExecutionContext.System#IDisposable#Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />. </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityExecutionContext.TrackData(System.Object)">
      <summary>Invokes the track method for the associated <see cref="P:System.Workflow.ComponentModel.ActivityExecutionContext.Activity" />.</summary>
      <param name="userData">An object that specifies the data to track.</param>
      <exception cref="T:System.ArgumentNullException">If <paramref name="userData" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ObjectDisposedException">If the <see cref="T:System.Workflow.ComponentModel.Activity" /> associated with this instance is a null reference (<see langword="Nothing" />).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityExecutionContext.TrackData(System.String,System.Object)">
      <summary>Invokes the track method for the associated <see cref="P:System.Workflow.ComponentModel.ActivityExecutionContext.Activity" />.</summary>
      <param name="userDataKey">The member of <paramref name="userData" /> to track.</param>
      <param name="userData">The data to track.</param>
      <exception cref="T:System.ArgumentNullException">If <paramref name="userData" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ObjectDisposedException">If the <see cref="T:System.Workflow.ComponentModel.Activity" /> associated with this instance is a null reference (<see langword="Nothing" />).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityExecutionContextManager.CompleteExecutionContext(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <summary>Marks an execution context as completed.</summary>
      <param name="childContext">The designated <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="childContext" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">
              <paramref name="childContext" /> is not contained in this instance's <see cref="P:System.Workflow.ComponentModel.ActivityExecutionContextManager.ExecutionContexts" />.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityExecutionContextManager.CompleteExecutionContext(System.Workflow.ComponentModel.ActivityExecutionContext,System.Boolean)">
      <summary>Marks an execution context as completed.</summary>
      <param name="childContext">The designated <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />.</param>
      <param name="forcePersist">
            <see langword="Boolean" /> that indicates whether the completed context will be persisted.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="childContext" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">
              <paramref name="childContext" /> is not contained in this instance's <see cref="P:System.Workflow.ComponentModel.ActivityExecutionContextManager.ExecutionContexts" />.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityExecutionContextManager.CreateExecutionContext(System.Workflow.ComponentModel.Activity)">
      <summary>Creates an <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> for the designated <see cref="T:System.Workflow.ComponentModel.Activity" />.</summary>
      <param name="activity">The designated <see cref="T:System.Workflow.ComponentModel.Activity" />.</param>
      <returns>The created <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> for the designated <see cref="T:System.Workflow.ComponentModel.Activity" />.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="activity" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">
              <paramref name="activity" /> is not a valid child activity of owner of this context.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityExecutionContextManager.GetExecutionContext(System.Workflow.ComponentModel.Activity)">
      <summary>Gets the <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> associated with the designated <see cref="T:System.Workflow.ComponentModel.Activity" />.</summary>
      <param name="activity">The designated <see cref="T:System.Workflow.ComponentModel.Activity" />.</param>
      <returns>The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> associated with the designated <see cref="T:System.Workflow.ComponentModel.Activity" />.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="activity" /> is a null reference (<see langword="Nothing" /> in Visual basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityExecutionContextManager.GetPersistedExecutionContext(System.Guid)">
      <summary>Retrieves the persisted <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> corresponding to the designated <see cref="T:System.Guid" />.</summary>
      <param name="contextGuid">The designated <see cref="T:System.Guid" />.</param>
      <returns>The persisted <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> corresponding to the designated <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs.ToString">
      <summary>Provides a <see cref="T:System.String" /> representing the current instance.</summary>
      <returns>A <see cref="T:System.String" /> representing the current instance.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.AddedActivityAction.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.AddedActivityAction" /> class. </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.AddedActivityAction.#ctor(System.Workflow.ComponentModel.CompositeActivity,System.Workflow.ComponentModel.Activity)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.AddedActivityAction" /> class by using a specified activity and composite activity.</summary>
      <param name="compositeActivity">The <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> that the <see cref="T:System.Workflow.ComponentModel.AddedActivityAction" /> is based on.</param>
      <param name="activityAdded">The <see cref="T:System.Workflow.ComponentModel.Activity" /> added to the workflow.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="compositeActivity" /> or <paramref name="activityAdded" /> are a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.AlternateFlowActivityAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.AlternateFlowActivityAttribute" /> class. </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.CancellationHandlerActivity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.CancellationHandlerActivity" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.CancellationHandlerActivity.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.CancellationHandlerActivity" /> class using the name of the activity. </summary>
      <param name="name">The user-defined name of the activity.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.CancellationHandlerActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <summary>Defines the processing procedure when the subscribed-to event occurs.</summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">The previously typed event arguments.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity" /> class. </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity" /> class using the name of the activity.</summary>
      <param name="name">The user-defined name of the activity.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <summary>Defines the processing procedure when the subscribed-to event occurs.</summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">The previously typed event arguments.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.System#Workflow#ComponentModel#ICompensatableActivity#Compensate(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <summary>Called by the workflow runtime to compensate an activity that is in the <see cref="F:System.Workflow.ComponentModel.ActivityExecutionStatus.Closed" /> state. The activity must have a value of <see cref="F:System.Workflow.ComponentModel.ActivityExecutionResult.Succeeded" /> for its <see cref="P:System.Workflow.ComponentModel.Activity.ExecutionResult" /> property in order to be compensatable. </summary>
      <param name="executionContext">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> for the operation.</param>
      <returns>The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> after operation has been tried. </returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompensateActivity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.CompensateActivity" /> class.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompensateActivity.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.CompensateActivity" /> class using the name of the activity.</summary>
      <param name="name">The user-defined name of the activity.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompensateActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <summary>Defines the processing procedure when the subscribed-to event occurs.</summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">The previously typed event arguments.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompensationHandlerActivity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.CompensationHandlerActivity" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompensationHandlerActivity.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.CompensationHandlerActivity" /> class using the name of the activity.</summary>
      <param name="name">A string that contains the name of this instance.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="activityName" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompensationHandlerActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <summary>Defines the processing procedure when the subscribed-to event occurs.</summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">The previously typed event arguments.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ActivityCodeGenerator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.ActivityCodeGenerator" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ActivityCodeGenerator.GenerateCode(System.Workflow.ComponentModel.Compiler.CodeGenerationManager,System.Object)">
      <summary>Generates code for the specified <see cref="T:System.Object" /> using the specific <see cref="T:System.Workflow.ComponentModel.Compiler.CodeGenerationManager" />.</summary>
      <param name="manager">The <see cref="T:System.Workflow.ComponentModel.Compiler.CodeGenerationManager" /> to use in the code generation.</param>
      <param name="obj">The <see cref="T:System.Object" /> to generate the code for.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="manager" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="obj" /> is a null reference (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentException">
              <paramref name="obj" /> cannot be cast to type <see cref="T:System.Workflow.ComponentModel.Activity" />.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ActivityCodeGenerator.GetCodeTypeDeclaration(System.Workflow.ComponentModel.Compiler.CodeGenerationManager,System.String)">
      <summary>Returns the code type declaration for the workflow that is currently being compiled. </summary>
      <param name="manager">The <see cref="T:System.Workflow.ComponentModel.Compiler.CodeGenerationManager" /> to use in the code generation.</param>
      <param name="fullClassName">The fully qualified class name of the workflow that is currently being compiled.</param>
      <returns>The <see cref="T:System.CodeDom.CodeTypeDeclaration" /> for the workflow that is currently being compiled.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ActivityCodeGeneratorAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.ActivityCodeGeneratorAttribute" /> class, also initializing the <see cref="P:System.Workflow.ComponentModel.Compiler.ActivityCodeGeneratorAttribute.CodeGeneratorTypeName" />. </summary>
      <param name="codeGeneratorTypeName">The specified value for <see cref="P:System.Workflow.ComponentModel.Compiler.ActivityCodeGeneratorAttribute.CodeGeneratorTypeName" />.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="codeGeneratorTypeName" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ActivityCodeGeneratorAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.ActivityCodeGeneratorAttribute" /> class from a code generator <see cref="T:System.Type" />.</summary>
      <param name="codeGeneratorType">The <see cref="T:System.Type" /> to initialize the instance from.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="codeGeneratorType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">
              <paramref name="codeGeneratorType" /> is not assignable to the type of a code generator.</exception>
      <exception cref="T:System.ArgumentException">
              <paramref name="codeGeneratorType" /> has no default constructor.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ActivityValidator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.ActivityValidator" /> class. </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ActivityValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
      <summary>Verifies that the given activity is valid. </summary>
      <param name="manager">The <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationManager" /> associated with validation.</param>
      <param name="obj">The <see cref="T:System.Workflow.ComponentModel.Activity" /> to be validated. </param>
      <returns>A <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" /> object that contains any errors or warnings that occurred during validation.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ActivityValidatorAttribute.#ctor(System.String)">
      <summary>Initializes an instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.ActivityValidatorAttribute" /> class by using the type of the validator.</summary>
      <param name="validatorTypeName">Type of the <see cref="T:System.Workflow.ComponentModel.Compiler.Validator" />.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ActivityValidatorAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.ActivityValidatorAttribute" /> class by using the specified validator type name.</summary>
      <param name="validatorType">The name of the <see cref="T:System.Workflow.ComponentModel.Compiler.Validator" /> type.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.AttributeInfo.CreateAttribute">
      <summary>Creates an attribute of type Creates an attribute of type <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" />.</summary>
      <returns>An attribute of type <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" />.</returns>
      <exception cref="T:System.ArgumentException">
              <see cref="P:System.Workflow.ComponentModel.Compiler.AttributeInfo.Creatable" /> is <see langword="false" />. </exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.AttributeInfo.GetArgumentValueAs(System.IServiceProvider,System.Int32,System.Type)">
      <summary>Gets the argument for this instance, based on type and index.</summary>
      <param name="serviceProvider">The <see cref="T:System.IServiceProvider" /> helping this operation.</param>
      <param name="argumentIndex">The <see langword="integer" /> index of the requested argument in the collection of arguments.</param>
      <param name="requestedType">The <see cref="T:System.Type" /> of the argument.</param>
      <returns>An <see cref="T:System.Object" /> cast to the requested type.</returns>
      <exception cref="T:System.ArgumentException">
              <paramref name="argumentIndex" /> is out of range of the argument collection.</exception>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="requestedType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.AuthorizedType.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.AuthorizedType" /> class. </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.BindValidationContext.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.BindValidationContext" /> class, while initializing the <see cref="T:System.Type" /> of the target of the <see cref="T:System.Workflow.ComponentModel.ActivityBind" />.</summary>
      <param name="targetType">The <see cref="T:System.Type" /> of the target of the <see cref="T:System.Workflow.ComponentModel.ActivityBind" />. </param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.BindValidationContext.#ctor(System.Type,System.Workflow.ComponentModel.Compiler.AccessTypes)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.BindValidationContext" /> class, initializing the <see cref="T:System.Type" /> and the <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" /> of the target of the bind represented by this instance.</summary>
      <param name="targetType">The <see cref="T:System.Type" /> of the target of the <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> represented by this instance.</param>
      <param name="access">The <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" /> of the target of the <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> represented by this instance.</param>
      <exception cref="T:System.ArgumentNullException"> Is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.CodeGenerationManager.#ctor(System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.CodeGenerationManager" /> class by using an existing <see cref="T:System.IServiceProvider" /> type. </summary>
      <param name="serviceProvider">The <see cref="T:System.IServiceProvider" /> to use in this instance.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.CodeGenerationManager.GetCodeGenerators(System.Type)">
      <summary>Gets an array that contains each <see cref="T:System.Workflow.ComponentModel.Compiler.ActivityCodeGenerator" /> associated with the specified <see cref="T:System.Type" />.</summary>
      <param name="type">The <see cref="T:System.Type" /> required.</param>
      <returns>An array that contains each <see cref="T:System.Workflow.ComponentModel.Compiler.ActivityCodeGenerator" /> associated with the specified <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.CodeGenerationManager.GetService(System.Type)">
      <summary>Provides access to the service object of the specified type.</summary>
      <param name="serviceType">The desired <see cref="T:System.Type" />.</param>
      <returns>The service object of the specified type.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.CompileWorkflowCleanupTask.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.CompileWorkflowCleanupTask" /> class.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.CompileWorkflowCleanupTask.Execute">
      <summary>Erases the contents of the files specified in the <see cref="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowCleanupTask.TemporaryFiles" /> property, without deleting the files.</summary>
      <returns>
          <see langword="true" /> if the task successfully executed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask" /> class. </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.Execute">
      <summary>Runs the compilation of the workflow task.</summary>
      <returns>
          <see langword="true" /> if the operation was successful; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.CompositeActivityCodeGenerator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.CompositeActivityCodeGenerator" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.CompositeActivityCodeGenerator.GenerateCode(System.Workflow.ComponentModel.Compiler.CodeGenerationManager,System.Object)">
      <summary>Generates code for the specified <see cref="T:System.Object" /> using the specific <see cref="T:System.Workflow.ComponentModel.Compiler.CodeGenerationManager" />. </summary>
      <param name="manager">The <see cref="T:System.Workflow.ComponentModel.Compiler.CodeGenerationManager" /> to use in code generation.</param>
      <param name="obj">The <see cref="T:System.Object" /> to generate code for.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="manager" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="obj" /> is a null reference (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentException">
              <paramref name="obj" /> cannot be cast to type <see cref="T:System.Workflow.ComponentModel.CompositeActivity" />.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.CompositeActivityValidator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.CompositeActivityValidator" /> class. </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.CompositeActivityValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
      <summary>Validates the <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> configuration.</summary>
      <param name="manager">The <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationManager" /> linked to the validation.</param>
      <param name="obj">Activity to be validated.</param>
      <returns>A <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" /> of errors found during validation.</returns>
      <exception cref="T:System.ArgumentException">
              <paramref name="obj" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.CompositeActivityValidator.ValidateActivityChange(System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.ActivityChangeAction)">
      <summary>Validates the change based on the affected <see cref="T:System.Workflow.ComponentModel.Activity" /> and provides the error.</summary>
      <param name="activity">The affected <see cref="T:System.Workflow.ComponentModel.Activity" />.</param>
      <param name="action">The <see cref="T:System.Workflow.ComponentModel.ActivityChangeAction" /> that defines the change.</param>
      <returns>The <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationError" /> by the validation.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="activity" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="action" /> is a null reference (<see langword="Nothing" />).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ConditionValidator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.ConditionValidator" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ConditionValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
      <summary>Validates the specified object using the specified <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationManager" />. </summary>
      <param name="manager">The <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationManager" /> to use for this validation.</param>
      <param name="obj">The <see cref="T:System.Object" /> to validate.</param>
      <returns>A <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" /> that contains the errors from this operation.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="manager" /> is a null reference (Visual Basic <see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="obj" /> is a null reference (Visual Basic <see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentException">
              <paramref name="obj" /> cannot be cast to type <see cref="T:System.Workflow.ComponentModel.ActivityCondition" />.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.DependencyObjectValidator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.DependencyObjectValidator" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.DependencyObjectValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
      <summary>Validates each settable <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> of the specified <see cref="T:System.Object" /> using the specified <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationManager" />. </summary>
      <param name="manager">The <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationManager" /> to use in the validation.</param>
      <param name="obj">The <see cref="T:System.Object" /> to be validated.</param>
      <returns>A <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" /> that contains the errors from this operation.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="manager" /> is a null reference (Visual Basic <see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="obj" /> is a null reference (Visual Basic <see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentException">
              <paramref name="obj" /> cannot be cast to type <see cref="T:System.Workflow.ComponentModel.DependencyObject" />.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ITypeProvider.GetType(System.String)">
      <summary>Gets the <see cref="T:System.Type" /> of the named entity.</summary>
      <param name="name">A string that contains the name of the entity.</param>
      <returns>The <see cref="T:System.Type" /> of the named entity. </returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ITypeProvider.GetType(System.String,System.Boolean)">
      <summary>Gets the <see cref="T:System.Type" /> of the named entity.</summary>
      <param name="name">A string that contains the name of the entity.</param>
      <param name="throwOnError">A value that indicates whether to throw an exception if <paramref name="name" /> is not resolvable.</param>
      <returns>The <see cref="T:System.Type" /> of the named entity.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ITypeProvider.GetTypes">
      <summary>Creates and returns an array which contains each <see cref="T:System.Type" /> known to this instance.</summary>
      <returns>An array which contains each <see cref="T:System.Type" /> known to this instance.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.PropertyValidationContext.#ctor(System.Object,System.Reflection.PropertyInfo,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.PropertyValidationContext" /> class. </summary>
      <param name="propertyOwner">The <see cref="T:System.Object" /> that owns the property</param>
      <param name="propertyInfo">The associated <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</param>
      <param name="propertyName">The name of the property.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="propertyOwner" /> is a null reference (Visual Basic <see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="propertyName" /> is a null reference (Visual Basic <see langword="Nothing" />).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.PropertyValidationContext.#ctor(System.Object,System.Workflow.ComponentModel.DependencyProperty)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.PropertyValidationContext" /> class.  </summary>
      <param name="propertyOwner">The <see cref="T:System.Object" /> that owns the property.</param>
      <param name="dependencyProperty">The associated <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="propertyOwner" /> is a null reference (Visual Basic <see langword="Nothing" />).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.TypeProvider.#ctor(System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.TypeProvider" /> class.  </summary>
      <param name="serviceProvider">The encapsulated <see cref="T:System.IServiceProvider" /> for this instance.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly(System.Reflection.Assembly)">
      <summary>Adds an already-loaded assembly. It is the caller's responsibility to load the assembly, and <see cref="T:System.Workflow.ComponentModel.Compiler.TypeProvider" /> includes the types from this assembly for dispensing when <see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType" /> is called.</summary>
      <param name="assembly">The <see cref="P:System.Type.Assembly" /> to add a reference for.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="assembly" /> is a null reference (Visual Basic <see langword="Nothing" />).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference(System.String)">
      <summary>Adds a reference to the <see cref="P:System.Type.Assembly" /> to the internal list. This assembly is used for the <see cref="T:System.Type" /> lookup in the <see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String)" /> method.</summary>
      <param name="path">The path of the <see cref="P:System.Type.Assembly" /> to add.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="path" /> is a null reference (Visual Basic <see langword="Nothing" />).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit(System.CodeDom.CodeCompileUnit)">
      <summary>Adds a reference to the <see cref="T:System.CodeDom.CodeCompileUnit" /> to the internal list. This <see cref="T:System.CodeDom.CodeCompileUnit" /> is used for the <see cref="T:System.Type" /> lookup in the <see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String)" /> method.</summary>
      <param name="codeCompileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to add.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="codeCompileUnit" /> is a null reference (Visual Basic <see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentException">
              <paramref name="codeCompileUnit" /> is already referenced in this instance.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.TypeProvider.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Workflow.ComponentModel.Compiler.TypeProvider" />. </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetAssemblyName(System.Type)">
      <summary>Returns the assembly display name of the assembly in which the specified type is declared.</summary>
      <param name="type">The type whose assembly name to get.</param>
      <returns>The assembly display name of the assembly in which the specified type is declared.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetEnumNames(System.Type)">
      <summary>Provides a string array that contains the names for the specified <see cref="T:System.Enum" /> in indexed order.</summary>
      <param name="enumType">The type to obtain the names from.</param>
      <returns>The names for the specified <see cref="T:System.Enum" /> in indexed order.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="enumType" /> is a null reference (Visual Basic <see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentException">
              <paramref name="enumType" /> Is not an <see cref="T:System.Enum" />.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetEventHandlerType(System.Reflection.EventInfo)">
      <summary>Gets the <see cref="T:System.Type" /> of an <see cref="T:System.EventHandler" />, given a reference to an <see cref="T:System.Reflection.EventInfo" />.</summary>
      <param name="eventInfo">The <see cref="T:System.Reflection.EventInfo" /> to obtain the <see cref="T:System.EventHandler" /> type of.</param>
      <returns>The <see cref="T:System.Type" /> of an <see cref="T:System.EventHandler" />, given a reference to an <see cref="T:System.Reflection.EventInfo" />.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="eventInfo" /> is a null reference (Visual Basic <see langword="Nothing" />).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetService(System.Type)">
      <summary>Gets the <see cref="T:System.Object" /> that provides the designated service <see cref="T:System.Type" />.</summary>
      <param name="serviceType">The service <see cref="T:System.Type" /> that the <see cref="T:System.Object" /> is to provide.</param>
      <returns>The <see cref="T:System.Object" /> that provides the designated service <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String)">
      <summary>Gets the type from the set of assemblies added to the <see langword="TypeProvider" /> using <see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly(System.Reflection.Assembly)" />, <see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference(System.String)" />, or <see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit(System.CodeDom.CodeCompileUnit)" />. </summary>
      <param name="name">The type name.</param>
      <returns>The requested <see cref="T:System.Type" />.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="name" /> is a null reference (<see langword="Nothing" /> in Visual Basic)</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String,System.Boolean)">
      <summary>Gets the type from the set of assemblies added to the <see langword="TypeProvider" /> using <see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly(System.Reflection.Assembly)" />, <see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference(System.String)" />, or <see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit(System.CodeDom.CodeCompileUnit)" />.</summary>
      <param name="name">The type name.</param>
      <param name="throwOnError">A value that indicates whether to throw an exception if <paramref name="name" /> is not resolvable.</param>
      <returns>The requested <see cref="T:System.Type" />.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="name" /> is a null reference (<see langword="Nothing" /> in Visual Basic)</exception>
      <exception cref="T:System.Exception">
              <paramref name="name" /> is not resolvable and <paramref name="throwOnError" /> is <see langword="true" />.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetTypes">
      <summary>Creates an array that contains each <see cref="T:System.Type" /> known to this instance.</summary>
      <returns>An array that contains each <see cref="T:System.Type" /> known to this instance.</returns>
      <exception cref="T:System.Reflection.ReflectionTypeLoadException">Any <see cref="T:System.Type" /> fails to load.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsAssignable(System.Type,System.Type)">
      <summary>Indicates whether one type can be safely assigned to another type.</summary>
      <param name="toType">The target <see cref="T:System.Type" /> of the assignment.</param>
      <param name="fromType">The source <see cref="T:System.Type" /> of the assignment.</param>
      <returns>
          <see langword="true" /> if the assignment can be safely made; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsEnum(System.Type)">
      <summary>Indicates whether a <see cref="T:System.Type" /> is of type <see cref="T:System.Enum" /> .</summary>
      <param name="type">The <see cref="T:System.Type" /> to be tested.</param>
      <returns>
          <see langword="true" /> if the <see cref="T:System.Type" /> is an <see cref="T:System.Enum" /> ; otherwise <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="type" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsSubclassOf(System.Type,System.Type)">
      <summary>Indicates whether a <see cref="T:System.Type" /> is a derived class of another <see cref="T:System.Type" /> .</summary>
      <param name="subclass">The <see cref="T:System.Type" /> being tested as a derived class. </param>
      <param name="superClass">The <see cref="T:System.Type" /> being tested as the class. </param>
      <returns>
          <see langword="true" /> if the tested relationship is true; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedProperty(System.Reflection.PropertyInfo,System.Object)">
      <summary>Returns a value that determines whether the specified property is supported in the target .NET Framework.</summary>
      <param name="property">The property to resolve.</param>
      <param name="declaringInstance">The instance in which the specified property is declared.</param>
      <returns>
          <see langword="true" /> if the specified property is supported in the target .NET Framework; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RefreshCodeCompileUnit(System.CodeDom.CodeCompileUnit,System.EventHandler)">
      <summary>Updates the <see cref="T:System.CodeDom.CodeCompileUnit" /> reference associated with this instance.</summary>
      <param name="codeCompileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to refresh with.</param>
      <param name="refresher">The <see cref="T:System.EventHandler" /> to delegate this event to.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="codeCompileUnit" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">This instance already references the subject <see cref="T:System.CodeDom.CodeCompileUnit" />.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssembly(System.Reflection.Assembly)">
      <summary>Removes all references to the subject <see cref="T:System.Reflection.Assembly" /> from this instance.</summary>
      <param name="assembly">The <see cref="T:System.Reflection.Assembly" /> to remove from this instance.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="assembly" /> is a null reference (<see langword="Nothing" /> in Visual Basic)</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssemblyReference(System.String)">
      <summary>Removes a path-based <see cref="T:System.Reflection.Assembly" /> reference from this instance.</summary>
      <param name="path">The path of the <see cref="T:System.Reflection.Assembly" /> to be removed.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="path" /> is a null reference (<see langword="Nothing" /> in Visual Basic)</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveCodeCompileUnit(System.CodeDom.CodeCompileUnit)">
      <summary>Removes all references to the subject <see cref="T:System.CodeDom.CodeCompileUnit" /> from this instance.</summary>
      <param name="codeCompileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to be removed.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="codeCompileUnit" /> is a null reference (<see langword="Nothing" /> in Visual Basic)</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.TypeProvider.SetLocalAssembly(System.Reflection.Assembly)">
      <summary>Sets the value of the local <see cref="T:System.Reflection.Assembly" /> to the referenced <see cref="T:System.Reflection.Assembly" /> .</summary>
      <param name="assembly">The <see cref="T:System.Reflection.Assembly" /> used to set this value</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ValidationError.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationError" /> class; initializes the error text and error numbers for this instance. </summary>
      <param name="errorText">The associated error text for this instance.</param>
      <param name="errorNumber">The error number for this error.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ValidationError.#ctor(System.String,System.Int32,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationError" /> class, initializes the error text, error number and error type for this instance.</summary>
      <param name="errorText">The associated error text for this instance.</param>
      <param name="errorNumber">The error number for this error.</param>
      <param name="isWarning">A Boolean which is <see langword="true" /> if the error is considered a warning and <see langword="false" /> otherwise.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ValidationError.#ctor(System.String,System.Int32,System.Boolean,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationError" /> class, initializing the error text, the error number, the error type and the property name associated with the error.</summary>
      <param name="errorText">The associated error text for this instance.</param>
      <param name="errorNumber">The error number for this error.</param>
      <param name="isWarning">A Boolean which is <see langword="true" /> if the error is considered a warning and <see langword="false" /> otherwise.</param>
      <param name="propertyName">The name of the property associated with this error.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ValidationError.GetNotSetValidationError(System.String)">
      <summary>Creates a new validation error defined for the error type of a property not being set.</summary>
      <param name="propertyName">The property associated with this error.</param>
      <returns>A new validation error defined for the error type of a property not being set.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ValidationError.ToString">
      <summary>Provides a string representation of this instance incorporating the error type (error or warning) the error number and the error text.</summary>
      <returns>A string representation of this instance incorporating the error type (error or warning) the error number and the error text.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection.#ctor(System.Collections.Generic.IEnumerable{System.Workflow.ComponentModel.Compiler.ValidationError})">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" /> class from an <see cref="T:System.Collections.IEnumerable" /> collection of type <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationError" /></summary>
      <param name="value">The <see cref="T:System.Collections.IEnumerable" /> collection of type <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationError" /></param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="value" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection.#ctor(System.Workflow.ComponentModel.Compiler.ValidationErrorCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" /> class by using a <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" />.</summary>
      <param name="value">A <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" /> that contains validation errors.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection.AddRange(System.Collections.Generic.IEnumerable{System.Workflow.ComponentModel.Compiler.ValidationError})">
      <summary>Copies the collection of enumerable elements to the end of the collection.</summary>
      <param name="value">A collection of <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationError" /> elements to add to the end of the <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" /> collection.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="value" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection.ToArray">
      <summary>Returns a new instance of an array that contains all <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationError" /> objects that are contained in this collection.</summary>
      <returns>A <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationError" /> array of <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationError" /> classes.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ValidationManager.#ctor(System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationManager" /> class using the identified service provider.</summary>
      <param name="serviceProvider">An <see cref="T:System.IServiceProvider" /> that locates a GUID identified service. </param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ValidationManager.#ctor(System.IServiceProvider,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationManager" /> class using the identified service provider and indicates whether child <see cref="T:System.Workflow.ComponentModel.Activity" /> classes should be validated.</summary>
      <param name="serviceProvider">An <see cref="T:System.IServiceProvider" /> that locates a GUID identified service.</param>
      <param name="validateChildActivities">
            <see langword="true" /> to validate the child <see cref="T:System.Workflow.ComponentModel.Activity" /> classes of the current <see cref="T:System.Workflow.ComponentModel.Activity" />; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ValidationManager.GetService(System.Type)">
      <summary>Gets the service object of the specified <see cref="T:System.Type" />.</summary>
      <param name="serviceType">An object that specifies the <see cref="T:System.Type" /> of service object to retrieve.</param>
      <returns>A service object of type <paramref name="serviceType" />, or a null reference (<see langword="Nothing" /> in Visual Basic) if there is no service object of type <paramref name="serviceType" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ValidationManager.GetValidators(System.Type)">
      <summary>Returns an array of validators that are associated with a type by looking up the validator attribute applied on the type.</summary>
      <param name="type">The <see cref="T:System.Type" /> of <see cref="T:System.Workflow.ComponentModel.Compiler.Validator" /> class to find.</param>
      <returns>An array of <see cref="T:System.Workflow.ComponentModel.Compiler.Validator" /> classes.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ValidationOptionAttribute.#ctor(System.Workflow.ComponentModel.Compiler.ValidationOption)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationOptionAttribute" /> class, with a value for <see cref="P:System.Workflow.ComponentModel.Compiler.ValidationOptionAttribute.ValidationOption" />.</summary>
      <param name="validationOption">The required <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationOption" /> enumeration value for this instance.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.Validator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.Validator" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.Validator.GetFullPropertyName(System.Workflow.ComponentModel.Compiler.ValidationManager)">
      <summary>Helper method to extract the full property name. </summary>
      <param name="manager">The <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationManager" /> linked to the validation.</param>
      <returns>The full property name.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="manager" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.Validator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
      <summary>Validates the specified object and returns a collection of validation errors.</summary>
      <param name="manager">The validation manager linked to the validation.</param>
      <param name="obj">The <see cref="T:System.Object" /> to be validated.</param>
      <returns>A <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" /> that contains the validation errors resulting from this operation.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="manager" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="obj" /> is a null reference (<see langword="Nothing" />).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateActivityChange(System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.ActivityChangeAction)">
      <summary>When overridden in a derived class, validates a change based on a specified <see cref="T:System.Workflow.ComponentModel.Activity" /> being added or removed. This function is called during the application of changes that are made to the workflow during dynamic updates.</summary>
      <param name="activity">The specified <see cref="T:System.Workflow.ComponentModel.Activity" />.</param>
      <param name="action">The specified <see cref="T:System.Workflow.ComponentModel.ActivityChangeAction" />.</param>
      <returns>The <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationError" /> generated by the operation.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="activity" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="action" /> is a null reference (<see langword="Nothing" />).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateProperties(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
      <summary>Helper method to automatically validate the specific objects properties.</summary>
      <param name="manager">The validation manager linked to the validation.</param>
      <param name="obj">The <see cref="T:System.Workflow.ComponentModel.Activity" /> to be validated.</param>
      <returns>A <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" /> that contains the validation errors resulting from this operation.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="manager" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="obj" /> is a null reference (<see langword="Nothing" />).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateProperty(System.Reflection.PropertyInfo,System.Object,System.Object,System.Workflow.ComponentModel.Compiler.ValidationManager)">
      <summary>Performs validation on a property and returns a <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" /> that contains the results of that validation.</summary>
      <param name="propertyInfo">The <see cref="T:System.Reflection.PropertyInfo" /> on the subject property.</param>
      <param name="propertyOwner">The owner of the property.</param>
      <param name="propertyValue">The value of the property.</param>
      <param name="manager">A <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationManager" /> for this operation.</param>
      <returns>A <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" /> that contains the results of that validation.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.CreateScope(System.IServiceProvider)">
      <summary>Initializes a <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext" /> class at the current scope.</summary>
      <param name="serviceProvider">The workflow compiler options for the current scope.</param>
      <returns>A reference to the scope.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.GetAuthorizedTypes">
      <summary>Returns a list of types that the compiler allows in compiled workflows.</summary>
      <returns>A list of types that the compiler allows in compiled workflows.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.WorkflowCompiler.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowCompiler" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.WorkflowCompiler.Compile(System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters,System.String[])">
      <summary>Compiles a list of workflows contained in the files that are passed as parameters based on the <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters" />.</summary>
      <param name="parameters">The <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters" />.</param>
      <param name="files">A string array that contains the paths to the files to compile. These files can be either code files (such as .vb or .cs) or workflow markup files. Workflow markup files must have an .xoml extension to be recognized by the compiler.</param>
      <returns>The <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilerResults" /> representing the results of the operation.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="parameters" /> is a null reference (Visual Basic <see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="files" /> is a null reference (Visual Basic <see langword="Nothing" />).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.WorkflowCompilerError.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilerError" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.WorkflowCompilerError.#ctor(System.String,System.Int32,System.Int32,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilerError" /> class.  Includes initialization for several properties which define the error.</summary>
      <param name="fileName">A string containing the name of the source file that has the error.</param>
      <param name="line">An integer representing the line number of the error.</param>
      <param name="column">An integer representing the column position of the start of the error.</param>
      <param name="errorNumber">A string that contains the error number.</param>
      <param name="errorText">A string that contains text which describes the error.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.WorkflowCompilerError.#ctor(System.String,System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilerError" /> class.  Initializes the instance to define the source file name and <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException" />.</summary>
      <param name="fileName">A string that contains the name of the source file that has the error.</param>
      <param name="exception">The <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException" /> to associate with this instance.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="exception" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.WorkflowCompilerError.ToString">
      <summary>Provides a string which represents this instance.</summary>
      <returns>A string which represents this instance/</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.WorkflowCompilerOptionsService.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilerOptionsService" /> class.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters.#ctor(System.String[])">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters" /> class, with the names of the assemblies used in compilation.</summary>
      <param name="assemblyNames">The names of the assemblies used in compilation. </param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters.#ctor(System.String[],System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters" /> class, with the names of the assemblies used in compilation, and the name to apply to the output file.</summary>
      <param name="assemblyNames">The names of the assemblies used in compilation.</param>
      <param name="outputName">The name to apply to the output file.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters.#ctor(System.String[],System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters" /> class, with the names of the assemblies used in compilation, and the name to apply to the output file, and the designator for inclusion of debug information.</summary>
      <param name="assemblyNames">The names of the assemblies used in compilation.</param>
      <param name="outputName">The name to apply to the output file.</param>
      <param name="includeDebugInformation">Indicates whether a PDB file should be generated for debugging.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters.#ctor(System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters" /> class from an existing instance.</summary>
      <param name="parameters">The instance of <see cref="System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters)" /> used to initialize the new instance.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.WorkflowMarkupSourceAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowMarkupSourceAttribute" /> class, initializing the values of <see cref="P:System.Workflow.ComponentModel.Compiler.WorkflowMarkupSourceAttribute.FileName" /> and <see cref="P:System.Workflow.ComponentModel.Compiler.WorkflowMarkupSourceAttribute.MD5Digest" />.</summary>
      <param name="fileName">A string that contains the file name of the mark up file.</param>
      <param name="md5Digest">A string representing the <see cref="P:System.Workflow.ComponentModel.Compiler.WorkflowMarkupSourceAttribute.MD5Digest" />for the file.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException" /> class.  The exception message is passed as a parameter.</summary>
      <param name="message">The exception message.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException" /> class.  The exception message and the inner exception are passed as parameters. </summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The <see cref="P:System.Exception.InnerException" /> associated with this exception.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException.#ctor(System.String,System.Workflow.ComponentModel.Compiler.ValidationErrorCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException" /> class.  The exception message and the errors collection are passed as parameters.</summary>
      <param name="message">The exception message.</param>
      <param name="errors">The <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" /> associated with this exception.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException" />. </summary>
      <param name="info">Reference to the object that holds the data needed to serialize and deserialize the exception.</param>
      <param name="context">Provides the means to serialize the exception data.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompositeActivity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompositeActivity.#ctor(System.Collections.Generic.IEnumerable{System.Workflow.ComponentModel.Activity})">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> class from an <see cref="T:System.Object" /> which implements the <see cref="T:System.Collections.IEnumerable" /> interface with type <see cref="T:System.Workflow.ComponentModel.Activity" />.</summary>
      <param name="children">The <see cref="T:System.Object" /> implementing the <see cref="T:System.Collections.IEnumerable" /> interface with type <see cref="T:System.Workflow.ComponentModel.Activity" />.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompositeActivity.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> class, along with the name for that activity.</summary>
      <param name="name">The name for the instance.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="name" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)">
      <summary>Applies the <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /> manifest in the parameter to this instance.</summary>
      <param name="workflowChanges">The <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /> to apply.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="workflowChanges" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)">
      <summary>Calls <see cref="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" /> on this instance, and optionally calls <see cref="M:System.Workflow.ComponentModel.DependencyObject.Dispose" /> on all child activities of this instance.</summary>
      <param name="disposing">
            <see langword="true" /> to release both managed and unmanaged resources used by this instance and all child activities of this instance; <see langword="false" /> to release only the unmanaged resources of this instance.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)">
      <summary>Returns an array that contains all of the currently executing instances of the specified activity.</summary>
      <param name="activity">The specified <see cref="T:System.Workflow.ComponentModel.Activity" />.</param>
      <returns>An array of activity instances that are currently executing.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)">
      <summary>Called when an exception is raised within the context of the execution of this instance.</summary>
      <param name="executionContext">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> for this instance.</param>
      <param name="exception">The <see cref="T:System.Exception" /> that caused this fault.</param>
      <returns>The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> that results from an attempt to cancel this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="executionContext" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="exception" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)">
      <summary>Initializes all appropriate child activities of this instance and the specified <see cref="T:System.IServiceProvider" />.</summary>
      <param name="provider">The specified <see cref="T:System.IServiceProvider" />.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="provider" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)">
      <summary>Calls when an activity is added.</summary>
      <param name="executionContext">The specified <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />.</param>
      <param name="addedActivity">The specified <see cref="T:System.Workflow.ComponentModel.Activity" />.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="executionContext" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="addedActivity" /> is a null reference (<see langword="Nothing" />).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)">
      <summary>Called when an activity is removed.</summary>
      <param name="executionContext">The specified <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />.</param>
      <param name="removedActivity">The specified <see cref="T:System.Workflow.ComponentModel.Activity" />.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)">
      <summary>Called by the workflow runtime engine every time the <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> for this activity is loaded.</summary>
      <param name="provider">An <see cref="T:System.Object" /> that implements <see cref="T:System.IServiceProvider" /> and provides services to this instance.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)">
      <summary>Called by the workflow runtime engine every time the <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> for this activity is unloaded.</summary>
      <param name="provider">An <see cref="T:System.Object" /> that implements <see cref="T:System.IServiceProvider" /> and provides services to this instance.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)">
      <summary>Performs additional processing when the <see cref="P:System.Workflow.ComponentModel.CompositeActivity.Activities" /> property changes.</summary>
      <param name="e">The <see cref="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" /> broadcast by the event.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)">
      <summary>Event that occurs before a change being made to the underlying <see cref="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />.</summary>
      <param name="e">
            <see cref="T:System.EventArgs" /> relating to the event.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <summary>Called after changes have been made to the collection <see cref="P:System.Workflow.ComponentModel.CompositeActivity.Activities" /> of this instance.</summary>
      <param name="rootContext">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> associated with this instance.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)">
      <summary>Called by the workflow runtime engine when an activity transitions into the <see cref="F:System.Workflow.ComponentModel.ActivityExecutionStatus.Closed" /> state from the <see cref="F:System.Workflow.ComponentModel.ActivityExecutionStatus.Initialized" /> state.</summary>
      <param name="provider">An <see cref="T:System.Object" /> that implements <see cref="T:System.IServiceProvider" /> and provides services to this instance.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyObject.#ctor">
      <summary>When implemented in a derived class, initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
      <summary>Adds a handler for an event of a <see cref="T:System.Workflow.ComponentModel.DependencyObject" />.</summary>
      <param name="dependencyEvent">The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />. </param>
      <param name="value">The <see cref="T:System.Object" /> that represents the value of this property. In this case, a <see cref="T:System.Delegate" /> type.</param>
      <exception cref="T:System.ArgumentNullException">Either of the arguments is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">Value is of incorrect <see cref="T:System.Type" />.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="dependencyEvent" /> represents a non-event <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyObject.Dispose">
      <summary>Releases all the resources used by the <see cref="T:System.Workflow.ComponentModel.DependencyObject" />.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources and optionally releases the managed resources used by <see cref="T:System.Workflow.ComponentModel.DependencyObject" />.</summary>
      <param name="disposing">
            <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyObject.Finalize">
      <summary>Provided as an override to <see cref="M:System.Object.Finalize" /> to clean up any unmanaged resources deterministically.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)">
      <summary>Provides access to the <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> associated with the specific <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</summary>
      <param name="dependencyProperty">The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</param>
      <returns>The <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> associated with the specific <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)">
      <summary>Retrieves the <see cref="T:System.Object" /> that is the subject of an <see cref="T:System.Workflow.ComponentModel.ActivityBind" />.</summary>
      <param name="bind">The <see cref="T:System.Workflow.ComponentModel.ActivityBind" />.</param>
      <param name="targetType">The <see cref="T:System.Type" /> of the target of the <see cref="T:System.Workflow.ComponentModel.ActivityBind" />.</param>
      <returns>The <see cref="T:System.Object" /> that is the subject of an <see cref="T:System.Workflow.ComponentModel.ActivityBind" />.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="bind" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="targetType" /> is a null reference (<see langword="Nothing" />).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)">
      <summary>Gets an array that contains the delegates for the specified <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</summary>
      <param name="dependencyEvent">The specified <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</param>
      <typeparam name="T">The type of the returned delegates.</typeparam>
      <returns>An array that contains the delegates for the specified <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="dependencyEvent" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">
              <paramref name="dependencyEvent" /> does not correspond to an event.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)">
      <summary>Provides access to the value of the designated <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</summary>
      <param name="dependencyProperty">The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</param>
      <returns>The object that represents the value of the designated <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)">
      <summary>Provides access to the bound object of a <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> and bypasses the <see cref="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" /> override.</summary>
      <param name="dependencyProperty">The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> to get the value of.</param>
      <returns>The bound object of a <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />. This bypasses the <see cref="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" /> override.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="dependencyProperty" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties">
      <summary>Performs initialization on dependency properties when overridden in a derived class.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)">
      <summary>Indicates whether the value of a <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> is set as a binding. See <see cref="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />.</summary>
      <param name="dependencyProperty">The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> to test.</param>
      <returns>
          <see langword="true" /> if set as a binding; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="dependencyProperty" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)">
      <summary>Determines whether the <see langword="metaproperties" /> of this <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> equals the <see langword="metaproperties" /> of the parameterized <see cref="T:System.Workflow.ComponentModel.DependencyObject" />.</summary>
      <param name="dependencyObject">The <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> to compare with for equality.</param>
      <returns>
          <see langword="true" /> if the <see langword="metaproperties" /> are equal; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
      <summary>Removes an <see cref="T:System.EventHandler" /> from an associated <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</summary>
      <param name="dependencyEvent">The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</param>
      <param name="value">The <see cref="T:System.Object" /> that represents the value of this property. In this case, a <see cref="T:System.Delegate" /> type.</param>
      <exception cref="T:System.ArgumentNullException">Either of the arguments is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="dependencyEvent" /> is a <see langword="metaproperty" />.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="dependencyEvent" /> is not an event.</exception>
      <exception cref="T:System.Data.ReadOnlyException">The <paramref name="value" /> is a <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> and this instance is not in <see cref="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)">
      <summary>Removes a <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> from the <see cref="T:System.Workflow.ComponentModel.DependencyObject" />.</summary>
      <param name="dependencyProperty">The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> to be removed.</param>
      <returns>
          <see langword="true" /> if operation was successful; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">The argument is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)">
      <summary>Sets the <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> for the specified <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />. </summary>
      <param name="dependencyProperty">The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</param>
      <param name="bind">The <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> to set to.</param>
      <exception cref="T:System.ArgumentNullException">Either of the arguments is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> associated with the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> is read-only.</exception>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> associated with the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> is metadata.</exception>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> associated with the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> is not bindable.</exception>
      <exception cref="T:System.InvalidOperationException">This instance is not in <see cref="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)">
      <summary>Sets the value of the target <see cref="T:System.Workflow.ComponentModel.ActivityBind" />.</summary>
      <param name="bind">The <see cref="T:System.Workflow.ComponentModel.ActivityBind" />.</param>
      <param name="value">The <see cref="T:System.Object" /> to set the target of the <see cref="T:System.Workflow.ComponentModel.ActivityBind" />.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="bind" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
      <summary>Sets the value of a <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, which is read-only.</summary>
      <param name="dependencyProperty">The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</param>
      <param name="value">The <see cref="T:System.Object" /> that represents the value.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="dependencyProperty" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
      <summary>Sets the value of the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> to the object.</summary>
      <param name="dependencyProperty">The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> to be set.</param>
      <param name="value">The <see cref="T:System.Object" /> to set the value to.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
      <summary>Sets the value of the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> to the specified <see cref="T:System.Object" />, bypassing the <see cref="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />.</summary>
      <param name="dependencyProperty">The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> to be set to the <see cref="T:System.Object" />.</param>
      <param name="value">The <see cref="T:System.Object" /> that becomes the value of the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="dependencyProperty" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyProperty.FromName(System.String,System.Type)">
      <summary>Gets the registered <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> based on the <see cref="P:System.Workflow.ComponentModel.DependencyProperty.Name" /> and <see cref="P:System.Workflow.ComponentModel.DependencyProperty.OwnerType" />.</summary>
      <param name="propertyName">The <see cref="P:System.Workflow.ComponentModel.DependencyProperty.Name" /> of the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</param>
      <param name="ownerType">The required value of <see cref="P:System.Workflow.ComponentModel.DependencyProperty.OwnerType" />.</param>
      <returns>The registered <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> based on the <see cref="P:System.Workflow.ComponentModel.DependencyProperty.Name" /> and <see cref="P:System.Workflow.ComponentModel.DependencyProperty.OwnerType" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyProperty.FromType(System.Type)">
      <summary>Creates an <see cref="T:System.Collections.IList" /> of type <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that belong to a specific <see cref="T:System.Type" />.</summary>
      <param name="ownerType">The <see cref="T:System.Type" />.</param>
      <returns>
          <see cref="T:System.Collections.IList" /> of the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that belong to a specific <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyProperty.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns>A hash code for this instance.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyProperty.Register(System.String,System.Type,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> class that has the properties parameterized according to the input parameters.</summary>
      <param name="name">The name of the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</param>
      <param name="propertyType">
            <see cref="T:System.Type" /> of the value that the property can contain.</param>
      <param name="ownerType">Owner <see cref="T:System.Type" /> of the dependency property.</param>
      <returns>The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> class that has the properties parameterized according to the input parameters.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyProperty.Register(System.String,System.Type,System.Type,System.Workflow.ComponentModel.PropertyMetadata)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> class that has the properties parameterized according to the input parameters.</summary>
      <param name="name">The name of the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</param>
      <param name="propertyType">
            <see cref="T:System.Type" /> of the value the property can contain.</param>
      <param name="ownerType">Owner <see cref="T:System.Type" /> of the dependency property.</param>
      <param name="defaultMetadata">Additional property options.</param>
      <returns>The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> class that has the properties parameterized according to the input parameters.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> class that has the properties parameterized according to the input parameters. This instance is intended to declare properties that are used on objects other than the objects of owning type.</summary>
      <param name="name">The name of the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</param>
      <param name="propertyType">
            <see cref="T:System.Type" /> of the value the property can contain.</param>
      <param name="ownerType">Owner <see cref="T:System.Type" /> of the dependency property.</param>
      <returns>The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> class that has the properties parameterized according to the input parameters.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Workflow.ComponentModel.PropertyMetadata)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> class that has the properties parameterized according to the input parameters.</summary>
      <param name="name">The name of the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</param>
      <param name="propertyType">
            <see cref="T:System.Type" /> of the value the property can contain.</param>
      <param name="ownerType">Owner <see cref="T:System.Type" /> of the dependency property.</param>
      <param name="defaultMetadata">Additional property options.</param>
      <returns>The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> class that has the properties parameterized according to the input parameters.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Workflow.ComponentModel.PropertyMetadata,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> class that has the properties parameterized according to the input parameters.</summary>
      <param name="name">The name of the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</param>
      <param name="propertyType">
            <see cref="T:System.Type" /> of the value the property can contain.</param>
      <param name="ownerType">Owner <see cref="T:System.Type" /> of the dependency property.</param>
      <param name="defaultMetadata">Additional property options.</param>
      <param name="validatorType">
            <see cref="T:System.Type" /> of object that implements validation logic for the attached property.</param>
      <returns>The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> class that has the properties parameterized according to the input parameters.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyProperty.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data required to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> associated with the data.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the data.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyProperty.ToString">
      <summary>Overrides the <see cref="T:System.Object" /> method to return the <see cref="P:System.Workflow.ComponentModel.DependencyProperty.Name" /> property value.</summary>
      <returns>The <see cref="P:System.Workflow.ComponentModel.DependencyProperty.Name" /> property value.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityBindTypeConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.ActivityBindTypeConverter" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityBindTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns a value indicating whether this converter can convert an object of the given source type to an <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> using the specified context.</summary>
      <param name="context">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="sourceType">A <see cref="T:System.Type" /> that represents the type to convert. </param>
      <returns>
          <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityBindTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns a value indicating whether this converter can convert an <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> to the destination type using the specified context.</summary>
      <param name="context">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="destinationType">A <see cref="T:System.Type" /> that represents the type to convert the <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> to. </param>
      <returns>
          <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityBindTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified object to an <see cref="T:System.Workflow.ComponentModel.ActivityBind" />, using the specified context and culture information.</summary>
      <param name="context">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="culture">An optional <see cref="T:System.Globalization.CultureInfo" />. If not supplied, the current culture is assumed.</param>
      <param name="valueToConvert">The <see cref="T:System.Object" /> to convert.</param>
      <returns>The <see cref="T:System.Object" /> that represents the converted value.</returns>
      <exception cref="T:System.InvalidOperationException">An error occurred while converting <paramref name="valueToConvert" /> to an <see cref="T:System.Workflow.ComponentModel.ActivityBind" />.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityBindTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the specified <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> object to the specified type using the specified context and culture.</summary>
      <param name="context">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> into which the <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> will be converted.</param>
      <param name="value">The <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> to convert.</param>
      <param name="destinationType">The <see cref="T:System.Type" /> to convert the <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> to.</param>
      <returns>The converted object.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityBindTypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>Returns a collection of properties for the type of array specified by the <paramref name="value" /> parameter using the specified context and attributes.</summary>
      <param name="context">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="value">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</param>
      <param name="attributes">An <see cref="T:System.Attribute" /> array that is used as a filter.</param>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or a null reference (<see langword="Nothing" /> in Visual Basic) if there are no properties.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityBindTypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns a value indicating whether the <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> supports properties using the specified context.</summary>
      <param name="context">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <returns>
          <see langword="true" /> if <see cref="M:System.Workflow.ComponentModel.Design.ActivityBindTypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" /> should be called to find the properties of this object; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityBindTypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns a collection of standard values for the <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> data type using the specified context.</summary>
      <param name="context">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that holds a standard set of valid values or a null reference (<see langword="Nothing" /> in Visual Basic) if the data type does not support a standard set of values.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityBindTypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns whether the collection of standard values returned from <see cref="Overload:System.Workflow.ComponentModel.Design.ActivityBindTypeConverter.GetStandardValues" /> is an exclusive list of possible values, using the specified context.</summary>
      <param name="context">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <returns>
          <see langword="true" /> if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="Overload:System.Workflow.ComponentModel.Design.ActivityBindTypeConverter.GetStandardValues" /> is an exhaustive list of possible values; <see langword="false" /> if other values are possible.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityBindTypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.</summary>
      <param name="context">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <returns>
          <see langword="true" /> if <see cref="Overload:System.Workflow.ComponentModel.Design.ActivityBindTypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityChangedEventArgs.#ctor(System.Workflow.ComponentModel.Activity,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
      <summary>Initializes an instance of the <see cref="T:System.Workflow.ComponentModel.Design.ActivityChangedEventArgs" />.</summary>
      <param name="activity">The Activity associated with the designer that has changed.</param>
      <param name="member">The member of the Activity that has changed.</param>
      <param name="oldValue">The value of the member before the change.</param>
      <param name="newValue">The value of the member after the change.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> class.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.CanBeParentedTo(System.Workflow.ComponentModel.Design.CompositeActivityDesigner)">
      <summary>Returns a value that indicates if a <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> can be set as the parent of the activity associated with the designer.</summary>
      <param name="parentActivityDesigner">The <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> which can potentially be set as parent.</param>
      <returns>
          <see langword="true" /> if a <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> can be set as the parent of the activity associated with the designer; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.CanConnect(System.Workflow.ComponentModel.Design.ConnectionPoint,System.Workflow.ComponentModel.Design.ConnectionPoint)">
      <summary>Returns a value that indicates whether a connection can be created between the specified connection point on the current activity designer and the specified connection point on a target activity designer.</summary>
      <param name="source">The <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> to check on the current activity designer.</param>
      <param name="target">The <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> to check on the target activity designer.</param>
      <returns>
          <see langword="true" /> to indicate that a connection can be created between source and target; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.CreateView(System.ComponentModel.Design.ViewTechnology)">
      <summary>Creates a workflow view for the current activity designer using the specified ViewTechnology.</summary>
      <param name="viewTechnology">The ViewTechnology to use to create the workflow view.</param>
      <returns>A <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> that contains the current activity designer.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.Dispose">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> and optionally releases the managed resources.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.Dispose(System.Boolean)">
      <summary>Releases the resources used by the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> class.</summary>
      <param name="disposing">
            <see langword="true" /> if the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> is being disposed; <see langword="false" /> if the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> is being finalized.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.DoDefaultAction">
      <summary>Performs the default UI action associated with the designer.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.EnsureVisible">
      <summary>Shifts the visible area of the screen to guarantee that the specified designer is visible.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.Finalize">
      <summary>When overridden in a derived class, allows an object to clean up any resources deterministically.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.GetConnectionPoints(System.Workflow.ComponentModel.Design.DesignerEdges)">
      <summary>Returns a read-only collection of connection points for the activity designer along the specified <see cref="T:System.Workflow.ComponentModel.Design.DesignerEdges" />.</summary>
      <param name="edges">The <see cref="T:System.Workflow.ComponentModel.Design.DesignerEdges" /> along which to gather the connection points.</param>
      <returns>A <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> generic read-only collection that is used as the points at which the activity designer can connect to other activity designers.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.GetConnections(System.Workflow.ComponentModel.Design.DesignerEdges)">
      <summary>Returns a read-only collection of points that the designer uses for connections.</summary>
      <param name="edges">The <see cref="T:System.Workflow.ComponentModel.Design.DesignerEdges" /> on which to query for points.</param>
      <returns>A point read-only collection that contains the connections to use for the activity designer.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.GetPreviewImage(System.Drawing.Graphics)">
      <summary>Gets the image of the activity designer on the specified <see cref="T:System.Drawing.Graphics" />.</summary>
      <param name="compatibleGraphics">The <see cref="T:System.Drawing.Graphics" /> object used to draw the image.</param>
      <returns>An <see cref="T:System.Drawing.Image" /> object that contains a bitmap used as a preview image in the drag-and-drop operations and in the <see cref="T:System.Workflow.Activities.ConditionedActivityGroup" /> preview pane.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.GetRootDesigner(System.IServiceProvider)">
      <summary>Returns the designer associated with the design surface of the workflow.</summary>
      <param name="serviceProvider">An object that implements the <see cref="T:System.IServiceProvider" />.</param>
      <returns>An <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> that is the <see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponent" /> of the designer host.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.GetService(System.Type)">
      <summary>Tries to retrieve the specified type of service from the design mode site for the activity associated with the designer.</summary>
      <param name="serviceType">The type of service to request.</param>
      <returns>An object implementing the requested service or a null reference (<see langword="Nothing" /> in Visual Basic) if the service cannot be resolved.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.HitTest(System.Drawing.Point)">
      <summary>Gets information about the ActivityDesigner at a specified point on the screen.</summary>
      <param name="point">A <see cref="T:System.Drawing.Point" /> that represents a single x and y coordinate.</param>
      <returns>A <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> that contains information about the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> at a specified point.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.Initialize(System.Workflow.ComponentModel.Activity)">
      <summary>Initializes the designer with the associated <see cref="T:System.Workflow.ComponentModel.Activity" />.</summary>
      <param name="activity">The <see cref="T:System.Workflow.ComponentModel.Activity" /> with which the designer should be initialized.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.Invalidate">
      <summary>Invalidates the designer.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.Invalidate(System.Drawing.Rectangle)">
      <summary>Invalidates the specified rectangle on the designer.</summary>
      <param name="rectangle">A <see cref="T:System.Drawing.Rectangle" /> that specifies the area on the workflow to invalidate.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.IsCommentedActivity(System.Workflow.ComponentModel.Activity)">
      <summary>Returns a value that indicates whether the current designer's activity is commented or is inside a commented activity.</summary>
      <param name="activity">The <see cref="T:System.Workflow.ComponentModel.Activity" /> in the current activity designer.</param>
      <returns>
          <see langword="true" /> if the activity is commented or is inside a commented activity; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.IsSupportedActivityType(System.Type)">
      <summary>Returns a value that indicates whether the specified activity type is supported if the activity designer is a root designer.</summary>
      <param name="activityType">The type of the activity that was supported.</param>
      <returns>
          <see langword="true" /> if the <paramref name="activityType" /> is supported; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.LoadViewState(System.IO.BinaryReader)">
      <summary>Loads the view state of the designer from a binary stream.</summary>
      <param name="reader">A <see cref="T:System.IO.BinaryReader" /> used to restore the designer state.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnActivityChanged(System.Workflow.ComponentModel.Design.ActivityChangedEventArgs)">
      <summary>Notifies the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> when the activity it is associated with changes.</summary>
      <param name="e">An <see cref="T:System.Workflow.ComponentModel.Design.ActivityChangedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnBeginResizing(System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs)">
      <summary>Notifies the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> when a user starts to visually resize the activity designer when the designer is in a <see cref="T:System.Workflow.ComponentModel.Design.FreeFormActivityDesigner" />.</summary>
      <param name="e">An <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnConnected(System.Workflow.ComponentModel.Design.ConnectionPoint,System.Workflow.ComponentModel.Design.ConnectionPoint)">
      <summary>Notifies the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> when a connection is established between two connection points.</summary>
      <param name="source">The source ConnectionPoint on the current activity designer.</param>
      <param name="target">The target ConnectionPoint on the activity designer to connect to.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragDrop(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)">
      <summary>Occurs when the drag-drop operation is completed inside designer bounds.</summary>
      <param name="e">An <see cref="T:System.Workflow.ComponentModel.Design.ActivityDragEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)">
      <summary>Occurs when the drag-drop operation is in progress and the pointer enters the designer bounds.</summary>
      <param name="e">An <see cref="T:System.Workflow.ComponentModel.Design.ActivityDragEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave">
      <summary>Occurs when the drag-drop operation is in progress and the pointer leaves the designer bounds.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)">
      <summary>Occurs when the drag-drop operation is in progress and the pointer is within the designer bounds.</summary>
      <param name="e">An <see cref="T:System.Workflow.ComponentModel.Design.ActivityDragEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnEndResizing">
      <summary>Notifies the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> when a user is finished visually resizing the activity designer when the designer is in a <see cref="T:System.Workflow.ComponentModel.Design.FreeFormActivityDesigner" />.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnExecuteDesignerAction(System.Workflow.ComponentModel.Design.DesignerAction)">
      <summary>Notifies the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> when the user clicks on the configuration errors associated with the designer.</summary>
      <param name="designerAction">The <see cref="T:System.Workflow.ComponentModel.Design.DesignerAction" /> associated with the configuration error.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="designerAction" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary>Updates the visual cues for feedback supplied to the user when performing a drag operation.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Occurs when a key is pressed when the designer has the keyboard focus.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
      <summary>Occurs when a key is released when the designer has keyboard focus.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnLayoutPosition(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)">
      <summary>Notifies the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> when a user repositions its visual cues or child activity designers.</summary>
      <param name="e">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" /> that contains the event data.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="e" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnLayoutSize(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)">
      <summary>Returns the size of the visual cues or child activity designers on the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</summary>
      <param name="e">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" /> that contains the event data.</param>
      <returns>The new size settings for the visual cues or child activity designers.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="e" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseCaptureChanged">
      <summary>Occurs when the mouse capture changes.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
      <summary>Occurs when the mouse button is clicked multiple times on the designer.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>Occurs when the mouse button is pressed when the pointer is in designer bounds.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseDragBegin(System.Drawing.Point,System.Windows.Forms.MouseEventArgs)">
      <summary>Occurs when the user starts to drag the mouse on the designer.</summary>
      <param name="initialDragPoint">A <see cref="T:System.Drawing.Point" /> that represents a single x and y coordinate.</param>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseDragEnd">
      <summary>Occurs when the user stops dragging the mouse on the designer.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseDragMove(System.Windows.Forms.MouseEventArgs)">
      <summary>Occurs on each movement of the mouse as the user drags the pointer over the designer.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseEnter(System.Windows.Forms.MouseEventArgs)">
      <summary>Occurs when the mouse first enters the designer bounds.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseHover(System.Windows.Forms.MouseEventArgs)">
      <summary>Occurs when the pointer is in designer bounds.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseLeave">
      <summary>Occurs when the pointer leaves designer bounds.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>Occurs when the pointer is moving in designer bounds.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>Occurs when the mouse button is released when the pointer is in designer bounds.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnPaint(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs)">
      <summary>Draws the visual representation of the activity at design time.</summary>
      <param name="e">An <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" /> that contains the event data.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="e" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnProcessMessage(System.Windows.Forms.Message)">
      <summary>Allows the designer to process raw Win32 messages.</summary>
      <param name="message">A Win32 <see cref="T:System.Windows.Forms.Message" /> that contains the event data.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
      <summary>Controls whether the drag operation should continue.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnResizing(System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs)">
      <summary>Notifies the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> when a user is visually resizing it at design time. The method is only called if the activity designer is a child of a <see cref="T:System.Workflow.ComponentModel.Design.FreeFormActivityDesigner" />.</summary>
      <param name="e">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnScroll(System.Windows.Forms.ScrollBar,System.Int32)">
      <summary>Notifies the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> when a user changes the scroll position.</summary>
      <param name="sender">The <see cref="T:System.Windows.Forms.ScrollBar" /> on which the user changed position.</param>
      <param name="value">The new scroll position value.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnShowSmartTagVerbs(System.Drawing.Point)">
      <summary>Displays the designer verbs associated with a smart tag at the specified point.</summary>
      <param name="smartTagPoint">A <see cref="T:System.Drawing.Point" /> that designates the location to show the smart tag.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnSmartTagVisibilityChanged(System.Boolean)">
      <summary>Notifies the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> whether a smart tag should be displayed or hidden.</summary>
      <param name="visible">
            <see langword="true" /> to indicate that the smart tag should be displayed; <see langword="false" /> to indicate that the smart tag should be hidden.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnThemeChange(System.Workflow.ComponentModel.Design.ActivityDesignerTheme)">
      <summary>Notifies the designer that the associated theme has changed.</summary>
      <param name="newTheme">An <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" /> that contains the event data.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PerformLayout">
      <summary>Updates the layout of the designer.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PointToLogical(System.Drawing.Point)">
      <summary>Transforms a point from screen coordinate system to the activity designer coordinate system.</summary>
      <param name="point">A <see cref="T:System.Drawing.Point" /> that contains the coordinates to transform.</param>
      <returns>A <see cref="T:System.Drawing.Point" /> that contains the transformed x and y coordinates.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PointToScreen(System.Drawing.Point)">
      <summary>Transforms a point from the activity designer coordinate system to the screen coordinate system.</summary>
      <param name="point">A <see cref="T:System.Drawing.Point" /> that contains the coordinates to transform.</param>
      <returns>A <see cref="T:System.Drawing.Point" /> that contains the transformed x and y coordinates.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PostFilterAttributes(System.Collections.IDictionary)">
      <summary>When overridden in a derived class, allows a designer to change or remove items from the set of attributes that it exposes through a TypeDescriptor.</summary>
      <param name="attributes">The <see cref="T:System.Collections.IDictionary" /> that contains the TypeID values of the attributes.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PostFilterEvents(System.Collections.IDictionary)">
      <summary>When overridden in a derived class, allows the designer to change or remove items from the set of events that it exposes through a TypeDescriptor.</summary>
      <param name="events">The <see cref="T:System.Collections.IDictionary" /> that contains the event names of the class.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PostFilterProperties(System.Collections.IDictionary)">
      <summary>When overridden in a derived class, allows a designer to change or remove items from the set of properties that it exposes through a TypeDescriptor.</summary>
      <param name="properties">The <see cref="T:System.Collections.IDictionary" /> that contains the property names of the class.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PreFilterAttributes(System.Collections.IDictionary)">
      <summary>When overridden in a derived class, allows a designer to add items to the set of attributes that it exposes through a TypeDescriptor.</summary>
      <param name="attributes">The <see cref="T:System.Collections.IDictionary" /> that contains the TypeID values of the attributes.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PreFilterEvents(System.Collections.IDictionary)">
      <summary>When overridden in a derived class, allows a designer to add items to the set of events that it exposes through a TypeDescriptor.</summary>
      <param name="events">The <see cref="T:System.Collections.IDictionary" /> that contains the event names of the class.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>When overridden in a derived class, allows a designer to add items to the set of properties that it exposes through a TypeDescriptor.</summary>
      <param name="properties">The <see cref="T:System.Collections.IDictionary" /> that contains the property names of the class.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.RectangleToLogical(System.Drawing.Rectangle)">
      <summary>Transforms a rectangle from the screen coordinate system to the activity designer coordinate system.</summary>
      <param name="rectangle">A <see cref="T:System.Drawing.Rectangle" /> that describes the coordinates to transform.</param>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that describes the transformed coordinates.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.RectangleToScreen(System.Drawing.Rectangle)">
      <summary>Transforms a rectangle from the activity designer coordinate system to the screen coordinate system.</summary>
      <param name="rectangle">A <see cref="T:System.Drawing.Rectangle" /> that describes the coordinates to transform.</param>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that describes the transformed coordinates.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.RefreshDesignerActions">
      <summary>Refreshes the configuration errors associated with the designer.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.RefreshDesignerVerbs">
      <summary>Refreshes the activity designer verbs associated with the designer by calling the status handler.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.SaveViewState(System.IO.BinaryWriter)">
      <summary>Stores the view state of the designer into a binary stream.</summary>
      <param name="writer">The <see cref="T:System.IO.BinaryWriter" /> into which the view state is stored.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.ShowInfoTip(System.String)">
      <summary>Shows the specified info tip.</summary>
      <param name="infoTip">The text to display in the InfoTip.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.ShowInfoTip(System.String,System.String)">
      <summary>Displays the info tip for the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> with the specified title and text.</summary>
      <param name="title">A string that contains the title of the info tip.</param>
      <param name="infoTip">A string that contains the info tip text to display.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.ShowInPlaceTip(System.String,System.Drawing.Rectangle)">
      <summary>Displays the specified tool tip in the specified rectangle location.</summary>
      <param name="infoTip">A string that contains the tool tip to display.</param>
      <param name="rectangle">A <see cref="T:System.Drawing.Rectangle" /> that defines the location at which to display the tool tip.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesigner#DoDefaultAction">
      <summary>Performs the default action associated with the designer.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesigner#Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer with the associated activity.</summary>
      <param name="component">The IComponent to initialize the designer with.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterAttributes(System.Collections.IDictionary)">
      <summary>When overridden in a derived class, allows a designer to change or remove items from the set of attributes that it exposes through a TypeDescriptor.</summary>
      <param name="attributes">The <see cref="T:System.Collections.IDictionary" /> that contains the TypeIDs of the attributes of the class.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterEvents(System.Collections.IDictionary)">
      <summary>When overridden in a derived class, allows a designer to change or remove items from the set of events that it exposes through a TypeDescriptor.</summary>
      <param name="events">The <see cref="T:System.Collections.IDictionary" /> that contains the event names of the class.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterProperties(System.Collections.IDictionary)">
      <summary>When overridden in a derived class, allows a designer to change or remove items from the set of properties that it exposes through a TypeDescriptor.</summary>
      <param name="properties">The <see cref="T:System.Collections.IDictionary" /> that contains the property names of the class.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterAttributes(System.Collections.IDictionary)">
      <summary>When overridden in a derived class, allows a designer to add items to the set of attributes that it exposes through a TypeDescriptor.</summary>
      <param name="attributes">The <see cref="T:System.Collections.IDictionary" /> that contains the TypeIDs of the attributes of the class.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterEvents(System.Collections.IDictionary)">
      <summary>When overridden in a derived class, allows a designer to add items to the set of events that it exposes through a TypeDescriptor.</summary>
      <param name="events">The <see cref="T:System.Collections.IDictionary" /> that contains the event names of the class.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterProperties(System.Collections.IDictionary)">
      <summary>When overridden in a derived class, allows a designer to add items to the set of properties that it exposes through a TypeDescriptor.</summary>
      <param name="properties">The <see cref="T:System.Collections.IDictionary" /> that contains the property names of the class.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary>Returns a view object for the specified view technology.</summary>
      <param name="technology">A <see cref="T:System.ComponentModel.Design.ViewTechnology" /> for which to return the view object.</param>
      <returns>An object that represents the view for this designer.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Drawing#Design#IToolboxUser#GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>Determines whether the specified Toolbox item is supported by the current activity designer.</summary>
      <param name="toolboxItem">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to test for support.</param>
      <returns>
          <see langword="true" /> if the tool is supported by the toolbox and can be enabled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Drawing#Design#IToolboxUser#ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary>Selects the specified toolbox item.</summary>
      <param name="toolboxItem">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to select.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Workflow#ComponentModel#Design#IPersistUIState#LoadViewState(System.IO.BinaryReader)">
      <summary>Restores the view state from a binary stream.</summary>
      <param name="reader">The <see cref="T:System.IO.BinaryReader" /> to load the view state from.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Workflow#ComponentModel#Design#IPersistUIState#SaveViewState(System.IO.BinaryWriter)">
      <summary>Saves the view state to a binary stream.</summary>
      <param name="writer">A <see cref="T:System.IO.BinaryWriter" /> to save the view state to.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Workflow#ComponentModel#Design#IWorkflowRootDesigner#IsSupportedActivityType(System.Type)">
      <summary>Returns a value that indicates whether the specified type is supported on the current <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</summary>
      <param name="activityType">The <see cref="T:System.Type" /> of the activity to check for support on the activity designer.</param>
      <returns>
          <see langword="true" /> if the type is supported on the current workflow designer; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject.#ctor(System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject" /> class by using the specified <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</summary>
      <param name="activityDesigner">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> which to apply the accessible object.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject.DoDefaultAction">
      <summary>Performs the default action associated with the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject" />.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject.GetService(System.Type)">
      <summary>Returns the service defined by the specified type that is associated with the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</summary>
      <param name="serviceType">The service <see cref="T:System.Type" /> to request.</param>
      <returns>An <see cref="T:System.Object" /> that represents the requested service, or a null reference (<see langword="Nothing" /> in Visual Basic) if the service cannot be resolved.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)">
      <summary>Returns the <see cref="T:System.Windows.Forms.AccessibleObject" /> associated with the location defined by the specified <see cref="T:System.Windows.Forms.AccessibleNavigation" />.</summary>
      <param name="navdir">One of the <see cref="T:System.Windows.Forms.AccessibleNavigation" /> values.</param>
      <returns>The <see cref="T:System.Windows.Forms.AccessibleObject" /> at the specified location.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject.Select(System.Windows.Forms.AccessibleSelection)">
      <summary>Modifies the selection or moves the keyboard focus of the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject" />.</summary>
      <param name="flags">One of the <see cref="T:System.Windows.Forms.AccessibleSelection" /> values.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection" /> class that is empty and has the default initial capacity. </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection.#ctor(System.Collections.Generic.IEnumerable{System.Workflow.ComponentModel.Design.DesignerGlyph})">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection" /> class that contains elements copied from the specified generic collection of <see cref="T:System.Workflow.ComponentModel.Design.DesignerGlyph" />, and has sufficient capacity to accommodate the number of elements copied.</summary>
      <param name="glyphs">Enumerable generic collection containing <see cref="T:System.Workflow.ComponentModel.Design.DesignerGlyph" /> objects.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection.#ctor(System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection" /> class that contains elements copied from the specified <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection" /> and has sufficient capacity to accommodate the number of elements copied. </summary>
      <param name="glyphs">An <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection" /> from which to copy collection elements.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs.#ctor(System.Drawing.Graphics,System.Workflow.ComponentModel.Design.ActivityDesignerTheme)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" /> class with the specified graphics and designer theme.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> used the layout the designer.</param>
      <param name="designerTheme">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" /> to use for look and feel.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutSerializer.#ctor">
      <summary>Serializes an activity designer layout used in a freeform designer.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutSerializer.CreateInstance(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Type)">
      <summary>Creates an instance of the specified <see cref="T:System.Type" /> using the specified <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />.</summary>
      <param name="serializationManager">The <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> supporting this operation.</param>
      <param name="type">The specified <see cref="T:System.Type" />.</param>
      <returns>An instance of the specified <see cref="T:System.Type" />. </returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="serializationManager" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="type" /> is a null reference (<see langword="Nothing" />).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutSerializer.GetProperties(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)">
      <summary>Retrieves information about all properties associated with the specified object.</summary>
      <param name="serializationManager">The <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> supporting this operation.</param>
      <param name="obj">The <see cref="T:System.Object" /> to search for properties.</param>
      <returns>A <see cref="T:System.Reflection.PropertyInfo" /> array that contains information about the properties associated with <paramref name="obj" />.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="serializationManager" /> or <paramref name="obj" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutSerializer.OnBeforeSerialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)">
      <summary>Performs required processing on obj before the serialization process begins.</summary>
      <param name="serializationManager">The <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> supporting this operation.</param>
      <param name="obj">The <see cref="T:System.Object" /> to search for properties.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerPaint.Draw3DButton(System.Drawing.Graphics,System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Windows.Forms.ButtonState)">
      <summary>Draws a 3-dimensional button on the activity designer surface.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> on which to draw the 3-dimensional button.</param>
      <param name="image">The <see cref="T:System.Drawing.Image" /> to draw on the button.</param>
      <param name="bounds">The <see cref="T:System.Drawing.Rectangle" /> that defines the bounds of the button.</param>
      <param name="transparency">The single-precision floating-point number to specify the transparency level of the button.</param>
      <param name="buttonState">The <see cref="T:System.Windows.Forms.ButtonState" /> enumeration value to specify the appearance of the button.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="graphics" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerPaint.DrawExpandButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Workflow.ComponentModel.Design.CompositeDesignerTheme)">
      <summary>Draws a button that is used to expand and collapse composite designers on the activity designer surface.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> on which to draw the button.</param>
      <param name="boundingRect">The <see cref="T:System.Drawing.Rectangle" /> that defines the bounds of the button.</param>
      <param name="drawExpanded">
            <see langword="true" /> to draw an expanded button; otherwise, <see langword="false" />. </param>
      <param name="compositeDesignerTheme">The <see cref="T:System.Workflow.ComponentModel.Design.CompositeDesignerTheme" /> associated with the activity designer used to render the button.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="graphics" /> or <paramref name="compositeDesignerTheme" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerPaint.DrawImage(System.Drawing.Graphics,System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Workflow.ComponentModel.Design.DesignerContentAlignment,System.Single,System.Boolean)">
      <summary>Draws an image on the activity designer surface by using a <see cref="T:System.Drawing.Graphics" />, an <see cref="T:System.Drawing.Image" />, a source and destination <see cref="T:System.Drawing.Rectangle" />, an <see cref="T:System.Workflow.ComponentModel.Design.DesignerContentAlignment" />, a single-precision floating-point number, and a Boolean value.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> on which to draw the image.</param>
      <param name="image">The <see cref="T:System.Drawing.Image" /> to draw.</param>
      <param name="destination">The <see cref="T:System.Drawing.Rectangle" /> that defines the bounds of the image.</param>
      <param name="source">The <see cref="T:System.Drawing.Rectangle" /> that defines the source of the image.</param>
      <param name="alignment">The <see cref="T:System.Workflow.ComponentModel.Design.DesignerContentAlignment" /> that specifies how the image is aligned in the bounding rectangle.</param>
      <param name="transparency">A single-precision floating-point number that defines the transparency settings for the image.</param>
      <param name="grayscale">
            <see langword="true" /> to draw the image in grayscales; otherwise, <see langword="false" />. </param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="graphics" />, <paramref name="image" />, <paramref name="destination" />, or <paramref name="source" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).-or-
              <paramref name="transparency" /> is less than 0, or greater than 1.0f.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerPaint.DrawImage(System.Drawing.Graphics,System.Drawing.Image,System.Drawing.Rectangle,System.Workflow.ComponentModel.Design.DesignerContentAlignment)">
      <summary>Draws an image on the activity designer surface by using a <see cref="T:System.Drawing.Graphics" />, an <see cref="T:System.Drawing.Image" />, a <see cref="T:System.Drawing.Rectangle" />, and a <see cref="T:System.Workflow.ComponentModel.Design.DesignerContentAlignment" />.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> on which to draw the image.</param>
      <param name="image">The <see cref="T:System.Drawing.Image" /> to draw.</param>
      <param name="destination">The <see cref="T:System.Drawing.Rectangle" /> that defines the bounds of the image to draw.</param>
      <param name="alignment">The <see cref="T:System.Workflow.ComponentModel.Design.DesignerContentAlignment" /> that specifies how the image is aligned in the bounding rectangle.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="graphics" />, <paramref name="image" />, or <paramref name="destination" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerPaint.DrawRoundedRectangle(System.Drawing.Graphics,System.Drawing.Pen,System.Drawing.Rectangle,System.Int32)">
      <summary>Draws a rounded rectangle on the activity designer surface.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> on which to draw the rectangle.</param>
      <param name="drawingPen">The <see cref="T:System.Drawing.Pen" /> to draw the rectangle.</param>
      <param name="rectangle">The <see cref="T:System.Drawing.Rectangle" /> that defines the bounds of the rounded rectangle.</param>
      <param name="radius">The integer value of the radius to use for the rounded edges.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="graphics" /> or <paramref name="drawingPen" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerPaint.DrawText(System.Drawing.Graphics,System.Drawing.Font,System.String,System.Drawing.Rectangle,System.Drawing.StringAlignment,System.Workflow.ComponentModel.Design.TextQuality,System.Drawing.Brush)">
      <summary>Draws text on the activity designer surface.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> on which to draw the text.</param>
      <param name="font">The <see cref="T:System.Drawing.Font" /> used to draw the text</param>
      <param name="text">The text to draw.</param>
      <param name="boundingRect">The bounding <see cref="T:System.Drawing.Rectangle" /> in which the text must be drawn.</param>
      <param name="alignment">The <see cref="T:System.Drawing.StringAlignment" /> that specifies where the text is aligned in the bounding rectangle.</param>
      <param name="textQuality">The <see cref="T:System.Workflow.ComponentModel.Design.TextQuality" /> that specifies the quality setting to draw the text.</param>
      <param name="textBrush">The <see cref="T:System.Drawing.Brush" /> to draw the text.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="graphics" />, <paramref name="font" />, <paramref name="text" />, or <paramref name="textBrush" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerPaint.GetRoundedRectanglePath(System.Drawing.Rectangle,System.Int32)">
      <summary>Returns the graphics path used to draw the specified rounded rectangle.</summary>
      <param name="rectangle">The <see cref="T:System.Drawing.Rectangle" /> for which to obtain the graphics path.</param>
      <param name="radius">An integer that defines the radius to use to draw the rounded corners.</param>
      <returns>A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> that draws the rounded path of the specified rectangle.</returns>
      <exception cref="T:System.ArgumentException">
              <paramref name="rectangle" /> is set to <see cref="P:System.Drawing.Rectangle.IsEmpty" />.-- or --
              <paramref name="radius" /> is less than or equal to 0.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Workflow.ComponentModel.Design.ActivityDesignerTheme)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" /> class with the specified graphics, clipping rectangle, viewport and designer theme. </summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> used to draw the item.</param>
      <param name="clipRectangle">The <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle in which to draw.</param>
      <param name="viewPort">The view port in which to draw.</param>
      <param name="designerTheme">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" /> associated with the object to draw.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs.#ctor(System.Workflow.ComponentModel.Design.DesignerEdges,System.Drawing.Rectangle)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs" /> class by using the specified <see cref="T:System.Workflow.ComponentModel.Design.DesignerEdges" /> value and <see cref="T:System.Drawing.Rectangle" />. </summary>
      <param name="sizingEdge">A <see cref="T:System.Workflow.ComponentModel.Design.DesignerEdges" /> to use to resize the activity designer.</param>
      <param name="newBounds">A <see cref="T:System.Drawing.Rectangle" /> that represents the resized bounds of the activity designer.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.#ctor(System.Workflow.ComponentModel.Design.WorkflowTheme)">
      <summary>Initializes an instance of an <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" />.</summary>
      <param name="theme">A <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" /> that contains the theme information for the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources and optionally releases the managed resources used by <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" />.</summary>
      <param name="disposing">
            <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.GetBackgroundBrush(System.Drawing.Rectangle)">
      <summary>Gets a brush used to paint the area specified by the rectangle passed.</summary>
      <param name="rectangle">A <see cref="T:System.Drawing.Rectangle" /> that specifies the location and size of the area on the background.</param>
      <returns>A <see cref="T:System.Drawing.Brush" /> that is used to fill interiors of graphical shapes such as rectangles, ellipses, pies, polygons, and paths.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.Initialize">
      <summary>Initializes the designer theme.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.OnAmbientPropertyChanged(System.Workflow.ComponentModel.Design.AmbientProperty)">
      <summary>Called to signal changes to ambient settings.</summary>
      <param name="ambientProperty">The property that has changed.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerThemeAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerThemeAttribute" /> class by using the specified designer theme type.</summary>
      <param name="designerThemeType">A <see cref="T:System.Type" /> that represents the designer theme to be associated with the designer class. </param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerVerb.#ctor(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Workflow.ComponentModel.Design.DesignerVerbGroup,System.String,System.EventHandler)">
      <summary>Initializes an instance of an <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerb" /> by using an <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />, a <see cref="T:System.Workflow.ComponentModel.Design.DesignerVerbGroup" /> value, a description of the verb, and an <see cref="T:System.EventHandler" />.</summary>
      <param name="activityDesigner">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> to associate with the new verb.</param>
      <param name="verbGroup">The <see cref="T:System.Workflow.ComponentModel.Design.DesignerVerbGroup" /> in which the new verb belongs.</param>
      <param name="text">The description of the verb to show on the menu.</param>
      <param name="invokeHandler">The <see cref="T:System.EventHandler" /> that will handle the menu selection event.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="text" /> is empty or a null reference (<see langword="Nothing" /> in Visual Basic).-or-
              <paramref name="invokeHandler" /> is a null reference (<see langword="Nothing" />).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerVerb.#ctor(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Workflow.ComponentModel.Design.DesignerVerbGroup,System.String,System.EventHandler,System.EventHandler)">
      <summary>Initializes an instance of a <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerb" /> by using an <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />, a <see cref="T:System.Workflow.ComponentModel.Design.DesignerVerbGroup" /> value, a description of the verb, and two <see cref="T:System.EventHandler" /> objects, one to handle menu selection events and the other to handle status updates. </summary>
      <param name="activityDesigner">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> to associate with the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerb" />.</param>
      <param name="verbGroup">The <see cref="T:System.Workflow.ComponentModel.Design.DesignerVerbGroup" /> in which this <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerb" /> belongs.</param>
      <param name="text">The description of the verb to show on the menu.</param>
      <param name="invokeHandler">The event handler that handles the menu selection event.</param>
      <param name="statusHandler">The event handler that handles status updates.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerVerbCollection.#ctor">
      <summary>Initializes an instance of an <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerbCollection" />.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerVerbCollection.#ctor(System.Collections.Generic.IEnumerable{System.Workflow.ComponentModel.Design.ActivityDesignerVerb})">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerbCollection" /> class by using the specified generic <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of verbs. </summary>
      <param name="verbs">A generic <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerb" /> objects. </param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> and optionally releases the managed resources. </summary>
      <param name="disposing">
            <see langword="true" /> to release the managed resources; otherwise, <see langword="false" />. </param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.EnsureVisibleContainedDesigner(System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>Ensures that the specified activity designer is visible on the workflow design surface.</summary>
      <param name="containedDesigner">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> for which to ensure visibility on the workflow design surface.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="containedDesigner" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.GetConnectors">
      <summary>Returns an array of rectangles that bound the activity designer's connectors.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> array that defines the bounds of all connectors in the <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.GetDropTargets(System.Drawing.Point)">
      <summary>Returns an array of rectangles that represent the valid drop locations within the <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" />.</summary>
      <param name="dropPoint">The <see cref="T:System.Drawing.Point" /> that defines the x- and y-coordinates for the drop target.</param>
      <returns>The <see cref="T:System.Drawing.Rectangle" /> array that represents the valid drop locations within the <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.GetNextSelectableObject(System.Object,System.Workflow.ComponentModel.Design.DesignerNavigationDirection)">
      <summary>Returns the first selectable object that follows the specified object in the navigation order of the current <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" />.</summary>
      <param name="obj">The current object in the navigation order.</param>
      <param name="direction">The <see cref="T:System.Workflow.ComponentModel.Design.DesignerNavigationDirection" /> enumeration value that specifies the direction in which designer navigation occurs.</param>
      <returns>The first selectable <see cref="T:System.Object" /> that follow <paramref name="obj" /> in the navigation order. </returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.HitTest(System.Drawing.Point)">
      <summary>Returns information about the <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> at the specified coordinates on the workflow design surface. </summary>
      <param name="point">The <see cref="T:System.Drawing.Point" /> that contains the coordinates on the workflow design surface from which to gather information.</param>
      <returns>A <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> that contains information about the <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> at the specified coordinates</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.Initialize(System.Workflow.ComponentModel.Activity)">
      <summary>Initializes the designer used by the specified activity.</summary>
      <param name="activity">The <see cref="T:System.Workflow.ComponentModel.Activity" /> for which to initialize the designer.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.IsContainedDesignerVisible(System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>Returns a value that indicates whether the specified activity designer is visible in the <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" />.</summary>
      <param name="containedDesigner">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> to check.</param>
      <returns>
          <see langword="true" /> if <paramref name="containedDesigner" /> is visible; otherwise, <see langword="false" />. </returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="containedDesigner" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.LoadViewState(System.IO.BinaryReader)">
      <summary>Loads the view state of the <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> from a binary stream.</summary>
      <param name="reader">The <see cref="T:System.IO.BinaryReader" /> used to restore the designer view state.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="reader" /> contains a null reference (<see langword="Nothing" /> in Visual Basic)</exception>
      <exception cref="T:System.Exception">The designer host associated with the designer is a null reference (<see langword="Nothing" />).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.OnContainedActivitiesChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)">
      <summary>Notifies the designer that the number of activities contained in the <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> has changed.</summary>
      <param name="listChangeArgs">The <see cref="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" /> that contains the event data.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="listChangeArgs" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.OnDragEnter(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)">
      <summary>Notifies the <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> when a drag-drop operation is in progress and the user's mouse cursor enters the bounds of the designer.</summary>
      <param name="e">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDragEventArgs" /> that contains the event data.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="e" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.OnDragOver(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)">
      <summary>Notifies the <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> when a drag-drop operation is in progress and the user's mouse cursor is inside the bounds of the designer.</summary>
      <param name="e">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDragEventArgs" /> that contains the event data.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="e" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.OnLayoutPosition(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)">
      <summary>Performs layout tasks to position visual cues and child designers on the <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" />.</summary>
      <param name="e">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" /> that contains the event data.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="e" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.OnLayoutSize(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)">
      <summary>Sets the size of the visual cues on the designers contained within the <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" />.</summary>
      <param name="e">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" /> that contains the event data.</param>
      <returns>The <see cref="T:System.Drawing.Size" /> that contains the new size settings for the <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
      <summary>Notifies the <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> when the user double-clicks on the surface of the activity designer.</summary>
      <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>Notifies the <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> when the user presses the mouse button down while the pointer is in designer bounds.</summary>
      <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.OnMouseLeave">
      <summary>Notifies the designer when the user moves the mouse cursor out of designer bounds. </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>Notifies the designer when the user releases the mouse button in the designer bounds.</summary>
      <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.OnPaint(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs)">
      <summary>Draws the visual representation of the activity associated with the <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> at design time.</summary>
      <param name="e">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.OnThemeChange(System.Workflow.ComponentModel.Design.ActivityDesignerTheme)">
      <summary>Notifies the <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> that its associated theme has changed.</summary>
      <param name="newTheme">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" /> that contains the updated theme property settings.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.RefreshDesignerActions">
      <summary>Updates the configuration errors associated with the <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" />.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.RefreshPreview">
      <summary>Updates the view displayed in the preview window of the <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" />.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.SaveViewState(System.IO.BinaryWriter)">
      <summary>Stores the current view state of the <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> to a binary stream.</summary>
      <param name="writer">The <see cref="T:System.IO.BinaryWriter" /> to which the current designer view state is stored. </param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="writer" /> contains null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesignerTheme.#ctor(System.Workflow.ComponentModel.Design.WorkflowTheme)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesignerTheme" /> class.  </summary>
      <param name="theme">The <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" /> that the <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesignerTheme" /> is associated with.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesignerTheme.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesignerTheme" /> and optionally releases the managed resources. </summary>
      <param name="disposing">
            <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesignerTheme.Initialize">
      <summary>Performs any additional initialization tasks for <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesignerTheme" /> that is not performed by <see cref="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesignerTheme.#ctor(System.Workflow.ComponentModel.Design.WorkflowTheme)" />.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesignerTheme.OnAmbientPropertyChanged(System.Workflow.ComponentModel.Design.AmbientProperty)">
      <summary>Notifies the <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesignerTheme" /> that the ambient property settings for the designer have changed. </summary>
      <param name="ambientProperty">The <see cref="T:System.Workflow.ComponentModel.Design.AmbientProperty" /> enumeration value that the activity preview designer theme should now use.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityToolboxItem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.ActivityToolboxItem" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityToolboxItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.ActivityToolboxItem" /> class by using the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" />. </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds information to deserialize the toolbox item.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that provides the deserialization context for the toolbox item.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityToolboxItem.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.ActivityToolboxItem" /> class that creates the specified type of <see cref="T:System.Workflow.ComponentModel.Activity" /> component. </summary>
      <param name="type">The type of the <see cref="T:System.Workflow.ComponentModel.Activity" /> that the toolbox item will create. </param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityToolboxItem.CreateComponentsCore(System.ComponentModel.Design.IDesignerHost)">
      <summary>Creates an <see cref="T:System.Workflow.ComponentModel.Activity" /> component or an array of <see cref="T:System.Workflow.ComponentModel.Activity" /> components when the toolbox item is invoked.</summary>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> to host the toolbox item.</param>
      <returns>An array of created <see cref="T:System.ComponentModel.IComponent" /> objects.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityToolboxItem.CreateComponentsWithUI(System.ComponentModel.Design.IDesignerHost)">
      <summary>Creates an <see cref="T:System.Workflow.ComponentModel.Activity" /> component or an array of <see cref="T:System.Workflow.ComponentModel.Activity" /> components that generate a dialog box on the design surface when the toolbox item is invoked.</summary>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> to host the toolbox item.</param>
      <returns>An array of created <see cref="T:System.ComponentModel.IComponent" /> objects.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityToolboxItem.GetToolboxDisplayName(System.Type)">
      <summary>Gets the associated display name for the Toolbox item in the Toolbox.</summary>
      <param name="activityType">The type of the <see cref="T:System.Workflow.ComponentModel.Activity" /> to retrieve the display name for.</param>
      <returns>String representing the display name for the Toolbox item</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityToolboxItem.GetToolboxImage(System.Type)">
      <summary>Gets the associated Image that is used to represent the Toolbox item in the Toolbox.</summary>
      <param name="activityType">The type of the <see cref="T:System.Workflow.ComponentModel.Activity" /> to retrieve the Toolbox image for.</param>
      <returns>Image object displayed in the Toolbox for a Toolbox item</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.AmbientTheme.#ctor(System.Workflow.ComponentModel.Design.WorkflowTheme)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" /> class by using a <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" />. </summary>
      <param name="theme">The <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" /> with which the ambient theme is associated.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.AmbientTheme.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" /> and optionally releases the managed resources. </summary>
      <param name="disposing">
            <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.AmbientTheme.Initialize">
      <summary>Performs additional initialization tasks for the <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" /> class that are not performed by the <see cref="M:System.Workflow.ComponentModel.Design.AmbientTheme.#ctor(System.Workflow.ComponentModel.Design.WorkflowTheme)" />.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.AmbientTheme.OnAmbientPropertyChanged(System.Workflow.ComponentModel.Design.AmbientProperty)">
      <summary>Notifies the <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" /> when the value of the <see cref="T:System.Workflow.ComponentModel.Design.AmbientProperty" /> enumeration changes. </summary>
      <param name="ambientProperty">The <see cref="T:System.Workflow.ComponentModel.Design.AmbientProperty" /> enumeration value to which the setting was changed.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.BindUITypeEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.BindUITypeEditor" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.BindUITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the specified object using the editor style indicated by <see cref="Overload:System.Workflow.ComponentModel.Design.BindUITypeEditor.GetEditStyle" />.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <param name="serviceProvider">An <see cref="T:System.IServiceProvider" /> that the editor can use to obtain services.</param>
      <param name="value">The value of the object to edit.</param>
      <returns>The new value of the object. </returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="serviceProvider" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.BindUITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns the editor style used by the <see cref="Overload:System.Workflow.ComponentModel.Design.BindUITypeEditor.EditValue" /> method.</summary>
      <param name="typeDescriptorContext">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> value that indicates the style of editor used by <see cref="Overload:System.Workflow.ComponentModel.Design.BindUITypeEditor.EditValue" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CommentGlyph.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.CommentGlyph" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CommentGlyph.GetBounds(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Boolean)">
      <summary>Returns the bounds for the current comment glyph on the specified <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</summary>
      <param name="designer">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> with which the comment glyph is associated.</param>
      <param name="activated">
            <see langword="true" /> to indicate whether the glyph appears on the activity designer surface; otherwise, <see langword="false" />. </param>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that represents the bounds for the glyph.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CommentGlyph.OnPaint(System.Drawing.Graphics,System.Boolean,System.Workflow.ComponentModel.Design.AmbientTheme,System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>Performs any tasks required to render the comment glyph on the activity designer surface. </summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to perform fill and drawing tasks.</param>
      <param name="activated">
            <see langword="true" /> to indicate that the glyph appears on the design surface; otherwise, <see langword="false" />. </param>
      <param name="ambientTheme">The <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" /> to use to access ambient property settings.</param>
      <param name="designer">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> from which to obtain information about user actions.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.#ctor">
      <summary>When implemented in a derived class, initializes an instance of the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanInsertActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})">
      <summary>Returns a value that indicates whether activities can be inserted into the composite activity associated with the designer.</summary>
      <param name="insertLocation">The location to insert the activities.</param>
      <param name="activitiesToInsert">A read-only array of <see cref="T:System.Workflow.ComponentModel.Activity" /> to insert.</param>
      <returns>
          <see langword="true" /> if activities can be inserted into the composite activity associated with the designer; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanMoveActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})">
      <summary>Returns a value that indicates whether activities contained within the composite activity can be moved out of the composite activity associated with the designer.</summary>
      <param name="moveLocation">The location from which to move the activities.</param>
      <param name="activitiesToMove">The read-only array of activities to move.</param>
      <returns>
          <see langword="true" /> if the activities can be moved from the composite activity; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanRemoveActivities(System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})">
      <summary>Returns a value that indicates if activities can be removed from the composite activity associated with the designer.</summary>
      <param name="activitiesToRemove">A read-only array of activities to remove from the composite activity associated with the designer.</param>
      <returns>
          <see langword="true" /> if the activities can be removed from the composite activity; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.DeserializeActivitiesFromDataObject(System.IServiceProvider,System.Windows.Forms.IDataObject)">
      <summary>Deserializes items from an <see cref="T:System.Windows.Forms.IDataObject" /> received during a drag-and-drop operation or from the clipboard.</summary>
      <param name="serviceProvider">Component serialization service.</param>
      <param name="dataObj">Object that contains activities to deserialize.</param>
      <returns>An array of activities deserialized from an <see cref="T:System.Windows.Forms.IDataObject" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> and optionally releases the managed resources.</summary>
      <param name="disposing">
            <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.EnsureVisibleContainedDesigner(System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>Verifies that the contained designer is visible.</summary>
      <param name="containedDesigner">The contained designer to make visible.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.GetIntersectingDesigners(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Drawing.Rectangle)">
      <summary>Retrieves designers belonging to the specified root activity that intersect a specified area.</summary>
      <param name="topLevelDesigner">The top-level designer to analyze.</param>
      <param name="rectangle">Area within the top-level designer to analyze.</param>
      <returns>An array of <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> objects that intersect a portion of the Rectangle specified.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.GetNextSelectableObject(System.Object,System.Workflow.ComponentModel.Design.DesignerNavigationDirection)">
      <summary>Gets the object which is next in the order of navigation.</summary>
      <param name="current">The current object in the navigation order.</param>
      <param name="direction">The direction to navigate. 0 = next; 1 = previous; 2 = left; 3 = right.</param>
      <returns>The object that is next in the order of navigation.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.HitTest(System.Drawing.Point)">
      <summary>Gets information about the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> at a specified point on the screen.</summary>
      <param name="point">A <see cref="T:System.Drawing.Point" /> that represents a single x and y coordinate.</param>
      <returns>A <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> that contains information about the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> at a specified point.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Initialize(System.Workflow.ComponentModel.Activity)">
      <summary>Initializes the designer with the associated <see cref="T:System.Workflow.ComponentModel.Activity" />.</summary>
      <param name="activity">The <see cref="T:System.Workflow.ComponentModel.Activity" /> with which the designer should be initialized.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.InsertActivities(System.Workflow.ComponentModel.Design.CompositeActivityDesigner,System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity},System.String)">
      <summary>Inserts activities into the designer at the specified location using a transaction.</summary>
      <param name="compositeActivityDesigner">The designer into which the activities will be inserted.</param>
      <param name="insertLocation">The location in the designer at which the activities will be inserted.</param>
      <param name="activitiesToInsert">The list of activities to insert.</param>
      <param name="undoTransactionDescription">Description for the designer transaction created by the insertion.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.InsertActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})">
      <summary>Inserts the specified activities in the designer at the specified location.</summary>
      <param name="insertLocation">The location in the designer to insert the activities.</param>
      <param name="activitiesToInsert">The list of activities to insert.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.IsContainedDesignerVisible(System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>Gets a value that indicates if the contained designer is visible.</summary>
      <param name="containedDesigner">The designer contained within the CompositeActivityDesigner to test for visibility.</param>
      <returns>
          <see langword="true" /> if the contained designer is visible; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.LoadViewState(System.IO.BinaryReader)">
      <summary>Restores the view state from a binary stream.</summary>
      <param name="reader">The <see cref="T:System.IO.BinaryReader" /> from which to load the view state.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.MoveActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})">
      <summary>Moves activities from one designer to another.</summary>
      <param name="moveLocation">A <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> describing the location to which to move the activities.</param>
      <param name="activitiesToMove">The list of activities to move.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.MoveDesigners(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Boolean)">
      <summary>Moves a designer forward or backwards in index within the composite activity.</summary>
      <param name="activityDesigner">The activity designer to move.</param>
      <param name="moveBack">
            <see langword="true" /> to move the designer backwards; <see langword="false" /> to move the designer forward.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnContainedActivitiesChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)">
      <summary>Occurs when more than one activities contained within the designers have changed. This occurs, for example, when a new child activity is added or an existing child activity is removed.</summary>
      <param name="listChangeArgs">An <see cref="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" /> containing information about the change.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="listChangeArgs" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnContainedActivitiesChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)">
      <summary>Occurs when an activity or a group of activities contained within the designer are changing. This occurs, for example, when a new child activity is added or an existing child activity is removed.</summary>
      <param name="listChangeArgs">An <see cref="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" /> that contains information about the change.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="listChangeArgs" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnContainedActivityChanged(System.Workflow.ComponentModel.Design.ActivityChangedEventArgs)">
      <summary>Occurs when an activity contained within the designer has changed.</summary>
      <param name="e">An <see cref="T:System.Workflow.ComponentModel.Design.ActivityChangedEventArgs" /> that contains information about the change.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="e" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Called when a key is pressed with the designer in focus.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnLayoutPosition(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)">
      <summary>Performs layout and positioning tasks for the contained visual cues or designers on the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> to reposition its child activities.</summary>
      <param name="e">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" /> that contains the event data.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="e" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnLayoutSize(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)">
      <summary>Called to calculate the size needed for an activity based on its current state (collapsed or expanded) and its list of child activities.</summary>
      <param name="e">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" /> that contains the event data.</param>
      <returns>The <see cref="T:System.Drawing.Size" /> that contains the new size settings for the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>Called when the mouse is clicked when the pointer is in designer bounds.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnPaint(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs)">
      <summary>Draws the visual representation of a composite activity at design time.</summary>
      <param name="e">An <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" /> that contains the drawing data.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnThemeChange(System.Workflow.ComponentModel.Design.ActivityDesignerTheme)">
      <summary>Notifies the designer that the associated theme has changed.</summary>
      <param name="designerTheme">A <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" /> that contains the event data.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.PaintContainedDesigners(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs)">
      <summary>Adjusts the clip region on the graphics object and calls <see cref="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnPaint(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs)" /> on all contained designers.</summary>
      <param name="e">
            <see cref="T:System.EventArgs" /> to be used for painting.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.RemoveActivities(System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})">
      <summary>Removes a list of activities from the composite activity designer.</summary>
      <param name="activitiesToRemove">A list of activities to remove from the designer.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.RemoveActivities(System.IServiceProvider,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity},System.String)">
      <summary>Removes the list of activities from the designer using a transaction.</summary>
      <param name="serviceProvider">The service provider associated with the designer.</param>
      <param name="activitiesToRemove">The list of activities to remove.</param>
      <param name="transactionDescription">The description of the transaction created.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.SaveViewState(System.IO.BinaryWriter)">
      <summary>Saves the view state to a binary stream.</summary>
      <param name="writer">The <see cref="T:System.IO.BinaryWriter" /> into which the view state is stored.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.SerializeActivitiesToDataObject(System.IServiceProvider,System.Workflow.ComponentModel.Activity[])">
      <summary>Serializes an array of activities to an <see cref="T:System.Windows.Forms.IDataObject" /> that can be placed into the clipboard or used when initializing a drag and drop operation.</summary>
      <param name="serviceProvider">Component serialization service.</param>
      <param name="activities">Array of activities to serialize.</param>
      <returns>
          <see cref="T:System.Windows.Forms.IDataObject" /> that contains serialized activities.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesignerLayoutSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesignerLayoutSerializer" /> class. </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesignerLayoutSerializer.GetProperties(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)">
      <summary>Retrieves information about all properties associated with the specified object.</summary>
      <param name="serializationManager">The <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> that manages the serialization process.</param>
      <param name="obj">The <see cref="T:System.Object" /> to search for properties.</param>
      <returns>A <see cref="T:System.Reflection.PropertyInfo" /> array that contains information about the properties associated with <paramref name="obj" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeDesignerAccessibleObject.#ctor(System.Workflow.ComponentModel.Design.CompositeActivityDesigner)">
      <summary> Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.CompositeDesignerAccessibleObject" /> class by using the specified <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />.</summary>
      <param name="activityDesigner">The <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> to apply to the accessible object.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeDesignerAccessibleObject.GetChild(System.Int32)">
      <summary>Returns the child accessible object associated with the activity designer at the specified index location.</summary>
      <param name="index">The zero-based index of the child accessible object.</param>
      <returns>An <see cref="T:System.Windows.Forms.AccessibleObject" /> associated with the child <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> at the specified index location.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeDesignerAccessibleObject.GetChildCount">
      <summary>Returns the number of child accessible objects that belong to the <see cref="T:System.Workflow.ComponentModel.Design.CompositeDesignerAccessibleObject" />.</summary>
      <returns>The number of children that belong to the <see cref="T:System.Workflow.ComponentModel.Design.CompositeDesignerAccessibleObject" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeDesignerTheme.#ctor(System.Workflow.ComponentModel.Design.WorkflowTheme)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.CompositeDesignerTheme" /> class.  </summary>
      <param name="theme">The <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" /> to associate with the composite designer theme.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeDesignerTheme.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Workflow.ComponentModel.Design.CompositeDesignerTheme" /> and optionally releases the managed resources. </summary>
      <param name="disposing">
            <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeDesignerTheme.GetExpandButtonBackgroundBrush(System.Drawing.Rectangle)">
      <summary>Retrieves a brush that defines the background display properties of the expand button on the composite activity designer.</summary>
      <param name="rectangle">The <see cref="T:System.Drawing.Rectangle" /> that defines the bounds of the expand button on the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />.</param>
      <returns>A <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> object that uses the <paramref name="rectangle" /> parameter to define the button area in which the brush applies two colors in a linear gradient from the upper-left corner to the lower-right corner of the expand button.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeDesignerTheme.Initialize">
      <summary>Performs further initialization tasks beyond those provided by the <see cref="M:System.Workflow.ComponentModel.Design.CompositeDesignerTheme.#ctor(System.Workflow.ComponentModel.Design.WorkflowTheme)" /> constructor.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeDesignerTheme.OnAmbientPropertyChanged(System.Workflow.ComponentModel.Design.AmbientProperty)">
      <summary>Notifies the <see cref="T:System.Workflow.ComponentModel.Design.CompositeDesignerTheme" /> object that the ambient property settings for the designer have changed. </summary>
      <param name="ambientProperty">The <see cref="T:System.Workflow.ComponentModel.Design.AmbientProperty" /> enumeration value which the composite designer theme should now use.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ConfigErrorGlyph.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.ConfigErrorGlyph" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ConfigErrorGlyph.GetBounds(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Boolean)">
      <summary>Returns the bounds for the glyph on the specified <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</summary>
      <param name="designer">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> with which the glyph is associated.</param>
      <param name="activated">
            <see langword="true" /> to indicate whether the glyph appears on the activity designer surface; otherwise, <see langword="false" />. </param>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that represents the bounds for the glyph.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="designer" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ConfigErrorGlyph.OnActivate(System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>Notifies the glyph that an action has been performed which has activated the glyph.</summary>
      <param name="designer">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> on which the glyph is drawn.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ConfigErrorGlyph.OnPaint(System.Drawing.Graphics,System.Boolean,System.Workflow.ComponentModel.Design.AmbientTheme,System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>Performs any tasks required to render the glyph on the activity designer surface. </summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to perform fill and drawing tasks.</param>
      <param name="activated">
            <see langword="true" /> to indicate that the glyph appears on the design surface; otherwise, <see langword="false" />. </param>
      <param name="ambientTheme">The <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" /> to use to access ambient property settings.</param>
      <param name="designer">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> from which to obtain information about user actions.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ConnectionPoint.#ctor(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Workflow.ComponentModel.Design.DesignerEdges,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> class by using the specified <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />, <see cref="T:System.Workflow.ComponentModel.Design.DesignerEdges" /> enumeration value, and an integer. </summary>
      <param name="associatedDesigner">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> to which the connection point belongs.</param>
      <param name="designerEdge">The <see cref="T:System.Workflow.ComponentModel.Design.DesignerEdges" /> enumeration value that specifies where on the activity designer the connection point is located.</param>
      <param name="connectionIndex">An index location of the current <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" />.</param>
      <exception cref="T:System.ArgumentException">
              <paramref name="connectionIndex" /> is less than zero.-- or --
              <paramref name="connectionIndex" /> is greater than or equal to the number of connection points on <paramref name="associatedDesigner" />.</exception>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="associatedDesigner" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ConnectionPoint.Equals(System.Object)">
      <summary>Returns a value that indicates whether the current <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> is equal to the specified object.</summary>
      <param name="obj">The object to compare with the current <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" />. </param>
      <returns>
          <see langword="true" /> to indicate that the current <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> and <paramref name="obj" /> are equal; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ConnectionPoint.GetHashCode">
      <summary>Returns a hash code for the current <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" />.</summary>
      <returns>The hash code generated by the <see cref="P:System.Workflow.ComponentModel.Design.ConnectionPoint.ConnectionIndex" /> integer or the designer available through <see cref="P:System.Workflow.ComponentModel.Design.ConnectionPoint.AssociatedDesigner" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ConnectionPoint.OnPaint(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs,System.Boolean)">
      <summary>Performs all tasks required to render the <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> on the activity designer surface.</summary>
      <param name="e">An <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" /> that contains the data</param>
      <param name="drawHighlighted">
            <see langword="true" /> to draw a highlighted connection point; otherwise, <see langword="false" />. </param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.Connector.#ctor(System.Workflow.ComponentModel.Design.ConnectionPoint,System.Workflow.ComponentModel.Design.ConnectionPoint)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> class.  </summary>
      <param name="source">The <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> where drawing for the <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> begins.</param>
      <param name="target">The <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> where drawing for the <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> ends.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="source" /> or <paramref name="target" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.Connector.Equals(System.Object)">
      <summary>Determines whether the current <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> is equal to the specified connector.</summary>
      <param name="obj">The <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> to compare with the current connector.</param>
      <returns>
          <see langword="true" /> if the specified connector is equal to the current <see cref="T:System.Workflow.ComponentModel.Design.Connector" />; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.Connector.GetHashCode">
      <summary>Returns the hash code for the current <see cref="T:System.Workflow.ComponentModel.Design.Connector" />.</summary>
      <returns>A hash code for the current <see cref="T:System.Workflow.ComponentModel.Design.Connector" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.Connector.GetService(System.Type)">
      <summary>Returns a service object of the specified type if it is available.</summary>
      <param name="serviceType">The <see cref="T:System.Type" /> of the service object to return.</param>
      <returns>A service object of type <paramref name="serviceType" /> or a null reference (<see langword="Nothing" /> in Visual Basic) if there is no service object of type <paramref name="serviceType" />.  </returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.Connector.HitTest(System.Drawing.Point)">
      <summary>Returns a value that indicates whether the specified point resides on the current <see cref="T:System.Workflow.ComponentModel.Design.Connector" />.</summary>
      <param name="point">The <see cref="T:System.Drawing.Point" /> to test. </param>
      <returns>
          <see langword="true" /> if <paramref name="point" /> resides on the current <see cref="T:System.Workflow.ComponentModel.Design.Connector" />; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.Connector.Invalidate">
      <summary>Invalidates the current <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> and causes it to be redrawn.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.Connector.Offset(System.Drawing.Size)">
      <summary>Changes the <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> height and width using the settings defined in the specified <see cref="T:System.Drawing.Size" />.</summary>
      <param name="size">The <see cref="T:System.Drawing.Size" /> that contains the height and width settings to offset the connector.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.Connector.OnLayout(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)">
      <summary>Notifies the <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> that layout operations are occurring. </summary>
      <param name="e">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.Connector.OnPaint(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs)">
      <summary>Renders the <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> on the workflow design surface.</summary>
      <param name="e">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" /> that contains the drawing data.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.Connector.OnPaintEdited(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs,System.Drawing.Point[],System.Drawing.Point[])">
      <summary>Used for drawing the Connector when it is dragged from one state to another.</summary>
      <param name="e">An <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" /> object that specifies the graphics to use to draw the object and the clipping rectangle in which to draw it.</param>
      <param name="segments">Coordinates for the segments in the <see cref="T:System.Workflow.ComponentModel.Design.Connector" />.</param>
      <param name="segmentEditPoints">Coordinated for the edit points on the <see cref="T:System.Workflow.ComponentModel.Design.Connector" />.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.Connector.OnPaintSelected(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs,System.Boolean,System.Drawing.Point[])">
      <summary>Used for drawing a Connector that is selected by the user.</summary>
      <param name="e">An <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" /> object that specifies the graphics to use to draw the object and the clipping rectangle in which to draw it.</param>
      <param name="primarySelection">Not used.</param>
      <param name="segmentEditPoints">Coordinates for the edit points on the <see cref="T:System.Workflow.ComponentModel.Design.Connector" />.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.Connector.PerformLayout">
      <summary>Performs layout tasks for the <see cref="T:System.Workflow.ComponentModel.Design.Connector" />.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.Connector.SetConnectorSegments(System.Collections.Generic.ICollection{System.Drawing.Point})">
      <summary>Reroutes the connector from source to target if the connector has changed.</summary>
      <param name="segments">A <see cref="T:System.Drawing.Point" /> collection that represents the new connector segments to use for rerouting.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.Connector.System#IDisposable#Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Workflow.ComponentModel.Design.Connector" />. </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ConnectorAccessibleObject.#ctor(System.Workflow.ComponentModel.Design.Connector)">
      <summary>Initializes an instance of the <see cref="T:System.Workflow.ComponentModel.Design.ConnectorAccessibleObject" /> class using an instance of <see cref="T:System.Workflow.ComponentModel.Design.Connector" />.</summary>
      <param name="connector">An instance of <see cref="T:System.Workflow.ComponentModel.Design.Connector" />   which represents a connector between two activity designers on a workflow design surface.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ConnectorAccessibleObject.HitTest(System.Int32,System.Int32)">
      <summary>Retrieves the child object at the specified screen coordinates.</summary>
      <param name="x">The horizontal screen coordinate.</param>
      <param name="y">The vertical screen coordinate.</param>
      <returns>An <see cref="T:System.Workflow.ComponentModel.Design.ConnectorAccessibleObject" /> the child object at the given screen coordinates. This method returns the calling object if the object itself is at the location specified. Returns a null reference (<see langword="Nothing " />in Visual Basic) if no object is at the tested location.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ConnectorHitTestInfo.#ctor(System.Workflow.ComponentModel.Design.CompositeActivityDesigner,System.Workflow.ComponentModel.Design.HitTestLocations,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.ConnectorHitTestInfo" /> class.  </summary>
      <param name="compositeActivityDesigner">The <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> that contains the connector.</param>
      <param name="flags">A <see cref="T:System.Workflow.ComponentModel.Design.HitTestLocations" /> that defines the location on the connector that the user clicked.</param>
      <param name="connector">The index identifier of the connector that was clicked.</param>
      <exception cref="T:System.ArgumentException">Prior to the constructor call the connector index was set to less than zero. </exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ConnectorHitTestInfo.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Workflow.ComponentModel.Design.ConnectorHitTestInfo" />.</summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Workflow.ComponentModel.Design.ConnectorHitTestInfo" />. </param>
      <returns>
          <see langword="true" /> if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Workflow.ComponentModel.Design.ConnectorHitTestInfo" />; otherwise, <see langword="false" />.  </returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ConnectorHitTestInfo.GetHashCode">
      <summary>Returns the hash code for the current <see cref="T:System.Workflow.ComponentModel.Design.ConnectorHitTestInfo" />.</summary>
      <returns>The hash code for the current <see cref="T:System.Workflow.ComponentModel.Design.ConnectorHitTestInfo" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ConnectorHitTestInfo.MapToIndex">
      <summary>Returns the index of the connector that the user clicked.</summary>
      <returns>The index of the connector that the user clicked.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ConnectorLayoutSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.ConnectorLayoutSerializer" /> class. </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ConnectorLayoutSerializer.CreateInstance(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Type)">
      <summary>Creates an instance of the specified <see cref="T:System.Type" /> using the specified <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />.</summary>
      <param name="serializationManager">The <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> supporting this operation.</param>
      <param name="type">The specified <see cref="T:System.Type" />.</param>
      <returns>An instance of the specified <see cref="T:System.Type" />. </returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="serializationManager" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="type" /> is a null reference (<see langword="Nothing" />).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ConnectorLayoutSerializer.GetConnectorConstructionArguments(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Type)">
      <summary>Gets a Dictionary collection filled with element name and their associated values from the current position in the xml reader associated with the <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />.</summary>
      <param name="serializationManager">The <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> that manages the serialization process.</param>
      <param name="type">The specified <see cref="T:System.Type" />.</param>
      <returns>Dictionary based collection containing the argument names and their associated values for the construction of the connector.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ConnectorLayoutSerializer.GetProperties(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)">
      <summary>Retrieves information about all properties associated with the specified object.</summary>
      <param name="serializationManager">The <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> that manages the serialization process.</param>
      <param name="obj">The <see cref="T:System.Object" /> to search for properties.</param>
      <returns>A <see cref="T:System.Reflection.PropertyInfo" /> array that contains information about the properties associated with <paramref name="obj" />.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="serializationManager" /> or <paramref name="obj" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ConnectorLayoutSerializer.OnAfterDeserialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)">
      <summary>Performs processing of the object after the deserialization process.</summary>
      <param name="serializationManager">The <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> that manages the serialization process.</param>
      <param name="obj">The <see cref="T:System.Object" /> that was deserialized.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.DesignerAction.#ctor(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Int32,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.DesignerAction" /> class by using an <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />, an integer, and a string.</summary>
      <param name="activityDesigner">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> on which the designer action is taken.</param>
      <param name="actionId">An integer value that represents the identifier of the <see cref="T:System.Workflow.ComponentModel.Design.DesignerAction" />.</param>
      <param name="text">A string that represents the text associated with the designer action.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="activityDesigner" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">
              <paramref name="text" /> contains a null reference (<see langword="Nothing" />) or its length is 0.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.DesignerAction.#ctor(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Int32,System.String,System.Drawing.Image)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.DesignerAction" /> class by using <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />, an integer, a string, and an <see cref="T:System.Drawing.Image" />.</summary>
      <param name="activityDesigner">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> on which the designer action is to appear.</param>
      <param name="actionId">An integer value that represents the identifier of the <see cref="T:System.Workflow.ComponentModel.Design.DesignerAction" />.</param>
      <param name="text">A string that represents the text associated with the designer action.</param>
      <param name="image">The <see cref="T:System.Drawing.Image" /> to be associated with the designer action.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="activityDesigner" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">
              <paramref name="text" /> contains a null reference (<see langword="Nothing" />) or its length is 0.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.DesignerAction.Invoke">
      <summary>Invokes the <see cref="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnExecuteDesignerAction(System.Workflow.ComponentModel.Design.DesignerAction)" /> method of the activity designer associated with the current designer action.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.DesignerGlyph.#ctor">
      <summary>When implemented in a derived class, initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.DesignerGlyph" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.DesignerGlyph.GetBounds(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Boolean)">
      <summary>Returns the bounds for the glyph on the specified <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</summary>
      <param name="designer">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> with which the glyph is associated.</param>
      <param name="activated">
            <see langword="true" /> to indicate whether the glyph appears on the activity designer surface; otherwise, <see langword="false" />. </param>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that represents the bounds for the glyph.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="designer" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.DesignerGlyph.OnActivate(System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>Indicates to the glyph that an action has been performed which has activated the glyph.</summary>
      <param name="designer">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> on which the glyph is drawn.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.DesignerGlyph.OnPaint(System.Drawing.Graphics,System.Boolean,System.Workflow.ComponentModel.Design.AmbientTheme,System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>When overridden in a derived class, performs any tasks required to render the glyph on the activity designer surface. </summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to perform fill and drawing tasks.</param>
      <param name="activated">
            <see langword="true" /> to indicate that the glyph appears on the design surface; otherwise, <see langword="false" />. </param>
      <param name="ambientTheme">The <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" /> to use to access ambient property settings.</param>
      <param name="designer">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> from which to obtain information about user actions.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.DesignerTheme.#ctor(System.Workflow.ComponentModel.Design.WorkflowTheme)">
      <summary>When implemented in a derived class, initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.DesignerTheme" /> class by using a <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" /> object.</summary>
      <param name="theme">The <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" /> with which the designer theme is associated.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.DesignerTheme.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Workflow.ComponentModel.Design.DesignerTheme" /> and optionally releases the managed resources. </summary>
      <param name="disposing">
            <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.DesignerTheme.Finalize">
      <summary>Allows the <see cref="T:System.Workflow.ComponentModel.Design.DesignerTheme" /> to attempt to free resources and perform other clean-up operations before it is reclaimed by garbage collection.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.DesignerTheme.Initialize">
      <summary>Performs further initialization tasks beyond those performed by <see cref="M:System.Workflow.ComponentModel.Design.DesignerTheme.#ctor(System.Workflow.ComponentModel.Design.WorkflowTheme)" />. </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.DesignerTheme.OnAmbientPropertyChanged(System.Workflow.ComponentModel.Design.AmbientProperty)">
      <summary>Notifies the designer theme class that the ambient property settings for the designer have changed. </summary>
      <param name="ambientProperty">The <see cref="T:System.Workflow.ComponentModel.Design.AmbientProperty" /> enumeration value that the designer theme should now use.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.DesignerTheme.System#IDisposable#Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.DesignerView.#ctor(System.Int32,System.String,System.Drawing.Image)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.DesignerView" /> class by using an integer, a string, and an <see cref="T:System.Drawing.Image" />.</summary>
      <param name="viewId">The integer identifier for the designer view.</param>
      <param name="text">The string that specifies the name of the designer view.</param>
      <param name="image">The <see cref="T:System.Drawing.Image" /> associated with the designer view. </param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="viewId" /> or <paramref name="text" /> contains <see langword="null" />.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.DesignerView.#ctor(System.Int32,System.String,System.Drawing.Image,System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.DesignerView" /> class by using an integer, a string, an <see cref="T:System.Drawing.Image" />, and an <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</summary>
      <param name="viewId">The integer identifier for the designer view.</param>
      <param name="text">The string that specifies the name of the designer view.</param>
      <param name="image">The <see cref="T:System.Drawing.Image" /> associated with the designer view. </param>
      <param name="associatedDesigner">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> associated with the designer view.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="viewId" />, <paramref name="text" />, or <paramref name="associatedDesigner" /> contains <see langword="null" />.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.DesignerView.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to the current designer view.</summary>
      <param name="obj">An <see cref="T:System.Object" /> to compare to the current <see cref="T:System.Workflow.ComponentModel.Design.DesignerView" />.</param>
      <returns>
          <see langword="true" /> if <paramref name="obj" /> and the current <see cref="T:System.Workflow.ComponentModel.Design.DesignerView" /> are equal; otherwise, <see langword="false" />.  </returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.DesignerView.GetHashCode">
      <summary>Serves as a hash function for the <see cref="T:System.Workflow.ComponentModel.Design.DesignerView" /> and is suitable for use in hashing algorithms and data structures like a hash table.</summary>
      <returns>A hash code for the current <see cref="T:System.Workflow.ComponentModel.Design.DesignerView" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.DesignerView.OnActivate">
      <summary>Notifies the designer when the view is activated.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.DesignerView.OnDeactivate">
      <summary>Notifies the designer when the view is deactivated.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.AddConnector(System.Workflow.ComponentModel.Design.ConnectionPoint,System.Workflow.ComponentModel.Design.ConnectionPoint)">
      <summary>Adds a connector to the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" />.</summary>
      <param name="source">The <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> location to begin drawing the connector.</param>
      <param name="target">The <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> location to finish drawing the connector.</param>
      <returns>The <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> that was added to the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" />.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="source" /> or <paramref name="target" /> contains a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Workflow.ComponentModel.Design.ConnectionPoint.AssociatedDesigner" /> property for <paramref name="source" /> or <paramref name="target" /> contains a <see langword="null" /> reference (<see langword="Nothing" />).</exception>
      <exception cref="T:System.InvalidOperationException">The current <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> is not the container for the connector to add.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.BringToFront(System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>Brings the specified <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> to the top of the z-order of the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" />.</summary>
      <param name="containedDesigner">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> to bring to the top of the z-order.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="containedDesigner" /> contains a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">
              <paramref name="containedDesigner" /> is not found in the <see cref="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ContainedDesigners" /> collection.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.CanConnectContainedDesigners(System.Workflow.ComponentModel.Design.ConnectionPoint,System.Workflow.ComponentModel.Design.ConnectionPoint)">
      <summary>Returns a value that indicates whether the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> can create a connection between the specified connection point on a source child activity designer and the specified connection point on a target child activity designer. </summary>
      <param name="source">The <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> to check on the source activity designer.</param>
      <param name="target">The <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> to check on the target activity designer.</param>
      <returns>
          <see langword="true" /> if the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> can draw a connector between source and target activity designers; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.CanResizeContainedDesigner(System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>Returns a value that indicates whether a user can visually resize the specified child activity designer in the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" />. </summary>
      <param name="containedDesigner">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> to check.</param>
      <returns>
          <see langword="true" /> if a user can visually resize the specified activity designer; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.CreateConnector(System.Workflow.ComponentModel.Design.ConnectionPoint,System.Workflow.ComponentModel.Design.ConnectionPoint)">
      <summary>Creates a connector between the two specified connection points.</summary>
      <param name="source">The <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> location to begin drawing the connector.</param>
      <param name="target">The <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> location to finish drawing the connector.</param>
      <returns>The <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> that was created.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> and optionally releases the managed resources. </summary>
      <param name="disposing">
            <see langword="true" /> if the designer is being disposed; <see langword="false" /> if the designer is being finalized.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.GetNextSelectableObject(System.Object,System.Workflow.ComponentModel.Design.DesignerNavigationDirection)">
      <summary>Returns the first selectable object that follows the specified object in the navigation order of the current <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" />.</summary>
      <param name="current">The current <see cref="T:System.Object" /> in the navigation order.</param>
      <param name="navigate">The <see cref="T:System.Workflow.ComponentModel.Design.DesignerNavigationDirection" /> enumeration value that determines the navigation order of the designer.</param>
      <returns>The first selectable <see cref="T:System.Object" /> that follows the <paramref name="obj" /> parameter in the navigation order.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.HitTest(System.Drawing.Point)">
      <summary>Returns information about the <see langword="FreeformActivityDesigner" /> at the specified coordinates on the workflow design surface.</summary>
      <param name="point">The <see cref="T:System.Drawing.Point" /> that contains the coordinates on the workflow design surface from which to gather information.</param>
      <returns>A <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> that contains information about the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> at the specified coordinates</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.Initialize(System.Workflow.ComponentModel.Activity)">
      <summary>Initializes the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> by using the specified <see cref="T:System.Workflow.ComponentModel.Activity" />.</summary>
      <param name="activity">The <see cref="T:System.Workflow.ComponentModel.Activity" /> with which to initialize the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" />.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.InsertActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})">
      <summary>Adds the specified read-only collection of activities to the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> at the specified location on the workflow design surface.</summary>
      <param name="insertLocation">The <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> that specifies the location to add the activities.</param>
      <param name="activitiesToInsert">The <see cref="T:System.Workflow.ComponentModel.Activity" /> read-only collection that contains the activities to add to the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" />.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.MoveActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})">
      <summary>Moves activities to a specified location within the design surface.</summary>
      <param name="moveLocation">Location to move activities to.</param>
      <param name="activitiesToMove">Collection that contains the activities to move to <paramref name="moveLocation." /></param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.MoveContainedDesigner(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Drawing.Point)">
      <summary>Moves the specified <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> to the specified location.</summary>
      <param name="containedDesigner">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> to move.</param>
      <param name="newLocation">The <see cref="T:System.Drawing.Point" /> that represents the designer's new location. </param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="containedDesigner" /> contains a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">
              <paramref name="containedDesigner" /> is not found in the <see cref="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ContainedDesigners" /> collection.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.OnConnectorAdded(System.Workflow.ComponentModel.Design.ConnectorEventArgs)">
      <summary>Raises the <see cref="E:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.ConnectorAdded" /> event. </summary>
      <param name="e">A <see cref="T:System.Workflow.ComponentModel.Design.ConnectorEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.OnConnectorChanged(System.Workflow.ComponentModel.Design.ConnectorEventArgs)">
      <summary>Raises the <see cref="E:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.ConnectorChanged" /> event. </summary>
      <param name="e">A <see cref="T:System.Workflow.ComponentModel.Design.ConnectorEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.OnConnectorRemoved(System.Workflow.ComponentModel.Design.ConnectorEventArgs)">
      <summary>Raises the <see cref="E:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.ConnectorRemoved" /> event. </summary>
      <param name="e">A <see cref="T:System.Workflow.ComponentModel.Design.ConnectorEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.OnContainedActivitiesChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)">
      <summary>Notifies the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> when a child activity is added or deleted from its <see langword="Activities" /> collection.</summary>
      <param name="listChangeArgs">The <see cref="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" /> that contains information about the added or removed activities.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.OnContainedDesignersConnected(System.Workflow.ComponentModel.Design.ConnectionPoint,System.Workflow.ComponentModel.Design.ConnectionPoint)">
      <summary>Notifies the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> when a connection has been established between two of its contained activity designers.</summary>
      <param name="source">The <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> location to begin drawing the connector.</param>
      <param name="target">The <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> location to finish drawing the connector.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.OnDragDrop(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)">
      <summary>Notifies the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> when a drag-drop operation is completed within the bounds of its design surface. </summary>
      <param name="e">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDragEventArgs" /> that defines the operation event arguments.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.OnDragOver(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)">
      <summary>Notifies the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> when a drag-drop operation is in progress and the user's mouse cursor is inside the bounds of the designer.</summary>
      <param name="e">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDragEventArgs" /> that defines the operation event arguments.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Occurs when a key is pressed when the designer has the keyboard focus. </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.OnLayoutPosition(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)">
      <summary>Performs layout tasks to position visual cues and child designers on the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" />.</summary>
      <param name="e">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" /> that defines the operation event arguments.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.OnLayoutSize(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)">
      <summary>Notifies the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> when the size of the visual cues on the designers displayed by the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> have changed.</summary>
      <param name="e">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" /> that defines the operation event arguments.</param>
      <returns>The <see cref="T:System.Drawing.Size" /> that represents the new size of the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> on the workflow design surface.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.OnResizing(System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs)">
      <summary>Notifies the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> when a user is visually resizing it at design time.</summary>
      <param name="e">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs" /> that defines the operation event arguments.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.OnThemeChange(System.Workflow.ComponentModel.Design.ActivityDesignerTheme)">
      <summary>Notifies the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> that its associated theme has changed.</summary>
      <param name="newTheme">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" /> that contains the updated theme property settings.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.RemoveConnector(System.Workflow.ComponentModel.Design.Connector)">
      <summary>Removes the specified <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> from the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" />.</summary>
      <param name="connector">The <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> to remove. </param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="connector" /> contains a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.ResizeContainedDesigner(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Drawing.Size)">
      <summary>Resizes the specified <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> to the dimensions of specified size.</summary>
      <param name="containedDesigner">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> to resize.</param>
      <param name="newSize">The <see cref="T:System.Drawing.Size" /> that represents the new dimensions of the designer.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="containedDesigner" /> contains a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">
              <paramref name="containedDesigner" /> is not found in the <see cref="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ContainedDesigners" /> collection.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.SendToBack(System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>Sets the specified <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> to the bottom of the z-order of the <see langword="FreeformActivityDesigner" />.</summary>
      <param name="containedDesigner">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> to set to the back of the z-order.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="containedDesigner" /> contains a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">
              <paramref name="containedDesigner" /> is not found in the <see cref="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ContainedDesigners" /> collection.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesignerLayoutSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesignerLayoutSerializer" /> class. </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesignerLayoutSerializer.GetProperties(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)">
      <summary>Retrieves information about all properties associated with the specified object.</summary>
      <param name="serializationManager">The <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> that manages the serialization process.</param>
      <param name="obj">The <see cref="T:System.Object" /> to search for properties.</param>
      <returns>A <see cref="T:System.Reflection.PropertyInfo" /> array that contains information about the properties associated with <paramref name="obj" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.HitTestInfo.#ctor(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Workflow.ComponentModel.Design.HitTestLocations)">
      <summary>Initializes an instance of a <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> object.</summary>
      <param name="designer">The associated <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</param>
      <param name="location">The location on the associated <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> that was clicked.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.HitTestInfo.MapToIndex">
      <summary>Returns the index of the hit designer.</summary>
      <returns>The index of the designer hit by the <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IDesignerGlyphProvider.GetGlyphs(System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>Returns an array of glyphs that are associated with the specified activity designer.</summary>
      <param name="activityDesigner">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> object for which to retrieve the glyphs.</param>
      <returns>An array of <see cref="T:System.Workflow.ComponentModel.Design.DesignerGlyph" /> objects to render to the activity designer.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IDesignerGlyphProviderService.AddGlyphProvider(System.Workflow.ComponentModel.Design.IDesignerGlyphProvider)">
      <summary>Adds a class that implements the <see cref="T:System.Workflow.ComponentModel.Design.IDesignerGlyphProvider" /> interface to the list of glyph providers that an activity designer uses.</summary>
      <param name="glyphProvider">The <see cref="T:System.Workflow.ComponentModel.Design.IDesignerGlyphProvider" /> to add.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IDesignerGlyphProviderService.RemoveGlyphProvider(System.Workflow.ComponentModel.Design.IDesignerGlyphProvider)">
      <summary>Removes the class that implements the <see cref="T:System.Workflow.ComponentModel.Design.IDesignerGlyphProvider" /> interface to the list of glyph providers that an activity designer uses.</summary>
      <param name="glyphProvider">The <see cref="T:System.Workflow.ComponentModel.Design.IDesignerGlyphProvider" /> to remove.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IDesignerVerbProvider.GetVerbs(System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>Returns the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerb" /> collection associated with the specified <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />. </summary>
      <param name="activityDesigner">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> for which to return the activity verb collection.</param>
      <returns>An <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerbCollection" /> that contains the verbs associated with the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IDesignerVerbProviderService.AddVerbProvider(System.Workflow.ComponentModel.Design.IDesignerVerbProvider)">
      <summary>Adds a class that implements the <see cref="T:System.Workflow.ComponentModel.Design.IDesignerVerbProvider" /> interface to the list of verb providers that an <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> uses.</summary>
      <param name="verbProvider">The <see cref="T:System.Workflow.ComponentModel.Design.IDesignerVerbProvider" /> to add.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IDesignerVerbProviderService.RemoveVerbProvider(System.Workflow.ComponentModel.Design.IDesignerVerbProvider)">
      <summary>Removes a class that implements the <see cref="T:System.Workflow.ComponentModel.Design.IDesignerVerbProvider" /> interface to the list of verb providers that an <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> uses.</summary>
      <param name="verbProvider">The <see cref="T:System.Workflow.ComponentModel.Design.IDesignerVerbProvider" /> to remove.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IExtendedUIService.AddAssemblyReference(System.Reflection.AssemblyName)">
      <summary>Instructs the workflow designer host to add an assembly reference for the current project to access.</summary>
      <param name="assemblyName">An <see cref="T:System.Reflection.AssemblyName" /> that identifies the assembly to add. </param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IExtendedUIService.AddDesignerActions(System.Workflow.ComponentModel.Design.DesignerAction[])">
      <summary>Adds an array of designer actions to the list of available user actions in the workflow designer host. </summary>
      <param name="actions">A <see cref="T:System.Workflow.ComponentModel.Design.DesignerAction" /> array that contains the actions to add.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IExtendedUIService.AddWebReference(System.Uri@,System.Type@)">
      <summary>Adds a reference to a Web resource to a project in a workflow designer.</summary>
      <param name="url">When this method returns, contains a <see cref="T:System.Uri" /> that represents the universal resource locator (URL) of the Web resource to provide the project access to. This parameter is passed uninitialized. </param>
      <param name="proxyClass">When this method returns, contains a <see cref="T:System.Type" /> of the proxy class associated with the Web resource. This parameter is passed uninitialized. </param>
      <returns>A <see cref="T:System.Windows.Forms.DialogResult" /> value that indicates the return value of the Add Web Reference dialog box.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IExtendedUIService.GetProxyClassForUrl(System.Uri)">
      <summary>Returns the type of the proxy class associated with the specified universal resource locator (URL).</summary>
      <param name="url">A <see cref="T:System.Uri" /> that represents a URL.</param>
      <returns>The <see cref="T:System.Type" /> of the proxy class. </returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IExtendedUIService.GetSelectedPropertyContext">
      <summary>Provides contextual information about the current component.</summary>
      <returns>Returns property context.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IExtendedUIService.GetUrlForProxyClass(System.Type)">
      <summary>Returns the universal resource locator (URL) for the Web resource associated with the specified proxy class.</summary>
      <param name="proxyClass">The <see cref="T:System.Type" /> associated with the proxy class. </param>
      <returns>The URL for the Web resource associated with the proxy class.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IExtendedUIService.GetXsdProjectItemsInfo">
      <summary>Returns the types that are generated for the XSD schema that is added to the workflow project.</summary>
      <returns>The types that are generated for the XSD schema that is added to the workflow project.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IExtendedUIService.NavigateToProperty(System.String)">
      <summary>Navigates to the specified property in the property browser of the workflow designer host. </summary>
      <param name="propName">The name of the property to navigate to.</param>
      <returns>
          <see langword="true" /> if the property was navigated to successfully; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IExtendedUIService.RemoveDesignerActions">
      <summary>Deletes all designer actions in the task list associated with the workflow designer host. </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IExtendedUIService.ShowToolsOptions">
      <summary>Displays the tools options associated with the workflow designer host.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IExtendedUIService2.GetReflectionAssembly(System.Reflection.AssemblyName)">
      <summary>Returns the assembly loaded in reflection context for the current target framework.</summary>
      <param name="assemblyName">The assembly name.</param>
      <returns>The assembly loaded in reflection context for the current target framework.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IExtendedUIService2.GetRuntimeType(System.Type)">
      <summary>Returns the current runtime type for the specified reflection type. The reflection type depends on the target .NET Framework version.</summary>
      <param name="reflectionType">The reflection type that depends on the target .NET Framework version.</param>
      <returns>The current runtime type.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IExtendedUIService2.GetTargetFrameworkVersion">
      <summary>Returns the target .NET Framework version of the current project.</summary>
      <returns>The target .NET Framework version of the current project.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IExtendedUIService2.IsSupportedType(System.Type)">
      <summary>Returns a value that indicates whether the specified type is supported in the current target .NET Framework version.</summary>
      <param name="type">The type to check.</param>
      <returns>
          <see langword="true" /> if the specified type is supported in the current target .NET Framework version; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IIdentifierCreationService.EnsureUniqueIdentifiers(System.Workflow.ComponentModel.CompositeActivity,System.Collections.ICollection)">
      <summary>Provides a mechanism to ensure that Activities added to a <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> are uniquely named.</summary>
      <param name="parentActivity">The <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> that will contain the uniquely named activities.</param>
      <param name="childActivities">A collection of activities to ensure that activities are uniquely named.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IIdentifierCreationService.ValidateIdentifier(System.Workflow.ComponentModel.Activity,System.String)">
      <summary>Provides a mechanism to test that an identifier is unique within an <see cref="T:System.Workflow.ComponentModel.Activity" />.</summary>
      <param name="activity">The <see cref="T:System.Workflow.ComponentModel.Activity" /> against which to test the identifier.</param>
      <param name="identifier">The identifier to test for validity.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IMemberCreationService.CreateEvent(System.String,System.String,System.Type,System.Workflow.ComponentModel.Compiler.AttributeInfo[],System.Boolean)">
      <summary>Creates an event on the specified class by using the specified event name, event type and attributes.</summary>
      <param name="className">A string that contains the class name to add the event to.</param>
      <param name="eventName">A string that defines the name of the event.</param>
      <param name="eventType">The <see cref="T:System.Type" /> assigned to the event.</param>
      <param name="attributes">An <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> array that contains information on all attributes to assign to the event.</param>
      <param name="emitDependencyProperty">
            <see langword="true" /> to emit any dependency properties associated with the event; otherwise, <see langword="false" />. </param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IMemberCreationService.CreateField(System.String,System.String,System.Type,System.Type[],System.CodeDom.MemberAttributes,System.CodeDom.CodeSnippetExpression,System.Boolean)">
      <summary>Creates a field on the specified class by using the specified field name, field type, parameter types, attributes and literal initialization expression.</summary>
      <param name="className">A string that defines the name of the class to add the field.</param>
      <param name="fieldName">A string that defines the name of the field.</param>
      <param name="fieldType">The <see cref="T:System.Type" /> of the new field. </param>
      <param name="genericParameterTypes">A <see cref="T:System.Type" /> array of any parameters associated with the field.</param>
      <param name="attributes">A <see cref="T:System.CodeDom.MemberAttributes" /> that defines the member attribute identifier for the field.</param>
      <param name="initializationExpression">A <see cref="T:System.CodeDom.CodeSnippetExpression" /> that contains the literal expression of the field.</param>
      <param name="overwriteExisting">
            <see langword="true" /> to delete any existing fields on <paramref name="className" /> when creating the new field; otherwise, <see langword="false" />. </param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IMemberCreationService.CreateProperty(System.String,System.String,System.Type,System.Workflow.ComponentModel.Compiler.AttributeInfo[],System.Boolean,System.Boolean,System.Boolean,System.Type,System.Boolean)">
      <summary>Creates a property on the specified class by using the specified property name, property type and attributes.</summary>
      <param name="className">A string that defines the name of the class to add the field.</param>
      <param name="propertyName">A string that defines the name of the field.</param>
      <param name="propertyType">The <see cref="T:System.Type" /> of the new property. </param>
      <param name="attributes">An <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> array that contains information on all attributes to assign to the property.</param>
      <param name="emitDependencyProperty">
            <see langword="true" /> to emit any dependency properties associated with the property; otherwise, <see langword="false" />.</param>
      <param name="isMetaProperty">
            <see langword="true" /> to create the property as a meta property; otherwise, <see langword="false" />. </param>
      <param name="isAttached">
            <see langword="true" /> to indicate that the emitted dependency property has its <see cref="P:System.Workflow.ComponentModel.DependencyProperty.IsAttached" /> property set to <see langword="true" />; otherwise, <see langword="false" />. </param>
      <param name="ownerType">The <see cref="T:System.Type" /> that is declaring the dependency property.</param>
      <param name="isReadOnly">
            <see langword="true" /> to create the property as a read-only property; <see langword="false" /> to create the property as a read-write property.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IMemberCreationService.RemoveEvent(System.String,System.String,System.Type)">
      <summary>Removes the specified event from the specified class. </summary>
      <param name="className">A string that contains the name of the class from which to remove the event.</param>
      <param name="eventName">A string that contains the name of the event to remove.</param>
      <param name="eventType">The <see cref="T:System.Type" /> associated with the event to remove.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IMemberCreationService.RemoveProperty(System.String,System.String,System.Type)">
      <summary>Removes the specified property from the specified class. </summary>
      <param name="className">A string that contains the name of the class from which to remove the property.</param>
      <param name="propertyName">A string that contains the name of the property to remove.</param>
      <param name="propertyType">The <see cref="T:System.Type" /> of the property to remove.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IMemberCreationService.ShowCode">
      <summary>Displays code for the new member on a workflow design surface.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IMemberCreationService.ShowCode(System.Workflow.ComponentModel.Activity,System.String,System.Type)">
      <summary>Displays code for the new member on a workflow design surface by using the specified <see cref="T:System.Workflow.ComponentModel.Activity" />, the specified method and the specified delegate type.</summary>
      <param name="activity">The <see cref="T:System.Workflow.ComponentModel.Activity" /> associated with the code to display.</param>
      <param name="methodName">The name of the method to display.</param>
      <param name="delegateType">The <see cref="T:System.Type" /> of the delegate associated with the method to display.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IMemberCreationService.UpdateBaseType(System.String,System.Type)">
      <summary>Updates the base type to associate with the specified class. </summary>
      <param name="className">A string that contains the name of the class to update with a new base type.</param>
      <param name="baseType">The <see cref="T:System.Type" /> to be the new base type for the class. </param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IMemberCreationService.UpdateEvent(System.String,System.String,System.Type,System.String,System.Type,System.Workflow.ComponentModel.Compiler.AttributeInfo[],System.Boolean,System.Boolean)">
      <summary>Sets a new name and type to an existing event on the specified class. </summary>
      <param name="className">A string that contains the name of the class that contains the event to update.</param>
      <param name="oldEventName">A string that contains the name of the existing event.</param>
      <param name="oldEventType">The <see cref="T:System.Type" /> associated with the existing event.</param>
      <param name="newEventName">A string that contains the new name of the updated event.</param>
      <param name="newEventType">The <see cref="T:System.Type" /> to associate with the updated event.</param>
      <param name="attributes">An <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> array that contains information on all attributes to assign to the updated event.</param>
      <param name="emitDependencyProperty">
            <see langword="true" /> to update the event to emit a dependency property; otherwise, <see langword="false" />.</param>
      <param name="isMetaProperty">
            <see langword="true" /> to set the event as a meta property; otherwise, <see langword="false" />. </param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IMemberCreationService.UpdateProperty(System.String,System.String,System.Type,System.String,System.Type,System.Workflow.ComponentModel.Compiler.AttributeInfo[],System.Boolean,System.Boolean)">
      <summary>Sets a new name and type to a property on the specified class. </summary>
      <param name="className">A string that contains the name of the class on which the property to update resides.</param>
      <param name="oldPropertyName">A string that contains the existing name of the property.</param>
      <param name="oldPropertyType">The <see cref="T:System.Type" /> associated with the existing property.</param>
      <param name="newPropertyName">A string that contains the new name of the property.</param>
      <param name="newPropertyType">The <see cref="T:System.Type" /> to associate with the updated version of the property.</param>
      <param name="attributes">An <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> array that contains information on all attributes to assign to the updated property.</param>
      <param name="emitDependencyProperty">
            <see langword="true" /> to update the property emit a dependency property; otherwise, <see langword="false" />.</param>
      <param name="isMetaProperty">
            <see langword="true" /> to set the property as a meta property; otherwise, <see langword="false" />. </param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IMemberCreationService.UpdateTypeName(System.String,System.String)">
      <summary>Updates the name of the specified class. </summary>
      <param name="oldClassName">A string that contains the existing name of the class. </param>
      <param name="newClassName">A string that contains the new name to assign to the class. </param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IPersistUIState.LoadViewState(System.IO.BinaryReader)">
      <summary>Restores the UI state of a designer from a binary stream.</summary>
      <param name="reader">The <see cref="T:System.IO.BinaryReader" /> from which to restore the designer state.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IPersistUIState.SaveViewState(System.IO.BinaryWriter)">
      <summary>Stores the UI state of a designer to a binary stream.</summary>
      <param name="writer">The <see cref="T:System.IO.BinaryWriter" /> to use to store the state.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType(System.Type,System.Boolean)">
      <summary>Returns a value that indicates whether the specified type can be filtered.</summary>
      <param name="type">The <see cref="T:System.Type" /> to check for filtering.</param>
      <param name="throwOnError">
            <see langword="true" /> to throw an exception when the <see cref="M:System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType(System.Type,System.Boolean)" /> is processed; otherwise, <see langword="false" />. </param>
      <returns>
          <see langword="true" /> if the specified type can be filtered; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ITypeProviderCreator.GetLocalAssembly(System.Object)">
      <summary>Returns the local assembly associated with the specified object.</summary>
      <param name="obj">The <see cref="T:System.Object" /> for which to obtain the local assembly.</param>
      <returns>The <see cref="T:System.Reflection.Assembly" /> associated with <paramref name="obj" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ITypeProviderCreator.GetTransientAssembly(System.Reflection.AssemblyName)">
      <summary>Returns the transient assembly associated with the specified assembly name.</summary>
      <param name="assemblyName">The <see cref="T:System.Reflection.AssemblyName" /> for which to retrieve the transient assembly.</param>
      <returns>The transient <see cref="T:System.Reflection.Assembly" /> associated with <paramref name="assemblyName" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ITypeProviderCreator.GetTypeProvider(System.Object)">
      <summary>Returns the type provider associated with the specified object. </summary>
      <param name="obj">The <see cref="T:System.Object" /> for which to return the type provider.</param>
      <returns>An <see cref="T:System.Workflow.ComponentModel.Compiler.ITypeProvider" /> to perform type provider tasks for <paramref name="obj" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ITypeProviderCreator.GetTypeResolutionService(System.Object)">
      <summary>Returns a service that can retrieve an assembly or type by name for the specified object.</summary>
      <param name="obj">The <see cref="T:System.Object" /> for which to retrieve the type resolution service.</param>
      <returns>The <see cref="T:System.ComponentModel.Design.ITypeResolutionService" /> to use to retrieve an assembly or type.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.IsSupportedActivityType(System.Type)">
      <summary>Returns a value that indicates whether the specified type is supported on the current workflow designer.</summary>
      <param name="activityType">The <see cref="T:System.Type" /> to check for support on the designer.</param>
      <returns>
          <see langword="true" /> if <paramref name="type" /> is supported on the current workflow designer; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.LockedActivityGlyph.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.LockedActivityGlyph" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.LockedActivityGlyph.GetBounds(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Boolean)">
      <summary>Returns the bounds for the glyph on the specified <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</summary>
      <param name="designer">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> with which the glyph is associated.</param>
      <param name="activated">
            <see langword="true" /> to indicate whether the glyph appears on the activity designer surface; otherwise, <see langword="false" />. </param>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that represents the bounds for the glyph.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="designer" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.LockedActivityGlyph.OnPaint(System.Drawing.Graphics,System.Boolean,System.Workflow.ComponentModel.Design.AmbientTheme,System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>Performs any tasks required to render the glyph on the activity designer surface. </summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to perform fill and drawing tasks.</param>
      <param name="activated">
            <see langword="true" /> to indicate that the glyph appears on the design surface; otherwise, <see langword="false" />. </param>
      <param name="ambientTheme">The <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" /> to use to access ambient property settings.</param>
      <param name="designer">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> from which to obtain information about user actions.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.CanMoveActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})">
      <summary>Returns a value that indicates whether child activities of the activity associated with the <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" /> can be moved.</summary>
      <param name="moveLocation">The <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> that describes the location to move the activities to.</param>
      <param name="activitiesToMove">The <see cref="T:System.Workflow.ComponentModel.Activity" /> read-only collection that contains the activities to move.</param>
      <returns>
          <see langword="true" /> if the activities can be moved from the parent activity; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.CanRemoveActivities(System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})">
      <summary>Returns a value that indicates whether child activities of the activity associated with the <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" /> can be deleted.</summary>
      <param name="activitiesToRemove">The read-only collection of activities to remove.</param>
      <returns>
          <see langword="true" /> if the activities can be deleted from the parent activity; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.GetDropTargets(System.Drawing.Point)">
      <summary>Returns array of rectangles that represent the valid drop locations within the <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" />.</summary>
      <param name="dropPoint">The <see cref="T:System.Drawing.Point" /> that defines the x- and y-coordinates for the drop target.</param>
      <returns>The <see cref="T:System.Drawing.Rectangle" /> array that represents the valid drop locations within the <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.GetNextSelectableObject(System.Object,System.Workflow.ComponentModel.Design.DesignerNavigationDirection)">
      <summary>Returns the first selectable object that follows the specified object in the navigation order of the current <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" />.</summary>
      <param name="obj">The current <see cref="T:System.Object" /> in the navigation order.</param>
      <param name="direction">A <see cref="T:System.Workflow.ComponentModel.Design.DesignerNavigationDirection" /> enumeration value that determines the navigation order of the designer.</param>
      <returns>An <see cref="T:System.Object" /> that follows the specified object.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.OnCreateNewBranch">
      <summary>Indicates that the user has created a new branch activity on the activity associated with the <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" />.</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> that was added as the new branch of the activity associated with the <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.OnLayoutPosition(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)">
      <summary>Performs layout tasks to position visual cues and child designers on the <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" />.</summary>
      <param name="e">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" /> that contains the layout arguments.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="e" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.OnLayoutSize(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)">
      <summary>Sets the size of the visual cues on the designers contained within the <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" />.</summary>
      <param name="e">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" /> that contains the layout arguments.</param>
      <returns>The <see cref="T:System.Drawing.Size" /> that contains the new size settings for the <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.OnPaint(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs)">
      <summary>Draws the visual representation of the activity associated with the <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" /> at design time.</summary>
      <param name="e">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" /> that contains the drawing arguments.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ReadOnlyActivityGlyph.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.ReadOnlyActivityGlyph" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ReadOnlyActivityGlyph.GetBounds(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Boolean)">
      <summary>Returns the bounds for the glyph on the specified <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</summary>
      <param name="designer">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> with which the glyph is associated.</param>
      <param name="activated">
            <see langword="true" /> to indicate whether the glyph appears on the activity designer surface; otherwise, <see langword="false" />. </param>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that represents the bounds for the glyph.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="designer" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ReadOnlyActivityGlyph.OnPaint(System.Drawing.Graphics,System.Boolean,System.Workflow.ComponentModel.Design.AmbientTheme,System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>Performs any tasks required to render the glyph on the activity designer surface. </summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to perform fill and drawing tasks.</param>
      <param name="activated">
            <see langword="true" /> to indicate that the glyph appears on the design surface; otherwise, <see langword="false" />. </param>
      <param name="ambientTheme">The <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" /> to use to access ambient property settings.</param>
      <param name="designer">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> from which to obtain information about user actions.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SelectionGlyph.#ctor">
      <summary>When implemented in a derived class, initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.SelectionGlyph" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SelectionGlyph.GetBounds(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Boolean)">
      <summary>Returns the bounds for the selection glyph on the specified <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</summary>
      <param name="designer">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> with which the selection glyph is associated.</param>
      <param name="activated">
            <see langword="true" /> to indicate whether the selection glyph appears on the activity designer surface; otherwise, <see langword="false" />. </param>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that represents the bounds for the glyph.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SelectionGlyph.GetGrabHandles(System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>Returns an array of rectangles that represents the selected glyph's grab handles. </summary>
      <param name="designer">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> with which the selection glyph is associated.</param>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> array of the grab handles to display on the selected glyph.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SelectionGlyph.OnPaint(System.Drawing.Graphics,System.Boolean,System.Workflow.ComponentModel.Design.AmbientTheme,System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>Performs any tasks required to render the glyph on the activity designer surface. </summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to perform fill and drawing tasks.</param>
      <param name="activated">
            <see langword="true" /> to indicate that the glyph appears on the design surface; otherwise, <see langword="false" />. </param>
      <param name="ambientTheme">The <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" /> to use to access ambient property settings.</param>
      <param name="designer">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> from which to obtain information about user actions.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequenceDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.SequenceDesigner" /> class. </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequenceDesignerAccessibleObject.#ctor(System.Workflow.ComponentModel.Design.SequentialActivityDesigner)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.SequenceDesignerAccessibleObject" /> class by using the specified <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" />. </summary>
      <param name="activityDesigner">The <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" /> to apply to the accessible object.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequenceDesignerAccessibleObject.GetChild(System.Int32)">
      <summary>Retrieves the accessible child that corresponds to the specified index location.</summary>
      <param name="index">The zero-based index for the accessible child.</param>
      <returns>An <see cref="T:System.Windows.Forms.AccessibleObject" /> that represents the accessible child corresponding to the specified index.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequenceDesignerAccessibleObject.GetChildCount">
      <summary>Retrieves the number of children that belong to the accessible object.</summary>
      <returns>An integer that represents the number of children that belong to the accessible object. </returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequenceDesignerAccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)">
      <summary>Navigates to another accessible object.</summary>
      <param name="navdir">One of the <see cref="T:System.Windows.Forms.AccessibleNavigation" /> values.</param>
      <returns>An <see cref="T:System.Windows.Forms.AccessibleObject" /> that represents the specified <see cref="T:System.Windows.Forms.AccessibleNavigation" /> value.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequentialActivityDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequentialActivityDesigner.GetConnectors">
      <summary>Returns an array of rectangles that bound the activity designer's connectors.</summary>
      <returns>The <see cref="T:System.Drawing.Rectangle" /> array that bounds the connectors.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequentialActivityDesigner.GetDropTargets(System.Drawing.Point)">
      <summary>Returns array of rectangles that represent the valid drop locations within the <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" />.</summary>
      <param name="dropPoint">The <see cref="T:System.Drawing.Point" /> that defines the x- and y-coordinates for the drop target.</param>
      <returns>The <see cref="T:System.Drawing.Rectangle" /> array that represents the valid drop locations within the <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequentialActivityDesigner.GetNextSelectableObject(System.Object,System.Workflow.ComponentModel.Design.DesignerNavigationDirection)">
      <summary>Returns the first selectable object that follows the specified object in the navigation order of the current <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" />.</summary>
      <param name="obj">The current object in the navigation order.</param>
      <param name="direction">A <see cref="T:System.Workflow.ComponentModel.Design.DesignerNavigationDirection" /> enumeration value that determines the navigation order of the designer.</param>
      <returns>The first selectable <see cref="T:System.Object" /> that follows the <paramref name="obj" /> parameter in the navigation order of the <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" />. </returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequentialActivityDesigner.HitTest(System.Drawing.Point)">
      <summary>Returns information about the <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" /> at the specified point on the workflow design surface.</summary>
      <param name="point">The <see cref="T:System.Drawing.Point" /> location on the workflow design surface from which to gather information.</param>
      <returns>A <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> that contains information about the <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequentialActivityDesigner.Initialize(System.Workflow.ComponentModel.Activity)">
      <summary>Initializes the designer by using the specified activity.</summary>
      <param name="activity">The <see cref="T:System.Workflow.ComponentModel.Activity" /> with which to initialize the <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" />.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequentialActivityDesigner.OnLayoutPosition(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)">
      <summary>Performs layout tasks to position visual cues and child designers on the <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" />.</summary>
      <param name="e">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" /> that contains the layout arguments.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="e" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequentialActivityDesigner.OnLayoutSize(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)">
      <summary>Sets the size of the visual cues on the designers contained within the <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" />.</summary>
      <param name="e">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" /> that contains the layout arguments.</param>
      <returns>The <see cref="T:System.Drawing.Size" /> that contains the new size settings for <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" />. </returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequentialActivityDesigner.OnPaint(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs)">
      <summary>Draws the visual representation of activity at design time.</summary>
      <param name="e">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" /> that contains the drawing arguments.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter.#ctor(System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter" /> class.  </summary>
      <param name="parent">The SequentialWorkflowRootDesigner with which the </param>
      <param name="isHeader">
            <see langword="true" /> to indicate that the <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter" /> is a header; <see langword="false" /> to indicate that the <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter" /> is a footer. </param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter.OnLayout(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)">
      <summary>Notifies the <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter" /> when the elements it contains are repositioned by the user.</summary>
      <param name="e">An <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter.OnPaint(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs)">
      <summary>Draws the header or footer associated with the workflow root designer on the design surface.</summary>
      <param name="e">An <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" /> that contains the event data.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="e" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.CanBeParentedTo(System.Workflow.ComponentModel.Design.CompositeActivityDesigner)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> can be set as the parent of the activity associated with the designer.</summary>
      <param name="parentActivityDesigner">The <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> to check.</param>
      <returns>
          <see langword="true" /> to allow the activity associated with <paramref name="parentActivityDesigner" /> to be the parent of the activity associated with the <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" />; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.GetInnerConnections(System.Workflow.ComponentModel.Design.DesignerEdges)">
      <summary>Returns a read-only collection of points that represent the inner connection of the designer. </summary>
      <param name="edges">The <see cref="T:System.Workflow.ComponentModel.Design.DesignerEdges" /> on which to gather the collection of connection points.</param>
      <returns>A collection that contains the <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> objects used for a connectable designer.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.OnLayoutSize(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)">
      <summary>Sets the size of the visual cues on the designers contained within the <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" />.</summary>
      <param name="e">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" /> that contains the layout arguments.</param>
      <returns>The <see cref="T:System.Drawing.Size" /> that represents the size of the visual cues on the <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.OnPaint(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs)">
      <summary>Draws any headers and footers associated with the <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" />.</summary>
      <param name="e">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" /> that contains the event data.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="e" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.OnSmartTagVisibilityChanged(System.Boolean)">
      <summary>Notifies the designer whether smart tags are to be shown or hidden on the <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" />.</summary>
      <param name="visible">
            <see langword="true" /> to display smart tags on the designer surface; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ShadowGlyph.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.ShadowGlyph" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ShadowGlyph.GetBounds(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Boolean)">
      <summary>Returns the bounds for the glyph on the specified <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</summary>
      <param name="designer">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> with which the glyph is associated.</param>
      <param name="activated">
            <see langword="true" /> to indicate whether the glyph appears on the activity designer surface; otherwise, <see langword="false" />. </param>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that represents the bounds for the glyph.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.#ctor">
      <summary>When implemented in a derived class, initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.CanInsertActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})">
      <summary>Returns a value that indicates whether the specified activities can be added to the <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> at the specified location on the workflow design surface.</summary>
      <param name="insertLocation">The <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> that contains the screen location at which to attempt to insert the activities.</param>
      <param name="activitiesToInsert">The <see cref="T:System.Workflow.ComponentModel.Activity" /> read-only collection that contains the activities to add.</param>
      <returns>
          <see langword="true" /> if the specified activities can be inserted at the specified location on the workflow design surface; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.CanRemoveActivities(System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})">
      <summary>Returns a value that indicates whether the specified activities can be removed from the <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" />.</summary>
      <param name="activitiesToRemove">The <see cref="T:System.Workflow.ComponentModel.Activity" /> read-only collection that contains the activities to remove.</param>
      <returns>
          <see langword="true" /> if the specified activities can be removed; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.DrawConnectors(System.Drawing.Graphics,System.Drawing.Pen,System.Drawing.Point[],System.Workflow.ComponentModel.Design.LineAnchor,System.Workflow.ComponentModel.Design.LineAnchor)">
      <summary>Draws all of the connectors to display on the <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" />.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> on which to draw the connectors.</param>
      <param name="pen">The <see cref="T:System.Drawing.Pen" /> to draw the connectors.</param>
      <param name="points">The <see cref="T:System.Drawing.Point" /> array that contains the endpoints for each of the connectors to draw.</param>
      <param name="startCap">A <see cref="T:System.Workflow.ComponentModel.Design.LineAnchor" /> that determines the graphic to draw at connector start points.</param>
      <param name="endCap">A <see cref="T:System.Workflow.ComponentModel.Design.LineAnchor" /> that determines the graphic to draw at connector end points.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.EnsureVisibleContainedDesigner(System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>Ensures that the specified activity designer is visible on the workflow design surface.</summary>
      <param name="containedDesigner">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> for which to ensure visibility on the workflow design surface.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.GetDropTargets(System.Drawing.Point)">
      <summary>Returns an array of valid drop locations on the <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> surface. </summary>
      <param name="dropPoint">The <see cref="T:System.Drawing.Point" /> to query the design surface with.</param>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> array that represents the valid drop locations on the <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> surface.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.GetInnerConnections(System.Workflow.ComponentModel.Design.DesignerEdges)">
      <summary>Returns a read-only collection of points that represent the inner connection points for the <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" />.</summary>
      <param name="edges">The DesignerEdges along which to search for connection points. </param>
      <returns>A <see cref="T:System.Drawing.Point" /> generic read-only collection that contains the inner connection points for the designer.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.GetNextSelectableObject(System.Object,System.Workflow.ComponentModel.Design.DesignerNavigationDirection)">
      <summary>Returns the first selectable object that follows the specified object in the navigation order for the current <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" />. </summary>
      <param name="current">The current object in the navigation order.</param>
      <param name="direction">A <see cref="T:System.Workflow.ComponentModel.Design.DesignerNavigationDirection" /> that determines the navigation order of the designer.</param>
      <returns>The first selectable <see cref="T:System.Object" /> that follows the <paramref name="obj" /> parameter in the navigation order. </returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.Initialize(System.Workflow.ComponentModel.Activity)">
      <summary>Initializes the designer by using the specified activity.</summary>
      <param name="activity">The <see cref="T:System.Workflow.ComponentModel.Activity" /> with which to initialize the <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" />.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.InsertActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})">
      <summary>Adds the specified activities to the <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> at the specified location on the workflow design surface.</summary>
      <param name="insertLocation">The <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> that specifies the location to add the activities.</param>
      <param name="activitiesToInsert">The <see cref="T:System.Workflow.ComponentModel.Activity" /> read-only collection that contains the activities to add to the <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" />.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.LoadViewState(System.IO.BinaryReader)">
      <summary>Loads the view state of the <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> from a binary stream.</summary>
      <param name="reader">A <see cref="T:System.IO.BinaryReader" /> used to restore the designer view state.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="reader" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.MoveActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})">
      <summary>Moves the specified activities from one designer displayed in the <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> to another.</summary>
      <param name="moveLocation">The <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> that contains the location on the workflow design surface to move the activities.</param>
      <param name="activitiesToMove">The <see cref="T:System.Workflow.ComponentModel.Activity" /> read-only collection to move.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.OnActivityChanged(System.Workflow.ComponentModel.Design.ActivityChangedEventArgs)">
      <summary>Notifies the designer when the activity associated with it changes.</summary>
      <param name="e">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityChangedEventArgs" /> that contains information about the changed activity.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="e" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.OnContainedActivitiesChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)">
      <summary>Notifies the <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> when more than one of the activities it contains has changed. </summary>
      <param name="listChangeArgs">The <see cref="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" /> that contains information about the activities that changed.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.OnDragDrop(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)">
      <summary>Notifies the <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> when a drag-drop operation is completed with the bounds of its design surface.</summary>
      <param name="e">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDragEventArgs" /> that defines the operation event arguments.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="e" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.OnDragEnter(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)">
      <summary>Notifies the <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> when a drag-drop operation is in progress and the user's mouse cursor enters the bounds of the designer.</summary>
      <param name="e">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDragEventArgs" /> that defines the operation event arguments.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="e" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.OnDragLeave">
      <summary>Notifies the <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> when a drag-drop operation is in progress and the user's mouse cursor leaves the bounds of the designer.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.OnDragOver(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)">
      <summary>Notifies the <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> when a drag-drop operation is in progress and the user's mouse cursor is inside the bounds of the designer.</summary>
      <param name="e">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDragEventArgs" /> that defines the operation event arguments.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="e" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.OnLayoutPosition(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)">
      <summary>Performs layout tasks to position visual cues and child designers on the <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" />.</summary>
      <param name="e">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" /> that contains the layout arguments.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="e" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.OnLayoutSize(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)">
      <summary>Notifies the <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> when the size of the visual cues on the designers displayed by the <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> have changed.</summary>
      <param name="e">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" /> that contains the layout arguments.</param>
      <returns>The <see cref="T:System.Drawing.Size" /> that represents the new size of the <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> on the workflow design surface.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.OnShowSmartTagVerbs(System.Drawing.Point)">
      <summary>Displays the designer verbs associated with a smart tag at a specified location on the workflow design surface.</summary>
      <param name="smartTagPoint">The <see cref="T:System.Drawing.Point" /> that represents the location on the workflow design surface for which to show <see cref="T:System.Workflow.ComponentModel.Design.DesignerAction" /> objects.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.OnViewChanged(System.Workflow.ComponentModel.Design.DesignerView)">
      <summary>Notifies the <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> when the current designer view changes.</summary>
      <param name="view">The <see cref="T:System.Workflow.ComponentModel.Design.DesignerView" /> that is to be set.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.SaveViewState(System.IO.BinaryWriter)">
      <summary>Stores the current view state of the <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> to a binary stream.</summary>
      <param name="writer">The <see cref="T:System.IO.BinaryWriter" /> to which the current designer view state is stored.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ThemeConfigurationDialog.#ctor(System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.ThemeConfigurationDialog" /> class by using an <see cref="T:System.IServiceProvider" />. </summary>
      <param name="serviceProvider">The service provider that provides custom support to the <see cref="T:System.Workflow.ComponentModel.Design.ThemeConfigurationDialog" />.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="serviceProvider" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ThemeConfigurationDialog.#ctor(System.IServiceProvider,System.Workflow.ComponentModel.Design.WorkflowTheme)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.ThemeConfigurationDialog" /> class by using an <see cref="T:System.IServiceProvider" /> and <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" />. </summary>
      <param name="serviceProvider">The service provider that provides custom support to the <see cref="T:System.Workflow.ComponentModel.Design.ThemeConfigurationDialog" />.</param>
      <param name="theme">The <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" /> to be highlighted in the theme configuration dialog box in the workflow designer.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="serviceProvider" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.TypeBrowserDialog.#ctor(System.IServiceProvider,System.Workflow.ComponentModel.Design.ITypeFilterProvider,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.TypeBrowserDialog" /> class by using an <see cref="T:System.IServiceProvider" />, an <see cref="T:System.Workflow.ComponentModel.Design.ITypeFilterProvider" />, and a string. </summary>
      <param name="serviceProvider">The <see cref="T:System.IServiceProvider" /> from which the dialog obtains services.</param>
      <param name="filterProvider">The <see cref="T:System.Workflow.ComponentModel.Design.ITypeFilterProvider" /> from which to obtain type filtering services.</param>
      <param name="selectedTypeName">The name of the selected type.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.TypeBrowserDialog.#ctor(System.IServiceProvider,System.Workflow.ComponentModel.Design.ITypeFilterProvider,System.String,System.Workflow.ComponentModel.Compiler.TypeProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.TypeBrowserDialog" /> class by using an <see cref="T:System.IServiceProvider" />, an <see cref="T:System.Workflow.ComponentModel.Design.ITypeFilterProvider" />, a string, and a <see cref="T:System.Workflow.ComponentModel.Compiler.TypeProvider" />.</summary>
      <param name="serviceProvider">The <see cref="T:System.IServiceProvider" /> from which to obtain services.</param>
      <param name="filterProvider">The <see cref="T:System.Workflow.ComponentModel.Design.ITypeFilterProvider" /> from which to obtain type filtering services.</param>
      <param name="selectedTypeName">The name of the selected type.</param>
      <param name="typeProvider">The <see cref="T:System.Workflow.ComponentModel.Compiler.TypeProvider" /> that allows access local assemblies to load in the type browser dialog. </param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.TypeBrowserDialog.System#IServiceProvider#GetService(System.Type)">
      <summary>Retrieves the service object for the specified type.</summary>
      <param name="serviceType">The <see cref="T:System.Type" /> of service object to retrieve.</param>
      <returns>A service object of type <paramref name="serviceType" />, or a null reference (<see langword="Nothing" /> in Visual Basic) if there is no service object of type <paramref name="serviceType" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.TypeBrowserEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.TypeBrowserEditor" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.TypeBrowserEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the specified object using the editor style indicated by <see cref="Overload:System.Workflow.ComponentModel.Design.TypeBrowserEditor.GetEditStyle" />.</summary>
      <param name="typeDescriptorContext">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <param name="serviceProvider">An <see cref="T:System.IServiceProvider" /> that the editor can use to obtain services.</param>
      <param name="value">The <see cref="T:System.Object" /> to edit.</param>
      <returns>The new value of the object. </returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="typeDescriptorContext" /> or <paramref name="serviceProvider" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.Exception">
              <see cref="M:System.IServiceProvider.GetService(System.Type)" /> returns a null reference (<see langword="Nothing" />) when it attempts to obtain the type provider. </exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.TypeBrowserEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns the editor style used by the <see cref="Overload:System.Workflow.ComponentModel.Design.TypeBrowserEditor.EditValue" /> method.</summary>
      <param name="typeDescriptorContext">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> value that indicates the style of editor used by <see cref="Overload:System.Workflow.ComponentModel.Design.TypeBrowserEditor.EditValue" />. Unless overridden by an inheriting class, this method returns <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.Modal" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.TypeFilterProviderAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.TypeFilterProviderAttribute" /> class by using the specified type name. </summary>
      <param name="typeName">A string that contains the name of the type that implements <see cref="T:System.Workflow.ComponentModel.Design.ITypeFilterProvider" /> to apply to the class or member.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.TypeFilterProviderAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.TypeFilterProviderAttribute" /> class.  </summary>
      <param name="type">A <see cref="T:System.Type" /> that implements <see cref="T:System.Workflow.ComponentModel.Design.ITypeFilterProvider" /> to apply to the class or member.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.#ctor">
      <summary>When implemented in a derived class, initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.AddActivityToDesigner(System.Workflow.ComponentModel.Activity)">
      <summary>Adds an activity to the designer host after it has been added to the parent activities collection.</summary>
      <param name="activity">
            <see cref="T:System.Workflow.ComponentModel.Activity" /> to add.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" />. </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush">
      <summary>Writes pending changes to the location that the designer was loaded from.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.ForceReload">
      <summary>When overridden in a derived class, causes <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /> to reload the designer. </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileReader(System.String)">
      <summary>When overridden in a derived class, retrieves an object that <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /> uses to read from the specified file. </summary>
      <param name="filePath">A string that contains a path to the file to read from.</param>
      <returns>A <see cref="T:System.IO.TextReader" /> to read the specified file.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileWriter(System.String)">
      <summary>When overridden in a derived class, gets an object that the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /> uses to write to the specified file. </summary>
      <param name="filePath">A string that contains the path to the file to write to.</param>
      <returns>A <see cref="T:System.IO.TextWriter" /> to write to the file.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Initialize">
      <summary>Initializes the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /> with any services required by the designer loader host.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout(System.Xml.XmlReader,System.Collections.IList@)">
      <summary>Applies the serialized layout to the root designer in the current designer host.</summary>
      <param name="layoutReader">An <see cref="T:System.Xml.XmlReader" /> that is created for the serialized layout.</param>
      <param name="layoutLoadErrors">List of errors that occurred during the deserialization.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayoutFromResource(System.Type,System.String,System.Collections.IList@)">
      <summary>Retrieves the specified resource and calls the <see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout(System.Xml.XmlReader,System.Collections.IList@)" /> method that applies the serialized layout to the root designer in the current designer host.</summary>
      <param name="type">
            <see cref="T:System.Type" /> that the resource is associated with.</param>
      <param name="manifestResourceName">Name of the resource.</param>
      <param name="errors">Errors encountered during the call to <see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout(System.Xml.XmlReader,System.Collections.IList@)" />.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)">
      <summary>Called when loading of the designer is completed.</summary>
      <param name="successful">
            <see langword="true" /> if load operation is successful; otherwise, <see langword="false" />.</param>
      <param name="errors">Contains the load errors.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>Writes cached changes to the location that the designer was loaded from.</summary>
      <param name="serializationManager">Class that implements the <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> interface, which manages design-time serialization.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>Loads the designer from a design document.</summary>
      <param name="serializationManager">Class that implements the <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> interface, which manages design-time serialization.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.RemoveActivityFromDesigner(System.Workflow.ComponentModel.Activity)">
      <summary>Removes an activity from the designer host after it has been added to the parent activities collection.</summary>
      <param name="activity">Activity to be removed from the designer.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout(System.Xml.XmlWriter,System.Workflow.ComponentModel.Design.ActivityDesigner,System.Collections.IList@)">
      <summary>Serializes the designer layout.</summary>
      <param name="layoutWriter">
            <see langword="XmlWriter" /> that is used to serialize the layout into.</param>
      <param name="rootDesigner">Root activity from which you get the layout information.</param>
      <param name="layoutSaveErrors">Errors encountered during serialization.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.#ctor">
      <summary>When implemented in a derived class, initializes an instance of a <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" />.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.Dispose">
      <summary>Releases the resources used by the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" />.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /> and optionally releases the managed resources.</summary>
      <param name="disposing">
            <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.Finalize">
      <summary>Attempts to free resources by calling <see langword="Dispose(false)" /> before the object is reclaimed by garbage collection.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.Initialize(System.Workflow.ComponentModel.Design.WorkflowView)">
      <summary>Initializes the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /> with the associated <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
      <param name="parentView">The <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> to associate with the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" />.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>Occurs when the mouse button is released above an object during a drag operation. </summary>
      <param name="eventArgs">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains information about the event.</param>
      <returns>
          <see langword="true" /> if the message is handled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>Occurs when the mouse pointer enters the bounds of an object during a drag operation.</summary>
      <param name="eventArgs">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains information about the event.</param>
      <returns>
          <see langword="true" /> if the message is handled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnDragLeave">
      <summary>Occurs when the mouse pointer leaves the bounds of an object during a drag operation.</summary>
      <returns>
          <see langword="true" /> if the message is handled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>Occurs when the mouse pointer moves within the bounds of an object during a drag operation.</summary>
      <param name="eventArgs">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains information about the event.</param>
      <returns>
          <see langword="true" /> if the message is handled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary>Occurs during a drag operation.</summary>
      <param name="eventArgs">A <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> that contains information about the event.</param>
      <returns>
          <see langword="true" /> if the message is handled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Occurs when a key is pressed.</summary>
      <param name="eventArgs">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains information about the event.</param>
      <returns>
          <see langword="true" /> if the message is handled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
      <summary>Occurs when a key is released.</summary>
      <param name="eventArgs">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains information about the event.</param>
      <returns>
          <see langword="true" /> if the message is handled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>Occurs when child objects should be repositioned.</summary>
      <param name="eventArgs">A <see cref="T:System.Windows.Forms.LayoutEventArgs" /> that contains information about the event.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseCaptureChanged">
      <summary>Occurs when the items selected by dragging the mouse changes.</summary>
      <returns>
          <see langword="true" /> if the message is handled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
      <summary>Occurs when you double-click the mouse.</summary>
      <param name="eventArgs">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains information about the event.</param>
      <returns>
          <see langword="true" /> if the message is handled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>Occurs when a mouse button is clicked.</summary>
      <param name="eventArgs">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains information about the event.</param>
      <returns>
          <see langword="true" /> if the message is handled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseEnter(System.Windows.Forms.MouseEventArgs)">
      <summary>Occurs when the mouse pointer enters the bounds of an object.</summary>
      <param name="eventArgs">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains information about the event.</param>
      <returns>
          <see langword="true" /> if the message is handled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseHover(System.Windows.Forms.MouseEventArgs)">
      <summary>Occurs when the mouse pointer pauses above an object.</summary>
      <param name="eventArgs">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains information about the event.</param>
      <returns>
          <see langword="true" /> if the message is handled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseLeave">
      <summary>Occurs when the mouse pointer leaves the bounds of an object.</summary>
      <returns>
          <see langword="true" /> if the message is handled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>Occurs when the mouse pointer moves while within the bounds of an object.</summary>
      <param name="eventArgs">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains information about the event.</param>
      <returns>
          <see langword="true" /> if the message is handled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>Occurs when the mouse button is released.</summary>
      <param name="eventArgs">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains information about the event.</param>
      <returns>
          <see langword="true" /> if the message is handled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
      <summary>Occurs when the mouse wheel moves.</summary>
      <param name="eventArgs">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains information about the event.</param>
      <returns>
          <see langword="true" /> if the message is handled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnPaint(System.Windows.Forms.PaintEventArgs,System.Drawing.Rectangle,System.Workflow.ComponentModel.Design.AmbientTheme)">
      <summary>Occurs when a paint message is received.</summary>
      <param name="eventArgs">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains information about the event.</param>
      <param name="viewPort">A <see cref="T:System.Drawing.Rectangle" /> that describes the area to be painted.</param>
      <param name="ambientTheme">A <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" /> used to obtain information about the theme.</param>
      <returns>
          <see langword="true" /> if the message is handled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnPaintWorkflowAdornments(System.Windows.Forms.PaintEventArgs,System.Drawing.Rectangle,System.Workflow.ComponentModel.Design.AmbientTheme)">
      <summary>Occurs when the workflow should repaint its adornments.</summary>
      <param name="eventArgs">A <see langword="PaintEventArgs" /> that contains information about the event.</param>
      <param name="viewPort">A <see langword="Rectangle" /> that describes the area to be painted.</param>
      <param name="ambientTheme">An <see langword="AmbientTheme" /> used to obtain information about the theme.</param>
      <returns>
          <see langword="true" /> if the message is handled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
      <summary>Occurs during a drag operation.</summary>
      <param name="eventArgs">A <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" /> that contains information about the event.</param>
      <returns>
          <see langword="true" /> if the message is handled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnScroll(System.Windows.Forms.ScrollBar,System.Int32)">
      <summary>Occurs when a user scrolls in a workflow designer.</summary>
      <param name="sender">The <see cref="T:System.Windows.Forms.ScrollBar" /> that the user scrolled.</param>
      <param name="value">The position of the scroll bar.</param>
      <returns>
          <see langword="true" /> if the message is handled; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnShowContextMenu(System.Drawing.Point)">
      <summary>Occurs when the workflow should show a context menu.</summary>
      <param name="screenMenuPoint">The point at which to the context menu is shown.</param>
      <returns>
          <see langword="true" /> if the message is handled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnThemeChange">
      <summary>Occurs when the theme of the workflow changes.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.ProcessMessage(System.Windows.Forms.Message)">
      <summary>Occurs when a raw Win32 message must be processed.</summary>
      <param name="message">The <see langword="Message" /> to handle.</param>
      <returns>
          <see langword="true" /> if the message is handled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowMenuCommands" /> class.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowOutline.#ctor(System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowOutline" /> class by using an object that retrieves a service object. </summary>
      <param name="serviceProvider">The <see cref="T:System.IServiceProvider" /> that retrieves a service object for the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowOutline" />.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="serviceProvider" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.InvalidOperationException">The hosting environment obtained through <paramref name="serviceProvider" /> is null (<see langword="Nothing" />).- or -The design surface obtained through <paramref name="serviceProvider" /> is null (<see langword="Nothing" />).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowOutline.CreateNewNode(System.Workflow.ComponentModel.Activity)">
      <summary>Creates a new node for an <see cref="T:System.Workflow.ComponentModel.Activity" />.</summary>
      <param name="activity">Activity for which a new node must be created.</param>
      <returns>The <see cref="T:System.Workflow.ComponentModel.Design.WorkflowOutlineNode" /> for the activity.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowOutline.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowOutline" /> and optionally releases the managed resources. </summary>
      <param name="disposing">
            <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowOutline.GetNode(System.Workflow.ComponentModel.Activity)">
      <summary>Retrieves the node in the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowOutline" /> associated with the specified <see cref="T:System.Workflow.ComponentModel.Activity" />.</summary>
      <param name="activity">The <see cref="T:System.Workflow.ComponentModel.Activity" /> associated with the node to retrieve.</param>
      <returns>The <see cref="T:System.Workflow.ComponentModel.Design.WorkflowOutlineNode" /> that is associated with <paramref name="activity" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowOutline.GetService(System.Type)">
      <summary>Returns an object that represents a service provided by the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowOutline" /> or by its <see cref="T:System.ComponentModel.Container" />.</summary>
      <param name="serviceType">The <see cref="T:System.Type" /> that represents the service provided by the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowOutline" />.</param>
      <returns>An <see cref="T:System.Object" /> that represents a service provided by <see cref="T:System.Workflow.ComponentModel.Design.WorkflowOutline" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowOutline.OnBeginUpdate">
      <summary>Called when the control is starting to update the <see cref="P:System.Workflow.ComponentModel.Design.WorkflowOutline.TreeView" />.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowOutline.OnEndUpdate">
      <summary>Called when the control is finished updating the <see cref="P:System.Workflow.ComponentModel.Design.WorkflowOutline.TreeView" />.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowOutline.OnLoad(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Form.Load" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowOutline.OnNodeAdded(System.Workflow.ComponentModel.Design.WorkflowOutlineNode)">
      <summary>Called after a new node that is not null is added to the activity tree.</summary>
      <param name="node">Node that was added to the activity tree.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowOutline.OnNodeSelected(System.Workflow.ComponentModel.Design.WorkflowOutlineNode)">
      <summary>Called when the user selects a node in the activity tree.</summary>
      <param name="node">Node that was selected.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowOutline.OnRefreshNode(System.Workflow.ComponentModel.Design.WorkflowOutlineNode)">
      <summary>Called when the node is refreshed.</summary>
      <param name="node">Workflow outline node that was refreshed.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowOutline.RefreshNode(System.Workflow.ComponentModel.Design.WorkflowOutlineNode,System.Boolean)">
      <summary>Forces a node to be refreshed.</summary>
      <param name="nodeToUpdate">Node that must be updated.</param>
      <param name="refreshChildNodes">
            <see langword="Boolean" /> value that indicates whether child nodes must be updated.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowOutline.RefreshWorkflowOutline">
      <summary>Refreshes color and icons of all document outline nodes.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowOutline.ReloadWorkflowOutline">
      <summary>Reloads the document outline control.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowOutlineNode.#ctor(System.Workflow.ComponentModel.Activity)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowOutlineNode" /> class by using an activity.</summary>
      <param name="activity">The <see cref="T:System.Workflow.ComponentModel.Activity" /> to associate with the node.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="activity" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowOutlineNode.OnActivityRename(System.String)">
      <summary>Changes the text displayed in the label of the workflow outline node to the specified name. </summary>
      <param name="newName">A string that contains the name to display in the label of the workflow outline node.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowOutlineNode.RefreshNode">
      <summary>Updates property settings on the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowOutlineNode" />.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowPageSetupDialog.#ctor(System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowPageSetupDialog" /> class.  </summary>
      <param name="serviceProvider">The <see cref="T:System.IServiceProvider" /> from which the dialog obtains services.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowTheme.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" /> class.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowTheme.Clone">
      <summary>Creates a duplicate theme.</summary>
      <returns>An object that represents the newly-cloned theme.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowTheme.CreateStandardTheme(System.Workflow.ComponentModel.Design.ThemeType)">
      <summary>Creates a standard theme.</summary>
      <param name="standardThemeType">The <see cref="T:System.Workflow.ComponentModel.Design.ThemeType" /> of the standard theme to create.</param>
      <returns>The newly created <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowTheme.Finalize">
      <summary>When overridden in a derived class, allows an object to clean up any resources deterministically.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowTheme.GenerateThemeFilePath">
      <summary>Generates a file path for the theme.</summary>
      <returns>A new, unique file path for the theme.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowTheme.GetDesignerTheme(System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>Gets the theme for the specified <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</summary>
      <param name="designer">The activity designer from which to retrieve the theme.</param>
      <returns>The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" /> associated with the specified <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowTheme.Load(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String)">
      <summary>Loads a new theme from the specified path using a serialization manager.</summary>
      <param name="serializationManager">The serialization manager to use to load the theme.</param>
      <param name="themeFilePath">The file path from which to load the theme.</param>
      <returns>A new <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" /> loaded from the file path specified using the serialization manager specified.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowTheme.Load(System.String)">
      <summary>Loads the theme from the specified file path.</summary>
      <param name="themeFilePath">The file path of the theme.</param>
      <returns>A new <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" /> loaded from the filename specified.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowTheme.LoadThemeSettingFromRegistry">
      <summary>Loads a theme from the registry.</summary>
      <returns>A <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" /> loaded from the registry.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowTheme.Save(System.String)">
      <summary>Saves a theme to a file.</summary>
      <param name="themeFilePath">The file in which to save the <see langword="WorkflowTheme" />.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowTheme.SaveThemeSettingToRegistry">
      <summary>Saves a theme to the registry.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowTheme.System#IDisposable#Dispose">
      <summary>Releases the managed resources used by the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" />.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.#ctor">
      <summary>Initializes an instance of a <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.#ctor(System.IServiceProvider)">
      <summary>Initializes an instance of a <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> with the specified service provider.</summary>
      <param name="serviceProvider">An object that implements the <see cref="T:System.IServiceProvider" /> interface.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.AddDesignerMessageFilter(System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter)">
      <summary>Adds a <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /> to the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
      <param name="designerMessageFilter">The <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /> to add to the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.ClientPointToLogical(System.Drawing.Point)">
      <summary>Converts a <see cref="T:System.Drawing.Point" /> from client coordinates to logical coordinates.</summary>
      <param name="clientPoint">The <see cref="T:System.Drawing.Point" /> to convert from client coordinates to logical coordinates.</param>
      <returns>The <see cref="T:System.Drawing.Point" /> converted from client coordinates to logical coordinates.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.ClientRectangleToLogical(System.Drawing.Rectangle)">
      <summary>Converts a <see cref="T:System.Drawing.Rectangle" /> from client coordinates to logical coordinates.</summary>
      <param name="rectangle">The <see cref="T:System.Drawing.Rectangle" /> to convert from client to logical coordinates.</param>
      <returns>The <see cref="T:System.Drawing.Rectangle" /> converted from client coordinates to logical coordinates.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.ClientSizeToLogical(System.Drawing.Size)">
      <summary>Converts a <see cref="T:System.Drawing.Size" /> from client to logical coordinates.</summary>
      <param name="clientSize">The <see cref="T:System.Drawing.Size" /> to convert from client to logical coordinates.</param>
      <returns>The <see cref="T:System.Drawing.Size" /> converted from client coordinates to logical coordinates.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.CreateAccessibilityInstance">
      <summary>Creates a new <see cref="T:System.Windows.Forms.AccessibleObject" /> for the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
      <returns>A new <see cref="T:System.Windows.Forms.AccessibleObject" /> for the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> and optionally releases the managed resources.</summary>
      <param name="disposing">
            <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.EnsureVisible(System.Object)">
      <summary>Ensures that the <see cref="T:System.Object" /> passed is visible, expanding parent objects and scrolling the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> as necessary.</summary>
      <param name="selectableObject">The object to make visible.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="selectableObject" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.FitToScreenSize">
      <summary>Changes the zoom level of the workflow design surface so that the entire workflow is displayed in the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.FitToWorkflowSize">
      <summary>Changes the zoom level to one hundred percent to display the full size of the workflow in the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.GetService(System.Type)">
      <summary>Gets the service object of the specified type, if it is available.</summary>
      <param name="serviceType">The <see cref="T:System.Type" /> of the service to retrieve.</param>
      <returns>If the <paramref name="serviceType" /> is <see langword="typeof(" /><see cref="T:System.ComponentModel.Design.CommandID" /><see langword=")" /> then <see langword="GetService" /> returns a specific <see cref="T:System.ComponentModel.Design.CommandID" />; otherwise, <see langword="GetService" /> returns a <see cref="T:System.Object" /> implementing the requested service, or a null reference (<see langword="Nothing" /> in Visual Basic) if the service cannot be resolved.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.InvalidateClientRectangle(System.Drawing.Rectangle)">
      <summary>Invalidates the specified <see cref="T:System.Drawing.Rectangle" /> and causes it to be repainted.</summary>
      <param name="clientRectangle">The <see cref="T:System.Drawing.Rectangle" />, in client coordinates, to invalidate and cause to be repainted.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.InvalidateLogicalRectangle(System.Drawing.Rectangle)">
      <summary>Invalidates the specified <see cref="T:System.Drawing.Rectangle" /> and causes it to be repainted.</summary>
      <param name="logicalRectangle">The <see cref="T:System.Drawing.Rectangle" />, in logical coordinates, to invalidate and cause to be repainted.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.LoadViewState(System.IO.Stream)">
      <summary>Restores view-state information from a binary stream.</summary>
      <param name="viewState">A <see cref="T:System.IO.BinaryReader" /> used to restore the view state.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.LogicalPointToClient(System.Drawing.Point)">
      <summary>Converts a <see cref="T:System.Drawing.Point" /> from logical to client coordinates.</summary>
      <param name="logicalPoint">The <see cref="T:System.Drawing.Point" /> to convert to client coordinates.</param>
      <returns>The <see cref="T:System.Drawing.Point" /> converted from logical to client coordinates.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.LogicalPointToScreen(System.Drawing.Point)">
      <summary>Converts a <see cref="T:System.Drawing.Point" /> from logical to screen coordinates.</summary>
      <param name="logicalPoint">The <see cref="T:System.Drawing.Point" /> to convert to screen coordinates.</param>
      <returns>A <see cref="T:System.Drawing.Point" /> converted from logical to screen coordinates.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.LogicalRectangleToClient(System.Drawing.Rectangle)">
      <summary>Converts a <see cref="T:System.Drawing.Rectangle" /> from logical to client coordinates.</summary>
      <param name="rectangle">The <see cref="T:System.Drawing.Rectangle" /> to convert to client coordinates.</param>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> converted from logical to client coordinates.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.LogicalSizeToClient(System.Drawing.Size)">
      <summary>Converts a <see cref="T:System.Drawing.Size" /> from logical to client coordinates.</summary>
      <param name="logicalSize">The <see cref="T:System.Drawing.Size" /> to convert to client coordinates.</param>
      <returns>A <see cref="T:System.Drawing.Size" /> converted from logical to client coordinates.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
      <summary>Occurs when a control is added to the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.ControlEventArgs" /> that contains the event data.</param>
      <exception cref="T:System.InvalidOperationException">If the control added is not a <see cref="P:System.Workflow.ComponentModel.Design.WorkflowView.HScrollBar" /> or <see cref="P:System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar" /></exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>Occurs when a dragged item is dropped onto the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
      <param name="dragEventArgs">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>Occurs when an item is dragged into the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> bounds.</summary>
      <param name="dragEventArgs">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnDragLeave(System.EventArgs)">
      <summary>Occurs when the cursor leaves the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> during a drag operation.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that provides data for the event.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>Occurs when a drag-drop operation is in progress and the pointer is within the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> bounds.</summary>
      <param name="dragEventArgs">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary>Occurs during a drag operation.</summary>
      <param name="gfbevent">A <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> that provides data for the event.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Occurs when a key is pressed while the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> has focus.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that provides data for the event.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
      <summary>Occurs when a key is released while the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> has focus.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that provides data about the event.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>Occurs when the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> should reposition child controls.</summary>
      <param name="levent">A <see cref="T:System.Windows.Forms.LayoutEventArgs" /> that provides data for the event.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseCaptureChanged(System.EventArgs)">
      <summary>Occurs when the items selected by dragging the mouse changes.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that provides data about the event.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
      <summary>Occurs when the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> is double-clicked.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains information about the event.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>Occurs when the mouse pointer is over the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> and a mouse button is pressed.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains information about the event.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter(System.EventArgs)">
      <summary>Occurs when the mouse pointer enters the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains information about the event.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover(System.EventArgs)">
      <summary>Occurs when the mouse hovers over the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains information about the event.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave(System.EventArgs)">
      <summary>Occurs when the mouse pointer leaves the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains information about the event.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>Occurs when the mouse moves over the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains information about the event.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>Occurs when a mouse button is released over the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains information about the event.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
      <summary>Occurs when the mouse wheel moves when the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> has focus.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains information about the event.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>Occurs when the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> is redrawn.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains information about the event.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
      <summary>Occurs during a drag operation and allows the drag source to determine whether the drag option should be canceled.</summary>
      <param name="qcdevent">A <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" /> that contains information about the event.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnRootDesignerChanged">
      <summary>Called when a different designer is set as the new root designer of the design surface.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnZoomChanged">
      <summary>Called when the zoom level is changed.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.PerformLayout(System.Boolean)">
      <summary>Forces the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> to apply layout logic to all its child controls.</summary>
      <param name="immediateUpdate">
            <see langword="true" /> to cause the layout to update immediately; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.RemoveDesignerMessageFilter(System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter)">
      <summary>Removes an associated <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" />.</summary>
      <param name="designerMessageFilter">The <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /> to remove from the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.SaveViewState(System.IO.Stream)">
      <summary>Saves the view-state to a binary stream. </summary>
      <param name="viewState">A <see cref="T:System.IO.BinaryReader" /> used to store the view state.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.SaveWorkflowImage(System.IO.Stream,System.Drawing.Imaging.ImageFormat)">
      <summary>Saves an image of the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> to the specified stream using the specified image format. </summary>
      <param name="stream">The <see cref="T:System.IO.Stream" /> to save the workflow view image to.</param>
      <param name="imageFormat">The <see cref="T:System.Drawing.Imaging.ImageFormat" /> to use to save the workflow view image.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="stream" /> or <paramref name="imageFormat" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.SaveWorkflowImage(System.String,System.Drawing.Imaging.ImageFormat)">
      <summary>Saves an image of the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> to the specified file using the specified image format. </summary>
      <param name="imageFile">The path to the file in which to store the workflow view image.</param>
      <param name="imageFormat">The <see cref="T:System.Drawing.Imaging.ImageFormat" /> to use to save the workflow view image.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="imageFile" /> or <paramref name="imageFormat" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.SaveWorkflowImageToClipboard">
      <summary>Saves an image of the WorkflowView to the clipboard.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.ScreenPointToLogical(System.Drawing.Point)">
      <summary>Converts a <see cref="T:System.Drawing.Point" /> from screen coordinates to logical coordinates.</summary>
      <param name="screenPoint">The <see cref="T:System.Drawing.Point" /> to convert from screen coordinates to logical coordinates.</param>
      <returns>The <see cref="T:System.Drawing.Point" /> converted from screen coordinates to logical coordinates.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.ShowInfoTip(System.String)">
      <summary>Shows the InfoTip for the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> with the specified text.</summary>
      <param name="text">The text to display on the InfoTip.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="infoTipText" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.ShowInfoTip(System.String,System.String)">
      <summary>Shows the InfoTip for the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> with the specified title and text.</summary>
      <param name="title">The title of the InfoTip to display.</param>
      <param name="text">The text of the InfoTip to display.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="title" /> is a null reference (<see langword="Nothing" /> in Visual Basic).-or-
              <paramref name="infoTipText" /> is a null reference (<see langword="Nothing" />).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.ShowInPlaceToolTip(System.String,System.Drawing.Rectangle)">
      <summary>Shows a <see langword="ToolTip" /> at the specified location.</summary>
      <param name="toolTipText">The text to display.</param>
      <param name="toolTipRectangle">The <see cref="T:System.Drawing.Rectangle" /> specifying the location on the screen to place the <see langword="ToolTip" />.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.System#IServiceProvider#GetService(System.Type)">
      <summary>Gets the service of the specified type, if it is available.</summary>
      <param name="serviceType">The <see cref="T:System.Type" /> of the service to retrieve.</param>
      <returns>An <see cref="T:System.Object" /> implementing the requested service, or a null reference (<see langword="Nothing" /> in Visual Basic) if the service cannot be resolved.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.System#Windows#Forms#IMessageFilter#PreFilterMessage(System.Windows.Forms.Message@)">
      <summary>Filters out a message before it is dispatched.</summary>
      <param name="m">The message to be dispatched. You cannot modify this message.</param>
      <returns>
          <see langword="true" /> to filter the message and stop it from being dispatched; <see langword="false" /> to allow the message to continue to the next filter or control.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.WndProc(System.Windows.Forms.Message@)">
      <summary>Processes Windows messages.</summary>
      <param name="m">The Windows Message to process.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowViewAccessibleObject.#ctor(System.Workflow.ComponentModel.Design.WorkflowView)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowViewAccessibleObject" /> class by using the specified <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
      <param name="workflowView">The <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> to associate with the accessible object.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowViewAccessibleObject.GetChild(System.Int32)">
      <summary>Returns the accessible child object associated with the specified index.</summary>
      <param name="index">The zero-based index of the accessible child object to retrieve.</param>
      <returns>An <see cref="T:System.Windows.Forms.AccessibleObject" /> that represents the accessible child object corresponding to the specified index.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowViewAccessibleObject.GetChildCount">
      <summary>Retrieves the number of children that belong to the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowViewAccessibleObject" />.</summary>
      <returns>An integer that represents the number of child objects that belong to the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowViewAccessibleObject" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowViewAccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)">
      <summary>Navigates to another accessible object.</summary>
      <param name="navdir">One of the <see cref="T:System.Windows.Forms.AccessibleNavigation" /> values.</param>
      <returns>An <see cref="T:System.Windows.Forms.AccessibleObject" /> that represents one of the <see cref="T:System.Windows.Forms.AccessibleNavigation" /> values.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.FaultHandlerActivity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.FaultHandlerActivity" /> class.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.FaultHandlerActivity.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.FaultHandlerActivity" /> class using the name of the activity.</summary>
      <param name="name">The user-defined name of the activity.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="activityName" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.FaultHandlerActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#CanFilterType(System.Type,System.Boolean)">
      <summary>Provides a value that indicates whether this instance can filter on the specified <see cref="T:System.Type" />.</summary>
      <param name="type">The specified <see cref="T:System.Type" />.</param>
      <param name="throwOnError">The value that determines whether an exception is raised on an error.</param>
      <returns>
          <see langword="true" /> if the <see cref="T:System.Type" /> can be filtered; <see langword="false" /> otherwise.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.FaultHandlerActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <summary>Defines the processing procedure when the subscribed-to event occurs.</summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">The previously typed event arguments.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.FaultHandlerActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)">
      <summary>Returns the access type for the specified property.</summary>
      <param name="serviceProvider">An object that implements <see cref="T:System.IServiceProvider" /> to provide access to design time services if they are required.</param>
      <param name="propertyName">The name of the property.</param>
      <returns>An <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" /> enumeration value that denotes the access level of the property.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.FaultHandlerActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)">
      <summary>Returns the <see cref="T:System.Type" /> of the specified property.</summary>
      <param name="serviceProvider">An object that implements <see cref="T:System.IServiceProvider" /> to provide access to design time services if they are required.</param>
      <param name="propertyName">The name of the property.</param>
      <returns>The <see cref="T:System.Type" /> for the property whose name is passed as the <paramref name="propertyName " />parameter.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.FaultHandlersActivity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.FaultHandlersActivity" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.FaultHandlersActivity.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.FaultHandlersActivity" /> class using the name of the activity. </summary>
      <param name="name">The user-defined name of the activity.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.FaultHandlersActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <summary>Defines the processing procedure when the subscribed-to event occurs.</summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">The previously typed event arguments.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)">
      <summary>Defines the processing procedure when the subscribed-to event occurs.</summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">The previously typed event arguments.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.ICompensatableActivity.Compensate(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <summary>Called by the workflow runtime to compensate an activity that is in the Closed state. The activity must have a value of <see langword="Succeeded" /> for its <see cref="P:System.Workflow.ComponentModel.Activity.ExecutionResult" /> property in order to be compensatable.</summary>
      <param name="executionContext">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> for the operation.</param>
      <returns>The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> after operation has been tried.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)">
      <summary>Returns the access type for the specified property.</summary>
      <param name="serviceProvider">An object that implements <see cref="T:System.IServiceProvider" /> to provide access to design time services if they are needed.</param>
      <param name="propertyName">The name of the property.</param>
      <returns>An <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" /> enumeration value that denotes the access level of the property.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)">
      <summary>Returns the <see cref="T:System.Type" /> of the specified property.</summary>
      <param name="serviceProvider">An object that implements <see cref="T:System.IServiceProvider" /> to provide access to design-time services if they are needed.</param>
      <param name="propertyName">The name of the property. </param>
      <returns>The <see cref="T:System.Type" /> for the property whose name is passed as the <paramref name="propertyName " />parameter. </returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.IStartWorkflow.StartWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
      <summary>Starts the workflow of designated <see cref="T:System.Type" /> providing the running instance with a <see cref="P:System.Collections.DictionaryBase.Dictionary" /> that contains runtime parameters.</summary>
      <param name="workflowType">The <see cref="T:System.Type" /> of the workflow.</param>
      <param name="namedArgumentValues">A <see cref="P:System.Collections.DictionaryBase.Dictionary" /> that contains runtime parameters for the workflow.</param>
      <returns>The instance ID of the workflow that is started.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.IWorkflowChangeDiff.Diff(System.Object,System.Object)">
      <summary>Determines the changes that occurred between two workflow definitions.</summary>
      <param name="originalDefinition">The original workflow definition.</param>
      <param name="changedDefinition">The new workflow definition.</param>
      <returns>A list of <see cref="T:System.Workflow.ComponentModel.WorkflowChangeAction" /> objects that indicates the differences between the two workflow definitions.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.PersistOnCloseAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.PersistOnCloseAttribute" /> class. </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> class.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Attribute[])">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> class with an array of attributes.</summary>
      <param name="attributes">Attributes applicable to the dependency property, such as <see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" /> and <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationOptionAttribute" />.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> class with a default property value.</summary>
      <param name="defaultValue">The object representing the <see cref="P:System.Workflow.ComponentModel.PropertyMetadata.DefaultValue" /> of this <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" />.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Object,System.Attribute[])">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> class with a default property value and an array of attributes.</summary>
      <param name="defaultValue">The object that represents the <see cref="P:System.Workflow.ComponentModel.PropertyMetadata.DefaultValue" /> of this <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" />.</param>
      <param name="attributes">Attributes applicable to the dependency property, such as <see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" /> and <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationOptionAttribute" />.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Object,System.Workflow.ComponentModel.DependencyPropertyOptions)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> class with a default property value and a <see cref="T:System.Workflow.ComponentModel.DependencyPropertyOptions" /> enumeration value.</summary>
      <param name="defaultValue">The object representing the <see cref="P:System.Workflow.ComponentModel.PropertyMetadata.DefaultValue" /> of this <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" />.</param>
      <param name="options">The <see cref="T:System.Workflow.ComponentModel.DependencyPropertyOptions" /> used to define the associated dependency property.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Object,System.Workflow.ComponentModel.DependencyPropertyOptions,System.Attribute[])">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> class with a default property value, a <see cref="T:System.Workflow.ComponentModel.DependencyPropertyOptions" /> enumeration value, and an array of attributes.</summary>
      <param name="defaultValue">The object that represents the <see cref="P:System.Workflow.ComponentModel.PropertyMetadata.DefaultValue" /> of this <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" />.</param>
      <param name="options">The <see cref="T:System.Workflow.ComponentModel.DependencyPropertyOptions" /> used to define the associated dependency property.</param>
      <param name="attributes">Attributes applicable to the dependency property, such as <see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" /> and <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationOptionAttribute" />.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Object,System.Workflow.ComponentModel.DependencyPropertyOptions,System.Workflow.ComponentModel.GetValueOverride,System.Workflow.ComponentModel.SetValueOverride)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> class with a default property value, a <see cref="T:System.Workflow.ComponentModel.DependencyPropertyOptions" /> enumeration value, and delegates to override the <see langword="GetValue" /> and <see langword="SetValue" /> logic associated with the dependency property. </summary>
      <param name="defaultValue">The object that represents the <see cref="P:System.Workflow.ComponentModel.PropertyMetadata.DefaultValue" /> of this <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" />.</param>
      <param name="options">The <see cref="T:System.Workflow.ComponentModel.DependencyPropertyOptions" /> used to define the associated dependency property.</param>
      <param name="getValueOverride">The <see cref="T:System.Workflow.ComponentModel.GetValueOverride" /> delegate that belongs to this instance.</param>
      <param name="setValueOverride">The <see cref="T:System.Workflow.ComponentModel.SetValueOverride" /> delegate that belongs to this instance.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Object,System.Workflow.ComponentModel.DependencyPropertyOptions,System.Workflow.ComponentModel.GetValueOverride,System.Workflow.ComponentModel.SetValueOverride,System.Attribute[])">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> class with a default property value, a <see cref="T:System.Workflow.ComponentModel.DependencyPropertyOptions" /> enumeration value, delegates to override the <see langword="GetValue" /> and <see langword="SetValue" /> logic associated with the dependency property, and an array of attributes. </summary>
      <param name="defaultValue">The object that represents the <see cref="P:System.Workflow.ComponentModel.PropertyMetadata.DefaultValue" /> of this <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" />.</param>
      <param name="options">The <see cref="T:System.Workflow.ComponentModel.DependencyPropertyOptions" /> used to define the associated dependency property.</param>
      <param name="getValueOverride">The <see cref="T:System.Workflow.ComponentModel.GetValueOverride" /> delegate that belongs to this instance.</param>
      <param name="setValueOverride">The <see cref="T:System.Workflow.ComponentModel.SetValueOverride" /> delegate that belongs to this instance.</param>
      <param name="attributes">Attributes applicable to the dependency property, such as <see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" /> and <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationOptionAttribute" />.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Workflow.ComponentModel.DependencyPropertyOptions)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> class with a <see cref="T:System.Workflow.ComponentModel.DependencyPropertyOptions" /> enumeration value. </summary>
      <param name="options">The <see cref="T:System.Workflow.ComponentModel.DependencyPropertyOptions" /> used to define the associated dependency property.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Workflow.ComponentModel.DependencyPropertyOptions,System.Attribute[])">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> class with a <see cref="T:System.Workflow.ComponentModel.DependencyPropertyOptions" /> enumeration value and an array of attributes. </summary>
      <param name="options">The <see cref="T:System.Workflow.ComponentModel.DependencyPropertyOptions" /> used to define the associated dependency property.</param>
      <param name="attributes">Attributes applicable to the dependency property, such as <see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" /> and <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationOptionAttribute" />.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.PropertyMetadata.GetAttributes">
      <summary>Retrieves an array that contains all attributes.</summary>
      <returns>An array that contains all attributes.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.PropertyMetadata.GetAttributes(System.Type)">
      <summary>Receives an array of type <see cref="T:System.Attribute" /> that contains those attributes having type equal to <paramref name="attributeType" />.</summary>
      <param name="attributeType">The <see cref="T:System.Type" /> of attributes to return.</param>
      <returns>An array of type <see cref="T:System.Attribute" />  that contains those attributes having type equal to <paramref name="attributeType" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.PropertyMetadata.OnApply(System.Workflow.ComponentModel.DependencyProperty,System.Type)">
      <summary>Provides processing when this <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> is applied to a dependency property.</summary>
      <param name="dependencyProperty">The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> to which this <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> has been applied. </param>
      <param name="targetType">The <see cref="T:System.Type" /> associated with this metadata if this instance is type-specific metadata. If this is default metadata, this value is a null reference (<see langword="Nothing" /> in Visual Basic).</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.RemovedActivityAction.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.RemovedActivityAction" /> class. </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.RemovedActivityAction.#ctor(System.Int32,System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.CompositeActivity)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.RemovedActivityAction" /> class. </summary>
      <param name="removedActivityIndex">Indicates the index of the activity being removed when you remove the activity using the workflow changes.</param>
      <param name="originalActivity">Activity that was removed.</param>
      <param name="clonedParentActivity">Root activity from which the activity was removed.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager.#ctor(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager" /> class.  </summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to associate with this instance.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary>Adds the specified serialization provider to the serialization manager.</summary>
      <param name="provider">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" /> to be added.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
      <summary>Creates an instance of the specified type and adds it to a collection of named instances. </summary>
      <param name="type">The data <see cref="T:System.Type" /> to create.</param>
      <param name="arguments">An <see cref="T:System.Collections.ICollection" /> of arguments to pass to the constructor for the specified type. </param>
      <param name="name">The name assigned to the resulting object. This name can be used to access the object later through <see cref="M:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager.GetInstance(System.String)" />.If null is passed, the object is created but cannot be accessed by name.</param>
      <param name="addToContainer">
            <see langword="true" /> to add the object to the design container; otherwise, <see langword="false" />. The object must implement <see cref="T:System.ComponentModel.IComponent" /> for this to have any effect.</param>
      <returns>The newly created object instance.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager.GetInstance(System.String)">
      <summary>Gets an <see cref="T:System.Object" /> of the specified name, or null if that <see cref="T:System.Object" /> does not exist.</summary>
      <param name="name">The name of the <see cref="T:System.Object" /> to obtain.</param>
      <returns>An <see cref="T:System.Object" /> of the specified name, or null if that <see cref="T:System.Object" /> does not exist.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager.GetName(System.Object)">
      <summary>Gets the name of the specified <see cref="T:System.Object" />, or null if the <see cref="T:System.Object" /> has no name.</summary>
      <param name="value">The <see cref="T:System.Object" /> to obtain the name for.</param>
      <returns>A <see cref="T:System.String" /> that contains the name of the <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager.GetSerializer(System.Type,System.Type)">
      <summary>Gets a serializer of the requested type for the specified <see cref="T:System.Object" /> type.</summary>
      <param name="objectType">The <see cref="T:System.Type" /> of the <see cref="T:System.Object" /> for which to obtain the serializer.</param>
      <param name="serializerType">The <see cref="T:System.Type" /> of serializer to retrieve.</param>
      <returns>A serializer of the requested type for the specified <see cref="T:System.Object" /> type.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager.GetService(System.Type)">
      <summary>Gets an <see cref="T:System.Object" /> that provides a service of the specified <see cref="T:System.Type" />. </summary>
      <param name="serviceType">The <see cref="T:System.Type" /> of service to be provided. </param>
      <returns>A <see cref="T:System.Object" /> that provides a service of the specified <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager.GetType(System.String)">
      <summary>Gets a <see cref="T:System.Type" /> of the specified name.</summary>
      <param name="typeName">The fully qualified name of the <see cref="T:System.Type" /> to load.</param>
      <returns>An instance of the <see cref="T:System.Type" />, or a null reference (<see langword="Nothing" /> in Visual Basic) if the <see cref="T:System.Type" /> cannot be loaded.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager.RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary>Removes a custom serialization provider from the serialization manager.</summary>
      <param name="provider">The provider to remove. </param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager.ReportError(System.Object)">
      <summary>Reports an error in serialization.</summary>
      <param name="errorInformation">An <see cref="T:System.Object" /> that contains the error to report. </param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager.SetName(System.Object,System.String)">
      <summary>Sets the name of the specified existing <see cref="T:System.Object" />.</summary>
      <param name="instance">The <see cref="T:System.Object" /> instance to name.</param>
      <param name="name">A <see cref="T:System.String" /> that contains the name to give the instance.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializer" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Serializes the specified object into a CodeDOM object.</summary>
      <param name="manager">The serialization manager to use during the serialization process.</param>
      <param name="obj">An <see cref="T:System.Object" /> that derives from <see cref="T:System.Workflow.ComponentModel.Activity" />.</param>
      <returns>A CodeDOM object representing the object that has been serialized.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="manager" /> or <paramref name="obj" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">
              <paramref name="obj" /> cannot be converted to an <see cref="T:System.Workflow.ComponentModel.Activity" />.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityMarkupSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Serialization.ActivityMarkupSerializer" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityMarkupSerializer.CreateInstance(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Type)">
      <summary>Creates an instance of the specified <see cref="T:System.Type" /> using the specified <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />.</summary>
      <param name="serializationManager">The <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> to use in this instance creation.</param>
      <param name="type">The <see cref="T:System.Type" /> to create.</param>
      <returns>A reference to the newly created <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityMarkupSerializer.OnAfterSerialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)">
      <summary>Notifies the <see cref="T:System.Workflow.ComponentModel.Serialization.ActivityMarkupSerializer" /> that an object has just been serialized.</summary>
      <param name="serializationManager">The <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> that manages the serialization process.</param>
      <param name="obj">The <see cref="T:System.Object" /> that was serialized.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityMarkupSerializer.OnBeforeSerialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)">
      <summary>Notifies the <see cref="T:System.Workflow.ComponentModel.Serialization.ActivityMarkupSerializer" /> that an object is about to be serialized. </summary>
      <param name="serializationManager">The <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> that manages the serialization process.</param>
      <param name="obj">The <see cref="T:System.Object" /> to be serialized.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="serializationManager" />, <paramref name="obj" />, or <paramref name="writer" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">
              <paramref name="obj" /> is not of type <see cref="T:System.Workflow.ComponentModel.Activity" />.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivitySurrogateSelector.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Serialization.ActivitySurrogateSelector" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivitySurrogateSelector.GetSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector@)">
      <summary>Finds the surrogate that represents the specified type, starting with the specified surrogate selector for the specified serialization context.</summary>
      <param name="type">The <see cref="T:System.Type" /> for which to obtain a surrogate.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that serves as the source or destination context for the current serialization. </param>
      <param name="selector">When this method returns, contains an <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> that holds a reference to the surrogate selector where the appropriate surrogate was found. This parameter is passed uninitialized.</param>
      <returns>The appropriate surrogate for the specified type and context.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="type" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityTypeCodeDomSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Serialization.ActivityTypeCodeDomSerializer" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityTypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
      <summary>Deserializes the specified type declaration.</summary>
      <param name="manager">The serialization manager to use for deserialization.</param>
      <param name="declaration">The <see cref="T:System.CodeDom.CodeTypeDeclaration" /> to use for deserialization.</param>
      <returns>The deserialized <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityTypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
      <summary>Returns the method where the statements used to serialize a member are stored.</summary>
      <param name="manager">The serialization manager to use for serialization.</param>
      <param name="typeDecl">The <see cref="T:System.CodeDom.CodeTypeDeclaration" /> to use for serialization.</param>
      <param name="value">The <see cref="T:System.Object" /> to use for serialization.</param>
      <returns>The <see cref="T:System.CodeDom.CodeMemberMethod" /> used to emit all of the initialization code for the given member.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="manager" />, <paramref name="typeDecl" />, or <paramref name="value" /> contains a null reference (<see langword="Nothing" /> in Visual Basic). </exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityTypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
      <summary>Returns an array of methods to be interpreted during deserialization.</summary>
      <param name="manager">The serialization manager to use for serialization.</param>
      <param name="typeDecl">The <see cref="T:System.CodeDom.CodeTypeDeclaration" /> to use for serialization.</param>
      <returns>A <see cref="T:System.CodeDom.CodeMemberMethod" /> array of methods to be interpreted during serialization.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="manager" /> or <paramref name="typeDecl" /> contains a null reference (<see langword="Nothing" /> in Visual Basic). </exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityTypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
      <summary>Serializes the specified object by creating a new type declaration that defines that object.</summary>
      <param name="manager">The serialization manager to use for serialization.</param>
      <param name="root">The <see cref="T:System.Object" /> to serialize.</param>
      <param name="members">An optional collection of members. Can be a null reference (<see langword="Nothing" /> in Visual Basic) or an empty collection.</param>
      <returns>A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> that defines the specified object.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="manager" /> or <paramref name="root" /> contains a null reference (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentException">
              <paramref name="root" /> cannot be converted to an <see cref="T:System.Workflow.ComponentModel.Activity" />.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.CompositeActivityMarkupSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Serialization.CompositeActivityMarkupSerializer" /> class. </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ConstructorArgumentAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Serialization.ConstructorArgumentAttribute" /> class, initializing the <see cref="P:System.Workflow.ComponentModel.Serialization.ConstructorArgumentAttribute.ArgumentName" /> property.</summary>
      <param name="argumentName">A <see langword="string" /> that contains the argument name.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ContentPropertyAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Serialization.ContentPropertyAttribute" /> class.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ContentPropertyAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Serialization.ContentPropertyAttribute" /> class, initializing the <see cref="P:System.Workflow.ComponentModel.Serialization.ContentPropertyAttribute.Name" /> property.</summary>
      <param name="name">A <see cref="T:System.String" /> that contains the value for the <see cref="P:System.Workflow.ComponentModel.Serialization.ContentPropertyAttribute.Name" /> property.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.DependencyObjectCodeDomSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Serialization.DependencyObjectCodeDomSerializer" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.DependencyObjectCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Serializes the specified object into a CodeDOM object.</summary>
      <param name="manager">The serialization manager to use during serialization. </param>
      <param name="obj">The <see cref="T:System.Object" /> to serialize.</param>
      <returns>A CodeDOM object that represents the object that has been serialized.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="manager" /> or <paramref name="obj" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">
              <paramref name="obj " />cannot be converted to a <see cref="T:System.Workflow.ComponentModel.DependencyObject" />.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.MarkupExtension.#ctor">
      <summary>When implemented in a derived class, initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Serialization.MarkupExtension" /> class.  This class must be inherited. </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.MarkupExtension.ProvideValue(System.IServiceProvider)">
      <summary>When overridden in a derived class, provides the value for the underlying type, by optional use of an <see cref="T:System.IServiceProvider" />.</summary>
      <param name="provider">The specified <see cref="T:System.IServiceProvider" />.</param>
      <returns>The <see cref="T:System.Object" /> representing the encapsulated type.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.RuntimeNamePropertyAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Serialization.RuntimeNamePropertyAttribute" /> class, initializing the <see cref="P:System.Workflow.ComponentModel.Serialization.RuntimeNamePropertyAttribute.Name" /> for this instance. </summary>
      <param name="name">A <see langword="string" /> that contains the name to associate with this instance.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException" /> class by using serialized data.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains the serialized object data about the <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException" /> being thrown.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the context information about the source or destination of the bits the serializer was using.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException" /> class by using the specified error message.</summary>
      <param name="message">A string that contains message that describes the error.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException" /> class by using an error message and an exception.</summary>
      <param name="message">A string that contains message that describes the error.</param>
      <param name="innerException">The exception that is the cause of the <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException" />.  If <paramref name="innerException" /> is not a null reference (<see langword="Nothing" /> in Visual Basic), the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException" /> class by using an error message, an exception, and the line and column numbers that caused the exception to be thrown.</summary>
      <param name="message">A string that contains message that describes the error.</param>
      <param name="innerException">The exception that is the cause of the <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException" />. If <paramref name="innerException" /> is not a null reference (<see langword="Nothing" /> in Visual Basic), the current exception is raised in a catch block that handles the inner exception.</param>
      <param name="lineNumber">The line number in the object or XOML file that caused the exception to be thrown.</param>
      <param name="columnNumber">The column position in the object or XOML file that caused the exception to be thrown.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException.#ctor(System.String,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException" /> class by using an error message and the line and column numbers that caused the exception to be thrown.</summary>
      <param name="message">A string that contains message that describes the error.</param>
      <param name="lineNumber">The line number in the object or XOML file that caused the exception to be thrown.</param>
      <param name="columnNumber">The column position in the object or XOML file that caused the exception to be thrown.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException" />.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains the serialized object data about the <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException" /> being thrown.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the context information about the source or destination of the bits the serializer was using.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.#ctor(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> class by using the specified <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />. </summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> with which to initialize the <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary>Adds the specified serialization provider to the serialization manager.</summary>
      <param name="provider">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" /> to add.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.GetSerializer(System.Type,System.Type)">
      <summary>Returns a serializer of the specified type for an object of the specified type.</summary>
      <param name="objectType">The <see cref="T:System.Type" /> for which to retrieve the serializer.</param>
      <param name="serializerType">The <see cref="T:System.Type" /> of the serializer to retrieve.</param>
      <returns>The requested serializer, or a null reference (<see langword="Nothing" /> in Visual Basic) if no appropriate serializer can be located.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.GetService(System.Type)">
      <summary>Returns a service object of the specified type.</summary>
      <param name="serviceType">The <see cref="T:System.Type" /> of service object to return.</param>
      <returns>A service object of type <paramref name="serviceType" />, or a null reference (<see langword="Nothing" /> in Visual Basic) if there is no service object of type <paramref name="serviceType" />.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.GetType(System.String)">
      <summary>Returns a type of the specified name.</summary>
      <param name="typeName">The fully-qualified name of the <see cref="T:System.Type" /> to load.</param>
      <returns>The <see cref="T:System.Type" /> associated with <paramref name="typeName" />. </returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.GetType(System.Xml.XmlQualifiedName)">
      <summary>Returns that type associated with the specified XML qualified name.</summary>
      <param name="xmlQualifiedName">The <see cref="T:System.Xml.XmlQualifiedName" /> of the type to load.</param>
      <returns>The <see cref="T:System.Type" /> associated with <paramref name="xmlQualifiedName" />.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="xmlQualifiedName" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.GetXmlQualifiedName(System.Type,System.String@)">
      <summary>Returns the XML-qualified name associated with the specified type.</summary>
      <param name="type">The <see cref="T:System.Type" /> for which to return the XML-qualified name.</param>
      <param name="prefix">When this method returns, contains the XML prefix for the qualified name or an empty string if no prefix is defined. This parameter is passed uninitialized. </param>
      <returns>The <see cref="T:System.Xml.XmlQualifiedName" /> associated with <paramref name="type" />.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="type" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary>Removes a custom serialization provider from the <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />.</summary>
      <param name="provider">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" /> to remove. This provider must be added using <see cref="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.ReportError(System.Object)">
      <summary>Reports an error in serialization.</summary>
      <param name="errorInformation">The error to report. </param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
      <summary>Creates an instance of the specified type and adds it to a collection of named instances. </summary>
      <param name="type">The <see cref="T:System.Type" /> to create.</param>
      <param name="arguments">An <see cref="T:System.Collections.ICollection" /> that contains the arguments for <paramref name="type" />.</param>
      <param name="name">The name of the object. This name can be used to access the object later using <see cref="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />. If a null reference (<see langword="Nothing" /> in Visual Basic) is passed, the object is still created but cannot be accessed by name.</param>
      <param name="addToContainer">
            <see langword="true" /> to add the object to the design container; otherwise, <see langword="false" />. </param>
      <returns>The newly created object.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)">
      <summary>Returns an instance of a created object of the specified name.</summary>
      <param name="name">The name of the object to retrieve.</param>
      <returns>An instance of the object with the given name, or a null reference (<see langword="Nothing" /> in Visual Basic) if no object by that name can be found.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)">
      <summary>Returns the name of the specified object.</summary>
      <param name="value">The <see cref="T:System.Object" /> for which to retrieve the name.</param>
      <returns>The name of the object, or a null reference (<see langword="Nothing" /> in Visual Basic) if the object is unnamed.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)">
      <summary>Sets the name of the specified existing object.</summary>
      <param name="instance">The object to name.</param>
      <param name="name">The name to assign to the object.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.AddChild(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object,System.Object)">
      <summary>Adds a child object to the specified object.</summary>
      <param name="serializationManager">The <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> to use in this operation.</param>
      <param name="parentObject">The <see cref="T:System.Object" /> to which to add the child object.</param>
      <param name="childObj">The <see cref="T:System.Object" /> to add.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="parentObject" /> or<paramref name=" childObj" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.CanSerializeToString(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)">
      <summary>Returns a Boolean that indicates whether the specified object can be serialized to a string.</summary>
      <param name="serializationManager">The <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> used to serialize this object.</param>
      <param name="value">The specified <see cref="T:System.Object" />.</param>
      <returns>
          <see langword="true" /> if the specified object can be serialized to a string; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="serializationManager" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="value" /> is a null reference (<see langword="Nothing" />).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ClearChildren(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)">
      <summary>Removes all child objects from the specified object.</summary>
      <param name="serializationManager">The <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> supporting this operation.</param>
      <param name="obj">The <see cref="T:System.Object" /> from which to remove all child objects.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="serializationManager" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="obj" /> is a null reference (<see langword="Nothing" />).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.CreateInstance(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Type)">
      <summary>Creates an instance of the specified <see cref="T:System.Type" /> using the specified <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />. </summary>
      <param name="serializationManager">The <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> supporting this operation.</param>
      <param name="type">The specified <see cref="T:System.Type" /></param>
      <returns>An instance of the specified <see cref="T:System.Type" />. </returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="serializationManager" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="type" /> is a null reference (<see langword="Nothing" />).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Xml.XmlReader)">
      <summary>Deserializes workflow markup into an <see cref="T:System.Object" /> using the specified serialization manager.</summary>
      <param name="serializationManager">An object that implements the <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> interface, such as <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" />.</param>
      <param name="reader">An <see cref="T:System.Xml.XmlReader" /> that contains the workflow definition.</param>
      <returns>An <see cref="T:System.Object" /> that contains the definition of the workflow defined in the workflow markup file or stream.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="serializationManager" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="reader" /> is a null reference (<see langword="Nothing" />).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize(System.Xml.XmlReader)">
      <summary>Deserializes workflow markup into an <see cref="T:System.Object" />.</summary>
      <param name="reader">An <see cref="T:System.Xml.XmlReader" /> that contains the workflow definition.</param>
      <returns>An <see cref="T:System.Object" /> that contains the definition of the workflow defined in the workflow markup file or stream.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.DeserializeFromString(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Type,System.String)">
      <summary>Deserializes extensible Application Markup Language (XAML) content from the specified string according to the given type of the property to deserialize.</summary>
      <param name="serializationManager">The <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> that manages the deserialization process.</param>
      <param name="propertyType">The <see cref="T:System.Type" /> associated with the property to deserialize. </param>
      <param name="value">A string that contains the XAML to deserialize. </param>
      <returns>The deserialized <see cref="T:System.Object" />.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="serializationManager" />, <paramref name="propertyType" />, or <paramref name="value" />, contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetChildren(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)">
      <summary>Retrieves a list of child objects for the specified object</summary>
      <param name="serializationManager">The <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> which supports this operation.</param>
      <param name="obj">The <see cref="T:System.Object" /> from which to retrieve child objects.</param>
      <returns>An <see cref="T:System.Collections.IList" /> that contains the child objects of <paramref name="obj" />.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="obj" /> or <paramref name="serializationManager" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetEvents(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)">
      <summary>Retrieves information about all events associated with the specified <see cref="T:System.Object" />.</summary>
      <param name="serializationManager">The <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> that manages the deserialization process.</param>
      <param name="obj">The <see cref="T:System.Object" /> to search for event objects.</param>
      <returns>An <see cref="T:System.Reflection.EventInfo" /> array that contains information about the events associated with <paramref name="obj" />.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="serializationManager" /> or <paramref name="obj" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetProperties(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)">
      <summary>Retrieves information about all properties associated with the specified object.</summary>
      <param name="serializationManager">The <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> that manages the serialization process.</param>
      <param name="obj">The <see cref="T:System.Object" /> to search for properties. </param>
      <returns>A <see cref="T:System.Reflection.PropertyInfo" /> array that contains information about the properties associated with <paramref name="obj" />.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="serializationManager" /> or <paramref name="obj" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterDeserialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)">
      <summary>Overridden. Notifies the <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer" /> that an object has just been deserialized.</summary>
      <param name="serializationManager">The <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> that manages the serialization process.</param>
      <param name="obj">The <see cref="T:System.Object" /> that was deserialized.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterSerialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)">
      <summary>Notifies the <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer" /> that an object has just been serialized.</summary>
      <param name="serializationManager">The <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> that manages the serialization process.</param>
      <param name="obj">The <see cref="T:System.Object" /> that was serialized.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeDeserialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)">
      <summary>Overridden. Notifies the <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer" /> that an object is about to be deserialized.</summary>
      <param name="serializationManager">The <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> that managed the deserialization process.</param>
      <param name="obj">The <see cref="T:System.Object" /> that was deserialized.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeSerialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)">
      <summary>Notifies the <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer" /> that <see cref="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize(System.Xml.XmlWriter,System.Object)" /> is about to run.</summary>
      <param name="serializationManager">The <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> that manages the serialization process.</param>
      <param name="obj">The <see cref="T:System.Object" /> to be serialized.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Xml.XmlWriter,System.Object)">
      <summary>Serializes the specified <see cref="T:System.Object" /> into a workflow markup file or stream using the specified serialization manager.</summary>
      <param name="serializationManager">An object that implements the <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> interface, such as <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" />.</param>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> that contains the stream or file used in serializing.</param>
      <param name="obj">The object to be serialized.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="serializationManager" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="writer" /> is a null reference (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="obj" /> is a null reference (<see langword="Nothing" />).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
      <summary>Serializes the specified <see cref="T:System.Object" /> into a workflow markup file or stream.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> that contains the stream or file used in serializing.</param>
      <param name="obj">The object to be serialized.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="writer" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="obj" /> is a null reference (<see langword="Nothing" />).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.SerializeToString(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)">
      <summary>Serializes the specified <see cref="T:System.Object" /> to a string.</summary>
      <param name="serializationManager">The <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> that manages the serialization process.</param>
      <param name="value">The <see cref="T:System.Object" /> to serialize to a string.</param>
      <returns>A string that contains the serialized <see cref="T:System.Object" />.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="serializationManager" /> or <paramref name="value" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ShouldSerializeValue(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)">
      <summary>Returns a value that indicates whether the <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer" /> should serialize the specified <see cref="T:System.Object" />.</summary>
      <param name="serializationManager">The <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> that manages the serialization process.</param>
      <param name="value">The <see cref="T:System.Object" /> to check.</param>
      <returns>
          <see langword="true" /> to indicate <paramref name="value" /> should be serialized; otherwise, <see langword="false" />.  </returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="serializationManager" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.XmlnsDefinitionAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Serialization.XmlnsDefinitionAttribute" /> class, initializing <see cref="P:System.Workflow.ComponentModel.Serialization.XmlnsDefinitionAttribute.XmlNamespace" /> and <see cref="P:System.Workflow.ComponentModel.Serialization.XmlnsDefinitionAttribute.ClrNamespace" /> properties.</summary>
      <param name="xmlNamespace">A <see cref="T:System.String" /> that contains the value for <see cref="P:System.Workflow.ComponentModel.Serialization.XmlnsDefinitionAttribute.XmlNamespace" />.</param>
      <param name="clrNamespace">A <see cref="T:System.String" /> that contains the value for <see cref="P:System.Workflow.ComponentModel.Serialization.XmlnsDefinitionAttribute.ClrNamespace" />.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="xmlNamespace" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="clrNamespace" /> is a null reference (<see langword="Nothing" />).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.XmlnsPrefixAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Serialization.XmlnsPrefixAttribute" /> class, initializing <see cref="P:System.Workflow.ComponentModel.Serialization.XmlnsPrefixAttribute.XmlNamespace" /> and <see cref="P:System.Workflow.ComponentModel.Serialization.XmlnsPrefixAttribute.Prefix" />.</summary>
      <param name="xmlNamespace">A <see cref="T:System.String" /> that contains the value for <see cref="P:System.Workflow.ComponentModel.Serialization.XmlnsPrefixAttribute.XmlNamespace" />.</param>
      <param name="prefix">A <see cref="T:System.String" /> that contains the value for <see cref="P:System.Workflow.ComponentModel.Serialization.XmlnsPrefixAttribute.Prefix" />.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="xmlNamespace" /> is a null reference (Visual Basic <see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="prefix" /> is a null reference (Visual Basic <see langword="Nothing" />).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.SuspendActivity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.SuspendActivity" /> class. </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.SuspendActivity.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.SuspendActivity" /> class, along with the name for that activity.</summary>
      <param name="name">The user-defined name of the activity.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.SynchronizationScopeActivity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.SynchronizationScopeActivity" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.SynchronizationScopeActivity.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.SynchronizationScopeActivity" /> class using the name of the activity. </summary>
      <param name="name">The user-defined name of the activity.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.SynchronizationScopeActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <summary>Defines the processing procedure when the subscribed-to event occurs.</summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">The previously typed event arguments.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.TerminateActivity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.TerminateActivity" /> class. </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.TerminateActivity.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.TerminateActivity" /> class using the name of the activity.</summary>
      <param name="name">The user-defined name of the activity.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.ThrowActivity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.ThrowActivity" /> class.</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.ThrowActivity.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.ThrowActivity" /> class, and initializes its name.</summary>
      <param name="name">The user-defined name of the activity.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="identifier" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#CanFilterType(System.Type,System.Boolean)">
      <summary>Returns a value that indicates whether the specified <see cref="T:System.Type" /> can be filtered.</summary>
      <param name="type">The <see cref="T:System.Type" /> to check for filtering</param>
      <param name="throwOnError">
            <see langword="true" /> to throw an exception when the <see cref="M:System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType(System.Type,System.Boolean)" /> is processed; otherwise, <see langword="false" />.</param>
      <returns>
          <see langword="true" /> if the specified type can be filtered; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)">
      <summary>Returns the access type for the specified property.</summary>
      <param name="serviceProvider">An object that implements <see cref="T:System.IServiceProvider" /> to provide access to design time services if they are needed.</param>
      <param name="propertyName">The name of the property.</param>
      <returns>An <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" /> enumeration value denoting the access level of the property.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)">
      <summary>Returns the <see cref="T:System.Type" /> of the specified property.</summary>
      <param name="serviceProvider">An object that implements <see cref="T:System.IServiceProvider" /> to provide access to design time services if they are needed.</param>
      <param name="propertyName">The name of the property.</param>
      <returns>The <see cref="T:System.Type" /> for the property whose name is passed as the <paramref name="propertyName " />parameter. </returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.TransactionScopeActivity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.TransactionScopeActivity" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.TransactionScopeActivity.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.TransactionScopeActivity" /> class using the name of the activity.</summary>
      <param name="name">The user-defined name of the activity.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.TransactionScopeActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <summary>Defines the processing procedure when the subscribed-to event occurs.</summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">The previously typed event arguments.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.WorkflowChangeAction.#ctor">
      <summary>When implemented in a derived class, initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.WorkflowChangeAction" /> class. </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.WorkflowChangeAction.ApplyTo(System.Workflow.ComponentModel.Activity)">
      <summary>When overridden in a derived class, applies the changes to the root <see cref="T:System.Workflow.ComponentModel.Activity" />.</summary>
      <param name="rootActivity">The root <see cref="T:System.Workflow.ComponentModel.Activity" /> of the workflow.</param>
      <returns>
          <see langword="true" /> if the root <see cref="T:System.Workflow.ComponentModel.Activity" /> was updated with the added <see cref="T:System.Workflow.ComponentModel.Activity" />, <see langword="false" /> if the root <see cref="T:System.Workflow.ComponentModel.Activity" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.WorkflowChangeAction.ValidateChanges(System.Workflow.ComponentModel.Activity)">
      <summary>When overridden in a derived class, validates the changes and returns a <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" /> that contains any errors.</summary>
      <param name="activity">The <see cref="T:System.Workflow.ComponentModel.Activity" /> upon which to validate the changes.</param>
      <returns>A <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" /> that contains any errors.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="activityInstance" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.WorkflowChanges.#ctor(System.Workflow.ComponentModel.Activity)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /> class.  </summary>
      <param name="rootActivity">The root <see cref="T:System.Workflow.ComponentModel.Activity" /> of the workflow.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="rootActivity" /> is a null reference (Visual Basic <see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentException">
              <paramref name="rootActivity" /> is not a <see cref="T:System.Workflow.ComponentModel.CompositeActivity" />.</exception>
      <exception cref="T:System.InvalidOperationException">
              <paramref name="rootActivity" /> is in design mode.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.WorkflowChanges.GetCondition(System.Object)">
      <summary>Gets the condition property on a dependency object.</summary>
      <param name="dependencyObject">A <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> (or derived type) that contains a condition property, such as the <see cref="T:System.Workflow.Activities.SequentialWorkflowActivity" /> and <see cref="T:System.Workflow.Activities.StateMachineWorkflowActivity" /> activities.</param>
      <returns>A condition property type, such as <see cref="T:System.Workflow.ComponentModel.ActivityCondition" />.</returns>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="dependencyObject" /> is null (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">
              <paramref name="dependencyObject" /> is not a <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> or a type that derives from <see cref="T:System.Workflow.ComponentModel.DependencyObject" />.</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.WorkflowChanges.SetCondition(System.Object,System.Object)">
      <summary>Sets the condition property on a dependency object.</summary>
      <param name="dependencyObject">A <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> (or derived type) that contains a condition property, such as the <see cref="T:System.Workflow.Activities.SequentialWorkflowActivity" /> and <see cref="T:System.Workflow.Activities.StateMachineWorkflowActivity" /> activities.</param>
      <param name="value">The condition type to set on the dependency object, such as an <see cref="T:System.Workflow.ComponentModel.ActivityCondition" />.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.WorkflowChanges.Validate">
      <summary>Validates the current set of proposed changes that have been made to the activity tree represented by the <see cref="P:System.Workflow.ComponentModel.WorkflowChanges.TransientWorkflow" /> property.</summary>
      <returns>A <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" /> object that contains any errors or warnings that occurred during validation.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.WorkflowParameterBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBinding" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.WorkflowParameterBinding.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBinding" /> class.  </summary>
      <param name="parameterName">A <see langword="string" /> that contains the name of the parameter.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.WorkflowParameterBindingCollection.#ctor(System.Workflow.ComponentModel.Activity)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" /> class.  </summary>
      <param name="ownerActivity">The <see cref="T:System.Workflow.ComponentModel.Activity" /> that own this instance.</param>
      <exception cref="T:System.ArgumentNullException">
              <paramref name="ownerActivity" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.WorkflowParameterBindingCollection.GetItem(System.String)">
      <summary>Gets the <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBinding" /> from the collection having the specified key.</summary>
      <param name="key">The key to match for this retrieval.</param>
      <returns>The <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBinding" /> from the collection having the specified key.</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.WorkflowTerminatedException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.WorkflowTerminatedException" /> class.  </summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.WorkflowTerminatedException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.WorkflowTerminatedException" /> class, with a specified error message.</summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.WorkflowTerminatedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.WorkflowTerminatedException" /> class, with a specified error message and a reference to the inner <see cref="T:System.Exception" /> that is the cause of this <see cref="T:System.Exception" /> .</summary>
      <param name="message">The message that describes the error.</param>
      <param name="exception">The inner <see cref="T:System.Exception" /> reference. </param>
    </member>
    <member name="M:System.Workflow.ComponentModel.WorkflowTransactionOptions.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.WorkflowTransactionOptions" /> class. </summary>
    </member>
    <member name="P:System.Workflow.ComponentModel.Activity.Description">
      <summary>Gets or sets the user-defined description of the <see cref="T:System.Workflow.ComponentModel.Activity" />.</summary>
      <returns>The text description of the <see cref="T:System.Workflow.ComponentModel.Activity" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Activity.Enabled">
      <summary>Gets or sets a value that indicates whether this instance is enabled for execution and validation.</summary>
      <returns>
          <see langword="true" /> if enabled for execution and validation; <see langword="false" /> otherwise.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Activity.ExecutionResult">
      <summary>Gets the <see cref="T:System.Workflow.ComponentModel.ActivityExecutionResult" /> of the last attempt to run this instance.</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionResult" /> of the last attempt to run this instance.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Activity.ExecutionStatus">
      <summary>Gets the current <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> of this instance.</summary>
      <returns>The current <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> of this instance.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity">
      <summary>Gets information about whether the activity is executing within the default <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> of the workflow instance.</summary>
      <returns>Returns <see langword="false" /> if the activity is executing within the default <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> of the workflow instance, otherwise returns <see langword="true" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Activity.Name">
      <summary>Gets or sets the name of this instance. This name must conform to the variable naming convention of the programming language that is being used in the Workflow project.</summary>
      <returns>The name of this instance.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Activity.Parent">
      <summary>Gets the <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> that contains this <see cref="T:System.Workflow.ComponentModel.Activity" />.</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.Activity" /> that is a parent to this <see cref="T:System.Workflow.ComponentModel.Activity" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Activity.QualifiedName">
      <summary>Gets the qualified name of the activity. Qualified activity names are always unique in a workflow instance.</summary>
      <returns>The qualified name of the instance.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId">
      <summary>Gets the <see cref="T:System.Guid" /> associated with the instance.</summary>
      <returns>The <see cref="T:System.Guid" /> associated with the instance.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityBind.Name">
      <summary>Gets or sets the name of the <see cref="T:System.Workflow.ComponentModel.Activity" /> that the <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> points to.</summary>
      <returns>The name of the <see cref="T:System.Workflow.ComponentModel.Activity" /> that the <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> points to.</returns>
      <exception cref="T:System.Data.ReadOnlyException">Occurs when you attempt to set this value when the <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> is not in design mode.</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityBind.Path">
      <summary>Gets or sets the path for a member of the target activity. The value can use dotted notation to indicate a path to a nested value. For example, a path of "A.B.C" indicates that the <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> is to a field or property named 'C', which is a member of the field or property 'B', which in turn is a field or property 'A', which is a member of the target activity.</summary>
      <returns>The path of the data item of interest on the chosen <see cref="T:System.Workflow.ComponentModel.Activity" />.</returns>
      <exception cref="T:System.Data.ReadOnlyException">Occurs when you attempt to set this value when the <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> is not in design mode.</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityBind.UserData">
      <summary>Gets an <see cref="T:System.Collections.IDictionary" /> of user data relating to this instance.</summary>
      <returns>An <see cref="T:System.Collections.IDictionary" /> of user data relating to this instance.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityChangeAction.OwnerActivityDottedPath">
      <summary>Gets and sets the <see cref="P:System.Workflow.ComponentModel.ActivityChangeAction.OwnerActivityDottedPath" /> of the <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> associated with this instance.</summary>
      <returns>The <see cref="P:System.Workflow.ComponentModel.ActivityChangeAction.OwnerActivityDottedPath" /> of the <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> associated with this instance.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityCollection.Count">
      <summary>Gets the number of members of the <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>The number of members of the <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityCollection.Item(System.Int32)">
      <summary>Gets or sets the activity in the <see cref="T:System.Collections.ICollection" /> based on the index.</summary>
      <param name="index">Zero-based index into the <see cref="T:System.Collections.ICollection" />.</param>
      <returns>A member activity of the <see cref="T:System.Collections.ICollection" />, whose index in the <see cref="T:System.Collections.ICollection" /> was specified in the call.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="index" /> is not a valid index in <see cref="T:System.Collections.IList" />.</exception>
      <exception cref="T:System.NotSupportedException">The property is set and the <see cref="T:System.Collections.IList" /> is read-only.</exception>
      <exception cref="T:System.Exception">An attempt to set to an <see cref="T:System.Object" /> that is not an <see cref="T:System.Workflow.ComponentModel.Activity" />.</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityCollection.Item(System.String)">
      <summary>Gets the activity in the <see cref="T:System.Collections.ICollection" /> based on the string which is a unique key.</summary>
      <param name="key">Unique identifier for activity in the <see cref="T:System.Collections.ICollection" />.</param>
      <returns>A member <see cref="T:System.Workflow.ComponentModel.Activity" /> of the <see cref="T:System.Collections.ICollection" />; the key in the <see cref="T:System.Collections.ICollection" /> which was specified in the call.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Count">
      <summary>Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <returns>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#IsReadOnly">
      <summary>Gets a value that indicates whether the <see cref="T:System.Collections.IList" /> is read-only. </summary>
      <returns>
          <see langword="true" /> if the <see cref="T:System.Collections.IList" /> is read-only; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Item(System.Int32)">
      <summary>Gets or sets the element at the specified index.</summary>
      <param name="index">The zero-based index of the element to get or set.</param>
      <returns>The <see cref="T:System.Object" /> at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</exception>
      <exception cref="T:System.NotSupportedException">The <see langword="ICollection" /> is read-only.</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Gets a value that indicates whether access to the <see cref="T:System.Collections.Generic.ICollection`1" /> is synchronized, that is thread-safe.</summary>
      <returns>
          <see langword="true" /> if access to the <see cref="T:System.Collections.Generic.ICollection`1" /> is synchronized, that is, thread-safe; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsFixedSize">
      <summary>Gets a value indicating whether the <see cref="T:System.Collections.IList" /> has a fixed size.</summary>
      <returns>
          <see langword="true" /> if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only. </summary>
      <returns>Returns <see cref="T:System.Boolean" /><see langword="true" /> if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Gets or sets the activity in the <see cref="T:System.Collections.ICollection" /> based on the index.</summary>
      <param name="index">Zero-based index into the <see cref="T:System.Collections.ICollection" />.</param>
      <returns>Returns <see cref="T:System.Object" />, a member activity of the <see cref="T:System.Collections.ICollection" />, whose index in the <see cref="T:System.Collections.ICollection" /> was specified in the call.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs.Action">
      <summary>Gets the <see cref="T:System.Workflow.ComponentModel.ActivityCollectionChangeAction" /> representing the type of change that occurred.</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.ActivityCollectionChangeAction" /> representing the type of change that occurred.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs.AddedItems">
      <summary>Gets a strongly typed <see cref="T:System.Collections.ICollection" /> of type <see cref="T:System.Workflow.ComponentModel.Activity" /> containing each added <see cref="T:System.Workflow.ComponentModel.Activity" />.</summary>
      <returns>A strongly typed <see cref="T:System.Collections.ICollection" /> of type <see cref="T:System.Workflow.ComponentModel.Activity" /> containing each added <see cref="T:System.Workflow.ComponentModel.Activity" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs.Index">
      <summary>Gets the index of the change originating the event.</summary>
      <returns>The index of the change originating the event.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs.Owner">
      <summary>Gets the <see cref="T:System.Object" /> which originated the event.</summary>
      <returns>The <see cref="T:System.Object" /> which originated the event.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs.RemovedItems">
      <summary>Gets a strongly typed <see cref="T:System.Collections.ICollection" /> of type <see cref="T:System.Workflow.ComponentModel.Activity" /> containing each removed <see cref="T:System.Workflow.ComponentModel.Activity" />.</summary>
      <returns>A strongly typed <see cref="T:System.Collections.ICollection" /> of type <see cref="T:System.Workflow.ComponentModel.Activity" /> containing each removed <see cref="T:System.Workflow.ComponentModel.Activity" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityExecutionContext.Activity">
      <summary>Gets the <see cref="T:System.Workflow.ComponentModel.Activity" /> that currently executes within this execution context.</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.Activity" /> associated to this execution context.</returns>
      <exception cref="T:System.ObjectDisposedException">This instance is marked for garbage collection.</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityExecutionContext.ContextGuid">
      <summary>Gets the <see langword="ContextID" /> of the associated <see cref="T:System.Workflow.ComponentModel.Activity" />.</summary>
      <returns>The <see langword="ContextID" /> of the associated <see cref="T:System.Workflow.ComponentModel.Activity" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityExecutionContext.ExecutionContextManager">
      <summary>Gets the <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContextManager" /> associated with this instance.</summary>
      <returns>the <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContextManager" /> associated with this instance.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityExecutionContextManager.ExecutionContexts">
      <summary>Represents the set of execution contexts, created by the current activity, that have not yet been completed.</summary>
      <returns>The collection that contains the <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />(s) associated with this instance.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityExecutionContextManager.PersistedExecutionContexts">
      <summary>Represents the set of execution contexts, created by the current activity, that have been completed and were persisted upon their completion.</summary>
      <returns>The collection of type <see cref="T:System.Guid" /> that represents the set of all persisted <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs.Activity">
      <summary>Gets the <see cref="T:System.Workflow.ComponentModel.Activity" /> that raised the event.</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.Activity" /> that raised the event.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs.ExecutionResult">
      <summary>Gets the <see cref="T:System.Workflow.ComponentModel.ActivityExecutionResult" /> of the <see cref="T:System.Workflow.ComponentModel.Activity" /> that raised the event corresponding to the value when the event occurred.</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionResult" /> of the <see cref="T:System.Workflow.ComponentModel.Activity" /> that raised the event corresponding to the value when the event occurred.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs.ExecutionStatus">
      <summary>Gets the <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> of the <see cref="T:System.Workflow.ComponentModel.Activity" /> that raised the event corresponding to the value when the event occurred.</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> of the <see cref="T:System.Workflow.ComponentModel.Activity" /> that raised the event corresponding to the value when the event occurred.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.AddedActivityAction.AddedActivity">
      <summary>Gets or sets the <see cref="T:System.Workflow.ComponentModel.Activity" /> added to the workflow.</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.Activity" /> added to the workflow.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.AddedActivityAction.Index">
      <summary>Gets the index of the added <see cref="T:System.Workflow.ComponentModel.Activity" /> with the <see cref="P:System.Workflow.ComponentModel.CompositeActivity.Activities" /> collection of the parent <see cref="T:System.Workflow.ComponentModel.CompositeActivity" />.</summary>
      <returns>The index value of the new <see cref="T:System.Workflow.ComponentModel.Activity" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.TransactionOptions">
      <summary>Gets the <see cref="T:System.Workflow.ComponentModel.WorkflowTransactionOptions" /> associated with this instance.</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.WorkflowTransactionOptions" /> associated with this instance.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.CompensateActivity.TargetActivityName">
      <summary>Gets or sets the name of the <see cref="T:System.Workflow.ComponentModel.Activity" /> to compensate.</summary>
      <returns>A string that contains the name of the <see cref="T:System.Workflow.ComponentModel.Activity" /> to compensate.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.ActivityCodeGeneratorAttribute.CodeGeneratorTypeName">
      <summary>Gets the name of the code generator <see cref="T:System.Type" /> which this instance is based on.</summary>
      <returns>A string that contains the name of the code generator <see cref="T:System.Type" /> on which this instance is based.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.ActivityValidatorAttribute.ValidatorTypeName">
      <summary>Gets the name of the type of the associated <see cref="T:System.Workflow.ComponentModel.Compiler.Validator" /> class. </summary>
      <returns>The name of the type of the associated <see cref="T:System.Workflow.ComponentModel.Compiler.Validator" /> class. </returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.AttributeInfo.ArgumentValues">
      <summary>Gets a collection that contains values for each of the arguments associated with this instance.</summary>
      <returns>A collection that contains values for each of the arguments associated with this instance.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.AttributeInfo.AttributeType">
      <summary>Gets the <see cref="T:System.Type" /> of this instance.</summary>
      <returns>The <see cref="T:System.Type" /> of this instance.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.AttributeInfo.Creatable">
      <summary>Gets a value that indicates whether this instance can be created.</summary>
      <returns>Returns a value which is <see langword="false" /> if either of the following conditions are true:The <see cref="T:System.Type" /> defining this attribute has an <see cref="P:System.Type.Assembly" /> which is a null reference (Visual Basic <see langword="Nothing" />).Any one of the objects in the array <see cref="P:System.Workflow.ComponentModel.Compiler.AttributeInfo.ArgumentValues" /> is of <see cref="T:System.Type" /><see cref="T:System.Exception" />Otherwise the value returned is <see langword="true" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.AttributeInfoAttribute.AttributeInfo">
      <summary>Gets the <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> associated with this instance.</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> associated with this instance. </returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.AuthorizedType.Assembly">
      <summary>Gets or sets the name of the assembly that contains the type(s) represented by this class.</summary>
      <returns>The name of the assembly.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized">
      <summary>Gets or sets the value that indicates whether the type designated by this class is authorized to participate in a workflow compilation.</summary>
      <returns>
          <see langword="true" /> if authorized to participate in a workflow compilation; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.AuthorizedType.Namespace">
      <summary>Gets or sets the name of the namespace of the type represented in this instance.</summary>
      <returns>The name of the namespace of the <see cref="T:System.Type" /> represented in this instance.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.AuthorizedType.RegularExpression">
      <summary>Gets the <see cref="T:System.Text.RegularExpressions.Regex" /> associated with this instance.</summary>
      <returns>The regular expression associated with this instance.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.AuthorizedType.TypeName">
      <summary>Gets or sets the name of the type being represented by this instance.</summary>
      <returns>The name of the <see cref="T:System.Type" /> being represented by this instance.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.BindValidationContext.Access">
      <summary>Gets the <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" /> of the target of the <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> represented by this instance.</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" /> of the target of the <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> represented by this instance.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.BindValidationContext.TargetType">
      <summary>Gets the <see cref="T:System.Type" /> of the target of the <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> represented by this instance.</summary>
      <returns>The <see cref="T:System.Type" /> of the target of the <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> represented by this instance.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CodeGenerationManager.Context">
      <summary>Gets the <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> associated with this instance.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> associated with this instance.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowCleanupTask.TemporaryFiles">
      <summary>Gets or sets an array of paths to temporary files created when compiling workflows created using Visual Basic .NET.</summary>
      <returns>A list of temporary files associated with this compilation task.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.AssemblyName">
      <summary>Gets and sets the name of the assembly that is built during compilation.</summary>
      <returns>A <see langword="String" /> that contains the name of the assembly.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.BuildingProject">
      <summary>Gets or sets a value that indicates whether this build task is currently building the workflow project.</summary>
      <returns>
          <see langword="true" /> if this build task is currently building the workflow project; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.CompilationOptions">
      <summary>Gets or sets the compilation options.</summary>
      <returns>The compilation options.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.DelaySign">
      <summary>Gets or sets a value that indicates whether the workflow assembly will be delay signed.</summary>
      <returns>
          <see langword="true" /> if the assembly will be delay signed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.HostObject">
      <summary>Gets or sets the <see cref="T:System.Object" /> that is used to obtain services provided by the Visual Studio host when the compile workflow task is invoked. </summary>
      <returns>The <see cref="T:System.Object" /> that is used to obtain services provided by Visual Studio host when the compile workflow task is invoked. </returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.Imports">
      <summary>Gets or sets a string that contains all the imports directives for the compilation of the workflow.</summary>
      <returns>A string that contains all the imports directives for the compilation of the workflow.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.KeepTemporaryFiles">
      <summary>Gets a Boolean value that determines whether temporary files are to be kept.</summary>
      <returns>
          <see langword="true" /> if temporary files are to be kept; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.KeyContainer">
      <summary>Gets or sets the name of the public/private key container used for signing the workflow assembly.</summary>
      <returns>The name of the public/private key container used for signing the workflow assembly.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.KeyFile">
      <summary>Gets or sets the path of the file that is used for signing the workflow assembly.</summary>
      <returns>The path of the file that is used for signing the workflow assembly.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.Microsoft#Build#Framework#ITask#HostObject">
      <summary>Gets or sets the Host Object in the Microsoft Build framework.</summary>
      <returns>The Host Object from the Microsoft Build framework.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.OutputFiles">
      <summary>Gets an array of paths to output files from the workflow project being compiled.</summary>
      <returns>An array of paths to output files from the workflow project being compiled.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.ProjectDirectory">
      <summary>Gets or sets a string that contains the path of the directory that contains the workflow project.</summary>
      <returns>A string that contains the path of the directory that contains the workflow project.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.ProjectExtension">
      <summary>Gets or sets a string that contains the file name extension for the workflow project.</summary>
      <returns>A string that contains the file name extension for the workflow project.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.ReferenceFiles">
      <summary>Gets or sets an array of paths to reference files for the workflow project being compiled.</summary>
      <returns>An array of paths to reference files for the workflow project being compiled.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.ResourceFiles">
      <summary>Gets or sets an array of paths to resource files for the workflow project being compiled.</summary>
      <returns>An array of paths to resource files for the workflow project being compiled.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.RootNamespace">
      <summary>Gets or sets the root namespace for the workflow project being compiled.</summary>
      <returns>The root namespace for the workflow project being compiled.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.SourceCodeFiles">
      <summary>Gets or sets an array of paths to Visual Basic or C# files in the workflow project being compiled.</summary>
      <returns>An array of paths to Visual Basic or C# files in the workflow project being compiled.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.TargetFramework">
      <summary>Gets or sets the target .NET Framework of the current project.</summary>
      <returns>The target .NET Framework of the current project.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.TemporaryFiles">
      <summary>Gets an array of paths to temporary files created by the build task for the workflow project being compiled.</summary>
      <returns>An array of paths to temporary files created by the build task for the workflow project being compiled.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.WorkflowMarkupFiles">
      <summary>Gets or sets an array of paths to Workflow Markup Files for the workflow project being compiled.</summary>
      <returns>An array of paths to Workflow Markup Files for the workflow project being compiled.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.ITypeProvider.LocalAssembly">
      <summary>Temporary assembly that is generated during the compilation process to validate the types in the active project that is being compiled.</summary>
      <returns>The local <see cref="T:System.Reflection.Assembly" /> defined by this instance.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.ITypeProvider.ReferencedAssemblies">
      <summary>Gets a collection of all assemblies referenced by the <see cref="T:System.Type" />.</summary>
      <returns>A collection of all assemblies referenced by the <see cref="T:System.Type" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.ITypeProvider.TypeLoadErrors">
      <summary>Gets an <see cref="T:System.Collections.IDictionary" /> of load error exceptions keyed by the <see cref="T:System.Object" /> causing the <see cref="T:System.Exception" />.</summary>
      <returns>An <see cref="T:System.Collections.IDictionary" /> of load error exceptions keyed by the <see cref="T:System.Object" /> causing the <see cref="T:System.Exception" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.CheckTypes">
      <summary>Gets a value that indicates whether types are checked.</summary>
      <returns>
          <see langword="true" /> if types are checked, otherwise <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.Language">
      <summary>Gets the programming language used by the environment, such as Visual Studio, when compiling the workflow.</summary>
      <returns>The name of the programming language used by the development environment.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.RootNamespace">
      <summary>Gets the root namespace set for the project. </summary>
      <returns>The name of the root namespace.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.PropertyValidationContext.Property">
      <summary>Gets the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> associated with this instance as an <see cref="T:System.Object" /> .</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> associated with this instance as an <see cref="T:System.Object" /> .</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.PropertyValidationContext.PropertyName">
      <summary>Gets the property name associated with this instance.</summary>
      <returns>The property name associated with this instance.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.PropertyValidationContext.PropertyOwner">
      <summary>Get the <see cref="T:System.Object" /> which owns the property associated with this instance.</summary>
      <returns>The <see cref="T:System.Object" /> which owns the property associated with this instance.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.TypeProvider.AssemblyNameResolver">
      <summary>Gets or sets the delegate that references a method with one parameter and one return value that returns the assembly display name in which a specified type belongs to.</summary>
      <returns>The delegate that references a method with one parameter and one return value that returns the assembly display name that a specified type belongs to.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedPropertyResolver">
      <summary>Gets or sets the delegate that references a method with two parameters and one return value that determines whether a specified property is supported in the target .NET Framework.</summary>
      <returns>The delegate that references a method with two parameters and one return value that determines whether a specified property is supported in the target .NET Framework. </returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.TypeProvider.LocalAssembly">
      <summary>Gets a value that represents the locally defined <see cref="T:System.Reflection.Assembly" /> for this instance.</summary>
      <returns>The locally defined <see cref="T:System.Reflection.Assembly" /> for this instance.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.TypeProvider.ReferencedAssemblies">
      <summary>Gets a collection of all assemblies referenced by the <see cref="T:System.Type" />.</summary>
      <returns>A collection of all assemblies referenced by the <see cref="T:System.Type" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrors">
      <summary>Gets an <see cref="T:System.Collections.IDictionary" /> of load error exceptions keyed by the <see cref="T:System.Object" /> that causes the <see cref="T:System.Exception" />.</summary>
      <returns>An <see cref="T:System.Collections.IDictionary" /> of load error exceptions keyed by the <see cref="T:System.Object" /> that causes the <see cref="T:System.Exception" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.ValidationError.ErrorNumber">
      <summary>Gets the error number of this instance.</summary>
      <returns>The error number of this instance.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.ValidationError.ErrorText">
      <summary>Gets the error text for this instance.</summary>
      <returns>The error text for this instance.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.ValidationError.IsWarning">
      <summary>Gets a value that indicates whether this instance is a warning.</summary>
      <returns>
          <see langword="true" /> if a warning; otherwise <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.ValidationError.PropertyName">
      <summary>Gets or sets the name of the property that failed to validate. </summary>
      <returns>A <see cref="T:System.String" /> that contains the name of the property that failed to validate.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.ValidationError.UserData">
      <summary>Gets an <see cref="T:System.Collections.IDictionary" /> for the definition and storage of user-defined data related to this instance.</summary>
      <returns>An <see cref="T:System.Collections.IDictionary" /> for the definition and storage of user-defined data related to this instance.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection.HasErrors">
      <summary>Indicates whether the collection contains <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationError" /> objects that indicate compilation errors.</summary>
      <returns>
          <see langword="true" /> if the activity has generated validation errors; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection.HasWarnings">
      <summary>This property indicates whether the <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" /> contains at least one <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationError" /> object, which indicates a compilation warning.</summary>
      <returns>
          <see langword="true" /> if the activity has generated validation warnings; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.ValidationManager.Context">
      <summary>Gets a value that indicates the stack object that a validator can use to make information available to nested validators.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> that a validator can use to make information available to nested validators.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.ValidationManager.ValidateChildActivities">
      <summary>Gets a value that indicates whether child <see cref="T:System.Workflow.ComponentModel.Activity" /> classes should be validated.</summary>
      <returns>
          <see langword="true" /> if child <see cref="T:System.Workflow.ComponentModel.Activity" /> classes should be validated; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.ValidationOptionAttribute.ValidationOption">
      <summary>Gets the value of the <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationOption" /> associated with this instance.</summary>
      <returns>The value of the <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationOption" /> associated with this instance.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.CheckTypes">
      <summary>Gets a value that indicates whether <see cref="P:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.CheckTypes" /> is enabled at the current scope.</summary>
      <returns>
          <see langword="true" /> if <see cref="P:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.CheckTypes" /> is enabled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.Current">
      <summary>Gets the <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext" /> that is available at the current scope.</summary>
      <returns>The workflow compilation context that is available at the current scope, or <see langword="null" /> if no compilation scope is initialized.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.Language">
      <summary>Gets the workflow compiler options <see cref="P:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.Language" /> that is available at the current scope.</summary>
      <returns>The workflow compiler options programming language that is available at the current scope.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.RootNamespace">
      <summary>Gets the workflow compiler options <see cref="P:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.RootNamespace" /> that is available at the current scope.</summary>
      <returns>The workflow compiler options root namespace that is available at the current scope.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.WorkflowCompilerError.PropertyName">
      <summary>Returns the property associated with the compiler error.</summary>
      <returns>The property associated with the compiler error.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.WorkflowCompilerError.UserData">
      <summary>Gets an <see cref="T:System.Collections.IDictionary" /> which can be accessed to read and write user-defined data associated with this instance.</summary>
      <returns>An <see cref="T:System.Collections.IDictionary" /> which can be accessed to read and write user-defined data associated with this instance.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.WorkflowCompilerOptionsService.CheckTypes">
      <summary>Gets a value that indicates whether the types in the workflow being compiled are checked against a list that allows or excludes types based on the value of the <see cref="P:System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized" /> property.</summary>
      <returns>
          <see langword="true" /> if <see cref="P:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.CheckTypes" /> is enabled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.WorkflowCompilerOptionsService.Language">
      <summary>Gets the name of the programming language used by the environment.</summary>
      <returns>The name of the programming language used by the workflow compiler.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.WorkflowCompilerOptionsService.RootNamespace">
      <summary>Gets the root namespace for the environment.</summary>
      <returns>The root namespace for the environment.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.WorkflowCompilerOptionsService.TargetFrameworkMoniker">
      <summary>Gets the target .NET Framework version for the compiled workflow assembly.</summary>
      <returns>The target .NET Framework version for the compiled workflow assembly.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters.CompilerOptions">
      <summary>Gets or sets a string that contains command-line options for this compilation.</summary>
      <returns>A string that contains command-line options for this compilation.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters.GenerateCodeCompileUnitOnly">
      <summary>Gets or sets a value which indicates whether to generate only a <see cref="T:System.CodeDom.CodeCompileUnit" />, or to call the C# or Visual Basic compiler to generate the executable or DLL.</summary>
      <returns>A value which indicates whether to generate only a <see cref="T:System.CodeDom.CodeCompileUnit" /> , or to call the C# or Visual Basic compiler to generate the executable or DLL.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters.LanguageToUse">
      <summary>Gets or sets a string which contains the language to use in compilation of the <see cref="T:System.CodeDom.CodeCompileUnit" />.</summary>
      <returns>A string which contains the language to use in compilation of the <see cref="T:System.CodeDom.CodeCompileUnit" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters.LibraryPaths">
      <summary>Gets the property that represents a collection of directory names under which compiler looks for referenced assemblies.</summary>
      <returns>The property that represents a collection of directory names under which compiler looks for referenced assemblies.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters.UserCodeCompileUnits">
      <summary>Gets or sets the collection of code compile units which will be used in this invocation of the workflow compiler.</summary>
      <returns>The collection of code compile units which will be used in this invocation of the workflow compiler.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.WorkflowCompilerResults.CompiledUnit">
      <summary>Gets the <see cref="T:System.CodeDom.CodeCompileUnit" /> that was produced during compilation of the workflow.</summary>
      <returns>The <see cref="T:System.CodeDom.CodeCompileUnit" /> associated with this instance.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.WorkflowMarkupSourceAttribute.FileName">
      <summary>Gets the name of the file represented by this instance.</summary>
      <returns>The name of the file represented by this instance</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.WorkflowMarkupSourceAttribute.MD5Digest">
      <summary>Gets the MD5 hash algorithm computed checksum that is associated with the workflow markup source file. </summary>
      <returns>A <see cref="T:System.String" /> that contains the checksum associated with the workflow markup source file. </returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException.Errors">
      <summary>Returns <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationError" />s that were obtained when creating/validating workflows.</summary>
      <returns>An array that contains each <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationError" /> that caused this exception.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.CompositeActivity.Activities">
      <summary>Gets the object representing the collection, <see cref="T:System.Workflow.ComponentModel.ActivityCollection" />, of all child activities.</summary>
      <returns>
          <see cref="T:System.Workflow.ComponentModel.ActivityCollection" /> of all child activities.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities">
      <summary>Gets or sets a value which controls whether the individual activities within <see cref="P:System.Workflow.ComponentModel.CompositeActivity.Activities" /> can be modified.</summary>
      <returns>
          <see langword="true" /> if the individual activities within <see cref="P:System.Workflow.ComponentModel.CompositeActivity.Activities" /> can be modified; otherwise <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities">
      <summary>Gets the read-only collection that represents the subset of <see cref="P:System.Workflow.ComponentModel.CompositeActivity.Activities" /> that are enabled. </summary>
      <returns>The read-only collection that represents the subset of <see cref="P:System.Workflow.ComponentModel.CompositeActivity.Activities" /> that are enabled.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.DependencyObject.DesignMode">
      <summary>Gets the value that indicates whether this instance is in design or run-time mode.</summary>
      <returns>
          <see langword="true" /> if this instance is in design mode; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject">
      <summary>Gets the parent <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> in the <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> graph.</summary>
      <returns>The parent <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> in the <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> graph.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.DependencyObject.Site">
      <summary>Gets or sets a reference to the <see cref="P:System.Workflow.ComponentModel.DependencyObject.Site" /> component of the <see cref="T:System.Workflow.ComponentModel.DependencyObject" />.</summary>
      <returns>The <see cref="P:System.Workflow.ComponentModel.DependencyObject.Site" /> component of the <see cref="T:System.Workflow.ComponentModel.DependencyObject" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.DependencyObject.UserData">
      <summary>Gets an <see cref="T:System.Collections.IDictionary" /> that associates custom data with this class instance.</summary>
      <returns>A dictionary that acts as an extensibility hook for developers to manipulate <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> declarations for a design tool and associate custom data with individual activity declarations.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.DependencyProperty.DefaultMetadata">
      <summary>Gets the <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> that represents user-defined data for this <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> for this <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.DependencyProperty.IsAttached">
      <summary>Gets the property that indicates whether this <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> is associated to a <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> by registration.</summary>
      <returns>
          <see langword="true" /> if attached to a <see cref="T:System.Workflow.ComponentModel.DependencyObject" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.DependencyProperty.IsEvent">
      <summary>Gets the property that indicates whether the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> is an event <see cref="T:System.Delegate" />.</summary>
      <returns>
          <see langword="true" /> if the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> is an event <see cref="T:System.Delegate" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.DependencyProperty.Name">
      <summary>Gets the <see cref="P:System.Workflow.ComponentModel.DependencyProperty.Name" /> of the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />. </summary>
      <returns>The <see cref="P:System.Workflow.ComponentModel.DependencyProperty.Name" /> of the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.DependencyProperty.OwnerType">
      <summary>Gets the <see cref="T:System.Type" /> of the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</summary>
      <returns>The <see cref="T:System.Type" /> of the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.DependencyProperty.PropertyType">
      <summary>Gets the <see cref="T:System.Type" /> of the value stored in the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</summary>
      <returns>The <see cref="T:System.Type" /> of the value stored in the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.DependencyProperty.ValidatorType">
      <summary>Gets the <see cref="T:System.Type" /> implementing validation logic specific to the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</summary>
      <returns>The <see cref="T:System.Type" /> implementing validation logic specific to this instance.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityChangedEventArgs.Activity">
      <summary>Gets the <see cref="T:System.Workflow.ComponentModel.Activity" /> that has changed.</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.Activity" /> that has changed.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityChangedEventArgs.Member">
      <summary>The member of the <see cref="T:System.Workflow.ComponentModel.Activity" /> being changed.</summary>
      <returns>A <see cref="T:System.ComponentModel.MemberDescriptor" /> that describes the member that has changed.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityChangedEventArgs.NewValue">
      <summary>The new value of the member of the <see cref="T:System.Workflow.ComponentModel.Activity" /> that has changed.</summary>
      <returns>The new value of the member that has changed.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityChangedEventArgs.OldValue">
      <summary>The old value of the member of the <see cref="T:System.Workflow.ComponentModel.Activity" /> that has changed.</summary>
      <returns>The old value of the member that has changed.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.AccessibilityObject">
      <summary>Gets an <see cref="T:System.Windows.Forms.AccessibleObject" /> that accessibility applications use to adjust the application UI for users who have impairments.</summary>
      <returns>The <see cref="T:System.Windows.Forms.AccessibleObject" /> associated with the control.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Activity">
      <summary>Gets the <see cref="T:System.Workflow.ComponentModel.Activity" /> associated with the designer.</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.Activity" /> associated with the designer.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Bounds">
      <summary>Gets a <see cref="T:System.Drawing.Rectangle" /> which contains the value for the enclosing rectangle of the designer in logical coordinates.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that encloses the designer.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.DesignerActions">
      <summary>Gets the array of actions associated with configuration errors.</summary>
      <returns>A read-only array of <see cref="T:System.Workflow.ComponentModel.Design.DesignerAction" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.DesignerTheme">
      <summary>Gets the current designer theme for the activity designer.</summary>
      <returns>An <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" /> that contains theme settings for the activity designer.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.EnableVisualResizing">
      <summary>Gets a value that indicates whether the activity designer can be resized in a free form designer.</summary>
      <returns>
          <see langword="true" /> if the activity designer can be resized in a <see cref="T:System.Workflow.ComponentModel.Design.FreeFormActivityDesigner" />; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Glyphs">
      <summary>Gets a collection of glyphs with which to adorn the designer.</summary>
      <returns>An <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection" /> that contains the glyphs to display on the designer.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Image">
      <summary>Gets or sets the <see cref="T:System.Drawing.Image" /> associated with the designer.</summary>
      <returns>The <see cref="T:System.Drawing.Image" /> associated with the designer.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.ImageRectangle">
      <summary>Gets the value for the enclosing bounds of the image associated with the designer in logical coordinates.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> image.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.InvokingDesigner">
      <summary>Gets or sets the designer of the activity that invokes the activity associated with the current activity designer.</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> to invoke the current activity designer.</returns>
      <exception cref="T:System.NotSupportedException">A set operation was attempted on <see cref="P:System.Workflow.ComponentModel.Design.ActivityDesigner.InvokingDesigner" />.</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.IsLocked">
      <summary>Gets a value that indicates whether the activity associated with the designer can be modified.</summary>
      <returns>
          <see langword="true" /> if the activity associated with the designer can be modified; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.IsPrimarySelection">
      <summary>Gets a value that indicates whether the activity associated with the designer is the primary selection.</summary>
      <returns>
          <see langword="true" /> if the activity associated with the designer is the primary selection; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.IsRootDesigner">
      <summary>Gets a value that indicates whether the designer is a root designer.</summary>
      <returns>
          <see langword="true" /> if the designer is a root designer; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.IsSelected">
      <summary>Gets a value that indicates whether the activity associated with the designer is selected.</summary>
      <returns>
          <see langword="true" /> if the activity associated with the designer is selected; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.IsVisible">
      <summary>Gets a value that indicates whether the activity associated with the designer is visible on the workflow.</summary>
      <returns>
          <see langword="true" /> if the activity associated with the designer is visible on the workflow; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Location">
      <summary>Gets or sets the location of the designer in logical coordinates.</summary>
      <returns>The location of the designer in logical coordinates.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.MessageFilters">
      <summary>Gets a read-only collection of message filters that are associated with the activity designer.</summary>
      <returns>A <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /> read-only collection that includes all standard message filters to associate with the activity designer.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.MinimumSize">
      <summary>Gets the minimum size for the activity designer.</summary>
      <returns>The minimum size of the activity designer.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.ParentDesigner">
      <summary>Gets the parent designer of the existing designer.</summary>
      <returns>The parent designer of the existing designer. If the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> is a root designer then the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> returned will be the <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" />; otherwise, the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> will be the parent <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.ParentView">
      <summary>Gets the workflow view that contains the current activity designer.</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> that contains the current activity designer.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.ShowSmartTag">
      <summary>Gets a value that indicates whether the activity should show a smart tag.</summary>
      <returns>
          <see langword="true" /> if the activity should show a SmartTag; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Size">
      <summary>Gets or sets the size of the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</summary>
      <returns>A <see cref="T:System.Drawing.Size" /> that represents the area of the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.SmartTagRectangle">
      <summary>Gets the rectangle where the smart tag should be displayed.</summary>
      <returns>The rectangle where the smart tag should be displayed.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.SmartTagVerbs">
      <summary>Gets a read-only collection of designer actions to associate with a smart tag on the activity designer.</summary>
      <returns>An <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerb" /> read-only collection to associate with the activity designer's smart tag.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesigner#Component">
      <summary>Gets the base component with which the activity designer is associated.</summary>
      <returns>The <see cref="T:System.ComponentModel.IComponent" /> with which the activity designer is associated.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesigner#Verbs">
      <summary>Gets the design-time verbs associated with the activity designer.</summary>
      <returns>The design-time verbs associated with the activity designer.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies">
      <summary>Gets the array of technologies that the activity designer can support for its display.</summary>
      <returns>An array of supported <see cref="T:System.ComponentModel.Design.ViewTechnology" /> objects.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Workflow#ComponentModel#Design#IWorkflowRootDesigner#InvokingDesigner">
      <summary>Gets or sets the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> that requested the activity designer be initialized.</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> that requested the activity designer be initialized.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Workflow#ComponentModel#Design#IWorkflowRootDesigner#MessageFilters">
      <summary>Gets any message filters associated with the activity designer.</summary>
      <returns>A <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /> read-only collection that contains any message filters associated with the workflow root designer.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Workflow#ComponentModel#Design#IWorkflowRootDesigner#SupportsLayoutPersistence">
      <summary>Gets the value that indicates whether the actual workflow root designer supports the layout persistence.</summary>
      <returns>
          <see langword="true" /> if the designer supports layout persistence; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Text">
      <summary>Gets or sets the text to associate with the designer.</summary>
      <returns>The text to associate with the designer.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.TextRectangle">
      <summary>Gets the value of the text rectangle in logical coordinates.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that contains the text associated with the designer.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Verbs">
      <summary>Gets the collection of verbs to be associated with the designer.</summary>
      <returns>The collection of verbs to be associated with the designer.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject.ActivityDesigner">
      <summary>Gets the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> to which the accessible object is applied.</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> to which the accessibility object is applied.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject.Bounds">
      <summary>Gets the location and size of the accessible object.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that represents the bounds of the accessible object.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject.DefaultAction">
      <summary>Gets a string that describes the default action of the activity designer. </summary>
      <returns>A description of the default action associated with the activity designer, or a null reference (<see langword="Nothing" /> in Visual Basic) if the object has no default action.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject.Description">
      <summary>Gets a string that describes the visual appearance of the activity designer. </summary>
      <returns>A description of the activity designer's visual appearance, or a null reference (<see langword="Nothing" /> in Visual Basic) if the object has no description.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject.Help">
      <summary>Gets a description of what the activity associated with the activity designer does or how it is used.</summary>
      <returns>A string that contains the description of what the activity associated with the activity designer does or how it is used, or a null reference (<see langword="Nothing" /> in Visual Basic) if no help is defined.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject.Name">
      <summary>Gets or sets the name of the <see cref="T:System.Workflow.ComponentModel.Activity" /> associated with the accessible object's <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</summary>
      <returns>The name of the <see cref="T:System.Workflow.ComponentModel.Activity" /> or a null reference (<see langword="Nothing" /> in Visual Basic) if the property has not been set.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject.Parent">
      <summary>Gets the parent of the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject" />.</summary>
      <returns>The <see cref="T:System.Windows.Forms.AccessibleObject" /> that represents the parent of the current <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject" /> or a null reference (<see langword="Nothing" /> in Visual Basic) if there it no parent accessible object.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject.Role">
      <summary>Gets the role of the current <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject" />.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.AccessibleRole" /> values, or <see cref="F:System.Windows.Forms.AccessibleRole.None" /> if no role has been specified.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject.State">
      <summary>Gets the accessible state of the current <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject" />.</summary>
      <returns>A combination of <see cref="T:System.Windows.Forms.AccessibleStates" /> values.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs.AmbientTheme">
      <summary>Gets the <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" /> associated with the root workflow.</summary>
      <returns>An <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" /> that contains theme information for the designer.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs.DesignerTheme">
      <summary>Gets the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" /> associated with the designer.</summary>
      <returns>An <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" /> that describes the designer look and feel.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs.Graphics">
      <summary>Gets the <see cref="T:System.Drawing.Graphics" /> used to lay out the designer.</summary>
      <returns>The <see cref="T:System.Drawing.Graphics" /> object used to lay out the designer.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs.AmbientTheme">
      <summary>Gets the <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" /> associated with the workflow design surface.</summary>
      <returns>An <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" /> that contains theme information for the workflow.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs.ClipRectangle">
      <summary>Gets the <see cref="T:System.Drawing.Rectangle" /> in which to draw.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that describes the area to draw.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs.DesignerTheme">
      <summary>Gets the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" /> associated with the designer.</summary>
      <returns>An <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" /> that describes the designer look and feel.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs.Graphics">
      <summary>Gets the <see cref="T:System.Drawing.Graphics" /> used to draw the item on the workflow design surface.</summary>
      <returns>The <see cref="T:System.Drawing.Graphics" /> used to draw the item on the workflow design surface.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs.Bounds">
      <summary>Gets the new bounding rectangle for the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> on the workflow design surface.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that represents the new bounds of the activity designer.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs.SizingEdge">
      <summary>Gets the designer edge used to resize the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> on the workflow design surface.</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.Design.DesignerEdges" /> used to resize the activity designer on the workflow design surface.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BackColorEnd">
      <summary>Gets or sets the <see cref="T:System.Drawing.Color" /> to end with when using a color gradient for the background color.</summary>
      <returns>The background ending <see cref="T:System.Drawing.Color" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BackColorStart">
      <summary>Gets or sets the starting color of the background when using a color gradient on the background.</summary>
      <returns>The background starting <see cref="T:System.Drawing.Color" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BackgroundStyle">
      <summary>Gets or sets the background style.</summary>
      <returns>A <see cref="T:System.Drawing.Drawing2D.LinearGradientMode" /> that describes the background style.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BoldFont">
      <summary>Gets the font for the theme.</summary>
      <returns>The <see cref="T:System.Drawing.Font" /> of the theme.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BorderColor">
      <summary>Gets or sets the <see cref="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BorderColor" /> for the theme.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the <see cref="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BorderColor" /> of the theme.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BorderPen">
      <summary>Gets the BorderPen for the theme.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> that represents the <see cref="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BorderPen" /> of the theme.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BorderStyle">
      <summary>Gets or sets the style used for the border.</summary>
      <returns>A <see cref="T:System.Drawing.Drawing2D.DashStyle" /> enumeration that represents the style used for the border.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BorderWidth">
      <summary>Gets the width of the border in pixels.</summary>
      <returns>The width of the border in pixels.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.DesignerGeometry">
      <summary>Gets the geometry of the designer.</summary>
      <returns>An enumeration that describes the geometry of the designer.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.DesignerImage">
      <summary>Gets the image associated with the designer.</summary>
      <returns>The <see cref="T:System.Drawing.Image" /> to display for the designer.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.DesignerImagePath">
      <summary>Gets or sets the image path for the designer.</summary>
      <returns>The image path for the designer.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.Font">
      <summary>Gets the font of the text used by the theme.</summary>
      <returns>The font of the designer theme.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.ForeColor">
      <summary>Gets or sets the color of the foreground.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the foreground color of the theme.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.ForegroundBrush">
      <summary>Gets the <see cref="T:System.Drawing.Brush" /> object associated with the theme.</summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> object associated with the theme.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.ForegroundPen">
      <summary>Gets the <see cref="T:System.Drawing.Pen" /> used for painting the foreground of the theme.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> that is used to paint the foreground of the theme.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.ImageSize">
      <summary>Gets the size of the image of the theme.</summary>
      <returns>A <see cref="T:System.Drawing.Size" /> that represents the size of the image.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.Size">
      <summary>Gets the size of the designer.</summary>
      <returns>A <see cref="T:System.Drawing.Size" /> that represents the size of the designer.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerThemeAttribute.DesignerThemeType">
      <summary>Gets the type of the theme class that encapsulates the designer theme settings to apply to the activity designer.</summary>
      <returns>A <see cref="T:System.Type" /> that encapsulates the designer theme settings.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerThemeAttribute.Xml">
      <summary>Gets or sets an XML string that defines default property settings for the activity designer.</summary>
      <returns>A string that contains the default theme property settings in XML format.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerVerb.CommandID">
      <summary>Gets a new <see cref="T:System.ComponentModel.Design.CommandID" /> for an <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerb" />.</summary>
      <returns>A new <see cref="P:System.Workflow.ComponentModel.Design.ActivityDesignerVerb.CommandID" /> object.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerVerb.Group">
      <summary>Gets the <see cref="T:System.Workflow.ComponentModel.Design.DesignerVerbGroup" /> associated with the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerb" />.</summary>
      <returns>A <see cref="T:System.Workflow.ComponentModel.Design.DesignerVerbGroup" /> object.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerVerb.OleStatus">
      <summary>Gets an integer that describes the status of the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerb" />.</summary>
      <returns>An <see langword="int" /> that describes the <see langword="OleStatus" /> of the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerb" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDragEventArgs.Activities">
      <summary>Gets a collection of activities upon which a drag-and-drop operation is performed.</summary>
      <returns>A read-only collection that contains all <see cref="T:System.Workflow.ComponentModel.Activity" /> objects on which the drag-and-drop operation is performed.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDragEventArgs.DragImageSnapPoint">
      <summary>Gets or sets the location where the activities are to be dropped on the workflow design surface.</summary>
      <returns>A <see cref="T:System.Drawing.Point" /> that defines the location on the workflow design surface where the activities will be dropped.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDragEventArgs.DragInitiationPoint">
      <summary>Gets the <see cref="T:System.Drawing.Point" /> on the workflow design surface where a drag operation began.</summary>
      <returns>A <see cref="T:System.Drawing.Point" /> that defines the location on the workflow design surface where the drag operation began.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.AccessibilityObject">
      <summary>Gets an <see cref="T:System.Windows.Forms.AccessibleObject" /> that allows the designer to adjust its UI for users with disabilities.</summary>
      <returns>An <see cref="T:System.Windows.Forms.AccessibleObject" /> that allows the <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> to adjust its UI for users who have impairments.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.ContainedDesigners">
      <summary>Gets a collection of activity designers that are displayed by the activity preview designer.</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> read-only collection that contains the designers displayed by <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.CurrentDropTarget">
      <summary>Gets or sets the index of the current drop target in the array of drop targets returned by <see cref="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.GetDropTargets(System.Drawing.Point)" />.</summary>
      <returns>An integer that represents the index of the current drop target for the designer.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.FirstSelectableObject">
      <summary>Gets the first selectable object in the navigation order of the <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" />.</summary>
      <returns>An <see cref="T:System.Object" /> that is the first selectable object in the designer navigation order.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.Glyphs">
      <summary>Gets a read-only collection of glyphs that are associated with the <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" />.</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.Design.DesignerGlyph" /> read-only collection that contains the glyphs associated with the <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.HelpText">
      <summary>Gets or sets the text to display when the <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> contains no other activity designers. </summary>
      <returns>A string that contains the text to display on the designer surface</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.LastSelectableObject">
      <summary>Gets the last selectable object in the navigation order of the <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" />.</summary>
      <returns>The <see cref="T:System.Object" /> that is the last selectable object in the designer navigation order.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.Location">
      <summary>Gets or sets the location of the designer in logical coordinates on the workflow design surface.</summary>
      <returns>A <see cref="T:System.Drawing.Point" /> that contains the x- and y-coordinates associated with the <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> on the workflow design surface.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.PreviewedDesigner">
      <summary>Gets the designer to preview in the preview section of the activity designer.</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> to display in the preview section of the <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" />.  </returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.ShowPreview">
      <summary>Gets or sets a value indicating whether the activity preview should be displayed in the designer. </summary>
      <returns>
          <see langword="true" /> to display the activity preview in the <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" />; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.Verbs">
      <summary>Gets the collection of verbs to associate with the <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" />.</summary>
      <returns>An <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerbCollection" /> that contains the verbs associated with <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityPreviewDesignerTheme.PreviewBackColor">
      <summary>Gets or sets the color set to associate with the background of the activity preview section of the designer.</summary>
      <returns>The <see cref="T:System.Drawing.Color" /> to associate with the background of the activity preview section of the designer.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityPreviewDesignerTheme.PreviewBorderColor">
      <summary>Gets or sets the color set to associate with the border of the activity preview section of the designer.</summary>
      <returns>The <see cref="T:System.Drawing.Color" /> to associate with the border of the activity preview section of the designer.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityPreviewDesignerTheme.PreviewForeColor">
      <summary>Gets or sets the color set to associate with the foreground of the activity preview section of the designer.</summary>
      <returns>The <see cref="T:System.Drawing.Color" /> to associate with the foreground of the activity preview section of the designer.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.BackColor">
      <summary>Gets or sets the ambient back color on a workflow design surface. </summary>
      <returns>A <see cref="T:System.Drawing.Color" /> value that represents the ambient background color. The default is white.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.BackgroundBrush">
      <summary>Gets the ambient brush used to fill graphical shapes displayed on the workflow design surface. </summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> value that represents the background brush of the workflow on a design surface. </returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.BoldFont">
      <summary>Gets the ambient bold font setting for the workflow design surface.</summary>
      <returns>A <see cref="T:System.Drawing.Font" /> value that determines whether the text on the workflow design surface is bold. </returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.BorderWidth">
      <summary>Gets the ambient border width for objects that are placed onto the workflow design surface. </summary>
      <returns>An integer that represents the border width of objects placed on the workflow design surface.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.CommentIndicatorBrush">
      <summary>Gets the ambient brush associated with commented designers on the workflow design surface. </summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> that is associated with commented designers on the workflow design surface.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.CommentIndicatorColor">
      <summary>Gets or sets the ambient color associated with commented designers on the workflow design surface. </summary>
      <returns>A <see cref="T:System.Drawing.Color" /> value that is associated with commented designers on the workflow design surface.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.CommentIndicatorPen">
      <summary>Gets the ambient pen associated with commented designers on the workflow design surface. </summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> value that is associated with commented designers on the workflow design surface. </returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.DesignerSize">
      <summary>Gets or sets the ambient size settings for activity designers on the workflow design surface. </summary>
      <returns>A <see cref="T:System.Workflow.ComponentModel.Design.DesignerSize" /> enumeration value that determines the size of activity designers on the workflow design surface. The default value is <see cref="F:System.Workflow.ComponentModel.Design.DesignerSize.Medium" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.DrawGrayscale">
      <summary>Gets or sets a value indicating whether the ambient theme associated with the workflow design surface draws grayscales. </summary>
      <returns>
          <see langword="true" /> if the ambient theme associated with the workflow draws grayscales; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.DrawRounded">
      <summary>Gets or sets a value indicating whether the ambient theme associated with the workflow design surface draws rounded shapes. </summary>
      <returns>
          <see langword="true" /> if the ambient theme associated with the workflow draws rounded shapes; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.DrawShadow">
      <summary>Gets or sets a value indicating whether the ambient theme associated with the workflow design surface draws shadows.</summary>
      <returns>
          <see langword="true" /> if the ambient theme associated with the workflow draws shadows; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.DropIndicatorBrush">
      <summary>Gets the ambient brush associated with an object that you drag onto the workflow design surface. </summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> associated with an object that you drag onto the workflow design surface. </returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.DropIndicatorColor">
      <summary>Gets or sets the ambient color associated with an object that you drags onto the workflow design surface. </summary>
      <returns>A <see cref="T:System.Drawing.Color" /> value associated with an object that you drag onto the workflow design surface. </returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.DropIndicatorPen">
      <summary>Gets the ambient pen associated with an object that you drag onto the workflow design surface. </summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> associated with an object that you drag onto the workflow design surface.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.Font">
      <summary>Gets the ambient font settings for the workflow design surface. </summary>
      <returns>A <see cref="T:System.Drawing.Font" /> that represents the ambient font settings for the workflow design surface.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.FontName">
      <summary>Gets or sets the ambient font name for the workflow design surface. </summary>
      <returns>A string that represents the ambient font name for the workflow design surface.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.ForeColor">
      <summary>Gets or sets the ambient fore color property for the workflow design surface. </summary>
      <returns>A <see cref="T:System.Drawing.Color" /> value that represents the ambient fore color for the workflow design surface.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.ForegroundBrush">
      <summary>Gets the ambient foreground brush for the workflow design surface. </summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> value that represents the ambient foreground brush.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.ForegroundPen">
      <summary>Gets the ambient foreground pen for the workflow design surface. </summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> value that represents the ambient foreground pen.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.GlyphSize">
      <summary>Gets the ambient height and width of glyphs on the workflow design surface. </summary>
      <returns>A <see cref="T:System.Drawing.Size" /> value that represents the ambient height and width of glyphs on the workflow design surface.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.GridColor">
      <summary>Gets or sets the ambient grid color for the workflow design surface.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> value that represents the grid color for the workflow design surface.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.GridSize">
      <summary>Gets the ambient size of the grid to display on the workflow design surface.</summary>
      <returns>A <see cref="T:System.Drawing.Size" /> value that represents the height and width of the grid to display on the workflow design surface.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.GridStyle">
      <summary>Gets or sets the ambient grid style for the workflow design surface.</summary>
      <returns>A <see cref="T:System.Drawing.Drawing2D.DashStyle" /> value that represents the dash style for the grid. The default setting is <see cref="F:System.Drawing.Drawing2D.DashStyle.Dash" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.MajorGridBrush">
      <summary>Gets the ambient brush settings for major grids on the workflow design surface. </summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> associated with the major grid on the workflow design surface.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.MajorGridPen">
      <summary>Gets the ambient pen settings for major grids on the workflow design surface.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> associated with the major grid on the workflow design surface.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.Margin">
      <summary>Gets the ambient margin settings for the workflow design surface.</summary>
      <returns>A <see cref="T:System.Drawing.Size" /> that represents the margin settings on the workflow design surface.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.MinorGridPen">
      <summary>Gets the ambient pen settings for minor grids on the workflow design surface.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> associated with the minor grid on the workflow design surface.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.ReadonlyIndicatorBrush">
      <summary>Gets the ambient brush used to fill graphical shapes associated with read-only items displayed on the workflow design surface. </summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> that represents the brush associated with read-only items on the workflow on a design surface.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.ReadonlyIndicatorColor">
      <summary>Gets or sets the ambient color for read-only items on the workflow design surface.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> value that represents the ambient color for read-only items on the workflow design surface.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.SelectionForeColor">
      <summary>Gets or sets the ambient color for selected items on the workflow design surface.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> value that represents the ambient color for read-only items on the workflow design surface.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.SelectionForegroundBrush">
      <summary>Gets the ambient foreground brush used to fill graphical shapes associated with selected items displayed on the workflow design surface. </summary>
      <returns>A <see cref="T:System.Drawing.Brush" /> that represents the brush associated with read-only items on the workflow on a design surface.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.SelectionForegroundPen">
      <summary>Gets the ambient foreground pen settings for selected items on the workflow design surface.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> associated with the foreground of selected items on the workflow design surface.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.SelectionPatternColor">
      <summary>Gets or sets the ambient pattern color for items that you select on the workflow design surface.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> value that represents the ambient pattern color for items that you select on the workflow design surface.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.SelectionPatternPen">
      <summary>Gets the ambient pen settings for the pattern associated with selected items on the workflow design surface.</summary>
      <returns>A <see cref="T:System.Drawing.Pen" /> associated with the pattern of selected items on the workflow design surface.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.SelectionSize">
      <summary>Gets the ambient size of a selected item on the workflow design surface. </summary>
      <returns>A <see cref="T:System.Drawing.Size" /> that represents the ambient property settings for selected items on the workflow design surface.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.ShowConfigErrors">
      <summary>Gets or sets a value that indicates whether the workflow design surface displays configuration errors.</summary>
      <returns>
          <see langword="true" /> if the workflow design surface is to display configuration errors; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.ShowDesignerBorder">
      <summary>Gets or sets a value indicating whether the workflow design surface displays designer borders. </summary>
      <returns>
          <see langword="true" /> if the workflow design surface displays designer borders; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.ShowGrid">
      <summary>Gets or sets a value indicating whether grids will be shown on the workflow design surface. </summary>
      <returns>
          <see langword="true" /> if grids will be displayed on the workflow design surface; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.TextQuality">
      <summary>Gets or sets the text quality to display on the workflow design surface.</summary>
      <returns>A <see cref="T:System.Workflow.ComponentModel.Design.TextQuality" /> that specifies the text quality settings to use on the workflow design surface.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.UseOperatingSystemSettings">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" /> uses the theme settings of the operating system. </summary>
      <returns>
          <see langword="true" /> if the <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" /> uses theme settings of the operating system; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.WatermarkAlignment">
      <summary>Gets or sets the ambient alignment settings for watermark images on the workflow design surface.</summary>
      <returns>A <see cref="T:System.Workflow.ComponentModel.Design.DesignerContentAlignment" /> that specifies the ambient alignment settings for watermark images on the workflow design surface. The default is <see cref="F:System.Workflow.ComponentModel.Design.DesignerContentAlignment.BottomRight" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.WatermarkImagePath">
      <summary>Gets or sets the ambient path to the image to display as a watermark on the workflow design surface.</summary>
      <returns>A string that contains the ambient path to the image to display as a watermark on the workflow design surface. The default is an empty string.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.WorkflowWatermarkImage">
      <summary>Gets the ambient image to associate with the workflow design surface as its watermark.</summary>
      <returns>An <see cref="T:System.Drawing.Image" /> to use as a watermark on the workflow design surface.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CommentGlyph.Priority">
      <summary>Gets the view priority of the glyph on the activity designer.</summary>
      <returns>An integer that represents the view priority of the glyph on the activity designer.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.AccessibilityObject">
      <summary>Gets a <see cref="T:System.Windows.Forms.AccessibleObject" /> that accessibility applications use to adjust the application look and feel for people with disabilities.</summary>
      <returns>The <see cref="T:System.Windows.Forms.AccessibleObject" /> associated with the control.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanExpandCollapse">
      <summary>Gets a value that indicates whether the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> can be collapsed.</summary>
      <returns>
          <see langword="true" /> if the specified composite activity designer can be collapsed; otherwise <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ContainedDesigners">
      <summary>Gets the array of <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> contained within the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />.</summary>
      <returns>The read-only collection of <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ExpandButtonRectangle">
      <summary>Gets the <see cref="T:System.Drawing.Rectangle" /> that contains the expand or collapse button.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that encloses the expand or collapse button.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Expanded">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> is expanded.</summary>
      <returns>
          <see langword="true" /> if the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> is expanded; otherwise <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.FirstSelectableObject">
      <summary>Gets the first selectable object in the navigation order of the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />.</summary>
      <returns>The first selectable object contained within the designer.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Glyphs">
      <summary>Gets a collection of glyphs with which to adorn the composite activity designer.</summary>
      <returns>An <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection" /> that contains the glyphs to display on the designer.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ImageRectangle">
      <summary>Gets the value for the enclosing bounds of the image associated with the designer in logical coordinates.</summary>
      <returns>A rectangle that encloses the <see cref="T:System.Drawing.Image" /> displayed for the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.IsEditable">
      <summary>Gets a value that indicates whether the designer can be edited.</summary>
      <returns>
          <see langword="true" /> if the designer can be edited; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.LastSelectableObject">
      <summary>Gets the last selectable object contained within the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />.</summary>
      <returns>The last selectable object contained within the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Location">
      <summary>Gets or sets the location of the designer in logical coordinates.</summary>
      <returns>The location of the designer in logical coordinates.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.TextRectangle">
      <summary>Gets the value of the description rectangle in logical coordinates.</summary>
      <returns>The value of the description rectangle in logical coordinates.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.TitleHeight">
      <summary>Gets the height of the title area of the designer.</summary>
      <returns>The height in pixels of the title area of the designer.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeDesignerAccessibleObject.State">
      <summary>Gets the accessible state of the current <see cref="T:System.Workflow.ComponentModel.Design.CompositeDesignerAccessibleObject" />.</summary>
      <returns>A combination of <see cref="T:System.Windows.Forms.AccessibleStates" /> values.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeDesignerTheme.ConnectorEndCap">
      <summary>Gets or sets a value that determines the shape that appears at the end of a connector.</summary>
      <returns>A <see cref="T:System.Workflow.ComponentModel.Design.LineAnchor" /> enumeration value that defines the shape that appears at the end of the connector. The default value is <see cref="F:System.Workflow.ComponentModel.Design.LineAnchor.ArrowAnchor" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeDesignerTheme.ConnectorSize">
      <summary>Gets the <see cref="T:System.Drawing.Size" /> of the connector.</summary>
      <returns>A <see cref="T:System.Drawing.Size" /> object that contains information about the height and width of the connector. </returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeDesignerTheme.ConnectorStartCap">
      <summary>Gets or sets a value that determines the shape that appears at the beginning of a connector.</summary>
      <returns>A <see cref="T:System.Workflow.ComponentModel.Design.LineAnchor" /> enumeration value that defines the shape that appears at the beginning of the connector. The default value is <see cref="F:System.Workflow.ComponentModel.Design.LineAnchor.None" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeDesignerTheme.ExpandButtonSize">
      <summary>Gets the <see cref="T:System.Drawing.Size" /> of the expand button on the composite activity designer.</summary>
      <returns>A <see cref="T:System.Drawing.Size" /> object that contains information about the height and width of the expand button on the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />. </returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeDesignerTheme.ShowDropShadow">
      <summary>Gets or sets a value indicating whether the composite designer theme will display drop shadows around the composite activity designer. </summary>
      <returns>
          <see langword="true" /> if the <see cref="T:System.Workflow.ComponentModel.Design.CompositeDesignerTheme" /> displays drop shadows around the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeDesignerTheme.WatermarkAlignment">
      <summary>Gets or sets the alignment of the watermark image in the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />.</summary>
      <returns>A <see cref="T:System.Workflow.ComponentModel.Design.DesignerContentAlignment" /> enumeration value that indicates where in the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> the watermark image will be placed. The default value is <see cref="F:System.Workflow.ComponentModel.Design.DesignerContentAlignment.BottomRight" />. </returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeDesignerTheme.WatermarkImage">
      <summary>Gets the watermark image to use on the composite activity designer.</summary>
      <returns>The <see cref="T:System.Drawing.Image" /> object to use as the watermark for the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeDesignerTheme.WatermarkImagePath">
      <summary>Gets or sets the relative path to the watermark image to use on the composite activity designer.</summary>
      <returns>A string value that represents the relative path to the watermark image to use on the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ConfigErrorGlyph.CanBeActivated">
      <summary>Gets a value indicating whether the <see cref="T:System.Workflow.ComponentModel.Design.ConfigErrorGlyph" /> can gain focus on the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> with which it is associated. </summary>
      <returns>
          <see langword="true" /> if the designer glyph can be activated; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ConfigErrorGlyph.Priority">
      <summary>Gets the priority setting for the glyph on the activity designer surface.</summary>
      <returns>An integer value that represents the priority setting for the <see cref="T:System.Workflow.ComponentModel.Design.ConfigErrorGlyph" /> on the activity design surface.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ConnectionPoint.AssociatedDesigner">
      <summary>Gets the activity designer to which the connection point belongs.</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> to which the connection point belongs.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ConnectionPoint.Bounds">
      <summary>Gets the bounding rectangle for the connection point.</summary>
      <returns>The <see cref="T:System.Drawing.Rectangle" /> that bounds the <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ConnectionPoint.ConnectionEdge">
      <summary>Gets the designer edge on which the connection point appears.</summary>
      <returns>A <see cref="T:System.Workflow.ComponentModel.Design.DesignerEdges" /> that specifies the activity designer edge on which the <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> appears. </returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ConnectionPoint.ConnectionIndex">
      <summary>Gets the connection index for the current <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" />.</summary>
      <returns>An integer that represents the connection index for the current <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ConnectionPoint.Location">
      <summary>Gets a point that represents the logical location of the <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> on the associated <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</summary>
      <returns>The <see cref="T:System.Drawing.Point" /> that represents the logical location of the <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> on the associated <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.Connector.AccessibilityObject">
      <summary>Gets an <see cref="T:System.Windows.Forms.AccessibleObject" /> that accessibility applications use to adjust the application UI for users who have impairments.</summary>
      <returns>An <see cref="T:System.Windows.Forms.AccessibleObject" /> that accessibility applications use to adjust the application UI for users who have impairments.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.Connector.Bounds">
      <summary>Gets the bounding rectangle for the connector on the workflow design surface.</summary>
      <returns>The <see cref="T:System.Drawing.Rectangle" /> that bounds the connector on the workflow design surface.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.Connector.ConnectorModified">
      <summary>Gets the value that indicates whether the <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> is modified.</summary>
      <returns>
          <see langword="true" /> if the connector is modified; otherwise <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.Connector.ConnectorSegments">
      <summary>Gets a read-only collection of points that contains all segments found in the <see cref="T:System.Workflow.ComponentModel.Design.Connector" />.</summary>
      <returns>A <see cref="T:System.Drawing.Point" /> read-only collection that contains all segments found in the <see cref="T:System.Workflow.ComponentModel.Design.Connector" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.Connector.ExcludedRoutingRectangles">
      <summary>Returns an empty array of Rectangle object. Derived classes populate this collection.</summary>
      <returns>A generic collection of Rectangle objects.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.Connector.ParentDesigner">
      <summary>Gets the designer on which the connecter appears on the workflow design surface.</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> on which the connector appears on the workflow design surface.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.Connector.ParentView">
      <summary>Gets the workflow view associated with the connector.</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> that is associated with the connector.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.Connector.Source">
      <summary>Gets or sets the <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> where drawing of the <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> begins.</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> where drawing of the <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> begins.</returns>
      <exception cref="T:System.ArgumentException">When setting this property the source <see cref="P:System.Workflow.ComponentModel.Design.ConnectionPoint.AssociatedDesigner" /> does not match the target associated designer.  </exception>
      <exception cref="T:System.ArgumentNullException">
              <see cref="P:System.Workflow.ComponentModel.Design.Connector.Source" /> was set to a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.Connector.Target">
      <summary>Gets or sets the <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> where drawing of the <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> ends.</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> where drawing of the <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> ends.</returns>
      <exception cref="T:System.ArgumentException">When setting this property the source <see cref="P:System.Workflow.ComponentModel.Design.ConnectionPoint.AssociatedDesigner" /> does not match the target associated designer.  </exception>
      <exception cref="T:System.ArgumentNullException">
              <see cref="P:System.Workflow.ComponentModel.Design.Connector.Target" /> was set to a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ConnectorAccessibleObject.Bounds">
      <summary>Gets the location and size of the accessible object.</summary>
      <returns>Rectangle containing location and size information for the accessible object</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ConnectorAccessibleObject.Name">
      <summary>Gets or sets the object name.</summary>
      <returns>String value representing the name of the accessible object</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ConnectorAccessibleObject.Parent">
      <summary>Gets the parent of an accessible object.</summary>
      <returns>Parent object for the accessible object</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ConnectorAccessibleObject.Role">
      <summary>Gets the role of this accessible object.</summary>
      <returns>One of the values of AccessibleRole.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ConnectorEventArgs.Connector">
      <summary>Gets the connector object that is passed as a part of <see cref="T:System.Workflow.ComponentModel.Design.ConnectorEventArgs" />.</summary>
      <returns>A <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> object passed as part of <see cref="T:System.Workflow.ComponentModel.Design.ConnectorEventArgs" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ConnectorHitTestInfo.Bounds">
      <summary>Gets the bounding rectangle for the connector that was clicked.</summary>
      <returns>The <see cref="T:System.Drawing.Rectangle" /> that bounds the connector that was clicked.  </returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ConnectorHitTestInfo.SelectableObject">
      <summary>Gets a selectable object associated with the hit area.</summary>
      <returns>A selectable <see cref="T:System.Object" /> associated with the area where the user clicked. </returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.DesignerAction.ActionId">
      <summary>Gets the identifier for the designer action.</summary>
      <returns>An integer that represents the identifier for the <see cref="T:System.Workflow.ComponentModel.Design.DesignerAction" /> object.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.DesignerAction.Image">
      <summary>Gets the image associated with the designer action.</summary>
      <returns>An <see cref="T:System.Drawing.Image" /> that is associated with the <see cref="T:System.Workflow.ComponentModel.Design.DesignerAction" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.DesignerAction.PropertyName">
      <summary>Represents the name of the property that the <see cref="T:System.Workflow.ComponentModel.Design.DesignerAction" /> is associated with.</summary>
      <returns>A <see cref="T:System.String" /> that contains the name of the property.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.DesignerAction.Text">
      <summary>Gets the text associated with the designer action.</summary>
      <returns>A string value that represents the text associated with the <see cref="T:System.Workflow.ComponentModel.Design.DesignerAction" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.DesignerAction.UserData">
      <summary>Gets a dictionary of user data associated with the designer action.</summary>
      <returns>An <see cref="T:System.Collections.IDictionary" /> that represents the user data associated with the <see cref="T:System.Workflow.ComponentModel.Design.DesignerAction" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.DesignerGlyph.CanBeActivated">
      <summary>Gets a value indicating whether the <see cref="T:System.Workflow.ComponentModel.Design.DesignerGlyph" /> can gain focus on the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> with which it is associated. </summary>
      <returns>
          <see langword="true" /> if the designer glyph can be activated; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.DesignerGlyph.Priority">
      <summary>Gets the priority setting for the designer glyph on the activity design surface.</summary>
      <returns>An integer value that represents the priority setting for the <see cref="T:System.Workflow.ComponentModel.Design.DesignerGlyph" /> on the activity designer surface. A lower value indicates a higher priority and therefore draws the glyph at the top-most Z order position on an activity designer.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.DesignerTheme.ApplyTo">
      <summary>Gets or sets the unqualified name of the designer type to which the designer theme is applied. </summary>
      <returns>The name of the designer type to which the designer theme is applied.</returns>
      <exception cref="T:System.Data.ReadOnlyException">A user attempted a set operation when the <see cref="P:System.Workflow.ComponentModel.Design.DesignerTheme.ReadOnly" /> property was set to <see langword="true" />.</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.DesignerTheme.ContainingTheme">
      <summary>Gets the workflow theme that encapsulates the designer theme. </summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" /> object associated with the <see cref="T:System.Workflow.ComponentModel.Design.DesignerTheme" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.DesignerTheme.DesignerType">
      <summary>Gets or sets the type of the designer associated with the designer theme.</summary>
      <returns>A <see cref="T:System.Type" /> that represents the designer to be associated with the current designer theme.</returns>
      <exception cref="T:System.Data.ReadOnlyException">A user attempted a set operation when the <see cref="P:System.Workflow.ComponentModel.Design.DesignerTheme.ReadOnly" /> property was set to <see langword="true" />.</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.DesignerTheme.ReadOnly">
      <summary>Gets a value that indicates whether the designer theme is read-only. </summary>
      <returns>
          <see langword="true" /> if <see cref="T:System.Workflow.ComponentModel.Design.DesignerTheme" /> is read-only; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.DesignerView.AssociatedDesigner">
      <summary>Gets the activity designer associated with the designer view.</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> associated with the <see cref="T:System.Workflow.ComponentModel.Design.DesignerView" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.DesignerView.Image">
      <summary>Gets the image associated with the designer view.</summary>
      <returns>The <see cref="T:System.Drawing.Image" /> associated with the <see cref="T:System.Workflow.ComponentModel.Design.DesignerView" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.DesignerView.Text">
      <summary>Gets the name of the designer view.</summary>
      <returns>A string that contains the name of the <see cref="T:System.Workflow.ComponentModel.Design.DesignerView" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.DesignerView.UserData">
      <summary>Gets the dictionary of user data associated with the designer view.</summary>
      <returns>An <see cref="T:System.Collections.IDictionary" /> that contains the user data associated with the <see cref="T:System.Workflow.ComponentModel.Design.DesignerView" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.DesignerView.ViewId">
      <summary>Gets the identifier associated with the designer view.</summary>
      <returns>An integer that contains the identifier for the <see cref="T:System.Workflow.ComponentModel.Design.DesignerView" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.AccessibilityObject">
      <summary>Gets an <see cref="T:System.Windows.Forms.AccessibleObject" /> that accessibility applications use to adjust the application UI for users who have impairments.</summary>
      <returns>The <see cref="T:System.Windows.Forms.AccessibleObject" /> associated with the control.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.AutoSize">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> is resized automatically when a user resizes the designer's child designers. </summary>
      <returns>
          <see langword="true" /> if the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> is resized automatically; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.AutoSizeMargin">
      <summary>Gets or sets the margin size to render around the child designers when the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> is automatically resized.</summary>
      <returns>A <see cref="T:System.Drawing.Size" /> that represents the size of the margin to render around the child designers of the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.AutoSizeMode">
      <summary>Gets or sets the <see cref="T:System.Windows.Forms.AutoSizeMode" /> settings for the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" />.</summary>
      <returns>The <see cref="T:System.Windows.Forms.AutoSizeMode" /> for the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" />. The default setting is <see cref="F:System.Windows.Forms.AutoSizeMode.GrowOnly" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.CanExpandCollapse">
      <summary>Gets a value that indicates whether the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> can be collapsed on a workflow design surface.</summary>
      <returns>
          <see langword="true" /> if the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> can be collapsed; otherwise <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.Connectors">
      <summary>Gets a read-only collection of connectors that are associated with the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" />.</summary>
      <returns>A read-only collection that contains all <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> objects associated with the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.EnableUserDrawnConnectors">
      <summary>Gets or sets a value that indicates whether users can drag and draw connectors on the free-form activity designer surface. </summary>
      <returns>
          <see langword="true" /> if users can drag and draw connectors on the free-form activity designer surface; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.EnableVisualResizing">
      <summary>Gets a value that indicates whether the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> can be visually resized on the workflow design surface. </summary>
      <returns>
          <see langword="true" /> if the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> can be visually resized; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.FirstSelectableObject">
      <summary>Gets the first selectable object in the navigation order of the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" />.</summary>
      <returns>The first selectable object in the navigation order of the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.Glyphs">
      <summary>Gets the collection of glyphs that are displayed on the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" />.</summary>
      <returns>An <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection" /> that contains the glyphs displayed on the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.LastSelectableObject">
      <summary>Gets the last selectable object in the navigation order of the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" />.</summary>
      <returns>The <see cref="T:System.Object" /> that is the last selectable object in the designer navigation order.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.Location">
      <summary>Gets or sets the location of the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> in logical coordinates.</summary>
      <returns>A <see langword="Point" /> that represents the location of the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> in logical coordinates.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.MinimumSize">
      <summary>Gets the minimum size settings for the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" />.</summary>
      <returns>A <see cref="T:System.Drawing.Size" /> that represents the smallest possible size for the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" />. </returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.ShowConnectorsInForeground">
      <summary>Gets a value that indicates whether the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> draws connectors in the foreground of its design surface. </summary>
      <returns>
          <see langword="true" /> if the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> draws connectors in the foreground of its design surface; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.HitTestInfo.AssociatedDesigner">
      <summary>Gets the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> associated with the <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> class. </summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> associated with the <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> class. </returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.HitTestInfo.Bounds">
      <summary>Returns the bounds of the area hit.</summary>
      <returns>A rectangle that encloses the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> associated with the <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> object or an empty rectangle if the <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> object is not associated with a designer.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.HitTestInfo.HitLocation">
      <summary>Contains information about where the hit occurred.</summary>
      <returns>A <see cref="T:System.Workflow.ComponentModel.Design.HitTestLocations" /> that describes the area hit.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.HitTestInfo.Nowhere">
      <summary>Gets an empty <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" />.</summary>
      <returns>An empty <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.HitTestInfo.SelectableObject">
      <summary>Gets a selectable object associated with the hit area.</summary>
      <returns>A selectable object associated with the hit area or a null reference (<see langword="Nothing" /> in Visual Basic) if no designer is associated with the <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.HitTestInfo.UserData">
      <summary>Gets the user data associated with the <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" />.</summary>
      <returns>A new dictionary for user data, or a reference to the existing user data.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.IDesignerGlyphProviderService.GlyphProviders">
      <summary>Gets a generic read-only collection of designer glyph providers.</summary>
      <returns>An <see cref="T:System.Workflow.ComponentModel.Design.IDesignerGlyphProvider" /> read-only collection.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.IDesignerVerbProviderService.VerbProviders">
      <summary>Gets an <see cref="T:System.Workflow.ComponentModel.Design.IDesignerVerbProvider" /> read-only collection.</summary>
      <returns>An <see cref="T:System.Workflow.ComponentModel.Design.IDesignerVerbProvider" /> read-only collection. </returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ITypeFilterProvider.FilterDescription">
      <summary>Gets the description for the filter to be displayed on the class browser dialog box.</summary>
      <returns>A string value that contains the description of the filter.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.InvokingDesigner">
      <summary>Gets or sets the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> that requested the workflow root designer to be initialized.</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> that requested the workflow root designer to be initialized.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.MessageFilters">
      <summary>Gets any message filters associated with the workflow root designer. </summary>
      <returns>A WorkflowDesignerMessageFilter read-only collection that contains any message filters associated with the workflow root designer.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.SupportsLayoutPersistence">
      <summary>Gets the value that indicates whether the actual workflow root designer supports the layout persistence.</summary>
      <returns>
          <see langword="true" /> when the designer supports layout persistence; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.LockedActivityGlyph.Priority">
      <summary>Gets the priority setting for the glyph on the activity design surface.</summary>
      <returns>An integer value that represents the priority setting for the <see cref="T:System.Workflow.ComponentModel.Design.LockedActivityGlyph" /> on the activity design surface.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.FirstSelectableObject">
      <summary>Gets the first selectable object in the navigation order of the <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" />.</summary>
      <returns>An <see cref="T:System.Object" /> that is the first selectable object in the designer navigation order.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.LastSelectableObject">
      <summary>Gets the last selectable object in the navigation order of the <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" />.</summary>
      <returns>The <see cref="T:System.Object" /> that is the last selectable object in the designer navigation order.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.Verbs">
      <summary>Gets the collection of designer verbs to be associated with the <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" />.</summary>
      <returns>An <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerbCollection" /> that contains the designer verbs to associate with the <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" />. </returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ReadOnlyActivityGlyph.Priority">
      <summary>Gets the priority setting for the glyph on the activity designer surface.</summary>
      <returns>An integer value that represents the priority setting for the <see cref="T:System.Workflow.ComponentModel.Design.ReadOnlyActivityGlyph" /> on the activity designer surface.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SelectionGlyph.IsPrimarySelection">
      <summary>When overridden in a derived class, gets a value indicating whether the selection glyph is the primary of all selected glyphs on the design surface. </summary>
      <returns>
          <see langword="true" /> if the selection glyph is the primary selected glyph on the activity designer; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SelectionGlyph.Priority">
      <summary>Gets the view priority of the glyph on the activity designer.</summary>
      <returns>An integer that represents the view priority of the glyph on the activity designer.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialActivityDesigner.AccessibilityObject">
      <summary>Gets an <see cref="T:System.Windows.Forms.AccessibleObject" /> that allows the <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" /> to adjust its UI for users who have disabilities. </summary>
      <returns>The <see cref="T:System.Windows.Forms.AccessibleObject" /> to associate with the designer.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialActivityDesigner.CanExpandCollapse">
      <summary>Gets a value indicating whether the <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" /> can be expanded and collapsed on the workflow designer surface. </summary>
      <returns>
          <see langword="true" /> if the designer can be expanded and collapsed on the workflow design surface; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialActivityDesigner.Expanded">
      <summary>Gets or sets a value indicating whether the designer is expanded on the workflow design surface. </summary>
      <returns>
          <see langword="true" /> if the <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" /> is expanded on the workflow design surface; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialActivityDesigner.FirstSelectableObject">
      <summary>Gets the first selectable object in the navigation order of the <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" />.</summary>
      <returns>An <see cref="T:System.Object" /> that is the first selectable object in the designer navigation order.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialActivityDesigner.Glyphs">
      <summary>Gets a read-only collection of glyphs that are associated with the <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" />.</summary>
      <returns>A <see cref="T:System.Workflow.ComponentModel.Design.DesignerGlyph" /> read-only collection that contains all of the glyphs to display on the <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialActivityDesigner.HelpText">
      <summary>Gets or sets the text to display when the <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" /> contains no other activity designers.</summary>
      <returns>A string that contains the text to display on the designer surface.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialActivityDesigner.HelpTextRectangle">
      <summary>Gets the rectangle that serves as the bounds for the text displayed by the <see cref="P:System.Workflow.ComponentModel.Design.SequentialActivityDesigner.HelpText" /> property.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that serves as the bounds for the text displayed by the <see cref="P:System.Workflow.ComponentModel.Design.SequentialActivityDesigner.HelpText" /> property.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialActivityDesigner.HelpTextSize">
      <summary>Gets the height and width of the text to display in the <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" /> when it contains no child activity designers.</summary>
      <returns>The <see cref="T:System.Drawing.Size" /> that defines the height and width of the text displayed by <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" /> when it contains no child activity designers. By default <see cref="P:System.Workflow.ComponentModel.Design.SequentialActivityDesigner.HelpTextSize" /> is set to a newly initialized <see cref="T:System.Drawing.Size" />. </returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialActivityDesigner.LastSelectableObject">
      <summary>Gets the last selectable object in the navigation order of the <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" />.</summary>
      <returns>The <see cref="T:System.Object" /> that is the last selectable object in the designer navigation order.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter.AssociatedDesigner">
      <summary>Gets the root designer to which the header or footer is applied.</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" /> to which the <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter" /> is applied.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter.Bounds">
      <summary>Gets the bounding rectangle of the header or footer on the workflow design surface.</summary>
      <returns>The <see cref="T:System.Drawing.Rectangle" /> that bounds the <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter" /> on the workflow design surface.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter.Image">
      <summary>Gets or sets the image associated with the header or footer.</summary>
      <returns>The <see cref="T:System.Drawing.Image" /> to associate with the <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter.ImageRectangle">
      <summary>Gets the bounding rectangle for the image associated with the header or footer.</summary>
      <returns>The <see cref="T:System.Drawing.Rectangle" /> that defines the bounds for the <see cref="P:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter.Image" /> associated with the <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter.Text">
      <summary>Gets or sets the text description associated with the header or footer.</summary>
      <returns>The string that contains the text description associated with the <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter.TextRectangle">
      <summary>Gets the bounding rectangle for the text associated with the header or footer.</summary>
      <returns>The <see cref="T:System.Drawing.Rectangle" /> that defines the bounds for the <see cref="P:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter.Text" /> associated with the <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.CanExpandCollapse">
      <summary>Gets a value indicating whether the designer can be expanded and collapsed. </summary>
      <returns>
          <see langword="true" /> if the <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" /> can be expanded and collapsed; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Footer">
      <summary>Gets the footer associated with the root designer.</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter" /> that represents the footer associated with the <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Glyphs">
      <summary>Gets the collection of glyphs that are displayed on the <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" />.</summary>
      <returns>An <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection" /> that contains the glyphs displayed on the <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Header">
      <summary>Gets the header associated with the root designer.</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter" /> that represents the header associated with the <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Image">
      <summary>Gets the image associated with the designer.</summary>
      <returns>The <see cref="T:System.Drawing.Image" /> to associate with the designer.  </returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.ImageRectangle">
      <summary>Gets the value for the enclosing bounds of the image associated with the designer in logical coordinates.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that encloses the <see cref="T:System.Drawing.Image" /> displayed for the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.InvokingDesigner">
      <summary>Gets or sets the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> that requested the sequential workflow root designer to be initialized.</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> that requested the workflow root designer to be initialized.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.MinimumSize">
      <summary>Gets the minimum size for the <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" />.</summary>
      <returns>A <see cref="T:System.Drawing.Size" /> that represents the minimum size of the sequential workflow designer.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.ShowSmartTag">
      <summary>Gets a value indicating whether the root designer displays smart tags.</summary>
      <returns>
          <see langword="true" /> if the <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" /> displays smart tags; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.SmartTagRectangle">
      <summary>Gets the rectangle on the designer surface in which to display a smart tag.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that defines the bounds in which to display the smart tag.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Text">
      <summary>Gets the description associated with the designer.</summary>
      <returns>A string that contains the description associated with the designer.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.TitleHeight">
      <summary>Gets the height of the title area of the designer.</summary>
      <returns>An integer that represents the height of the title area of the <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ShadowGlyph.Priority">
      <summary>Gets the priority setting for the glyph on the activity designer surface.</summary>
      <returns>An integer value that represents the priority setting for the <see cref="T:System.Workflow.ComponentModel.Design.ShadowGlyph" /> on the activity designer surface.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.ActiveView">
      <summary>Gets or sets the <see cref="T:System.Workflow.ComponentModel.Design.DesignerView" /> that contains information about the current designer view displayed by the <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" />.</summary>
      <returns>A <see cref="T:System.Workflow.ComponentModel.Design.DesignerView" /> that contains information about the current view displayed by the <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.ContainedDesigners">
      <summary>Gets a generic read-only collection that contains all activity designers that are children of the <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" />.</summary>
      <returns>An <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> read-only collection that contains the child designers.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.CurrentDropTarget">
      <summary>Gets or sets the index of the current drop target in the array of drop targets returned by <see cref="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.GetDropTargets(System.Drawing.Point)" />.</summary>
      <returns>An integer that represents the index of the current drop target for the designer.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.FirstSelectableObject">
      <summary>Gets the first selectable object in the navigation order of the <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" />.</summary>
      <returns>An <see cref="T:System.Object" /> that is the first selectable object in the designer navigation order.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.LastSelectableObject">
      <summary>Gets the last selectable object in the navigation order of the <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" />.</summary>
      <returns>The <see cref="T:System.Object" /> that is the last selectable object in the designer navigation order.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.MinimumSize">
      <summary>Gets the minimum size settings for the <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" />.</summary>
      <returns>The <see cref="T:System.Drawing.Size" /> that represents the smallest possible size for the <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.ShowSmartTag">
      <summary>Gets a value indicating whether the <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> displays smart tags.</summary>
      <returns>
          <see langword="true" /> if the designer displays smart tags; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.SmartTagVerbs">
      <summary>Gets a read-only collection of designer actions that are associated with the smart tags on the designer.</summary>
      <returns>A <see cref="T:System.Workflow.ComponentModel.Design.DesignerAction" /> read-only collection that contains all the actions associated with the smart tags on the designer.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.Views">
      <summary>Get a read-only collection of designer views that the current <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> hosts.</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.Design.DesignerView" /> read-only collection that contains the views hosted by the current <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ThemeConfigurationDialog.ComposedTheme">
      <summary>Gets the workflow theme that is highlighted in the theme configuration dialog box in the workflow designer.</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" /> that is highlighted in the theme configuration dialog box in the workflow designer.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.TypeBrowserDialog.SelectedType">
      <summary>Gets the type selected by the user in the type browser dialog box.</summary>
      <returns>The <see cref="T:System.Type" /> selected by the user in the type browser dialog box.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.TypeBrowserDialog.System#ComponentModel#ISite#Component">
      <summary>Gets the component to associate with the type browser dialog box.</summary>
      <returns>The <see cref="T:System.ComponentModel.IComponent" /> to bind to the <see cref="T:System.Workflow.ComponentModel.Design.TypeBrowserDialog" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.TypeBrowserDialog.System#ComponentModel#ISite#Container">
      <summary>Gets the container to associate with the type browser dialog.</summary>
      <returns>The <see cref="T:System.ComponentModel.IContainer" /> to associate with the <see cref="T:System.Workflow.ComponentModel.Design.TypeBrowserDialog" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.TypeBrowserDialog.System#ComponentModel#ISite#DesignMode">
      <summary>Gets a value that indicates whether the type browser dialog is in design mode. </summary>
      <returns>
          <see langword="true" /> if <see cref="T:System.Workflow.ComponentModel.Design.TypeBrowserDialog" /> is in design mode; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.TypeBrowserDialog.System#ComponentModel#ISite#Name">
      <summary>Gets or sets name of the component associated with the type browser dialog.</summary>
      <returns>The name of the component associated with the type browser dialog.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.TypeFilterProviderAttribute.TypeFilterProviderTypeName">
      <summary>Gets the name of the type that implements <see cref="T:System.Workflow.ComponentModel.Design.ITypeFilterProvider" />.</summary>
      <returns>A string that contains the name of the type that implements  <see cref="T:System.Workflow.ComponentModel.Design.ITypeFilterProvider" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.FileName">
      <summary>When overridden in a derived class, gets the file name of the designer to load. </summary>
      <returns>A string that contains the file name of the designer to load.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.InDebugMode">
      <summary>Gets a value that indicates whether the workflow should be loaded in debug mode.  </summary>
      <returns>
          <see langword="true" /> if the workflow should be loaded in debug mode; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.TargetFrameworkTypeDescriptionProvider">
      <summary>Gets the <see cref="T:System.ComponentModel.TypeDescriptor" /> metadata of the target .NET Framework.</summary>
      <returns>The <see cref="T:System.ComponentModel.TypeDescriptor" /> metadata of the target .NET Framework.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.MessageHitTestContext">
      <summary>Gets the <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> that describes the context of the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" />.</summary>
      <returns>A <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> object that contains information about the context of the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.ParentView">
      <summary>Gets the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> that is associated with the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" />.</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> associated with the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowOutline.NeedsExpandAll">
      <summary>Gets or sets a value that indicates whether the document outline TreeView needs to be expanded.</summary>
      <returns>
          <see langword="true" /> if the document outline TreeView needs to be expanded; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowOutline.RootNode">
      <summary>Gets the root node of the root provider.</summary>
      <returns>A <see cref="T:System.Windows.Forms.TreeNode" /> that is the root node.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowOutline.TreeView">
      <summary>Retrieves the <see cref="T:System.Windows.Forms.TreeView" /> control used to display the document outline</summary>
      <returns>The <see cref="T:System.Windows.Forms.TreeView" /> control used to display the document outline.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowOutlineNode.Activity">
      <summary>Gets the activity associated with the node.</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.Activity" /> associated with the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowOutlineNode" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowTheme.AmbientTheme">
      <summary>Gets the <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" /> associated with the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" />.</summary>
      <returns>An <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" /> that describes default values for the look and feel of the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowTheme.ContainingFileDirectory">
      <summary>Gets the directory part of the <see cref="P:System.Workflow.ComponentModel.Design.WorkflowTheme.FilePath" />.</summary>
      <returns>The directory part of the <see cref="P:System.Workflow.ComponentModel.Design.WorkflowTheme.FilePath" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowTheme.CurrentTheme">
      <summary>Gets or sets the current theme.</summary>
      <returns>A <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" /> that is used for display settings.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowTheme.Description">
      <summary>Gets or sets the description of the theme.</summary>
      <returns>The description of the theme.</returns>
      <exception cref="T:System.InvalidOperationException">The property value cannot be set because the workflow theme is read-only.</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowTheme.DesignerThemes">
      <summary>Gets a list of designer themes associated with the workflow.</summary>
      <returns>A list of designer themes associated with the workflow.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowTheme.EnableChangeNotification">
      <summary>Gets or sets a value that indicates whether to enable change notification.</summary>
      <returns>
          <see langword="true" /> to enable change notification; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowTheme.FilePath">
      <summary>Gets or sets the file path for the theme.</summary>
      <returns>The file path for the theme.</returns>
      <exception cref="T:System.InvalidOperationException">The property value cannot be set because the workflow theme is read-only.</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowTheme.LookupPath">
      <summary>Gets the file path from the registry.</summary>
      <returns>The file path from the registry to the theme.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowTheme.Name">
      <summary>Gets or sets the name of the theme.</summary>
      <returns>The name of the theme.</returns>
      <exception cref="T:System.InvalidOperationException">The property value cannot be set because the workflow theme is read-only.</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowTheme.ReadOnly">
      <summary>Gets or sets a value that indicates whether the workflow theme is read-only.</summary>
      <returns>
          <see langword="true" /> if the workflow theme is read-only; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowTheme.RegistryKeyPath">
      <summary>Gets the registry key path for the theme.</summary>
      <returns>The registry key path for the theme.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowTheme.StandardThemes">
      <summary>Gets the list of standard themes.</summary>
      <returns>A list of available themes.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowTheme.Type">
      <summary>Gets the type of the theme.</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.Design.ThemeType" /> of the theme. Possible values are <see langword="Default" />, <see langword="System" />, and <see langword="UserDefined" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowTheme.Version">
      <summary>Gets or sets the version of the theme.</summary>
      <returns>The version information for the theme.</returns>
      <exception cref="T:System.InvalidOperationException">The property value cannot be set because the workflow theme is read-only.</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowView.EnableFitToScreen">
      <summary>Enables the button on the design surface that, when clicked, changes the zoom level of the workflow design surface so that the entire workflow is displayed in the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
      <returns>
          <see langword="true" /> if the dynamic button is enabled; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowView.HScrollBar">
      <summary>Gets the horizontal scrollbar for the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
      <returns>A <see cref="T:System.Windows.Forms.ScrollBar" /> you can use to adjust the settings and visibility of the horizontal scrollbar.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowView.PrintDocument">
      <summary>Gets the <see cref="T:System.Drawing.Printing.PrintDocument" /> associated with the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
      <returns>A <see cref="P:System.Workflow.ComponentModel.Design.WorkflowView.PrintDocument" /> object that sends output to a printer.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowView.PrintPreviewMode">
      <summary>Gets or sets the print preview mode of the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
      <returns>
          <see langword="true" /> if print preview mode is active; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowView.RootDesigner">
      <summary>Gets or sets the root designer for the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> associated with the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowView.ScrollPosition">
      <summary>Gets or sets the position of the scrollbar on the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
      <returns>A point describing the location of the scrollbar in screen coordinates.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowView.ShadowDepth">
      <summary>Gets or sets the <see cref="P:System.Workflow.ComponentModel.Design.WorkflowView.ShadowDepth" /> for the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
      <returns>The shadow depth in pixels.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowView.ViewPortRectangle">
      <summary>Gets the current <see cref="P:System.Workflow.ComponentModel.Design.WorkflowView.ViewPortRectangle" /> for the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that describes the area on the screen that is visible.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowView.ViewPortSize">
      <summary>Gets the size of the visible area for the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
      <returns>A <see langword="Size" /> that describes the visible area of the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar">
      <summary>Gets the vertical scrollbar associated with the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
      <returns>A <see cref="T:System.Windows.Forms.ScrollBar" /> you can use to adjust the settings and visibility of the horizontal scrollbar.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowView.Zoom">
      <summary>Gets or sets the zoom level of the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</summary>
      <returns>The zoom level of the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</returns>
      <exception cref="T:System.NotSupportedException">If the zoom level is less than the minimum zoom level of the <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" />-or-if the zoom level exceeds the maximum zoom level of the <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" />.</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowViewAccessibleObject.Bounds">
      <summary>Gets the location and size of the accessible object.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that represents the bounds of the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowViewAccessibleObject" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowViewAccessibleObject.DefaultAction">
      <summary>Gets a string that describes the default action of the accessible object. Not all objects have a default action.</summary>
      <returns>A string that contains a description of the default action for the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowViewAccessibleObject" />, or a null reference (<see langword="Nothing" /> in Visual Basic) if the accessible object has no default action.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowViewAccessibleObject.Description">
      <summary>Gets a string that describes the visual appearance of the specified accessible object. Not all accessible objects have a description.</summary>
      <returns>A description of the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowViewAccessibleObject" /> visual appearance to the user, or a null reference (<see langword="Nothing" /> in Visual Basic) if the object does not have a description.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowViewAccessibleObject.Help">
      <summary>Gets a description of what the accessible object does or how the accessible object is used.</summary>
      <returns>A string that contains the description of what the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowViewAccessibleObject" /> does or how it is used or a null reference (<see langword="Nothing" /> in Visual Basic) if no help is defined.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowViewAccessibleObject.Name">
      <summary>Gets or sets the accessible object name.</summary>
      <returns>A string that contains the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowViewAccessibleObject" /> name, or a null reference (<see langword="Nothing" /> in Visual Basic) if the property has not been set.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowViewAccessibleObject.Role">
      <summary>Gets the role of the accessible object.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.AccessibleRole" /> values. <see cref="F:System.Windows.Forms.AccessibleRole.None" /> is returned if no role has been specified</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.FaultHandlerActivity.Fault">
      <summary>Gets the <see cref="T:System.Exception" /> that is being handled by this <see cref="T:System.Workflow.ComponentModel.FaultHandlerActivity" />.</summary>
      <returns>The <see cref="T:System.Exception" /> associated with this instance. <see langword="null" /> is returned if the activity did not handle any exceptions.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.FaultHandlerActivity.FaultType">
      <summary>Gets and sets the <see cref="T:System.Type" /> of the exceptions to be handled by the <see cref="T:System.Workflow.ComponentModel.FaultHandlerActivity" />. Exceptions of the type derived from the type specified in <see cref="P:System.Workflow.ComponentModel.FaultHandlerActivity.FaultType" /> are also handled.</summary>
      <returns>The <see cref="T:System.Type" /> of the associated <see cref="T:System.Exception" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.FaultHandlerActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#FilterDescription">
      <summary>Gets the filter description associated with this instance.</summary>
      <returns>The filter description associated with this instance.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.PropertyMetadata.DefaultValue">
      <summary>Gets or sets the default value of the associated dependency property.</summary>
      <returns>An object representing the default value for this <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" />.</returns>
      <exception cref="T:System.InvalidOperationException">Attempting to set this property when <see cref="P:System.Workflow.ComponentModel.PropertyMetadata.IsSealed" /> is <see langword="true." /></exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.PropertyMetadata.GetValueOverride">
      <summary>Gets or sets the <see cref="T:System.Workflow.ComponentModel.GetValueOverride" /> callback, a callback invoked immediately upon a call to the <see cref="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" /> method.</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.GetValueOverride" /> callback, a callback invoked immediately upon a call to the <see cref="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" /> method.</returns>
      <exception cref="T:System.InvalidOperationException">Attempting to set this property when <see cref="P:System.Workflow.ComponentModel.PropertyMetadata.IsSealed" /> is <see langword="true." /></exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.PropertyMetadata.IsMetaProperty">
      <summary>Gets a value that indicates whether the <see cref="P:System.Workflow.ComponentModel.PropertyMetadata.Options" /> is set to <see cref="F:System.Workflow.ComponentModel.DependencyPropertyOptions.Metadata" />.</summary>
      <returns>
          <see langword="true" /> if this option is set to <see cref="F:System.Workflow.ComponentModel.DependencyPropertyOptions.Metadata" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.PropertyMetadata.IsNonSerialized">
      <summary>Gets a value that indicates whether the <see cref="P:System.Workflow.ComponentModel.PropertyMetadata.Options" /> is set to <see cref="F:System.Workflow.ComponentModel.DependencyPropertyOptions.NonSerialized" />.</summary>
      <returns>
          <see langword="true" /> if set to <see cref="F:System.Workflow.ComponentModel.DependencyPropertyOptions.NonSerialized" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.PropertyMetadata.IsReadOnly">
      <summary>Gets a value that indicates whether the <see cref="P:System.Workflow.ComponentModel.PropertyMetadata.Options" /> are set to <see cref="F:System.Workflow.ComponentModel.DependencyPropertyOptions.ReadOnly" />.</summary>
      <returns>
          <see langword="true" /> if set to <see cref="F:System.Workflow.ComponentModel.DependencyPropertyOptions.ReadOnly" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.PropertyMetadata.IsSealed">
      <summary>Gets a value that indicates whether the <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> has been applied to a property resulting in the immutable state.</summary>
      <returns>
          <see langword="true" /> if the <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> is immutable; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.PropertyMetadata.Options">
      <summary>Gets or set the property which represents the option setting for the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> associated to this <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" />.</summary>
      <returns>The option setting for the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> associated to this <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" />.</returns>
      <exception cref="T:System.InvalidOperationException">Attempting to set this property when <see cref="P:System.Workflow.ComponentModel.PropertyMetadata.IsSealed" /> is <see langword="true." /></exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.PropertyMetadata.SetValueOverride">
      <summary>Gets or sets the <see cref="T:System.Workflow.ComponentModel.SetValueOverride" /> callback, a callback invoked immediately upon a call to the <see cref="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" /> method.</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.SetValueOverride" /> callback, a callback invoked immediately upon a call to the <see cref="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" /> method.</returns>
      <exception cref="T:System.InvalidOperationException">Trying to set this property when <see cref="P:System.Workflow.ComponentModel.PropertyMetadata.IsSealed" /> is <see langword="true." /></exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.QueueEventArgs.QueueName">
      <summary>Gets the name of the workflow queue that originated the event.</summary>
      <returns>The name of the workflow queue that originated the event.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.RemovedActivityAction.OriginalRemovedActivity">
      <summary>Gets the instance of original <see cref="T:System.Workflow.ComponentModel.Activity" /> being removed.</summary>
      <returns>The instance of the original <see cref="T:System.Workflow.ComponentModel.Activity" /> being removed.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.RemovedActivityAction.RemovedActivityIndex">
      <summary>Gets index of the removed <see cref="T:System.Workflow.ComponentModel.Activity" /> with the <see cref="P:System.Workflow.ComponentModel.CompositeActivity.Activities" /> collection of the parent <see cref="T:System.Workflow.ComponentModel.CompositeActivity" />.</summary>
      <returns>The index of the <see cref="T:System.Workflow.ComponentModel.Activity" /> being removed.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager.Context">
      <summary>Gets the <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> associated with <see cref="T:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager" />. </summary>
      <returns>The <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> associated with the <see cref="T:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager.Properties">
      <summary>Gets a <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that contains a read-only collection of type <see cref="T:System.ComponentModel.PropertyDescriptor" />.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that contains a read-only collection of type <see cref="T:System.ComponentModel.PropertyDescriptor" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager.SerializationManager">
      <summary>Gets the <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> associated with the <see cref="T:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager" />.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> associated with the <see cref="T:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Serialization.ActivitySurrogateSelector.Default">
      <summary>Gets the default <see cref="T:System.Workflow.ComponentModel.Serialization.ActivitySurrogateSelector" />. This property is read-only.</summary>
      <returns>The default <see cref="T:System.Workflow.ComponentModel.Serialization.ActivitySurrogateSelector" /> that can be used to serialize an <see cref="T:System.Workflow.ComponentModel.Activity" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Serialization.ConstructorArgumentAttribute.ArgumentName">
      <summary>Gets the <see langword="string" /> representing the argument name.</summary>
      <returns>The <see langword="string" /> representing the argument name.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Serialization.ContentPropertyAttribute.Name">
      <summary>Gets the <see cref="T:System.String" /> representing the name of the content property.</summary>
      <returns>The <see cref="T:System.String" /> representing the name of the content property.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Serialization.RuntimeNamePropertyAttribute.Name">
      <summary>Gets the run-time name carried by this instance.</summary>
      <returns>A <see langword="string" /> that contains the run-time name carried by this instance.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException.LineNumber">
      <summary>Gets the line number in the object or XOML file that caused the exception to be thrown.</summary>
      <returns>An integer that represents the line number on which the exception was thrown.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException.LinePosition">
      <summary>Gets the column position in the object or XOML file that caused the exception to be thrown.</summary>
      <returns>An integer that represents the column position that caused the exception to be thrown.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.Context">
      <summary>Gets a stack-based, user-defined storage area that is useful for communication between serializers.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> that contains information about the current object being serialized.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.LocalAssembly">
      <summary>Gets or sets the assembly that is associated with the current serializer. </summary>
      <returns>The <see cref="T:System.Reflection.Assembly" /> that is associated with the current serializer.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.SerializationManager">
      <summary>Gets or sets the serialization manager to use with the current serializer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use with the current serializer.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties">
      <summary>Gets a collection of properties that can be serialized with available serializers.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that contains the properties to serialize.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Serialization.XmlnsDefinitionAttribute.AssemblyName">
      <summary>Gets or sets a <see cref="T:System.String" /> that represents the <see cref="P:System.Type.Assembly" /> name of the decorated class. </summary>
      <returns>A <see cref="T:System.String" /> that represents the <see cref="P:System.Type.Assembly" /> name of the decorated class.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Serialization.XmlnsDefinitionAttribute.ClrNamespace">
      <summary>Gets a <see cref="T:System.String" /> that represents the name of the CLR namespace of the decorated class. </summary>
      <returns>A <see cref="T:System.String" /> that represents the name of the CLR namespace of the decorated class. </returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Serialization.XmlnsDefinitionAttribute.XmlNamespace">
      <summary>Gets a <see cref="T:System.String" /> that represents the name of the XML namespace of the decorated class. </summary>
      <returns>A <see cref="T:System.String" /> that represents the name of the XML namespace of the decorated class. </returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Serialization.XmlnsPrefixAttribute.Prefix">
      <summary>Gets the <see cref="T:System.String" /> that contains the value of the prefix for the decorated class. </summary>
      <returns>The <see cref="T:System.String" /> that contains the value of the prefix for the decorated class. </returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Serialization.XmlnsPrefixAttribute.XmlNamespace">
      <summary>Gets the <see cref="T:System.String" /> that contains the value of the XML namespace for the decorated class. </summary>
      <returns>The <see cref="T:System.String" /> that contains the value of the XML namespace for the decorated class.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.SuspendActivity.Error">
      <summary>Gets or sets an error message to report to administrators providing the reason for suspension.</summary>
      <returns>An error message that provides the reason for the workflow instance suspension. The default value is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.SynchronizationScopeActivity.SynchronizationHandles">
      <summary>Gets or sets a collection of strings that represents handles that determine the synchronization behavior of this <see cref="T:System.Workflow.ComponentModel.SynchronizationScopeActivity" />. When two or more <see cref="T:System.Workflow.ComponentModel.SynchronizationScopeActivity" /> activities share a synchronization handle, they execute in a serial fashion; there is no interleaved execution of the child activities within them.</summary>
      <returns>A multiline string that contains synchronization handles for this instance.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.TerminateActivity.Error">
      <summary>Gets or sets an error message to report to administrators, providing the reason for termination.</summary>
      <returns>An error message that provides the reason for the workflow instance termination. The default value is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.ThrowActivity.Fault">
      <summary>Gets or sets the exception object that should be thrown by the <see cref="T:System.Workflow.ComponentModel.ThrowActivity" />.</summary>
      <returns>The <see cref="T:System.Exception" /> associated with this instance.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.ThrowActivity.FaultType">
      <summary>Gets or sets the type of exception that should be thrown by the <see cref="T:System.Workflow.ComponentModel.ThrowActivity" />.</summary>
      <returns>The type representing the fault associated with this instance.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#FilterDescription">
      <summary>Gets the description for the filter to be displayed on the class browser dialog box. </summary>
      <returns>A <see cref="T:System.String" /> that contains the description of the filter. </returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.TransactionScopeActivity.TransactionOptions">
      <summary>Gets the <see cref="T:System.Workflow.ComponentModel.WorkflowTransactionOptions" /> associated with this instance.</summary>
      <returns>The <see cref="T:System.Workflow.ComponentModel.WorkflowTransactionOptions" /> associated with this instance.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.WorkflowChanges.TransientWorkflow">
      <summary>Returns a cloned activity tree to which changes can be made and then applied to the running workflow instance.</summary>
      <returns>A <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> that contains the cloned root activity for the workflow.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.WorkflowParameterBinding.ParameterName">
      <summary>Gets or sets the <see cref="P:System.Workflow.ComponentModel.WorkflowParameterBinding.ParameterName" /> property. Represents the name of the parameter being bound.</summary>
      <returns>The name of the parameter being bound.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.WorkflowParameterBinding.Value">
      <summary>Gets or sets the value assigned to the corresponding parameter.</summary>
      <returns>The assigned value as an <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.WorkflowTransactionOptions.IsolationLevel">
      <summary>Gets or sets the <see cref="T:System.Data.IsolationLevel" /> for the transaction. </summary>
      <returns>The <see cref="T:System.Data.IsolationLevel" /> for the workflow.</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.WorkflowTransactionOptions.TimeoutDuration">
      <summary>Gets or sets the <see cref="T:System.TimeSpan" /> representing the time-out period for the transaction.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> representing the time-out period for the transaction.</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.Activity">
      <summary>Represents the fundamental building block of workflows. <see cref="T:System.Workflow.ComponentModel.Activity" /> is the base class for all activities. </summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.ActivityBind">
      <summary>Binds an activity's property to a property, field, indexer, method, event, or another activity's property. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.ActivityChangeAction">
      <summary>Represents a proposed change to a <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> within a running workflow instance. This class must be inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.ActivityCollection">
      <summary>Models a strongly typed <see cref="T:System.Collections.ICollection" /> of type <see cref="T:System.Workflow.ComponentModel.Activity" />.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.ActivityCollectionChangeAction">
      <summary>Represents an enumeration of the permissible actions which may be performed on an <see cref="T:System.Workflow.ComponentModel.ActivityCollection" />, which typically represents the collection of all child activities of a <see cref="T:System.Workflow.ComponentModel.CompositeActivity" />.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.ActivityCollectionChangeAction.Add">
      <summary>The enumerator corresponding to adding a new <see cref="T:System.Workflow.ComponentModel.Activity" /> to the <see cref="T:System.Workflow.ComponentModel.ActivityCollection" />.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.ActivityCollectionChangeAction.Remove">
      <summary>The enumerator corresponding to removing an <see cref="T:System.Workflow.ComponentModel.Activity" /> from the <see cref="T:System.Workflow.ComponentModel.ActivityCollection" />.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.ActivityCollectionChangeAction.Replace">
      <summary>The enumerator corresponding to replacing an <see cref="T:System.Workflow.ComponentModel.Activity" /> in the <see cref="T:System.Workflow.ComponentModel.ActivityCollection" />.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs">
      <summary>Represents the information needed by an event handler to perform custom processing whenever the contents of an <see cref="T:System.Workflow.ComponentModel.ActivityCollection" /> changes.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.ActivityCondition">
      <summary>Represents an abstract class for an expression, which evaluates to a <see langword="Boolean" />. This class must be inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.ActivityExecutionContext">
      <summary>Represents the execution environment of an <see cref="T:System.Workflow.ComponentModel.Activity" />. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.ActivityExecutionContextManager">
      <summary>Allows a <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> to create and manage execution contexts for its child activities. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.ActivityExecutionResult">
      <summary>Enumeration of activity result values that qualifies the state of an <see cref="T:System.Workflow.ComponentModel.Activity" /> that has an <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> of <see langword="Closed" />.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.ActivityExecutionResult.None">
      <summary>The activity is not in the <see cref="F:System.Workflow.ComponentModel.ActivityExecutionStatus.Closed" /> state.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.ActivityExecutionResult.Succeeded">
      <summary>The activity has transitioned to the closed state from the executing state.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.ActivityExecutionResult.Canceled">
      <summary>The activity has transitioned to the closed state from the canceling state.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.ActivityExecutionResult.Compensated">
      <summary>The activity has transitioned to the closed state from the compensating state.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.ActivityExecutionResult.Faulted">
      <summary>The activity has transitioned to the closed state from the faulting state.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.ActivityExecutionResult.Uninitialized">
      <summary>The activity has transitioned to the closed state from the initialized state.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.ActivityExecutionStatus">
      <summary>Enumeration of activity status values that correspond to the life cycle of an activity within a running workflow instance.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.ActivityExecutionStatus.Initialized">
      <summary>Represents the status when an activity is being initialized.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.ActivityExecutionStatus.Executing">
      <summary>Represents the status when an activity is executing.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.ActivityExecutionStatus.Canceling">
      <summary>Represents the status when an activity is in the process of being canceled.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.ActivityExecutionStatus.Closed">
      <summary>Represents the status when an activity is closed.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.ActivityExecutionStatus.Compensating">
      <summary>Represents the status when an activity is compensating.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.ActivityExecutionStatus.Faulting">
      <summary>Represents the status when an activity is faulting.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs">
      <summary>Holds information relating to the change of execution status event for an <see cref="T:System.Workflow.ComponentModel.Activity" />. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.AddedActivityAction">
      <summary>Represents a proposed addition of an <see cref="T:System.Workflow.ComponentModel.Activity" /> to a <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> within a running workflow instance.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.AlternateFlowActivityAttribute">
      <summary>Custom attribute which indicates that the activity supports an alternative flow. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.CancellationHandlerActivity">
      <summary>Represents cancellation logic that can be associated with a <see cref="T:System.Workflow.ComponentModel.CompositeActivity" />. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity">
      <summary>Defines a compensatable version of the <see cref="T:System.Workflow.ComponentModel.TransactionScopeActivity" /> activity. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.CompensateActivity">
      <summary>Triggers the compensation of a completed child <see cref="T:System.Workflow.ComponentModel.Activity" /> that implements the <see cref="T:System.Workflow.ComponentModel.ICompensatableActivity" /> interface. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.CompensationHandlerActivity">
      <summary>Specifies workflow logic that undoes, or compensates for, the successful execution of the associated <see cref="T:System.Workflow.ComponentModel.CompositeActivity" />. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.AccessTypes">
      <summary>Specifies the access mode for the dependency property.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Compiler.AccessTypes.Read">
      <summary>Read access.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Compiler.AccessTypes.Write">
      <summary>Write access.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Compiler.AccessTypes.ReadWrite">
      <summary>Read and write access.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.ActivityCodeGenerator">
      <summary>Base class for code generator components that can be associated with activities.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.ActivityCodeGeneratorAttribute">
      <summary>Indicates the type to be used for code generation for an activity. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.ActivityValidator">
      <summary>Derivative of <see cref="T:System.Workflow.ComponentModel.Compiler.DependencyObjectValidator" /> that is a base class for all activity validator components.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.ActivityValidatorAttribute">
      <summary>Identifies the class that performs validation on an <see cref="T:System.Workflow.ComponentModel.Activity" /> that is subject to validation. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.AttributeInfo">
      <summary>Wrapper class that represents attributes on a type at design time. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.AttributeInfoAttribute">
      <summary>Represents a class holding information about an attribute at design time. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.AuthorizedType">
      <summary>Represents a set of types that are either allowed or disallowed in compiled workflows by the workflow compiler (depending on the value of the <see cref="P:System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized" /> property). This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.BindValidationContext">
      <summary>Represents the context for the validation of an <see cref="T:System.Workflow.ComponentModel.ActivityBind" />. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.CodeGenerationManager">
      <summary>Enables sharing of data across activity code generators during the code generation phase of compilation. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.CompileWorkflowCleanupTask">
      <summary>Defines an MSBuild task for erasing the contents of temporary files that are used when compiling workflows created using Visual Basic. The contents of the temporary files are erased but the files are not deleted. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask">
      <summary>Represents the MSBuild task of compiling a workflow. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.CompositeActivityCodeGenerator">
      <summary>Base class for code generator components that can be associated with composite activities.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.CompositeActivityValidator">
      <summary>Derivative of <see cref="T:System.Workflow.ComponentModel.Compiler.ActivityValidator" /> that is the base class for all composite activity validator components. </summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.ConditionValidator">
      <summary>Derivative of <see cref="T:System.Workflow.ComponentModel.Compiler.DependencyObjectValidator" /> that is the base class for all condition validator components.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.DependencyObjectValidator">
      <summary>Derivative of <see cref="T:System.Workflow.ComponentModel.Compiler.Validator" /> that is the base class for all dependency object validator components.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.ITypeProvider">
      <summary>Defines the behavior of a service that acts as a container of types.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService">
      <summary>Defines the interface implemented by the environment hosting the workflow designer and compiler to provide environment-specific compilation information during the validation and compilation processes.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.PropertyValidationContext">
      <summary>Provides the context for validation of a <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.TypeProvider">
      <summary>An implementation of <see cref="T:System.Workflow.ComponentModel.Compiler.ITypeProvider" /> that acts as a container of types within the indicated assemblies and code compile units.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.ValidationError">
      <summary>Represents the base class for all validation errors.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection">
      <summary>Holds a collection of <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationError" /> objects.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.ValidationManager">
      <summary>Enables the sharing of contextual information, such as property validation, parent activity, and so on, across validators during the compilation process.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.ValidationOption">
      <summary>Specifies the validation options in the <see cref="P:System.Workflow.ComponentModel.Compiler.ValidationOptionAttribute.ValidationOption" /> property.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Compiler.ValidationOption.None">
      <summary>No validation performed.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Compiler.ValidationOption.Optional">
      <summary>Validation is optional. If value is present, it will be validated.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Compiler.ValidationOption.Required">
      <summary>Validation must be performed. Value must be present and will be validated.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.ValidationOptionAttribute">
      <summary>Custom attribute that contains <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationOption" /> information. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.Validator">
      <summary>Base class for all validator components.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext">
      <summary>Provides workflow compilation options for the current compilation or validation task.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.WorkflowCompiler">
      <summary>Represents the compiler for workflows that are developed using C# or Visual Basic code and/or XAML markup. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilerError">
      <summary>Represents a <see cref="T:System.CodeDom.Compiler.CompilerError" /> that is obtained during the workflow compilation process. </summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilerOptionsService">
      <summary>Provides a default implementation of <see cref="T:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService" />.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters">
      <summary>Represents parameters passed to <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowCompiler" /> during the compilation process.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilerResults">
      <summary>Represents the results of a workflow compilation. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.WorkflowMarkupSourceAttribute">
      <summary>Attribute that contains information about a Workflow markup file. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException">
      <summary>Represents an <see cref="T:System.Exception" /> that occurs when a workflow does not pass validation. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.CompositeActivity">
      <summary>Derivative of <see cref="T:System.Workflow.ComponentModel.Activity" /> that is the base class for all activities that contain other activities. A <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> is responsible for managing the execution of its child activities.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.DependencyObject">
      <summary>The base class for all objects that have dependency properties. This class must be inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.DependencyProperty">
      <summary>A special kind of property that can be defined or attached to a <see cref="T:System.Workflow.ComponentModel.DependencyObject" />. There are three kinds of dependency properties: instance properties, meta properties, and attached properties. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.DependencyPropertyOptions">
      <summary>Represents an enumeration of <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> options.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.DependencyPropertyOptions.Default">
      <summary>Default option. No noted characteristic.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.DependencyPropertyOptions.ReadOnly">
      <summary>The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> is read-only.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.DependencyPropertyOptions.Optional">
      <summary>The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> is an optional property.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.DependencyPropertyOptions.Metadata">
      <summary>The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> represents metadata.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.DependencyPropertyOptions.NonSerialized">
      <summary>The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /></summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.DependencyPropertyOptions.DelegateProperty">
      <summary>This option is used to specify whether or not a property is of type <see cref="T:System.Delegate" />. It is important to use this to disambiguate the delegate properties from events.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ActivityBindTypeConverter">
      <summary>Provides a type converter to convert <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> classes to and from various other representations.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ActivityChangedEventArgs">
      <summary>Contains information about changes made to the activity associated with the designer.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ActivityDesigner">
      <summary>Provides a mandatory base class for all activity designer components.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject">
      <summary>Implements an accessible object that <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> classes use to adjust the designer user interface for users who have impairments.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection">
      <summary>Exposes a generic <see cref="T:System.Collections.Generic.List`1" /> of designer glyphs associated with an activity designer.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs">
      <summary>Provides data for the layout event for the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutSerializer">
      <summary>Serializes an activity designer layout used in a freeform designer.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ActivityDesignerPaint">
      <summary>Provides static methods used to draw user interface elements on activity designer surfaces. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs">
      <summary>Provides data for the <see cref="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnPaint(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs)" />, <see cref="M:System.Workflow.ComponentModel.Design.ConnectionPoint.OnPaint(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs,System.Boolean)" />, <see cref="M:System.Workflow.ComponentModel.Design.Connector.OnPaint(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs)" />, and <see cref="M:System.Workflow.ComponentModel.Design.DesignerGlyph.OnPaint(System.Drawing.Graphics,System.Boolean,System.Workflow.ComponentModel.Design.AmbientTheme,System.Workflow.ComponentModel.Design.ActivityDesigner)" /> methods and any overridden versions of <see langword="OnPaint" /> in classes that derive from them, when they are drawn on a workflow design surface.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs">
      <summary>Provides data for the <see cref="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnBeginResizing(System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs)" /> and <see cref="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnResizing(System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs)" /> methods.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme">
      <summary>Provides the look and feel property settings to a designer in a design-time environment.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ActivityDesignerThemeAttribute">
      <summary>Specifies the theme class an activity designer uses on the workflow design surface. This class cannot be inherited. </summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerb">
      <summary>Creates a new verb to be used with the designer using the associated verb group, text and event handler.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerbCollection">
      <summary>Maintains a collection of <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerb" /> objects.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ActivityDragEventArgs">
      <summary>Represents a class that provides data for the <see cref="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragDrop(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)" />, <see cref="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.OnDragEnter(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)" />, and <see cref="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)" /> events in the workflow designer.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner">
      <summary>Displays a collection of child activity designers in a preview strip and, when a child designer is selected on the preview strip, displays the selected activity designer in preview or edit mode on a workflow design surface. </summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesignerTheme">
      <summary>Provides theme settings for activity designers that use a preview mode on the workflow design surface. This class cannot be inherited. </summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ActivityToolboxItem">
      <summary>Provides a base class for all toolbox items associated with an activity in a workflow designer.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.AmbientProperty">
      <summary>Specifies the source of ambient theme settings for designer theme classes.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.AmbientProperty.DesignerSize">
      <summary>The ambient theme settings are obtained from the <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" /> class associated with the activity designer.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.AmbientProperty.OperatingSystemSetting">
      <summary>The ambient theme settings are obtained from the operating system.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.AmbientTheme">
      <summary>Provides the look and feel property settings to a top-level workflow in a design-time environment.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.BindUITypeEditor">
      <summary>Represents a <see cref="T:System.Drawing.Design.UITypeEditor" /> that is associated with the properties that are bound, or can be bound, on an activity.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.CommentGlyph">
      <summary>Provides a glyph for an <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> to display when a user disables an activity at design time. </summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner">
      <summary>Provides a designer that enables you to visually design composite activities.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.CompositeActivityDesignerLayoutSerializer">
      <summary>Serializes a composite activity designer layout used in a freeform designer.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.CompositeDesignerAccessibleObject">
      <summary>Implements an accessible object that <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> classes use to adjust the designer user interface for users who have impairments.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.CompositeDesignerTheme">
      <summary>Provides theme settings to <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> objects.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ConfigErrorGlyph">
      <summary>Provides a glyph for an <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> to display when a user has not performed required designer actions at design time.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ConnectionPoint">
      <summary>Represents a connection point that is displayed on the outer edges of an activity designer on a workflow design surface.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.Connector">
      <summary>Represents a connector between two activity designers on a workflow design surface.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ConnectorAccessibleObject">
      <summary>Provides information on connectors between activity designers that accessibility applications use to adjust an application's UI for users with impairments.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ConnectorEventArgs">
      <summary>Provides data for the <see cref="E:System.Workflow.ComponentModel.Design.FreeFormActivityDesigner.ConnectorAdded" />, <see cref="E:System.Workflow.ComponentModel.Design.FreeFormActivityDesigner.ConnectorRemoved" />, and <see cref="E:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.ConnectorChanged" /> events.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ConnectorEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Workflow.ComponentModel.Design.FreeFormActivityDesigner.ConnectorAdded" />, <see cref="E:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.ConnectorRemoved" />, and <see cref="E:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.ConnectorChanged" /> events of a <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" />. </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.Workflow.ComponentModel.Design.ConnectorEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ConnectorHitTestInfo">
      <summary>Contains information about a connector at a specified coordinate in <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> and all classes that inherit from it.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ConnectorLayoutSerializer">
      <summary>Serializes a connector layout.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.DesignerAction">
      <summary>Associates an action taken on an activity designer on the workflow design surface with the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.DesignerContentAlignment">
      <summary>Specifies where in the workflow designer that workflow content is aligned.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerContentAlignment.Left">
      <summary>Workflow content is aligned to the left side of the designer.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerContentAlignment.Top">
      <summary>Workflow content is aligned to the top of the designer.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerContentAlignment.Right">
      <summary>Workflow content is aligned to the right side of the designer.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerContentAlignment.Bottom">
      <summary>Workflow content is aligned to the bottom of the designer.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerContentAlignment.Center">
      <summary>Workflow content is aligned to the center of the designer.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerContentAlignment.TopLeft">
      <summary>Workflow content is aligned to the top left of the designer.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerContentAlignment.TopCenter">
      <summary>Workflow content is aligned to the top center of the designer.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerContentAlignment.TopRight">
      <summary>Workflow content is aligned to the top right of the designer.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerContentAlignment.CenterLeft">
      <summary>Workflow content is aligned to the center left of the designer.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerContentAlignment.CenterRight">
      <summary>Workflow content is aligned to the center right of the designer.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerContentAlignment.BottomLeft">
      <summary>Workflow content is aligned to the bottom left of the designer.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerContentAlignment.BottomCenter">
      <summary>Workflow content is aligned to the bottom center of the designer.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerContentAlignment.BottomRight">
      <summary>Workflow content is aligned to the bottom right of the designer.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerContentAlignment.Fill">
      <summary>Workflow content is aligned to fill the designer.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.DesignerEdges">
      <summary>Specifies the edge or edges of an activity designer on a workflow design surface where design-time processing is performed, such as a <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> location on the activity designer.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerEdges.None">
      <summary>None of the edges of the activity designer.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerEdges.Left">
      <summary>The left edge of the activity designer.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerEdges.Top">
      <summary>The top edge of the activity designer.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerEdges.Right">
      <summary>The right edge of the activity designer.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerEdges.Bottom">
      <summary>The bottom edge of the activity designer.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerEdges.All">
      <summary>All edges of the activity designer.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.DesignerGeometry">
      <summary>Specifies the shape used by activity designers to render the corners of their design surface.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerGeometry.Rectangle">
      <summary>The corners of the design surface are straight.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerGeometry.RoundedRectangle">
      <summary>The corners of the design surface are rounded.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.DesignerGlyph">
      <summary>Draws a glyph at the top-most Z order position on an activity designer. </summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.DesignerNavigationDirection">
      <summary>Specifies values for navigating among designer objects.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerNavigationDirection.Down">
      <summary>Navigates down to the next activity in sequence.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerNavigationDirection.Up">
      <summary>Navigates up to the previous activity in sequence.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerNavigationDirection.Left">
      <summary>Navigates to the left in the workflow.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerNavigationDirection.Right">
      <summary>Navigates to the right in the workflow.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.DesignerSize">
      <summary>Specifies the size settings that theme classes use to control the size of <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> classes when they are rendered on a workflow design surface.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerSize.Small">
      <summary>The activity designer is small.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerSize.Medium">
      <summary>The activity designer is medium. </summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerSize.Large">
      <summary>The activity designer is large.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.DesignerTheme">
      <summary>Supplies base class implementation for all activity designer theme classes used in a workflow design-time environment.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.DesignerVerbGroup">
      <summary>Specifies the grouping area on a context menu or a workflow designer menu in which an activity designer verb is to appear.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerVerbGroup.General">
      <summary>The general designer verb group.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerVerbGroup.View">
      <summary>The view designer verb group.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerVerbGroup.Edit">
      <summary>The edit designer verb group.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerVerbGroup.Options">
      <summary>The options designer verb group.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerVerbGroup.Actions">
      <summary>The actions designer verb group.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerVerbGroup.Misc">
      <summary>The miscellaneous designer verb group.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.DesignerView">
      <summary>Serves as a repository for information about the views supported by the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> or classes that inherit from it.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner">
      <summary>Provides a customizable activity designer surface for users to visually modify on a workflow design surface.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.FreeformActivityDesignerLayoutSerializer">
      <summary>Serializes freeform activity designer specific layout information.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.HitTestInfo">
      <summary>Contains information about a part of the <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> at a specified coordinate.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.HitTestLocations">
      <summary>Describes the area of the designer that contains the point passed to a <see cref="M:System.Workflow.ComponentModel.Design.ActivityDesigner.HitTest(System.Drawing.Point)" /> method.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.HitTestLocations.None">
      <summary>Indicates that no part of the designer was hit.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.HitTestLocations.Designer">
      <summary>Indicates that any part of the designer was hit.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.HitTestLocations.ActionArea">
      <summary>Indicates the area contained by the expand button was hit.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.HitTestLocations.Left">
      <summary>Indicates that the left part of the designer was hit.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.HitTestLocations.Top">
      <summary>Indicates the top of the designer was hit.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.HitTestLocations.Right">
      <summary>Indicates the right part of the designer was hit.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.HitTestLocations.Bottom">
      <summary>Indicates that the bottom of the designer was hit. </summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.HitTestLocations.Connector">
      <summary>Indicates that a connector on the designer was hit.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.IDesignerGlyphProvider">
      <summary>Defines the method that glyph provider classes use to generate an array of glyphs to display on an activity designer.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.IDesignerGlyphProviderService">
      <summary>Allows activity designer developers to add custom glyph providers to an activity designer.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.IDesignerVerbProvider">
      <summary>Defines a means for an <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> to return its designer verbs.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.IDesignerVerbProviderService">
      <summary>Allows activity designer developers to add custom designer verb providers to an activity designer.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.IExtendedUIService">
      <summary>Defines the methods that workflow designer hosts can call to perform advanced UI operations. </summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.IExtendedUIService2">
      <summary>Defines the methods that workflow designer hosts can call to determine the environment settings.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.IIdentifierCreationService">
      <summary>Provides a mechanism to create uniquely named identifiers throughout a specified range of activities.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.IMemberCreationService">
      <summary>Defines methods to dynamically create, update and remove code elements for a type at design time. Methods are also provided that allow you to display code at design time.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.IPersistUIState">
      <summary>Defines methods that workflow designers and activity designers use to save UI state information to and restore UI state information from a binary stream. </summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ITypeFilterProvider">
      <summary>Provides members that classes use to filter types that are displayed in class browser dialog boxes that are displayed by the workflow designer.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ITypeProviderCreator">
      <summary>Defines a group of methods that classes can use to create a type provider for an activity or workflow designer.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.IWorkflowRootDesigner">
      <summary>Defines the invoking designer and message filters properties and the method that determines whether an activity is supported for all workflow root designers.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.LineAnchor">
      <summary>Determines the shapes of connector points on a workflow design surface.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.LineAnchor.None">
      <summary>There is no connector point.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.LineAnchor.Arrow">
      <summary>The connector point is an arrow.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.LineAnchor.ArrowAnchor">
      <summary>The connector point is an arrow anchor.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.LineAnchor.Diamond">
      <summary>The connector point is a diamond.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.LineAnchor.DiamondAnchor">
      <summary>The connector point is an diamond anchor.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.LineAnchor.Round">
      <summary>The connector point is a circle.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.LineAnchor.RoundAnchor">
      <summary>The connector point is a circle anchor.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.LineAnchor.Rectangle">
      <summary>The connector point is a rectangle.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.LineAnchor.RectangleAnchor">
      <summary>The connector point is a rectangle anchor.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.LineAnchor.RoundedRectangle">
      <summary>The connector point is a rounded rectangle.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.LineAnchor.RoundedRectangleAnchor">
      <summary>The connector point is a rounded rectangle anchor.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.LockedActivityGlyph">
      <summary>Provides a glyph for an <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> to display when the activity associated with the designer cannot be modified.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner">
      <summary>Provides methods and properties for all activity designers that display parallel vertical layouts on a workflow design surface.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ReadOnlyActivityGlyph">
      <summary>Provides a glyph for an <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> to display when the activity it is associated with is set to read only at design time.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.SelectionGlyph">
      <summary>Provides methods and properties for all glyph classes that an <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> displays when it is selected on the workflow design surface.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.SequenceDesigner">
      <summary>Provides design-time support for <see cref="T:System.Workflow.Activities.SequenceActivity" /> and all classes that derive from it.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.SequenceDesignerAccessibleObject">
      <summary>Implements an accessibility object that SequentialActivityDesigner classes use to adjust the designer user interface for users who have impairments.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner">
      <summary>Defines properties and methods for all activity designers that have a sequential vertical layout on the workflow design surface.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter">
      <summary>Represents a header or footer that is associated with a <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" />.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner">
      <summary>Contains properties and methods to provide consistent look and feel to all root designers on a workflow design surface.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ShadowGlyph">
      <summary>Provides a drop shadow for display by <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> classes.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner">
      <summary>Provides common methods and properties for composite activity designers that contain structured layouts. </summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.TextQuality">
      <summary>Specifies the text rendering settings for the AmbientTheme class.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.TextQuality.Aliased">
      <summary>The ambient text quality setting is aliased.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.TextQuality.AntiAliased">
      <summary>The ambient text quality setting is antialiased.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ThemeConfigurationDialog">
      <summary>Represents a common dialog box that allows the user to specify a workflow theme to apply to a workflow design surface. This class cannot be inherited. </summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ThemeType">
      <summary>Specifies the type of theme displayed in the Options dialog box.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.ThemeType.Default">
      <summary>The theme settings are provided by the default workflow theme.</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.ThemeType.System">
      <summary>The theme settings are provided by the operating system. </summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.ThemeType.UserDefined">
      <summary>The theme settings are provided by user-defined themes.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.TypeBrowserDialog">
      <summary>Represents a dialog box that allows the user to choose a type. This class cannot be inherited. </summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.TypeBrowserEditor">
      <summary>Provides a user interface for representing and editing the values the Windows Workflow Foundation types in an object browser associated with a workflow designer.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.TypeFilterProviderAttribute">
      <summary>Specifies the class a type or member uses to filter the types that are displayed in the class browser dialog box. This class cannot be inherited. </summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader">
      <summary>Provides common designer loader functionality that can be used to implement custom workflow designer loaders.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter">
      <summary>Provides a base class for all workflow message filters.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.WorkflowMenuCommands">
      <summary>Defines a set of <see cref="T:System.ComponentModel.Design.CommandID" /> fields that each corresponds to a command function provided by the workflow designers. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.WorkflowOutline">
      <summary>Renders the document outline for the workflow currently being designed in the workflow designer.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.WorkflowOutlineNode">
      <summary>Represents a node in a workflow outline document displayed in the workflow designer.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.WorkflowPageSetupDialog">
      <summary>Represents the page setup dialog for the workflow designer when a user selects the Page Setup… command. This class cannot be inherited. </summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.WorkflowTheme">
      <summary>Provides the look and feel property settings to a workflow in design-time environment.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.WorkflowView">
      <summary>Provides a design surface, which renders a visual representation of process flow.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.WorkflowViewAccessibleObject">
      <summary>Implements an accessibility object that <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> classes use to adjust the designer user interface for users with disabilities.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.FaultHandlerActivity">
      <summary>Represents the activity class used to handle an <see cref="T:System.Exception" /> of the type specified by the <see cref="P:System.Workflow.ComponentModel.FaultHandlerActivity.FaultType" /> property. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.FaultHandlersActivity">
      <summary>Represents a <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> that has an ordered list of child activities of type <see cref="T:System.Workflow.ComponentModel.FaultHandlerActivity" />. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.GetValueOverride">
      <summary>Allows a custom override of the <see cref="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" /> logic associated with a dependency property that is defined on a dependency object.</summary>
      <param name="d">The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" /> method.</param>
      <returns>An <see cref="T:System.Object" /> that represents the value of the designated <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.IActivityEventListener`1">
      <summary>Defines the interface for an object that listens for an event.</summary>
      <typeparam name="T">The type of the event argument.</typeparam>
    </member>
    <member name="T:System.Workflow.ComponentModel.ICompensatableActivity">
      <summary>Defines the interface required by an <see cref="T:System.Workflow.ComponentModel.Activity" /> that can be compensated.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider">
      <summary>Provides a property type to the bind infrastructure. It is implemented by activities that contain a property of variable type, where the type can vary depending on other activity settings.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.IStartWorkflow">
      <summary>Defines a service that can be obtained from an <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> for the purpose of starting a new workflow instance.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.IWorkflowChangeDiff">
      <summary>Supports mining of workflow changes.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.PersistOnCloseAttribute">
      <summary>Indicates that the current workflow instance must be persisted when the adorned activity completes its execution. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.PropertyMetadata">
      <summary>Represents the behavior of a dependency property.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.QueueEventArgs">
      <summary>Represents the event arguments for a workflow queue-related event.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.RemovedActivityAction">
      <summary>Represents a proposed removal of an <see cref="T:System.Workflow.ComponentModel.Activity" /> from a <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> within a running workflow instance.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager">
      <summary>Manages serialization of activities into designer-generated source code segments before compilation.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializer">
      <summary>Represents a class that provides the CodeDOM serialization services to an activity at design time.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Serialization.ActivityMarkupSerializer">
      <summary>Provides extensible Application Markup Language (XAML) serialization services for an <see cref="T:System.Workflow.ComponentModel.Activity" /> at design time.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Serialization.ActivitySurrogateSelector">
      <summary>Selects the surrogate that can be used to serialize an <see cref="T:System.Workflow.ComponentModel.Activity" />. This class cannot be inherited. </summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Serialization.ActivityTypeCodeDomSerializer">
      <summary>Serializes an <see cref="T:System.Workflow.ComponentModel.Activity" /> to a new type.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Serialization.CompositeActivityMarkupSerializer">
      <summary>Provides extensible Application Markup Language (XAML) serialization services for a <see cref="T:System.Workflow.ComponentModel.CompositeActivity" />.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Serialization.ConstructorArgumentAttribute">
      <summary>Carries argument name information for the decorated class.  This class cannot be inherited. </summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Serialization.ContentPropertyAttribute">
      <summary>Contains the name for the content property of the decorated class.  Marking a type with this attribute causes the data in that type to be serialized without the enclosing property name tags. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Serialization.DependencyObjectCodeDomSerializer">
      <summary>Provides <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> objects with CodeDOM serialization services. This is the base class from which other CodeDOM serializers, such as the <see cref="T:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializer" />, are inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Serialization.MarkupExtension">
      <summary>Represents the abstract class for all Markup extensions for types. This class must be inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Serialization.RuntimeNamePropertyAttribute">
      <summary>Carries the run-time name for an <see cref="T:System.Object" /> decorated with this <see cref="T:System.Attribute" />. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException">
      <summary>The exception that is thrown by methods that perform serialization and deserialization. </summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager">
      <summary>Manages design-time serialization to and from extensible Application Markup Language (XAML) for workflows.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer">
      <summary>Provides the extensible Application Markup Language (XAML) serialization services to workflows at design time.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Serialization.XmlnsDefinitionAttribute">
      <summary>Can be optionally applied to a workflow assembly. It defines a mapping between a common language runtime namespace that is defined in the current assembly and an XML namespace. This information is used in extensible Application Markup Language (XAML) serialization/deserialization when activities or workflows that are defined in the assembly decorated with this attribute are used. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Serialization.XmlnsPrefixAttribute">
      <summary>Contains XML namespace and prefix information for the decorated class.  This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.SetValueOverride">
      <summary>Allows a custom override of the <see cref="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" /> logic associated with a dependency property that is defined on a dependency object. </summary>
      <param name="d">The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />  method.</param>
      <param name="value">The <see cref="T:System.Object" /> to set the value to.</param>
    </member>
    <member name="T:System.Workflow.ComponentModel.SuspendActivity">
      <summary>Suspends the running workflow instance when executed. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.SynchronizationScopeActivity">
      <summary>Represents a section of workflow that requires controlled access to shared variables.  If two or more instances of a <see cref="T:System.Workflow.ComponentModel.SynchronizationScopeActivity" /> access the same variables, then the execution of these activities is effectively serialized. This class cannot be inherited. </summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.TerminateActivity">
      <summary>Terminates the running workflow instance when an abnormal situation occurs. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.ThrowActivity">
      <summary>Models the throwing of an exception. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.TransactionScopeActivity">
      <summary>A section of workflow which demarcates a transaction boundary. A new <see cref="T:System.Transactions.Transaction" /> is started when this <see cref="T:System.Workflow.ComponentModel.Activity" /> begins executing and the transaction commits when the <see cref="T:System.Workflow.ComponentModel.Activity" /> closes successfully. This class cannot be inherited. </summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.WorkflowChangeAction">
      <summary>An abstract base class from which all classes that represent proposed changes to a running workflow instance must derive.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.WorkflowChanges">
      <summary>Represents a set of proposed changes to a running workflow instance.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.WorkflowParameterBinding">
      <summary>A general-purpose class that represents a binding to a named parameter. This class cannot be inherited. </summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection">
      <summary>Represents a <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> of type <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBinding" />. This class may not be inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.WorkflowTerminatedException">
      <summary>Represents the <see cref="T:System.Exception" /> that is raised when a workflow is terminated. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.WorkflowTransactionOptions">
      <summary>Container for workflow transaction type options. This class cannot be inherited.</summary>
    </member>
  </members>
</doc>