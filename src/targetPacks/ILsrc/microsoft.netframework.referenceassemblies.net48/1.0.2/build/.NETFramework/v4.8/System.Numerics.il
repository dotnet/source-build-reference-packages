
//  Microsoft (R) .NET IL Disassembler.  Version 5.0.0


// ----- DOS Header:
// Magic:                      0x5a4d
// Bytes on last page:         0x0090
// Pages in file:              0x0003
// Relocations:                0x0000
// Size of header (paragraphs):0x0004
// Min extra paragraphs:       0x0000
// Max extra paragraphs:       0xffff
// Initial (relative) SS:      0x0000
// Initial SP:                 0x00b8
// Checksum:                   0x0000
// Initial IP:                 0x0000
// Initial (relative) CS:      0x0000
// File addr. of reloc table:  0x0040
// Overlay number:             0x0000
// OEM identifier:             0x0000
// OEM info:                   0x0000
// File addr. of COFF header:  0x0080
// ----- COFF/PE Headers:
// Signature:                  0x00004550
// ----- COFF Header:
// Machine:                    0x014c
// Number of sections:         0x0003
// Time-date stamp:            0x5c9c7002
// Ptr to symbol table:        0x00000000
// Number of symbols:          0x00000000
// Size of optional header:    0x00e0
// Characteristics:            0x2022
// ----- PE Optional Header (32 bit):
// Magic:                          0x010b
// Major linker version:           0x30
// Minor linker version:           0x00
// Size of code:                   0x00005e00
// Size of init.data:              0x00000800
// Size of uninit.data:            0x00000000
// Addr. of entry point:           0x00007caa
// Base of code:                   0x00002000
// Base of data:                   0x00008000
// Image base:                     0x61f60000
// Section alignment:              0x00002000
// File alignment:                 0x00000200
// Major OS version:               0x0004
// Minor OS version:               0x0000
// Major image version:            0x0000
// Minor image version:            0x0000
// Major subsystem version:        0x0006
// Minor subsystem version:        0x0000
// Size of image:                  0x0000c000
// Size of headers:                0x00000200
// Checksum:                       0x00010bed
// Subsystem:                      0x0003
// DLL characteristics:            0x8560
// Size of stack reserve:          0x00100000
// Size of stack commit:           0x00001000
// Size of heap reserve:           0x00100000
// Size of heap commit:            0x00001000
// Loader flags:                   0x00000000
// Directories:                    0x00000010
// 0x00000000 [0x00000000] address [size] of Export Directory:          
// 0x00007c58 [0x0000004f] address [size] of Import Directory:          
// 0x00008000 [0x00000440] address [size] of Resource Directory:        
// 0x00000000 [0x00000000] address [size] of Exception Directory:       
// 0x00006800 [0x00003e30] address [size] of Security Directory:        
// 0x0000a000 [0x0000000c] address [size] of Base Relocation Table:     
// 0x00000000 [0x00000000] address [size] of Debug Directory:           
// 0x00000000 [0x00000000] address [size] of Architecture Specific:     
// 0x00000000 [0x00000000] address [size] of Global Pointer:            
// 0x00000000 [0x00000000] address [size] of TLS Directory:             
// 0x00000000 [0x00000000] address [size] of Load Config Directory:     
// 0x00000000 [0x00000000] address [size] of Bound Import Directory:    
// 0x00002000 [0x00000008] address [size] of Import Address Table:      
// 0x00000000 [0x00000000] address [size] of Delay Load IAT:            
// 0x00002008 [0x00000048] address [size] of CLR Header:                


// Image sections:
//              .text
//              0x00005d30 Virtual Size
//              0x00002000 Virtual Address
//              0x00005e00 Size of Raw Data
//              0x00000200 Pointer to Raw Data
//              0x00000000 Pointer to Relocations
//              0x00000000 Pointer to Linenumbers
//                  0x0000 Number of Relocations
//                  0x0000 Number of Linenumbers
//              0x60000020 Characteristics
//                         CNT_CODE
//                         MEM_EXECUTE
//                         MEM_READ

//              .rsrc
//              0x00000440 Virtual Size
//              0x00008000 Virtual Address
//              0x00000600 Size of Raw Data
//              0x00006000 Pointer to Raw Data
//              0x00000000 Pointer to Relocations
//              0x00000000 Pointer to Linenumbers
//                  0x0000 Number of Relocations
//                  0x0000 Number of Linenumbers
//              0x40000040 Characteristics
//                         CNT_INITIALIZED_DATA
//                         MEM_READ

//              .reloc
//              0x0000000c Virtual Size
//              0x0000a000 Virtual Address
//              0x00000200 Size of Raw Data
//              0x00006600 Pointer to Raw Data
//              0x00000000 Pointer to Relocations
//              0x00000000 Pointer to Linenumbers
//                  0x0000 Number of Relocations
//                  0x0000 Number of Linenumbers
//              0x42000040 Characteristics
//                         CNT_INITIALIZED_DATA
//                         MEM_DISCARDABLE
//                         MEM_READ

// Base Relocation Table
//              0x00007000 Page RVA
//              0x0000000c Block Size
//              0x00000002 Number of Entries
//              Entry 1: Type 0x3 Offset 0x00000cac
//              Entry 2: Type 0x0 Offset 0x00000000

// Import Address Table
//     DLL : mscoree.dll
//              0x00002000 Import Address Table
//              0x00007c9a Import Name Table
//              0          Time Date Stamp
//              0          Index of First Forwarder Reference
//
//              0x0000  _CorDllMain

// Delay Load Import Address Table
// No data.

// Entry point code:
//FF 25 00 20 F6 61 


// ----- CLR Header:
// Header size:                        0x00000048
// Major runtime version:              0x0002
// Minor runtime version:              0x0005
// 0x00002248 [0x00004ff8] address [size] of Metadata Directory:        
// Flags:                              0x00000009
// Entry point token:                  0x00000000
// 0x00007240 [0x00000918] address [size] of Resources Directory:       
// 0x00007b58 [0x00000100] address [size] of Strong Name Signature:     
// 0x00000000 [0x00000000] address [size] of CodeManager Table:         
// 0x00000000 [0x00000000] address [size] of VTableFixups Directory:    
// 0x00000000 [0x00000000] address [size] of Export Address Table:      
// 0x00000000 [0x00000000] address [size] of Precompile Header:         

// Metadata Header
//    Storage Signature:
//              0x424a5342 Signature
//                  0x0001 Major Version
//                  0x0001 Minor Version
//              0x00000000 Extra Data Offset
//              0x0000000c Version String Length
//              'v4.0.30319' Version String
//    Storage Header:
//                    0x00 Flags
//                  0x0005 Number of Streams
//    Stream 1:
//              0x0000006c Offset
//              0x00003480 Size
//              '#~' Name
//    Stream 2:
//              0x000034ec Offset
//              0x00000ee0 Size
//              '#Strings' Name
//    Stream 3:
//              0x000043cc Offset
//              0x00000008 Size
//              '#US' Name
//    Stream 4:
//              0x000043d4 Offset
//              0x00000010 Size
//              '#GUID' Name
//    Stream 5:
//              0x000043e4 Offset
//              0x00000c14 Size
//              '#Blob' Name

//    Metadata Stream Header:
//              0x00000000 Reserved
//                    0x02 Major
//                    0x00 Minor
//                    0x00 Heaps
//                    0x01 Rid
//      0x0000030929a0df57 MaskValid
//      0x000016003301fa00 Sorted

// Code Manager Table:
//  default


// Export Address Table Jumps:
// No data.

// File size            : 42544
// PE header size       : 512 (496 used)    ( 1.20%)
// PE additional info   : 17179             (40.38%)
// Num.of PE sections   : 3
// CLR header size     : 72                 ( 0.17%)
// CLR meta-data size  : 20472              (48.12%)
// CLR additional info : 2584               ( 6.07%)
// CLR method headers  : 500                ( 1.18%)
// Managed code         : 0                 ( 0.00%)
// Data                 : 2048              ( 4.81%)
// Unaccounted          : -823              (-1.93%)

// Num.of PE sections   : 3
//   .text    - 24064
//   .rsrc    - 1536
//   .reloc   - 512

// CLR meta-data size  : 20472
//   Module        -    1 (10 bytes)
//   TypeDef       -   13 (182 bytes)     0 interfaces, 0 explicit layout
//   TypeRef       -   40 (240 bytes)
//   MethodDef     -  478 (6692 bytes)    0 abstract, 0 native, 478 bodies
//   FieldDef      -   52 (312 bytes)     4 constant
//   MemberRef     -   26 (156 bytes)
//   ParamDef      -  741 (4446 bytes)
//   Constant      -    7 (42 bytes)
//   CustomAttribute-  104 (624 bytes)
//   ClassLayout   -    1 (8 bytes)
//   InterfaceImpl -   16 (64 bytes)
//   PropertyMap   -    8 (32 bytes)
//   Property      -   35 (210 bytes)
//   MethodSemantic-   37 (222 bytes)
//   Security      -    1 (6 bytes)
//   TypeSpec      -   10 (20 bytes)
//   Assembly      -    1 (22 bytes)
//   AssemblyRef   -    1 (20 bytes)
//   ManifestResource-    1 (12 bytes)
//   NestedClass   -    1 (4 bytes)
//   FieldRVA      -    1 (6 bytes)
//   Strings       -  3807 bytes
//   Blobs         -  3092 bytes
//   UserStrings   -     8 bytes
//   Guids         -    16 bytes
//   Uncategorized -   219 bytes

// CLR additional info : 2584
//   Resources         - 2328

// CLR method headers : 500
//   Num.of method bodies  - 478
//   Num.of fat headers    - 2
//   Num.of tiny headers   - 476

// Managed code : 0
//   Ave method size - 0
// Classes defined in this module:
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Class BigInteger                     (public) (sequential) (ansi) (sealed) 
// Class Complex                        (public) (sequential) (ansi) (sealed) 
// Class JitIntrinsicAttribute          (auto) (ansi) 
// Class Matrix3x2                      (public) (sequential) (ansi) (sealed) 
// Class Matrix4x4                      (public) (sequential) (ansi) (sealed) 
// Class Plane                          (public) (sequential) (ansi) (sealed) 
// Class Quaternion                     (public) (sequential) (ansi) (sealed) 
// Class Vector2                        (public) (sequential) (ansi) (sealed) 
// Class Vector3                        (public) (sequential) (ansi) (sealed) 
// Class Vector4                        (public) (sequential) (ansi) (sealed) 
// Class <PrivateImplementationDetails> (auto) (ansi) (sealed) 
// Class __StaticArrayInitTypeSize=128  (explicit) (ansi) (sealed) (nested private) 
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


// Metadata version: v4.0.30319
.assembly extern /*23000001*/ mscorlib
{
  .publickeytoken = (B7 7A 5C 56 19 34 E0 89 )                         // .z\V.4..
  .ver 4:0:0:0
}
.assembly /*20000001*/ noplatform System.Numerics
{
  .custom /*0C000002:0A000001*/ instance void [mscorlib/*23000001*/]System.Runtime.CompilerServices.CompilationRelaxationsAttribute/*0100000B*/::.ctor(int32) /* 0A000001 */ = ( 01 00 08 00 00 00 00 00 ) 

  // --- The following custom attribute is added automatically, do not uncomment -------
  //  .custom /*0C000003:0A000002*/ instance void [mscorlib/*23000001*/]System.Diagnostics.DebuggableAttribute/*0100000C*/::.ctor(valuetype [mscorlib/*23000001*/]System.Diagnostics.DebuggableAttribute/*0100000C*//DebuggingModes/*0100000D*/) /* 0A000002 */ = ( 01 00 02 00 00 00 00 00 ) 

  .custom /*0C000004:0A000003*/ instance void [mscorlib/*23000001*/]System.Runtime.InteropServices.ComVisibleAttribute/*0100000E*/::.ctor(bool) /* 0A000003 */ = ( 01 00 00 00 00 ) 
  .custom /*0C000005:0A000004*/ instance void [mscorlib/*23000001*/]System.CLSCompliantAttribute/*0100000F*/::.ctor(bool) /* 0A000004 */ = ( 01 00 01 00 00 ) 
  .custom /*0C000006:0A000005*/ instance void [mscorlib/*23000001*/]System.Security.AllowPartiallyTrustedCallersAttribute/*01000010*/::.ctor() /* 0A000005 */ = ( 01 00 00 00 ) 
  .custom /*0C000007:0A000006*/ instance void [mscorlib/*23000001*/]System.Security.SecurityRulesAttribute/*01000011*/::.ctor(valuetype [mscorlib/*23000001*/]System.Security.SecurityRuleSet/*01000012*/) /* 0A000006 */ = ( 01 00 02 01 00 54 02 1B 53 6B 69 70 56 65 72 69   // .....T..SkipVeri
                                                                                                                                                                                                                              66 69 63 61 74 69 6F 6E 49 6E 46 75 6C 6C 54 72   // ficationInFullTr
                                                                                                                                                                                                                              75 73 74 01 )                                     // ust.
  .custom /*0C000008:0A000007*/ instance void [mscorlib/*23000001*/]System.Reflection.AssemblyTitleAttribute/*01000013*/::.ctor(string) /* 0A000007 */ = ( 01 00 13 53 79 73 74 65 6D 2E 4E 75 6D 65 72 69   // ...System.Numeri
                                                                                                                                                           63 73 2E 64 6C 6C 00 00 )                         // cs.dll..
  .custom /*0C000009:0A000008*/ instance void [mscorlib/*23000001*/]System.Reflection.AssemblyDescriptionAttribute/*01000014*/::.ctor(string) /* 0A000008 */ = ( 01 00 13 53 79 73 74 65 6D 2E 4E 75 6D 65 72 69   // ...System.Numeri
                                                                                                                                                                 63 73 2E 64 6C 6C 00 00 )                         // cs.dll..
  .custom /*0C00000A:0A000009*/ instance void [mscorlib/*23000001*/]System.Reflection.AssemblyDefaultAliasAttribute/*01000015*/::.ctor(string) /* 0A000009 */ = ( 01 00 13 53 79 73 74 65 6D 2E 4E 75 6D 65 72 69   // ...System.Numeri
                                                                                                                                                                  63 73 2E 64 6C 6C 00 00 )                         // cs.dll..
  .custom /*0C00000B:0A00000A*/ instance void [mscorlib/*23000001*/]System.Reflection.AssemblyCompanyAttribute/*01000016*/::.ctor(string) /* 0A00000A */ = ( 01 00 15 4D 69 63 72 6F 73 6F 66 74 20 43 6F 72   // ...Microsoft Cor
                                                                                                                                                             70 6F 72 61 74 69 6F 6E 00 00 )                   // poration..
  .custom /*0C00000C:0A00000B*/ instance void [mscorlib/*23000001*/]System.Reflection.AssemblyProductAttribute/*01000017*/::.ctor(string) /* 0A00000B */ = ( 01 00 1A 4D 69 63 72 6F 73 6F 66 74 C2 AE 20 2E   // ...Microsoft.. .
                                                                                                                                                             4E 45 54 20 46 72 61 6D 65 77 6F 72 6B 00 00 )    // NET Framework..
  .custom /*0C00000D:0A00000C*/ instance void [mscorlib/*23000001*/]System.Reflection.AssemblyCopyrightAttribute/*01000018*/::.ctor(string) /* 0A00000C */ = ( 01 00 2F C2 A9 20 4D 69 63 72 6F 73 6F 66 74 20   // ../.. Microsoft 
                                                                                                                                                               43 6F 72 70 6F 72 61 74 69 6F 6E 2E 20 20 41 6C   // Corporation.  Al
                                                                                                                                                               6C 20 72 69 67 68 74 73 20 72 65 73 65 72 76 65   // l rights reserve
                                                                                                                                                               64 2E 00 00 )                                     // d...
  .custom /*0C00000E:0A00000D*/ instance void [mscorlib/*23000001*/]System.Reflection.AssemblyFileVersionAttribute/*01000019*/::.ctor(string) /* 0A00000D */ = ( 01 00 0A 34 2E 38 2E 33 37 36 31 2E 30 00 00 )    // ...4.8.3761.0..
  .custom /*0C00000F:0A00000E*/ instance void [mscorlib/*23000001*/]System.Reflection.AssemblyInformationalVersionAttribute/*0100001A*/::.ctor(string) /* 0A00000E */ = ( 01 00 0A 34 2E 38 2E 33 37 36 31 2E 30 00 00 )    // ...4.8.3761.0..
  .custom /*0C000010:0A00000F*/ instance void [mscorlib/*23000001*/]System.Resources.SatelliteContractVersionAttribute/*0100001B*/::.ctor(string) /* 0A00000F */ = ( 01 00 07 34 2E 30 2E 30 2E 30 00 00 )             // ...4.0.0.0..
  .custom /*0C000011:0A000010*/ instance void [mscorlib/*23000001*/]System.Resources.NeutralResourcesLanguageAttribute/*0100001C*/::.ctor(string) /* 0A000010 */ = ( 01 00 05 65 6E 2D 55 53 00 00 )                   // ...en-US..
  .custom /*0C000012:0A000011*/ instance void [mscorlib/*23000001*/]System.Reflection.AssemblyDelaySignAttribute/*0100001D*/::.ctor(bool) /* 0A000011 */ = ( 01 00 01 00 00 ) 
  .custom /*0C000013:0A000012*/ instance void [mscorlib/*23000001*/]System.Reflection.AssemblyKeyFileAttribute/*0100001E*/::.ctor(string) /* 0A000012 */ = ( 01 00 24 66 3A 5C 64 64 5C 74 6F 6F 6C 73 5C 64   // ..$f:\dd\tools\d
                                                                                                                                                             65 76 64 69 76 5C 45 63 6D 61 50 75 62 6C 69 63   // evdiv\EcmaPublic
                                                                                                                                                             4B 65 79 2E 73 6E 6B 00 00 )                      // Key.snk..
  .custom /*0C000014:0A000013*/ instance void [mscorlib/*23000001*/]System.Reflection.AssemblySignatureKeyAttribute/*0100001F*/::.ctor(string,
                                                                                                                                       string) /* 0A000013 */ = ( 01 00 82 40 30 30 32 34 30 30 30 30 30 63 38 30   // ...@002400000c80
                                                                                                                                                                  30 30 30 30 31 34 30 31 30 30 30 30 30 36 30 32   // 0000140100000602
                                                                                                                                                                  30 30 30 30 30 30 32 34 30 30 30 30 35 32 35 33   // 0000002400005253
                                                                                                                                                                  34 31 33 31 30 30 30 38 30 30 30 30 30 31 30 30   // 4131000800000100
                                                                                                                                                                  30 31 30 30 36 31 33 33 39 39 61 66 66 31 38 65   // 0100613399aff18e
                                                                                                                                                                  66 31 61 32 63 32 35 31 34 61 32 37 33 61 34 32   // f1a2c2514a273a42
                                                                                                                                                                  64 39 30 34 32 62 37 32 33 32 31 66 31 37 35 37   // d9042b72321f1757
                                                                                                                                                                  31 30 32 64 66 39 65 62 61 64 61 36 39 39 32 33   // 102df9ebada69923
                                                                                                                                                                  65 32 37 33 38 34 30 36 63 32 31 65 35 62 38 30   // e2738406c21e5b80
                                                                                                                                                                  31 35 35 32 61 62 38 64 32 30 30 61 36 35 61 32   // 1552ab8d200a65a2
                                                                                                                                                                  33 35 65 30 30 31 61 63 39 61 64 63 32 35 66 32   // 35e001ac9adc25f2
                                                                                                                                                                  64 38 31 31 65 62 30 39 34 39 36 61 34 63 36 61   // d811eb09496a4c6a
                                                                                                                                                                  35 39 64 34 36 31 39 35 38 39 63 36 39 66 35 62   // 59d4619589c69f5b
                                                                                                                                                                  61 66 30 63 34 31 37 39 61 34 37 33 31 31 64 39   // af0c4179a47311d9
                                                                                                                                                                  32 35 35 35 63 64 30 30 36 61 63 63 38 62 35 39   // 2555cd006acc8b59
                                                                                                                                                                  35 39 66 32 62 64 36 65 31 30 65 33 36 30 63 33   // 59f2bd6e10e360c3
                                                                                                                                                                  34 35 33 37 61 31 64 32 36 36 64 61 38 30 38 35   // 4537a1d266da8085
                                                                                                                                                                  38 35 36 35 38 33 63 38 35 64 38 31 64 61 37 66   // 856583c85d81da7f
                                                                                                                                                                  33 65 63 30 31 65 64 39 35 36 34 63 35 38 64 39   // 3ec01ed9564c58d9
                                                                                                                                                                  33 64 37 31 33 63 64 30 31 37 32 63 38 65 32 33   // 3d713cd0172c8e23
                                                                                                                                                                  61 31 30 66 30 32 33 39 62 38 30 63 39 36 62 30   // a10f0239b80c96b0
                                                                                                                                                                  37 37 33 36 66 35 64 38 62 30 32 32 35 34 32 61   // 7736f5d8b022542a
                                                                                                                                                                  34 65 37 34 32 35 31 61 35 66 34 33 32 38 32 34   // 4e74251a5f432824
                                                                                                                                                                  33 31 38 62 33 35 33 39 61 35 61 30 38 37 66 38   // 318b3539a5a087f8
                                                                                                                                                                  65 35 33 64 32 66 31 33 35 66 39 63 61 34 37 66   // e53d2f135f9ca47f
                                                                                                                                                                  33 62 62 32 65 31 30 61 66 66 30 61 66 30 38 34   // 3bb2e10aff0af084
                                                                                                                                                                  39 35 30 34 66 62 37 63 65 61 33 66 66 31 39 32   // 9504fb7cea3ff192
                                                                                                                                                                  64 63 38 64 65 30 65 64 61 64 36 34 63 36 38 65   // dc8de0edad64c68e
                                                                                                                                                                  66 64 65 33 34 63 35 36 64 33 30 32 61 64 35 35   // fde34c56d302ad55
                                                                                                                                                                  66 64 36 65 38 30 66 33 30 32 64 35 65 66 63 64   // fd6e80f302d5efcd
                                                                                                                                                                  65 61 65 39 35 33 36 35 38 64 33 34 35 32 35 36   // eae953658d345256
                                                                                                                                                                  31 62 35 66 33 36 63 35 34 32 65 66 64 62 64 64   // 1b5f36c542efdbdd
                                                                                                                                                                  39 66 38 38 38 35 33 38 64 33 37 34 63 65 66 31   // 9f888538d374cef1
                                                                                                                                                                  30 36 61 63 66 37 64 39 33 61 34 34 34 35 63 33   // 06acf7d93a4445c3
                                                                                                                                                                  63 37 33 63 64 39 31 31 66 30 35 37 31 61 61 66   // c73cd911f0571aaf
                                                                                                                                                                  33 64 35 34 64 61 31 32 62 31 31 64 64 65 63 33   // 3d54da12b11ddec3
                                                                                                                                                                  37 35 62 33 81 00 61 35 61 38 36 36 65 31 65 65   // 75b3..a5a866e1ee
                                                                                                                                                                  31 38 36 66 38 30 37 36 36 38 32 30 39 66 33 62   // 186f807668209f3b
                                                                                                                                                                  31 31 32 33 36 61 63 65 35 65 32 31 66 31 31 37   // 11236ace5e21f117
                                                                                                                                                                  38 30 33 61 33 31 34 33 61 62 62 31 32 36 64 64   // 803a3143abb126dd
                                                                                                                                                                  30 33 35 64 37 64 32 66 38 37 36 62 36 39 33 38   // 035d7d2f876b6938
                                                                                                                                                                  61 61 66 32 65 65 33 34 31 34 64 35 34 32 30 64   // aaf2ee3414d5420d
                                                                                                                                                                  37 35 33 36 32 31 34 30 30 64 62 34 34 61 34 39   // 753621400db44a49
                                                                                                                                                                  63 34 38 36 63 65 31 33 34 33 30 30 61 32 31 30   // c486ce134300a210
                                                                                                                                                                  36 61 64 62 36 62 64 62 34 33 33 35 39 30 66 65   // 6adb6bdb433590fe
                                                                                                                                                                  66 38 61 64 35 63 34 33 63 62 61 38 32 32 39 30   // f8ad5c43cba82290
                                                                                                                                                                  64 63 34 39 35 33 30 65 66 66 64 38 36 35 32 33   // dc49530effd86523
                                                                                                                                                                  64 39 34 38 33 63 30 30 66 34 35 38 61 66 34 36   // d9483c00f458af46
                                                                                                                                                                  38 39 30 30 33 36 62 30 65 32 63 36 31 64 30 37   // 890036b0e2c61d07
                                                                                                                                                                  37 64 37 66 62 61 63 34 36 37 61 35 30 36 65 62   // 7d7fbac467a506eb
                                                                                                                                                                  61 32 39 65 34 36 37 61 38 37 31 39 38 62 30 35   // a29e467a87198b05
                                                                                                                                                                  33 63 37 34 39 61 61 32 61 34 64 32 38 34 30 63   // 3c749aa2a4d2840c
                                                                                                                                                                  37 38 34 65 36 64 00 00 )                         // 784e6d..
  .custom /*0C000015:0A000014*/ instance void [mscorlib/*23000001*/]System.Runtime.CompilerServices.RuntimeCompatibilityAttribute/*01000020*/::.ctor() /* 0A000014 */ = ( 01 00 01 00 54 02 16 57 72 61 70 4E 6F 6E 45 78   // ....T..WrapNonEx
                                                                                                                                                                          63 65 70 74 69 6F 6E 54 68 72 6F 77 73 01 )       // ceptionThrows.
  .custom /*0C000016:0A000015*/ instance void [mscorlib/*23000001*/]System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute/*01000021*/::.ctor(valuetype [mscorlib/*23000001*/]System.Runtime.InteropServices.DllImportSearchPath/*01000022*/) /* 0A000015 */ = ( 01 00 02 08 00 00 00 00 ) 
  .custom /*0C000017:0A000016*/ instance void [mscorlib/*23000001*/]System.Runtime.CompilerServices.ReferenceAssemblyAttribute/*01000023*/::.ctor() /* 0A000016 */ = ( 01 00 00 00 ) 
  .permissionset reqmin
             = {class 'System.Security.Permissions.SecurityPermissionAttribute, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089' = {property bool 'SkipVerification' = bool(true)}}
  .publickey = (00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 ) 
  .hash algorithm 0x00008004
  .ver 4:0:0:0
}
.module System.Numerics.dll
// MVID: {7fc3391e-1be7-44f5-be29-237354d19046}
.custom /*0C000001:0A000017*/ instance void [mscorlib/*23000001*/]System.Security.UnverifiableCodeAttribute/*01000024*/::.ctor() /* 0A000017 */ = ( 01 00 00 00 ) 
.imagebase 0x61f60000
.file alignment 0x00000200
.stackreserve 0x00100000
.subsystem 0x0003       // WINDOWS_CUI
.corflags 0x00000009    //  ILONLY
// Image base: 0x00007F44B6569000


// =============== CLASS MEMBERS DECLARATION ===================

.class /*02000002*/ public sequential ansi serializable sealed beforefieldinit System.Numerics.BigInteger
       extends [mscorlib/*23000001*/]System.ValueType/*01000001*/
       implements [mscorlib/*23000001*/]System.IFormattable/*01000002*/,
                  [mscorlib/*23000001*/]System.IComparable/*01000003*/,
                  class [mscorlib/*23000001*/]System.IComparable`1/*01000004*/<valuetype System.Numerics.BigInteger/*02000002*/>/*1B000001*/,
                  class [mscorlib/*23000001*/]System.IEquatable`1/*01000005*/<valuetype System.Numerics.BigInteger/*02000002*/>/*1B000002*/
{
  .field /*04000001*/ private static literal int32 knMaskHighBit = int32(0x80000000)
  .field /*04000002*/ private static literal uint32 kuMaskHighBit = uint32(0x80000000)
  .field /*04000003*/ private static literal int32 kcbitUint = int32(0x00000020)
  .field /*04000004*/ private static literal int32 kcbitUlong = int32(0x00000040)
  .field /*04000005*/ private static literal int32 DecimalScaleFactorMask = int32(0x00FF0000)
  .field /*04000006*/ private static literal int32 DecimalSignMask = int32(0x80000000)
  .field /*04000007*/ assembly int32 _sign
  .field /*04000008*/ assembly uint32[] _bits
  .method /*06000001*/ public hidebysig specialname static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          get_Zero() cil managed
  // SIG: 00 00 11 08
  {
    // Method begins at RVA 0x2050
    // Code size       0 (0x0)
  } // end of method BigInteger::get_Zero

  .method /*06000002*/ public hidebysig specialname static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          get_One() cil managed
  // SIG: 00 00 11 08
  {
    // Method begins at RVA 0x2051
    // Code size       0 (0x0)
  } // end of method BigInteger::get_One

  .method /*06000003*/ public hidebysig specialname static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          get_MinusOne() cil managed
  // SIG: 00 00 11 08
  {
    // Method begins at RVA 0x2052
    // Code size       0 (0x0)
  } // end of method BigInteger::get_MinusOne

  .method /*06000004*/ public hidebysig specialname 
          instance bool  get_IsPowerOfTwo() cil managed
  // SIG: 20 00 02
  {
    // Method begins at RVA 0x2053
    // Code size       0 (0x0)
  } // end of method BigInteger::get_IsPowerOfTwo

  .method /*06000005*/ public hidebysig specialname 
          instance bool  get_IsZero() cil managed
  // SIG: 20 00 02
  {
    // Method begins at RVA 0x2054
    // Code size       0 (0x0)
  } // end of method BigInteger::get_IsZero

  .method /*06000006*/ public hidebysig specialname 
          instance bool  get_IsOne() cil managed
  // SIG: 20 00 02
  {
    // Method begins at RVA 0x2055
    // Code size       0 (0x0)
  } // end of method BigInteger::get_IsOne

  .method /*06000007*/ public hidebysig specialname 
          instance bool  get_IsEven() cil managed
  // SIG: 20 00 02
  {
    // Method begins at RVA 0x2056
    // Code size       0 (0x0)
  } // end of method BigInteger::get_IsEven

  .method /*06000008*/ public hidebysig specialname 
          instance int32  get_Sign() cil managed
  // SIG: 20 00 08
  {
    // Method begins at RVA 0x2057
    // Code size       0 (0x0)
  } // end of method BigInteger::get_Sign

  .method /*06000009*/ public hidebysig virtual 
          instance bool  Equals(object obj) cil managed
  // SIG: 20 01 02 1C
  {
    // Method begins at RVA 0x2058
    // Code size       0 (0x0)
  } // end of method BigInteger::Equals

  .method /*0600000A*/ public hidebysig virtual 
          instance int32  GetHashCode() cil managed
  // SIG: 20 00 08
  {
    // Method begins at RVA 0x2059
    // Code size       0 (0x0)
  } // end of method BigInteger::GetHashCode

  .method /*0600000B*/ public hidebysig instance bool 
          Equals(int64 other) cil managed
  // SIG: 20 01 02 0A
  {
    // Method begins at RVA 0x205a
    // Code size       0 (0x0)
  } // end of method BigInteger::Equals

  .method /*0600000C*/ public hidebysig instance bool 
          Equals(uint64 other) cil managed
  // SIG: 20 01 02 0B
  {
    .custom /*0C000019:0A000004*/ instance void [mscorlib/*23000001*/]System.CLSCompliantAttribute/*0100000F*/::.ctor(bool) /* 0A000004 */ = ( 01 00 00 00 00 ) 
    // Method begins at RVA 0x205b
    // Code size       0 (0x0)
  } // end of method BigInteger::Equals

  .method /*0600000D*/ public hidebysig newslot virtual final 
          instance bool  Equals(valuetype System.Numerics.BigInteger/*02000002*/ other) cil managed
  // SIG: 20 01 02 11 08
  {
    // Method begins at RVA 0x205c
    // Code size       0 (0x0)
  } // end of method BigInteger::Equals

  .method /*0600000E*/ public hidebysig instance int32 
          CompareTo(int64 other) cil managed
  // SIG: 20 01 08 0A
  {
    // Method begins at RVA 0x205d
    // Code size       0 (0x0)
  } // end of method BigInteger::CompareTo

  .method /*0600000F*/ public hidebysig instance int32 
          CompareTo(uint64 other) cil managed
  // SIG: 20 01 08 0B
  {
    .custom /*0C00001B:0A000004*/ instance void [mscorlib/*23000001*/]System.CLSCompliantAttribute/*0100000F*/::.ctor(bool) /* 0A000004 */ = ( 01 00 00 00 00 ) 
    // Method begins at RVA 0x205e
    // Code size       0 (0x0)
  } // end of method BigInteger::CompareTo

  .method /*06000010*/ public hidebysig newslot virtual final 
          instance int32  CompareTo(valuetype System.Numerics.BigInteger/*02000002*/ other) cil managed
  // SIG: 20 01 08 11 08
  {
    // Method begins at RVA 0x205f
    // Code size       0 (0x0)
  } // end of method BigInteger::CompareTo

  .method /*06000011*/ public hidebysig newslot virtual final 
          instance int32  CompareTo(object obj) cil managed
  // SIG: 20 01 08 1C
  {
    // Method begins at RVA 0x2060
    // Code size       0 (0x0)
  } // end of method BigInteger::CompareTo

  .method /*06000012*/ public hidebysig instance uint8[] 
          ToByteArray() cil managed
  // SIG: 20 00 1D 05
  {
    // Method begins at RVA 0x2061
    // Code size       0 (0x0)
  } // end of method BigInteger::ToByteArray

  .method /*06000013*/ public hidebysig virtual 
          instance string  ToString() cil managed
  // SIG: 20 00 0E
  {
    // Method begins at RVA 0x2062
    // Code size       0 (0x0)
  } // end of method BigInteger::ToString

  .method /*06000014*/ public hidebysig instance string 
          ToString(class [mscorlib/*23000001*/]System.IFormatProvider/*01000007*/ provider) cil managed
  // SIG: 20 01 0E 12 1D
  {
    // Method begins at RVA 0x2063
    // Code size       0 (0x0)
  } // end of method BigInteger::ToString

  .method /*06000015*/ public hidebysig instance string 
          ToString(string format) cil managed
  // SIG: 20 01 0E 0E
  {
    // Method begins at RVA 0x2064
    // Code size       0 (0x0)
  } // end of method BigInteger::ToString

  .method /*06000016*/ public hidebysig newslot virtual final 
          instance string  ToString(string format,
                                    class [mscorlib/*23000001*/]System.IFormatProvider/*01000007*/ provider) cil managed
  // SIG: 20 02 0E 0E 12 1D
  {
    // Method begins at RVA 0x2065
    // Code size       0 (0x0)
  } // end of method BigInteger::ToString

  .method /*06000017*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(int32 'value') cil managed
  // SIG: 20 01 01 08
  {
    // Method begins at RVA 0x2066
    // Code size       0 (0x0)
  } // end of method BigInteger::.ctor

  .method /*06000018*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(uint32 'value') cil managed
  // SIG: 20 01 01 09
  {
    .custom /*0C00001C:0A000004*/ instance void [mscorlib/*23000001*/]System.CLSCompliantAttribute/*0100000F*/::.ctor(bool) /* 0A000004 */ = ( 01 00 00 00 00 ) 
    // Method begins at RVA 0x2067
    // Code size       0 (0x0)
  } // end of method BigInteger::.ctor

  .method /*06000019*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(int64 'value') cil managed
  // SIG: 20 01 01 0A
  {
    // Method begins at RVA 0x2068
    // Code size       0 (0x0)
  } // end of method BigInteger::.ctor

  .method /*0600001A*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(uint64 'value') cil managed
  // SIG: 20 01 01 0B
  {
    .custom /*0C00001D:0A000004*/ instance void [mscorlib/*23000001*/]System.CLSCompliantAttribute/*0100000F*/::.ctor(bool) /* 0A000004 */ = ( 01 00 00 00 00 ) 
    // Method begins at RVA 0x2069
    // Code size       0 (0x0)
  } // end of method BigInteger::.ctor

  .method /*0600001B*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(float32 'value') cil managed
  // SIG: 20 01 01 0C
  {
    // Method begins at RVA 0x206a
    // Code size       0 (0x0)
  } // end of method BigInteger::.ctor

  .method /*0600001C*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(float64 'value') cil managed
  // SIG: 20 01 01 0D
  {
    // Method begins at RVA 0x206b
    // Code size       0 (0x0)
  } // end of method BigInteger::.ctor

  .method /*0600001D*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(valuetype [mscorlib/*23000001*/]System.Decimal/*01000008*/ 'value') cil managed
  // SIG: 20 01 01 11 21
  {
    // Method begins at RVA 0x206c
    // Code size       0 (0x0)
  } // end of method BigInteger::.ctor

  .method /*0600001E*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(uint8[] 'value') cil managed
  // SIG: 20 01 01 1D 05
  {
    .custom /*0C00001E:0A000004*/ instance void [mscorlib/*23000001*/]System.CLSCompliantAttribute/*0100000F*/::.ctor(bool) /* 0A000004 */ = ( 01 00 00 00 00 ) 
    // Method begins at RVA 0x206d
    // Code size       0 (0x0)
  } // end of method BigInteger::.ctor

  .method /*0600001F*/ public hidebysig static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          Parse(string 'value') cil managed
  // SIG: 00 01 11 08 0E
  {
    // Method begins at RVA 0x206e
    // Code size       0 (0x0)
  } // end of method BigInteger::Parse

  .method /*06000020*/ public hidebysig static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          Parse(string 'value',
                valuetype [mscorlib/*23000001*/]System.Globalization.NumberStyles/*01000009*/ style) cil managed
  // SIG: 00 02 11 08 0E 11 25
  {
    // Method begins at RVA 0x206f
    // Code size       0 (0x0)
  } // end of method BigInteger::Parse

  .method /*06000021*/ public hidebysig static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          Parse(string 'value',
                class [mscorlib/*23000001*/]System.IFormatProvider/*01000007*/ provider) cil managed
  // SIG: 00 02 11 08 0E 12 1D
  {
    // Method begins at RVA 0x2070
    // Code size       0 (0x0)
  } // end of method BigInteger::Parse

  .method /*06000022*/ public hidebysig static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          Parse(string 'value',
                valuetype [mscorlib/*23000001*/]System.Globalization.NumberStyles/*01000009*/ style,
                class [mscorlib/*23000001*/]System.IFormatProvider/*01000007*/ provider) cil managed
  // SIG: 00 03 11 08 0E 11 25 12 1D
  {
    // Method begins at RVA 0x2071
    // Code size       0 (0x0)
  } // end of method BigInteger::Parse

  .method /*06000023*/ public hidebysig static 
          bool  TryParse(string 'value',
                         [out] valuetype System.Numerics.BigInteger/*02000002*/& result) cil managed
  // SIG: 00 02 02 0E 10 11 08
  {
    // Method begins at RVA 0x2072
    // Code size       0 (0x0)
  } // end of method BigInteger::TryParse

  .method /*06000024*/ public hidebysig static 
          bool  TryParse(string 'value',
                         valuetype [mscorlib/*23000001*/]System.Globalization.NumberStyles/*01000009*/ style,
                         class [mscorlib/*23000001*/]System.IFormatProvider/*01000007*/ provider,
                         [out] valuetype System.Numerics.BigInteger/*02000002*/& result) cil managed
  // SIG: 00 04 02 0E 11 25 12 1D 10 11 08
  {
    // Method begins at RVA 0x2073
    // Code size       0 (0x0)
  } // end of method BigInteger::TryParse

  .method /*06000025*/ public hidebysig static 
          int32  Compare(valuetype System.Numerics.BigInteger/*02000002*/ left,
                         valuetype System.Numerics.BigInteger/*02000002*/ right) cil managed
  // SIG: 00 02 08 11 08 11 08
  {
    // Method begins at RVA 0x2074
    // Code size       0 (0x0)
  } // end of method BigInteger::Compare

  .method /*06000026*/ public hidebysig static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          Abs(valuetype System.Numerics.BigInteger/*02000002*/ 'value') cil managed
  // SIG: 00 01 11 08 11 08
  {
    // Method begins at RVA 0x2075
    // Code size       0 (0x0)
  } // end of method BigInteger::Abs

  .method /*06000027*/ public hidebysig static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          Add(valuetype System.Numerics.BigInteger/*02000002*/ left,
              valuetype System.Numerics.BigInteger/*02000002*/ right) cil managed
  // SIG: 00 02 11 08 11 08 11 08
  {
    // Method begins at RVA 0x2076
    // Code size       0 (0x0)
  } // end of method BigInteger::Add

  .method /*06000028*/ public hidebysig static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          Subtract(valuetype System.Numerics.BigInteger/*02000002*/ left,
                   valuetype System.Numerics.BigInteger/*02000002*/ right) cil managed
  // SIG: 00 02 11 08 11 08 11 08
  {
    // Method begins at RVA 0x2077
    // Code size       0 (0x0)
  } // end of method BigInteger::Subtract

  .method /*06000029*/ public hidebysig static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          Multiply(valuetype System.Numerics.BigInteger/*02000002*/ left,
                   valuetype System.Numerics.BigInteger/*02000002*/ right) cil managed
  // SIG: 00 02 11 08 11 08 11 08
  {
    // Method begins at RVA 0x2078
    // Code size       0 (0x0)
  } // end of method BigInteger::Multiply

  .method /*0600002A*/ public hidebysig static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          Divide(valuetype System.Numerics.BigInteger/*02000002*/ dividend,
                 valuetype System.Numerics.BigInteger/*02000002*/ divisor) cil managed
  // SIG: 00 02 11 08 11 08 11 08
  {
    // Method begins at RVA 0x2079
    // Code size       0 (0x0)
  } // end of method BigInteger::Divide

  .method /*0600002B*/ public hidebysig static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          Remainder(valuetype System.Numerics.BigInteger/*02000002*/ dividend,
                    valuetype System.Numerics.BigInteger/*02000002*/ divisor) cil managed
  // SIG: 00 02 11 08 11 08 11 08
  {
    // Method begins at RVA 0x207a
    // Code size       0 (0x0)
  } // end of method BigInteger::Remainder

  .method /*0600002C*/ public hidebysig static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          DivRem(valuetype System.Numerics.BigInteger/*02000002*/ dividend,
                 valuetype System.Numerics.BigInteger/*02000002*/ divisor,
                 [out] valuetype System.Numerics.BigInteger/*02000002*/& remainder) cil managed
  // SIG: 00 03 11 08 11 08 11 08 10 11 08
  {
    // Method begins at RVA 0x207b
    // Code size       0 (0x0)
  } // end of method BigInteger::DivRem

  .method /*0600002D*/ public hidebysig static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          Negate(valuetype System.Numerics.BigInteger/*02000002*/ 'value') cil managed
  // SIG: 00 01 11 08 11 08
  {
    // Method begins at RVA 0x207c
    // Code size       0 (0x0)
  } // end of method BigInteger::Negate

  .method /*0600002E*/ public hidebysig static 
          float64  Log(valuetype System.Numerics.BigInteger/*02000002*/ 'value') cil managed
  // SIG: 00 01 0D 11 08
  {
    // Method begins at RVA 0x207d
    // Code size       0 (0x0)
  } // end of method BigInteger::Log

  .method /*0600002F*/ public hidebysig static 
          float64  Log(valuetype System.Numerics.BigInteger/*02000002*/ 'value',
                       float64 baseValue) cil managed
  // SIG: 00 02 0D 11 08 0D
  {
    // Method begins at RVA 0x207e
    // Code size       0 (0x0)
  } // end of method BigInteger::Log

  .method /*06000030*/ public hidebysig static 
          float64  Log10(valuetype System.Numerics.BigInteger/*02000002*/ 'value') cil managed
  // SIG: 00 01 0D 11 08
  {
    // Method begins at RVA 0x207f
    // Code size       0 (0x0)
  } // end of method BigInteger::Log10

  .method /*06000031*/ public hidebysig static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          GreatestCommonDivisor(valuetype System.Numerics.BigInteger/*02000002*/ left,
                                valuetype System.Numerics.BigInteger/*02000002*/ right) cil managed
  // SIG: 00 02 11 08 11 08 11 08
  {
    // Method begins at RVA 0x2080
    // Code size       0 (0x0)
  } // end of method BigInteger::GreatestCommonDivisor

  .method /*06000032*/ public hidebysig static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          Max(valuetype System.Numerics.BigInteger/*02000002*/ left,
              valuetype System.Numerics.BigInteger/*02000002*/ right) cil managed
  // SIG: 00 02 11 08 11 08 11 08
  {
    // Method begins at RVA 0x2081
    // Code size       0 (0x0)
  } // end of method BigInteger::Max

  .method /*06000033*/ public hidebysig static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          Min(valuetype System.Numerics.BigInteger/*02000002*/ left,
              valuetype System.Numerics.BigInteger/*02000002*/ right) cil managed
  // SIG: 00 02 11 08 11 08 11 08
  {
    // Method begins at RVA 0x2082
    // Code size       0 (0x0)
  } // end of method BigInteger::Min

  .method /*06000034*/ public hidebysig static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          ModPow(valuetype System.Numerics.BigInteger/*02000002*/ 'value',
                 valuetype System.Numerics.BigInteger/*02000002*/ exponent,
                 valuetype System.Numerics.BigInteger/*02000002*/ modulus) cil managed
  // SIG: 00 03 11 08 11 08 11 08 11 08
  {
    // Method begins at RVA 0x2083
    // Code size       0 (0x0)
  } // end of method BigInteger::ModPow

  .method /*06000035*/ public hidebysig static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          Pow(valuetype System.Numerics.BigInteger/*02000002*/ 'value',
              int32 exponent) cil managed
  // SIG: 00 02 11 08 11 08 08
  {
    // Method begins at RVA 0x2084
    // Code size       0 (0x0)
  } // end of method BigInteger::Pow

  .method /*06000036*/ public hidebysig specialname static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          op_Implicit(uint8 'value') cil managed
  // SIG: 00 01 11 08 05
  {
    // Method begins at RVA 0x2085
    // Code size       0 (0x0)
  } // end of method BigInteger::op_Implicit

  .method /*06000037*/ public hidebysig specialname static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          op_Implicit(int8 'value') cil managed
  // SIG: 00 01 11 08 04
  {
    .custom /*0C00001F:0A000004*/ instance void [mscorlib/*23000001*/]System.CLSCompliantAttribute/*0100000F*/::.ctor(bool) /* 0A000004 */ = ( 01 00 00 00 00 ) 
    // Method begins at RVA 0x2086
    // Code size       0 (0x0)
  } // end of method BigInteger::op_Implicit

  .method /*06000038*/ public hidebysig specialname static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          op_Implicit(int16 'value') cil managed
  // SIG: 00 01 11 08 06
  {
    // Method begins at RVA 0x2087
    // Code size       0 (0x0)
  } // end of method BigInteger::op_Implicit

  .method /*06000039*/ public hidebysig specialname static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          op_Implicit(uint16 'value') cil managed
  // SIG: 00 01 11 08 07
  {
    .custom /*0C000020:0A000004*/ instance void [mscorlib/*23000001*/]System.CLSCompliantAttribute/*0100000F*/::.ctor(bool) /* 0A000004 */ = ( 01 00 00 00 00 ) 
    // Method begins at RVA 0x2088
    // Code size       0 (0x0)
  } // end of method BigInteger::op_Implicit

  .method /*0600003A*/ public hidebysig specialname static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          op_Implicit(int32 'value') cil managed
  // SIG: 00 01 11 08 08
  {
    // Method begins at RVA 0x2089
    // Code size       0 (0x0)
  } // end of method BigInteger::op_Implicit

  .method /*0600003B*/ public hidebysig specialname static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          op_Implicit(uint32 'value') cil managed
  // SIG: 00 01 11 08 09
  {
    .custom /*0C000021:0A000004*/ instance void [mscorlib/*23000001*/]System.CLSCompliantAttribute/*0100000F*/::.ctor(bool) /* 0A000004 */ = ( 01 00 00 00 00 ) 
    // Method begins at RVA 0x208a
    // Code size       0 (0x0)
  } // end of method BigInteger::op_Implicit

  .method /*0600003C*/ public hidebysig specialname static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          op_Implicit(int64 'value') cil managed
  // SIG: 00 01 11 08 0A
  {
    // Method begins at RVA 0x208b
    // Code size       0 (0x0)
  } // end of method BigInteger::op_Implicit

  .method /*0600003D*/ public hidebysig specialname static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          op_Implicit(uint64 'value') cil managed
  // SIG: 00 01 11 08 0B
  {
    .custom /*0C000022:0A000004*/ instance void [mscorlib/*23000001*/]System.CLSCompliantAttribute/*0100000F*/::.ctor(bool) /* 0A000004 */ = ( 01 00 00 00 00 ) 
    // Method begins at RVA 0x208c
    // Code size       0 (0x0)
  } // end of method BigInteger::op_Implicit

  .method /*0600003E*/ public hidebysig specialname static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          op_Explicit(float32 'value') cil managed
  // SIG: 00 01 11 08 0C
  {
    // Method begins at RVA 0x208d
    // Code size       0 (0x0)
  } // end of method BigInteger::op_Explicit

  .method /*0600003F*/ public hidebysig specialname static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          op_Explicit(float64 'value') cil managed
  // SIG: 00 01 11 08 0D
  {
    // Method begins at RVA 0x208e
    // Code size       0 (0x0)
  } // end of method BigInteger::op_Explicit

  .method /*06000040*/ public hidebysig specialname static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          op_Explicit(valuetype [mscorlib/*23000001*/]System.Decimal/*01000008*/ 'value') cil managed
  // SIG: 00 01 11 08 11 21
  {
    // Method begins at RVA 0x208f
    // Code size       0 (0x0)
  } // end of method BigInteger::op_Explicit

  .method /*06000041*/ public hidebysig specialname static 
          uint8  op_Explicit(valuetype System.Numerics.BigInteger/*02000002*/ 'value') cil managed
  // SIG: 00 01 05 11 08
  {
    // Method begins at RVA 0x2090
    // Code size       0 (0x0)
  } // end of method BigInteger::op_Explicit

  .method /*06000042*/ public hidebysig specialname static 
          int8  op_Explicit(valuetype System.Numerics.BigInteger/*02000002*/ 'value') cil managed
  // SIG: 00 01 04 11 08
  {
    .custom /*0C000023:0A000004*/ instance void [mscorlib/*23000001*/]System.CLSCompliantAttribute/*0100000F*/::.ctor(bool) /* 0A000004 */ = ( 01 00 00 00 00 ) 
    // Method begins at RVA 0x2091
    // Code size       0 (0x0)
  } // end of method BigInteger::op_Explicit

  .method /*06000043*/ public hidebysig specialname static 
          int16  op_Explicit(valuetype System.Numerics.BigInteger/*02000002*/ 'value') cil managed
  // SIG: 00 01 06 11 08
  {
    // Method begins at RVA 0x2092
    // Code size       0 (0x0)
  } // end of method BigInteger::op_Explicit

  .method /*06000044*/ public hidebysig specialname static 
          uint16  op_Explicit(valuetype System.Numerics.BigInteger/*02000002*/ 'value') cil managed
  // SIG: 00 01 07 11 08
  {
    .custom /*0C000024:0A000004*/ instance void [mscorlib/*23000001*/]System.CLSCompliantAttribute/*0100000F*/::.ctor(bool) /* 0A000004 */ = ( 01 00 00 00 00 ) 
    // Method begins at RVA 0x2093
    // Code size       0 (0x0)
  } // end of method BigInteger::op_Explicit

  .method /*06000045*/ public hidebysig specialname static 
          int32  op_Explicit(valuetype System.Numerics.BigInteger/*02000002*/ 'value') cil managed
  // SIG: 00 01 08 11 08
  {
    // Method begins at RVA 0x2094
    // Code size       0 (0x0)
  } // end of method BigInteger::op_Explicit

  .method /*06000046*/ public hidebysig specialname static 
          uint32  op_Explicit(valuetype System.Numerics.BigInteger/*02000002*/ 'value') cil managed
  // SIG: 00 01 09 11 08
  {
    .custom /*0C000025:0A000004*/ instance void [mscorlib/*23000001*/]System.CLSCompliantAttribute/*0100000F*/::.ctor(bool) /* 0A000004 */ = ( 01 00 00 00 00 ) 
    // Method begins at RVA 0x2095
    // Code size       0 (0x0)
  } // end of method BigInteger::op_Explicit

  .method /*06000047*/ public hidebysig specialname static 
          int64  op_Explicit(valuetype System.Numerics.BigInteger/*02000002*/ 'value') cil managed
  // SIG: 00 01 0A 11 08
  {
    // Method begins at RVA 0x2096
    // Code size       0 (0x0)
  } // end of method BigInteger::op_Explicit

  .method /*06000048*/ public hidebysig specialname static 
          uint64  op_Explicit(valuetype System.Numerics.BigInteger/*02000002*/ 'value') cil managed
  // SIG: 00 01 0B 11 08
  {
    .custom /*0C000026:0A000004*/ instance void [mscorlib/*23000001*/]System.CLSCompliantAttribute/*0100000F*/::.ctor(bool) /* 0A000004 */ = ( 01 00 00 00 00 ) 
    // Method begins at RVA 0x2097
    // Code size       0 (0x0)
  } // end of method BigInteger::op_Explicit

  .method /*06000049*/ public hidebysig specialname static 
          float32  op_Explicit(valuetype System.Numerics.BigInteger/*02000002*/ 'value') cil managed
  // SIG: 00 01 0C 11 08
  {
    // Method begins at RVA 0x2098
    // Code size       0 (0x0)
  } // end of method BigInteger::op_Explicit

  .method /*0600004A*/ public hidebysig specialname static 
          float64  op_Explicit(valuetype System.Numerics.BigInteger/*02000002*/ 'value') cil managed
  // SIG: 00 01 0D 11 08
  {
    // Method begins at RVA 0x2099
    // Code size       0 (0x0)
  } // end of method BigInteger::op_Explicit

  .method /*0600004B*/ public hidebysig specialname static 
          valuetype [mscorlib/*23000001*/]System.Decimal/*01000008*/ 
          op_Explicit(valuetype System.Numerics.BigInteger/*02000002*/ 'value') cil managed
  // SIG: 00 01 11 21 11 08
  {
    // Method begins at RVA 0x209a
    // Code size       0 (0x0)
  } // end of method BigInteger::op_Explicit

  .method /*0600004C*/ public hidebysig specialname static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          op_BitwiseAnd(valuetype System.Numerics.BigInteger/*02000002*/ left,
                        valuetype System.Numerics.BigInteger/*02000002*/ right) cil managed
  // SIG: 00 02 11 08 11 08 11 08
  {
    // Method begins at RVA 0x209b
    // Code size       0 (0x0)
  } // end of method BigInteger::op_BitwiseAnd

  .method /*0600004D*/ public hidebysig specialname static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          op_BitwiseOr(valuetype System.Numerics.BigInteger/*02000002*/ left,
                       valuetype System.Numerics.BigInteger/*02000002*/ right) cil managed
  // SIG: 00 02 11 08 11 08 11 08
  {
    // Method begins at RVA 0x209c
    // Code size       0 (0x0)
  } // end of method BigInteger::op_BitwiseOr

  .method /*0600004E*/ public hidebysig specialname static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          op_ExclusiveOr(valuetype System.Numerics.BigInteger/*02000002*/ left,
                         valuetype System.Numerics.BigInteger/*02000002*/ right) cil managed
  // SIG: 00 02 11 08 11 08 11 08
  {
    // Method begins at RVA 0x209d
    // Code size       0 (0x0)
  } // end of method BigInteger::op_ExclusiveOr

  .method /*0600004F*/ public hidebysig specialname static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          op_LeftShift(valuetype System.Numerics.BigInteger/*02000002*/ 'value',
                       int32 shift) cil managed
  // SIG: 00 02 11 08 11 08 08
  {
    // Method begins at RVA 0x209e
    // Code size       0 (0x0)
  } // end of method BigInteger::op_LeftShift

  .method /*06000050*/ public hidebysig specialname static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          op_RightShift(valuetype System.Numerics.BigInteger/*02000002*/ 'value',
                        int32 shift) cil managed
  // SIG: 00 02 11 08 11 08 08
  {
    // Method begins at RVA 0x209f
    // Code size       0 (0x0)
  } // end of method BigInteger::op_RightShift

  .method /*06000051*/ public hidebysig specialname static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          op_OnesComplement(valuetype System.Numerics.BigInteger/*02000002*/ 'value') cil managed
  // SIG: 00 01 11 08 11 08
  {
    // Method begins at RVA 0x20a0
    // Code size       0 (0x0)
  } // end of method BigInteger::op_OnesComplement

  .method /*06000052*/ public hidebysig specialname static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          op_UnaryNegation(valuetype System.Numerics.BigInteger/*02000002*/ 'value') cil managed
  // SIG: 00 01 11 08 11 08
  {
    // Method begins at RVA 0x20a1
    // Code size       0 (0x0)
  } // end of method BigInteger::op_UnaryNegation

  .method /*06000053*/ public hidebysig specialname static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          op_UnaryPlus(valuetype System.Numerics.BigInteger/*02000002*/ 'value') cil managed
  // SIG: 00 01 11 08 11 08
  {
    // Method begins at RVA 0x20a2
    // Code size       0 (0x0)
  } // end of method BigInteger::op_UnaryPlus

  .method /*06000054*/ public hidebysig specialname static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          op_Increment(valuetype System.Numerics.BigInteger/*02000002*/ 'value') cil managed
  // SIG: 00 01 11 08 11 08
  {
    // Method begins at RVA 0x20a3
    // Code size       0 (0x0)
  } // end of method BigInteger::op_Increment

  .method /*06000055*/ public hidebysig specialname static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          op_Decrement(valuetype System.Numerics.BigInteger/*02000002*/ 'value') cil managed
  // SIG: 00 01 11 08 11 08
  {
    // Method begins at RVA 0x20a4
    // Code size       0 (0x0)
  } // end of method BigInteger::op_Decrement

  .method /*06000056*/ public hidebysig specialname static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          op_Addition(valuetype System.Numerics.BigInteger/*02000002*/ left,
                      valuetype System.Numerics.BigInteger/*02000002*/ right) cil managed
  // SIG: 00 02 11 08 11 08 11 08
  {
    // Method begins at RVA 0x20a5
    // Code size       0 (0x0)
  } // end of method BigInteger::op_Addition

  .method /*06000057*/ public hidebysig specialname static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          op_Subtraction(valuetype System.Numerics.BigInteger/*02000002*/ left,
                         valuetype System.Numerics.BigInteger/*02000002*/ right) cil managed
  // SIG: 00 02 11 08 11 08 11 08
  {
    // Method begins at RVA 0x20a6
    // Code size       0 (0x0)
  } // end of method BigInteger::op_Subtraction

  .method /*06000058*/ public hidebysig specialname static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          op_Multiply(valuetype System.Numerics.BigInteger/*02000002*/ left,
                      valuetype System.Numerics.BigInteger/*02000002*/ right) cil managed
  // SIG: 00 02 11 08 11 08 11 08
  {
    // Method begins at RVA 0x20a7
    // Code size       0 (0x0)
  } // end of method BigInteger::op_Multiply

  .method /*06000059*/ public hidebysig specialname static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          op_Division(valuetype System.Numerics.BigInteger/*02000002*/ dividend,
                      valuetype System.Numerics.BigInteger/*02000002*/ divisor) cil managed
  // SIG: 00 02 11 08 11 08 11 08
  {
    // Method begins at RVA 0x20a8
    // Code size       0 (0x0)
  } // end of method BigInteger::op_Division

  .method /*0600005A*/ public hidebysig specialname static 
          valuetype System.Numerics.BigInteger/*02000002*/ 
          op_Modulus(valuetype System.Numerics.BigInteger/*02000002*/ dividend,
                     valuetype System.Numerics.BigInteger/*02000002*/ divisor) cil managed
  // SIG: 00 02 11 08 11 08 11 08
  {
    // Method begins at RVA 0x20a9
    // Code size       0 (0x0)
  } // end of method BigInteger::op_Modulus

  .method /*0600005B*/ public hidebysig specialname static 
          bool  op_LessThan(valuetype System.Numerics.BigInteger/*02000002*/ left,
                            valuetype System.Numerics.BigInteger/*02000002*/ right) cil managed
  // SIG: 00 02 02 11 08 11 08
  {
    // Method begins at RVA 0x20aa
    // Code size       0 (0x0)
  } // end of method BigInteger::op_LessThan

  .method /*0600005C*/ public hidebysig specialname static 
          bool  op_LessThanOrEqual(valuetype System.Numerics.BigInteger/*02000002*/ left,
                                   valuetype System.Numerics.BigInteger/*02000002*/ right) cil managed
  // SIG: 00 02 02 11 08 11 08
  {
    // Method begins at RVA 0x20ab
    // Code size       0 (0x0)
  } // end of method BigInteger::op_LessThanOrEqual

  .method /*0600005D*/ public hidebysig specialname static 
          bool  op_GreaterThan(valuetype System.Numerics.BigInteger/*02000002*/ left,
                               valuetype System.Numerics.BigInteger/*02000002*/ right) cil managed
  // SIG: 00 02 02 11 08 11 08
  {
    // Method begins at RVA 0x20ac
    // Code size       0 (0x0)
  } // end of method BigInteger::op_GreaterThan

  .method /*0600005E*/ public hidebysig specialname static 
          bool  op_GreaterThanOrEqual(valuetype System.Numerics.BigInteger/*02000002*/ left,
                                      valuetype System.Numerics.BigInteger/*02000002*/ right) cil managed
  // SIG: 00 02 02 11 08 11 08
  {
    // Method begins at RVA 0x20ad
    // Code size       0 (0x0)
  } // end of method BigInteger::op_GreaterThanOrEqual

  .method /*0600005F*/ public hidebysig specialname static 
          bool  op_Equality(valuetype System.Numerics.BigInteger/*02000002*/ left,
                            valuetype System.Numerics.BigInteger/*02000002*/ right) cil managed
  // SIG: 00 02 02 11 08 11 08
  {
    // Method begins at RVA 0x20ae
    // Code size       0 (0x0)
  } // end of method BigInteger::op_Equality

  .method /*06000060*/ public hidebysig specialname static 
          bool  op_Inequality(valuetype System.Numerics.BigInteger/*02000002*/ left,
                              valuetype System.Numerics.BigInteger/*02000002*/ right) cil managed
  // SIG: 00 02 02 11 08 11 08
  {
    // Method begins at RVA 0x20af
    // Code size       0 (0x0)
  } // end of method BigInteger::op_Inequality

  .method /*06000061*/ public hidebysig specialname static 
          bool  op_LessThan(valuetype System.Numerics.BigInteger/*02000002*/ left,
                            int64 right) cil managed
  // SIG: 00 02 02 11 08 0A
  {
    // Method begins at RVA 0x20b0
    // Code size       0 (0x0)
  } // end of method BigInteger::op_LessThan

  .method /*06000062*/ public hidebysig specialname static 
          bool  op_LessThanOrEqual(valuetype System.Numerics.BigInteger/*02000002*/ left,
                                   int64 right) cil managed
  // SIG: 00 02 02 11 08 0A
  {
    // Method begins at RVA 0x20b1
    // Code size       0 (0x0)
  } // end of method BigInteger::op_LessThanOrEqual

  .method /*06000063*/ public hidebysig specialname static 
          bool  op_GreaterThan(valuetype System.Numerics.BigInteger/*02000002*/ left,
                               int64 right) cil managed
  // SIG: 00 02 02 11 08 0A
  {
    // Method begins at RVA 0x20b2
    // Code size       0 (0x0)
  } // end of method BigInteger::op_GreaterThan

  .method /*06000064*/ public hidebysig specialname static 
          bool  op_GreaterThanOrEqual(valuetype System.Numerics.BigInteger/*02000002*/ left,
                                      int64 right) cil managed
  // SIG: 00 02 02 11 08 0A
  {
    // Method begins at RVA 0x20b3
    // Code size       0 (0x0)
  } // end of method BigInteger::op_GreaterThanOrEqual

  .method /*06000065*/ public hidebysig specialname static 
          bool  op_Equality(valuetype System.Numerics.BigInteger/*02000002*/ left,
                            int64 right) cil managed
  // SIG: 00 02 02 11 08 0A
  {
    // Method begins at RVA 0x20b4
    // Code size       0 (0x0)
  } // end of method BigInteger::op_Equality

  .method /*06000066*/ public hidebysig specialname static 
          bool  op_Inequality(valuetype System.Numerics.BigInteger/*02000002*/ left,
                              int64 right) cil managed
  // SIG: 00 02 02 11 08 0A
  {
    // Method begins at RVA 0x20b5
    // Code size       0 (0x0)
  } // end of method BigInteger::op_Inequality

  .method /*06000067*/ public hidebysig specialname static 
          bool  op_LessThan(int64 left,
                            valuetype System.Numerics.BigInteger/*02000002*/ right) cil managed
  // SIG: 00 02 02 0A 11 08
  {
    // Method begins at RVA 0x20b6
    // Code size       0 (0x0)
  } // end of method BigInteger::op_LessThan

  .method /*06000068*/ public hidebysig specialname static 
          bool  op_LessThanOrEqual(int64 left,
                                   valuetype System.Numerics.BigInteger/*02000002*/ right) cil managed
  // SIG: 00 02 02 0A 11 08
  {
    // Method begins at RVA 0x20b7
    // Code size       0 (0x0)
  } // end of method BigInteger::op_LessThanOrEqual

  .method /*06000069*/ public hidebysig specialname static 
          bool  op_GreaterThan(int64 left,
                               valuetype System.Numerics.BigInteger/*02000002*/ right) cil managed
  // SIG: 00 02 02 0A 11 08
  {
    // Method begins at RVA 0x20b8
    // Code size       0 (0x0)
  } // end of method BigInteger::op_GreaterThan

  .method /*0600006A*/ public hidebysig specialname static 
          bool  op_GreaterThanOrEqual(int64 left,
                                      valuetype System.Numerics.BigInteger/*02000002*/ right) cil managed
  // SIG: 00 02 02 0A 11 08
  {
    // Method begins at RVA 0x20b9
    // Code size       0 (0x0)
  } // end of method BigInteger::op_GreaterThanOrEqual

  .method /*0600006B*/ public hidebysig specialname static 
          bool  op_Equality(int64 left,
                            valuetype System.Numerics.BigInteger/*02000002*/ right) cil managed
  // SIG: 00 02 02 0A 11 08
  {
    // Method begins at RVA 0x20ba
    // Code size       0 (0x0)
  } // end of method BigInteger::op_Equality

  .method /*0600006C*/ public hidebysig specialname static 
          bool  op_Inequality(int64 left,
                              valuetype System.Numerics.BigInteger/*02000002*/ right) cil managed
  // SIG: 00 02 02 0A 11 08
  {
    // Method begins at RVA 0x20bb
    // Code size       0 (0x0)
  } // end of method BigInteger::op_Inequality

  .method /*0600006D*/ public hidebysig specialname static 
          bool  op_LessThan(valuetype System.Numerics.BigInteger/*02000002*/ left,
                            uint64 right) cil managed
  // SIG: 00 02 02 11 08 0B
  {
    .custom /*0C000027:0A000004*/ instance void [mscorlib/*23000001*/]System.CLSCompliantAttribute/*0100000F*/::.ctor(bool) /* 0A000004 */ = ( 01 00 00 00 00 ) 
    // Method begins at RVA 0x20bc
    // Code size       0 (0x0)
  } // end of method BigInteger::op_LessThan

  .method /*0600006E*/ public hidebysig specialname static 
          bool  op_LessThanOrEqual(valuetype System.Numerics.BigInteger/*02000002*/ left,
                                   uint64 right) cil managed
  // SIG: 00 02 02 11 08 0B
  {
    .custom /*0C000028:0A000004*/ instance void [mscorlib/*23000001*/]System.CLSCompliantAttribute/*0100000F*/::.ctor(bool) /* 0A000004 */ = ( 01 00 00 00 00 ) 
    // Method begins at RVA 0x20bd
    // Code size       0 (0x0)
  } // end of method BigInteger::op_LessThanOrEqual

  .method /*0600006F*/ public hidebysig specialname static 
          bool  op_GreaterThan(valuetype System.Numerics.BigInteger/*02000002*/ left,
                               uint64 right) cil managed
  // SIG: 00 02 02 11 08 0B
  {
    .custom /*0C000029:0A000004*/ instance void [mscorlib/*23000001*/]System.CLSCompliantAttribute/*0100000F*/::.ctor(bool) /* 0A000004 */ = ( 01 00 00 00 00 ) 
    // Method begins at RVA 0x20be
    // Code size       0 (0x0)
  } // end of method BigInteger::op_GreaterThan

  .method /*06000070*/ public hidebysig specialname static 
          bool  op_GreaterThanOrEqual(valuetype System.Numerics.BigInteger/*02000002*/ left,
                                      uint64 right) cil managed
  // SIG: 00 02 02 11 08 0B
  {
    .custom /*0C00002A:0A000004*/ instance void [mscorlib/*23000001*/]System.CLSCompliantAttribute/*0100000F*/::.ctor(bool) /* 0A000004 */ = ( 01 00 00 00 00 ) 
    // Method begins at RVA 0x20bf
    // Code size       0 (0x0)
  } // end of method BigInteger::op_GreaterThanOrEqual

  .method /*06000071*/ public hidebysig specialname static 
          bool  op_Equality(valuetype System.Numerics.BigInteger/*02000002*/ left,
                            uint64 right) cil managed
  // SIG: 00 02 02 11 08 0B
  {
    .custom /*0C00002B:0A000004*/ instance void [mscorlib/*23000001*/]System.CLSCompliantAttribute/*0100000F*/::.ctor(bool) /* 0A000004 */ = ( 01 00 00 00 00 ) 
    // Method begins at RVA 0x20c0
    // Code size       0 (0x0)
  } // end of method BigInteger::op_Equality

  .method /*06000072*/ public hidebysig specialname static 
          bool  op_Inequality(valuetype System.Numerics.BigInteger/*02000002*/ left,
                              uint64 right) cil managed
  // SIG: 00 02 02 11 08 0B
  {
    .custom /*0C00002C:0A000004*/ instance void [mscorlib/*23000001*/]System.CLSCompliantAttribute/*0100000F*/::.ctor(bool) /* 0A000004 */ = ( 01 00 00 00 00 ) 
    // Method begins at RVA 0x20c1
    // Code size       0 (0x0)
  } // end of method BigInteger::op_Inequality

  .method /*06000073*/ public hidebysig specialname static 
          bool  op_LessThan(uint64 left,
                            valuetype System.Numerics.BigInteger/*02000002*/ right) cil managed
  // SIG: 00 02 02 0B 11 08
  {
    .custom /*0C00002D:0A000004*/ instance void [mscorlib/*23000001*/]System.CLSCompliantAttribute/*0100000F*/::.ctor(bool) /* 0A000004 */ = ( 01 00 00 00 00 ) 
    // Method begins at RVA 0x20c2
    // Code size       0 (0x0)
  } // end of method BigInteger::op_LessThan

  .method /*06000074*/ public hidebysig specialname static 
          bool  op_LessThanOrEqual(uint64 left,
                                   valuetype System.Numerics.BigInteger/*02000002*/ right) cil managed
  // SIG: 00 02 02 0B 11 08
  {
    .custom /*0C00002E:0A000004*/ instance void [mscorlib/*23000001*/]System.CLSCompliantAttribute/*0100000F*/::.ctor(bool) /* 0A000004 */ = ( 01 00 00 00 00 ) 
    // Method begins at RVA 0x20c3
    // Code size       0 (0x0)
  } // end of method BigInteger::op_LessThanOrEqual

  .method /*06000075*/ public hidebysig specialname static 
          bool  op_GreaterThan(uint64 left,
                               valuetype System.Numerics.BigInteger/*02000002*/ right) cil managed
  // SIG: 00 02 02 0B 11 08
  {
    .custom /*0C00002F:0A000004*/ instance void [mscorlib/*23000001*/]System.CLSCompliantAttribute/*0100000F*/::.ctor(bool) /* 0A000004 */ = ( 01 00 00 00 00 ) 
    // Method begins at RVA 0x20c4
    // Code size       0 (0x0)
  } // end of method BigInteger::op_GreaterThan

  .method /*06000076*/ public hidebysig specialname static 
          bool  op_GreaterThanOrEqual(uint64 left,
                                      valuetype System.Numerics.BigInteger/*02000002*/ right) cil managed
  // SIG: 00 02 02 0B 11 08
  {
    .custom /*0C000030:0A000004*/ instance void [mscorlib/*23000001*/]System.CLSCompliantAttribute/*0100000F*/::.ctor(bool) /* 0A000004 */ = ( 01 00 00 00 00 ) 
    // Method begins at RVA 0x20c5
    // Code size       0 (0x0)
  } // end of method BigInteger::op_GreaterThanOrEqual

  .method /*06000077*/ public hidebysig specialname static 
          bool  op_Equality(uint64 left,
                            valuetype System.Numerics.BigInteger/*02000002*/ right) cil managed
  // SIG: 00 02 02 0B 11 08
  {
    .custom /*0C000031:0A000004*/ instance void [mscorlib/*23000001*/]System.CLSCompliantAttribute/*0100000F*/::.ctor(bool) /* 0A000004 */ = ( 01 00 00 00 00 ) 
    // Method begins at RVA 0x20c6
    // Code size       0 (0x0)
  } // end of method BigInteger::op_Equality

  .method /*06000078*/ public hidebysig specialname static 
          bool  op_Inequality(uint64 left,
                              valuetype System.Numerics.BigInteger/*02000002*/ right) cil managed
  // SIG: 00 02 02 0B 11 08
  {
    .custom /*0C000032:0A000004*/ instance void [mscorlib/*23000001*/]System.CLSCompliantAttribute/*0100000F*/::.ctor(bool) /* 0A000004 */ = ( 01 00 00 00 00 ) 
    // Method begins at RVA 0x20c7
    // Code size       0 (0x0)
  } // end of method BigInteger::op_Inequality

  .method /*06000079*/ private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  // SIG: 00 00 01
  {
    // Method begins at RVA 0x20c8
    // Code size       0 (0x0)
  } // end of method BigInteger::.cctor

  .property /*17000001*/ callconv(8) valuetype System.Numerics.BigInteger/*02000002*/
          Zero()
  {
    .get valuetype System.Numerics.BigInteger/*02000002*/ System.Numerics.BigInteger/*02000002*/::get_Zero() /* 06000001 */
  } // end of property BigInteger::Zero
  .property /*17000002*/ callconv(8) valuetype System.Numerics.BigInteger/*02000002*/
          One()
  {
    .get valuetype System.Numerics.BigInteger/*02000002*/ System.Numerics.BigInteger/*02000002*/::get_One() /* 06000002 */
  } // end of property BigInteger::One
  .property /*17000003*/ callconv(8) valuetype System.Numerics.BigInteger/*02000002*/
          MinusOne()
  {
    .get valuetype System.Numerics.BigInteger/*02000002*/ System.Numerics.BigInteger/*02000002*/::get_MinusOne() /* 06000003 */
  } // end of property BigInteger::MinusOne
  .property /*17000004*/ instance callconv(8) bool
          IsPowerOfTwo()
  {
    .get instance bool System.Numerics.BigInteger/*02000002*/::get_IsPowerOfTwo() /* 06000004 */
  } // end of property BigInteger::IsPowerOfTwo
  .property /*17000005*/ instance callconv(8) bool
          IsZero()
  {
    .get instance bool System.Numerics.BigInteger/*02000002*/::get_IsZero() /* 06000005 */
  } // end of property BigInteger::IsZero
  .property /*17000006*/ instance callconv(8) bool
          IsOne()
  {
    .get instance bool System.Numerics.BigInteger/*02000002*/::get_IsOne() /* 06000006 */
  } // end of property BigInteger::IsOne
  .property /*17000007*/ instance callconv(8) bool
          IsEven()
  {
    .get instance bool System.Numerics.BigInteger/*02000002*/::get_IsEven() /* 06000007 */
  } // end of property BigInteger::IsEven
  .property /*17000008*/ instance callconv(8) int32
          Sign()
  {
    .get instance int32 System.Numerics.BigInteger/*02000002*/::get_Sign() /* 06000008 */
  } // end of property BigInteger::Sign
} // end of class System.Numerics.BigInteger

.class /*02000003*/ public sequential ansi serializable sealed beforefieldinit System.Numerics.Complex
       extends [mscorlib/*23000001*/]System.ValueType/*01000001*/
       implements class [mscorlib/*23000001*/]System.IEquatable`1/*01000005*/<valuetype System.Numerics.Complex/*02000003*/>/*1B000003*/,
                  [mscorlib/*23000001*/]System.IFormattable/*01000002*/
{
  .field /*04000009*/ private float64 m_real
  .field /*0400000A*/ private float64 m_imaginary
  .field /*0400000B*/ private static literal float64 LOG_10_INV = float64(0.43429448190324998)
  .field /*0400000C*/ public static initonly valuetype System.Numerics.Complex/*02000003*/ Zero
  .field /*0400000D*/ public static initonly valuetype System.Numerics.Complex/*02000003*/ One
  .field /*0400000E*/ public static initonly valuetype System.Numerics.Complex/*02000003*/ ImaginaryOne
  .method /*0600007A*/ public hidebysig specialname 
          instance float64  get_Real() cil managed
  // SIG: 20 00 0D
  {
    // Method begins at RVA 0x20c9
    // Code size       0 (0x0)
  } // end of method Complex::get_Real

  .method /*0600007B*/ public hidebysig specialname 
          instance float64  get_Imaginary() cil managed
  // SIG: 20 00 0D
  {
    // Method begins at RVA 0x20ca
    // Code size       0 (0x0)
  } // end of method Complex::get_Imaginary

  .method /*0600007C*/ public hidebysig specialname 
          instance float64  get_Magnitude() cil managed
  // SIG: 20 00 0D
  {
    // Method begins at RVA 0x20cb
    // Code size       0 (0x0)
  } // end of method Complex::get_Magnitude

  .method /*0600007D*/ public hidebysig specialname 
          instance float64  get_Phase() cil managed
  // SIG: 20 00 0D
  {
    // Method begins at RVA 0x20cc
    // Code size       0 (0x0)
  } // end of method Complex::get_Phase

  .method /*0600007E*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(float64 real,
                               float64 imaginary) cil managed
  // SIG: 20 02 01 0D 0D
  {
    // Method begins at RVA 0x20cd
    // Code size       0 (0x0)
  } // end of method Complex::.ctor

  .method /*0600007F*/ public hidebysig static 
          valuetype System.Numerics.Complex/*02000003*/ 
          FromPolarCoordinates(float64 magnitude,
                               float64 phase) cil managed
  // SIG: 00 02 11 0C 0D 0D
  {
    // Method begins at RVA 0x20ce
    // Code size       0 (0x0)
  } // end of method Complex::FromPolarCoordinates

  .method /*06000080*/ public hidebysig static 
          valuetype System.Numerics.Complex/*02000003*/ 
          Negate(valuetype System.Numerics.Complex/*02000003*/ 'value') cil managed
  // SIG: 00 01 11 0C 11 0C
  {
    // Method begins at RVA 0x20cf
    // Code size       0 (0x0)
  } // end of method Complex::Negate

  .method /*06000081*/ public hidebysig static 
          valuetype System.Numerics.Complex/*02000003*/ 
          Add(valuetype System.Numerics.Complex/*02000003*/ left,
              valuetype System.Numerics.Complex/*02000003*/ right) cil managed
  // SIG: 00 02 11 0C 11 0C 11 0C
  {
    // Method begins at RVA 0x20d0
    // Code size       0 (0x0)
  } // end of method Complex::Add

  .method /*06000082*/ public hidebysig static 
          valuetype System.Numerics.Complex/*02000003*/ 
          Subtract(valuetype System.Numerics.Complex/*02000003*/ left,
                   valuetype System.Numerics.Complex/*02000003*/ right) cil managed
  // SIG: 00 02 11 0C 11 0C 11 0C
  {
    // Method begins at RVA 0x20d1
    // Code size       0 (0x0)
  } // end of method Complex::Subtract

  .method /*06000083*/ public hidebysig static 
          valuetype System.Numerics.Complex/*02000003*/ 
          Multiply(valuetype System.Numerics.Complex/*02000003*/ left,
                   valuetype System.Numerics.Complex/*02000003*/ right) cil managed
  // SIG: 00 02 11 0C 11 0C 11 0C
  {
    // Method begins at RVA 0x20d2
    // Code size       0 (0x0)
  } // end of method Complex::Multiply

  .method /*06000084*/ public hidebysig static 
          valuetype System.Numerics.Complex/*02000003*/ 
          Divide(valuetype System.Numerics.Complex/*02000003*/ dividend,
                 valuetype System.Numerics.Complex/*02000003*/ divisor) cil managed
  // SIG: 00 02 11 0C 11 0C 11 0C
  {
    // Method begins at RVA 0x20d3
    // Code size       0 (0x0)
  } // end of method Complex::Divide

  .method /*06000085*/ public hidebysig specialname static 
          valuetype System.Numerics.Complex/*02000003*/ 
          op_UnaryNegation(valuetype System.Numerics.Complex/*02000003*/ 'value') cil managed
  // SIG: 00 01 11 0C 11 0C
  {
    // Method begins at RVA 0x20d4
    // Code size       0 (0x0)
  } // end of method Complex::op_UnaryNegation

  .method /*06000086*/ public hidebysig specialname static 
          valuetype System.Numerics.Complex/*02000003*/ 
          op_Addition(valuetype System.Numerics.Complex/*02000003*/ left,
                      valuetype System.Numerics.Complex/*02000003*/ right) cil managed
  // SIG: 00 02 11 0C 11 0C 11 0C
  {
    // Method begins at RVA 0x20d5
    // Code size       0 (0x0)
  } // end of method Complex::op_Addition

  .method /*06000087*/ public hidebysig specialname static 
          valuetype System.Numerics.Complex/*02000003*/ 
          op_Subtraction(valuetype System.Numerics.Complex/*02000003*/ left,
                         valuetype System.Numerics.Complex/*02000003*/ right) cil managed
  // SIG: 00 02 11 0C 11 0C 11 0C
  {
    // Method begins at RVA 0x20d6
    // Code size       0 (0x0)
  } // end of method Complex::op_Subtraction

  .method /*06000088*/ public hidebysig specialname static 
          valuetype System.Numerics.Complex/*02000003*/ 
          op_Multiply(valuetype System.Numerics.Complex/*02000003*/ left,
                      valuetype System.Numerics.Complex/*02000003*/ right) cil managed
  // SIG: 00 02 11 0C 11 0C 11 0C
  {
    // Method begins at RVA 0x20d7
    // Code size       0 (0x0)
  } // end of method Complex::op_Multiply

  .method /*06000089*/ public hidebysig specialname static 
          valuetype System.Numerics.Complex/*02000003*/ 
          op_Division(valuetype System.Numerics.Complex/*02000003*/ left,
                      valuetype System.Numerics.Complex/*02000003*/ right) cil managed
  // SIG: 00 02 11 0C 11 0C 11 0C
  {
    // Method begins at RVA 0x20d8
    // Code size       0 (0x0)
  } // end of method Complex::op_Division

  .method /*0600008A*/ public hidebysig static 
          float64  Abs(valuetype System.Numerics.Complex/*02000003*/ 'value') cil managed
  // SIG: 00 01 0D 11 0C
  {
    // Method begins at RVA 0x20d9
    // Code size       0 (0x0)
  } // end of method Complex::Abs

  .method /*0600008B*/ public hidebysig static 
          valuetype System.Numerics.Complex/*02000003*/ 
          Conjugate(valuetype System.Numerics.Complex/*02000003*/ 'value') cil managed
  // SIG: 00 01 11 0C 11 0C
  {
    // Method begins at RVA 0x20da
    // Code size       0 (0x0)
  } // end of method Complex::Conjugate

  .method /*0600008C*/ public hidebysig static 
          valuetype System.Numerics.Complex/*02000003*/ 
          Reciprocal(valuetype System.Numerics.Complex/*02000003*/ 'value') cil managed
  // SIG: 00 01 11 0C 11 0C
  {
    // Method begins at RVA 0x20db
    // Code size       0 (0x0)
  } // end of method Complex::Reciprocal

  .method /*0600008D*/ public hidebysig specialname static 
          bool  op_Equality(valuetype System.Numerics.Complex/*02000003*/ left,
                            valuetype System.Numerics.Complex/*02000003*/ right) cil managed
  // SIG: 00 02 02 11 0C 11 0C
  {
    // Method begins at RVA 0x20dc
    // Code size       0 (0x0)
  } // end of method Complex::op_Equality

  .method /*0600008E*/ public hidebysig specialname static 
          bool  op_Inequality(valuetype System.Numerics.Complex/*02000003*/ left,
                              valuetype System.Numerics.Complex/*02000003*/ right) cil managed
  // SIG: 00 02 02 11 0C 11 0C
  {
    // Method begins at RVA 0x20dd
    // Code size       0 (0x0)
  } // end of method Complex::op_Inequality

  .method /*0600008F*/ public hidebysig virtual 
          instance bool  Equals(object obj) cil managed
  // SIG: 20 01 02 1C
  {
    // Method begins at RVA 0x20de
    // Code size       0 (0x0)
  } // end of method Complex::Equals

  .method /*06000090*/ public hidebysig newslot virtual final 
          instance bool  Equals(valuetype System.Numerics.Complex/*02000003*/ 'value') cil managed
  // SIG: 20 01 02 11 0C
  {
    // Method begins at RVA 0x20df
    // Code size       0 (0x0)
  } // end of method Complex::Equals

  .method /*06000091*/ public hidebysig specialname static 
          valuetype System.Numerics.Complex/*02000003*/ 
          op_Implicit(int16 'value') cil managed
  // SIG: 00 01 11 0C 06
  {
    // Method begins at RVA 0x20e0
    // Code size       0 (0x0)
  } // end of method Complex::op_Implicit

  .method /*06000092*/ public hidebysig specialname static 
          valuetype System.Numerics.Complex/*02000003*/ 
          op_Implicit(int32 'value') cil managed
  // SIG: 00 01 11 0C 08
  {
    // Method begins at RVA 0x20e1
    // Code size       0 (0x0)
  } // end of method Complex::op_Implicit

  .method /*06000093*/ public hidebysig specialname static 
          valuetype System.Numerics.Complex/*02000003*/ 
          op_Implicit(int64 'value') cil managed
  // SIG: 00 01 11 0C 0A
  {
    // Method begins at RVA 0x20e2
    // Code size       0 (0x0)
  } // end of method Complex::op_Implicit

  .method /*06000094*/ public hidebysig specialname static 
          valuetype System.Numerics.Complex/*02000003*/ 
          op_Implicit(uint16 'value') cil managed
  // SIG: 00 01 11 0C 07
  {
    .custom /*0C000033:0A000004*/ instance void [mscorlib/*23000001*/]System.CLSCompliantAttribute/*0100000F*/::.ctor(bool) /* 0A000004 */ = ( 01 00 00 00 00 ) 
    // Method begins at RVA 0x20e3
    // Code size       0 (0x0)
  } // end of method Complex::op_Implicit

  .method /*06000095*/ public hidebysig specialname static 
          valuetype System.Numerics.Complex/*02000003*/ 
          op_Implicit(uint32 'value') cil managed
  // SIG: 00 01 11 0C 09
  {
    .custom /*0C000034:0A000004*/ instance void [mscorlib/*23000001*/]System.CLSCompliantAttribute/*0100000F*/::.ctor(bool) /* 0A000004 */ = ( 01 00 00 00 00 ) 
    // Method begins at RVA 0x20e4
    // Code size       0 (0x0)
  } // end of method Complex::op_Implicit

  .method /*06000096*/ public hidebysig specialname static 
          valuetype System.Numerics.Complex/*02000003*/ 
          op_Implicit(uint64 'value') cil managed
  // SIG: 00 01 11 0C 0B
  {
    .custom /*0C000035:0A000004*/ instance void [mscorlib/*23000001*/]System.CLSCompliantAttribute/*0100000F*/::.ctor(bool) /* 0A000004 */ = ( 01 00 00 00 00 ) 
    // Method begins at RVA 0x20e5
    // Code size       0 (0x0)
  } // end of method Complex::op_Implicit

  .method /*06000097*/ public hidebysig specialname static 
          valuetype System.Numerics.Complex/*02000003*/ 
          op_Implicit(int8 'value') cil managed
  // SIG: 00 01 11 0C 04
  {
    .custom /*0C000036:0A000004*/ instance void [mscorlib/*23000001*/]System.CLSCompliantAttribute/*0100000F*/::.ctor(bool) /* 0A000004 */ = ( 01 00 00 00 00 ) 
    // Method begins at RVA 0x20e6
    // Code size       0 (0x0)
  } // end of method Complex::op_Implicit

  .method /*06000098*/ public hidebysig specialname static 
          valuetype System.Numerics.Complex/*02000003*/ 
          op_Implicit(uint8 'value') cil managed
  // SIG: 00 01 11 0C 05
  {
    // Method begins at RVA 0x20e7
    // Code size       0 (0x0)
  } // end of method Complex::op_Implicit

  .method /*06000099*/ public hidebysig specialname static 
          valuetype System.Numerics.Complex/*02000003*/ 
          op_Implicit(float32 'value') cil managed
  // SIG: 00 01 11 0C 0C
  {
    // Method begins at RVA 0x20e8
    // Code size       0 (0x0)
  } // end of method Complex::op_Implicit

  .method /*0600009A*/ public hidebysig specialname static 
          valuetype System.Numerics.Complex/*02000003*/ 
          op_Implicit(float64 'value') cil managed
  // SIG: 00 01 11 0C 0D
  {
    // Method begins at RVA 0x20e9
    // Code size       0 (0x0)
  } // end of method Complex::op_Implicit

  .method /*0600009B*/ public hidebysig specialname static 
          valuetype System.Numerics.Complex/*02000003*/ 
          op_Explicit(valuetype System.Numerics.BigInteger/*02000002*/ 'value') cil managed
  // SIG: 00 01 11 0C 11 08
  {
    // Method begins at RVA 0x20ea
    // Code size       0 (0x0)
  } // end of method Complex::op_Explicit

  .method /*0600009C*/ public hidebysig specialname static 
          valuetype System.Numerics.Complex/*02000003*/ 
          op_Explicit(valuetype [mscorlib/*23000001*/]System.Decimal/*01000008*/ 'value') cil managed
  // SIG: 00 01 11 0C 11 21
  {
    // Method begins at RVA 0x20eb
    // Code size       0 (0x0)
  } // end of method Complex::op_Explicit

  .method /*0600009D*/ public hidebysig virtual 
          instance string  ToString() cil managed
  // SIG: 20 00 0E
  {
    // Method begins at RVA 0x20ec
    // Code size       0 (0x0)
  } // end of method Complex::ToString

  .method /*0600009E*/ public hidebysig instance string 
          ToString(string format) cil managed
  // SIG: 20 01 0E 0E
  {
    // Method begins at RVA 0x20ed
    // Code size       0 (0x0)
  } // end of method Complex::ToString

  .method /*0600009F*/ public hidebysig instance string 
          ToString(class [mscorlib/*23000001*/]System.IFormatProvider/*01000007*/ provider) cil managed
  // SIG: 20 01 0E 12 1D
  {
    // Method begins at RVA 0x20ee
    // Code size       0 (0x0)
  } // end of method Complex::ToString

  .method /*060000A0*/ public hidebysig newslot virtual final 
          instance string  ToString(string format,
                                    class [mscorlib/*23000001*/]System.IFormatProvider/*01000007*/ provider) cil managed
  // SIG: 20 02 0E 0E 12 1D
  {
    // Method begins at RVA 0x20ef
    // Code size       0 (0x0)
  } // end of method Complex::ToString

  .method /*060000A1*/ public hidebysig virtual 
          instance int32  GetHashCode() cil managed
  // SIG: 20 00 08
  {
    // Method begins at RVA 0x20f0
    // Code size       0 (0x0)
  } // end of method Complex::GetHashCode

  .method /*060000A2*/ public hidebysig static 
          valuetype System.Numerics.Complex/*02000003*/ 
          Sin(valuetype System.Numerics.Complex/*02000003*/ 'value') cil managed
  // SIG: 00 01 11 0C 11 0C
  {
    // Method begins at RVA 0x20f1
    // Code size       0 (0x0)
  } // end of method Complex::Sin

  .method /*060000A3*/ public hidebysig static 
          valuetype System.Numerics.Complex/*02000003*/ 
          Sinh(valuetype System.Numerics.Complex/*02000003*/ 'value') cil managed
  // SIG: 00 01 11 0C 11 0C
  {
    // Method begins at RVA 0x20f2
    // Code size       0 (0x0)
  } // end of method Complex::Sinh

  .method /*060000A4*/ public hidebysig static 
          valuetype System.Numerics.Complex/*02000003*/ 
          Asin(valuetype System.Numerics.Complex/*02000003*/ 'value') cil managed
  // SIG: 00 01 11 0C 11 0C
  {
    // Method begins at RVA 0x20f3
    // Code size       0 (0x0)
  } // end of method Complex::Asin

  .method /*060000A5*/ public hidebysig static 
          valuetype System.Numerics.Complex/*02000003*/ 
          Cos(valuetype System.Numerics.Complex/*02000003*/ 'value') cil managed
  // SIG: 00 01 11 0C 11 0C
  {
    // Method begins at RVA 0x20f4
    // Code size       0 (0x0)
  } // end of method Complex::Cos

  .method /*060000A6*/ public hidebysig static 
          valuetype System.Numerics.Complex/*02000003*/ 
          Cosh(valuetype System.Numerics.Complex/*02000003*/ 'value') cil managed
  // SIG: 00 01 11 0C 11 0C
  {
    // Method begins at RVA 0x20f5
    // Code size       0 (0x0)
  } // end of method Complex::Cosh

  .method /*060000A7*/ public hidebysig static 
          valuetype System.Numerics.Complex/*02000003*/ 
          Acos(valuetype System.Numerics.Complex/*02000003*/ 'value') cil managed
  // SIG: 00 01 11 0C 11 0C
  {
    // Method begins at RVA 0x20f6
    // Code size       0 (0x0)
  } // end of method Complex::Acos

  .method /*060000A8*/ public hidebysig static 
          valuetype System.Numerics.Complex/*02000003*/ 
          Tan(valuetype System.Numerics.Complex/*02000003*/ 'value') cil managed
  // SIG: 00 01 11 0C 11 0C
  {
    // Method begins at RVA 0x20f7
    // Code size       0 (0x0)
  } // end of method Complex::Tan

  .method /*060000A9*/ public hidebysig static 
          valuetype System.Numerics.Complex/*02000003*/ 
          Tanh(valuetype System.Numerics.Complex/*02000003*/ 'value') cil managed
  // SIG: 00 01 11 0C 11 0C
  {
    // Method begins at RVA 0x20f8
    // Code size       0 (0x0)
  } // end of method Complex::Tanh

  .method /*060000AA*/ public hidebysig static 
          valuetype System.Numerics.Complex/*02000003*/ 
          Atan(valuetype System.Numerics.Complex/*02000003*/ 'value') cil managed
  // SIG: 00 01 11 0C 11 0C
  {
    // Method begins at RVA 0x20f9
    // Code size       0 (0x0)
  } // end of method Complex::Atan

  .method /*060000AB*/ public hidebysig static 
          valuetype System.Numerics.Complex/*02000003*/ 
          Log(valuetype System.Numerics.Complex/*02000003*/ 'value') cil managed
  // SIG: 00 01 11 0C 11 0C
  {
    // Method begins at RVA 0x20fa
    // Code size       0 (0x0)
  } // end of method Complex::Log

  .method /*060000AC*/ public hidebysig static 
          valuetype System.Numerics.Complex/*02000003*/ 
          Log(valuetype System.Numerics.Complex/*02000003*/ 'value',
              float64 baseValue) cil managed
  // SIG: 00 02 11 0C 11 0C 0D
  {
    // Method begins at RVA 0x20fb
    // Code size       0 (0x0)
  } // end of method Complex::Log

  .method /*060000AD*/ public hidebysig static 
          valuetype System.Numerics.Complex/*02000003*/ 
          Log10(valuetype System.Numerics.Complex/*02000003*/ 'value') cil managed
  // SIG: 00 01 11 0C 11 0C
  {
    // Method begins at RVA 0x20fc
    // Code size       0 (0x0)
  } // end of method Complex::Log10

  .method /*060000AE*/ public hidebysig static 
          valuetype System.Numerics.Complex/*02000003*/ 
          Exp(valuetype System.Numerics.Complex/*02000003*/ 'value') cil managed
  // SIG: 00 01 11 0C 11 0C
  {
    // Method begins at RVA 0x20fd
    // Code size       0 (0x0)
  } // end of method Complex::Exp

  .method /*060000AF*/ public hidebysig static 
          valuetype System.Numerics.Complex/*02000003*/ 
          Sqrt(valuetype System.Numerics.Complex/*02000003*/ 'value') cil managed
  // SIG: 00 01 11 0C 11 0C
  {
    // Method begins at RVA 0x20fe
    // Code size       0 (0x0)
  } // end of method Complex::Sqrt

  .method /*060000B0*/ public hidebysig static 
          valuetype System.Numerics.Complex/*02000003*/ 
          Pow(valuetype System.Numerics.Complex/*02000003*/ 'value',
              valuetype System.Numerics.Complex/*02000003*/ power) cil managed
  // SIG: 00 02 11 0C 11 0C 11 0C
  {
    // Method begins at RVA 0x20ff
    // Code size       0 (0x0)
  } // end of method Complex::Pow

  .method /*060000B1*/ public hidebysig static 
          valuetype System.Numerics.Complex/*02000003*/ 
          Pow(valuetype System.Numerics.Complex/*02000003*/ 'value',
              float64 power) cil managed
  // SIG: 00 02 11 0C 11 0C 0D
  {
    // Method begins at RVA 0x2100
    // Code size       0 (0x0)
  } // end of method Complex::Pow

  .method /*060000B2*/ private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  // SIG: 00 00 01
  {
    // Method begins at RVA 0x2101
    // Code size       0 (0x0)
  } // end of method Complex::.cctor

  .property /*17000009*/ instance callconv(8) float64
          Real()
  {
    .get instance float64 System.Numerics.Complex/*02000003*/::get_Real() /* 0600007A */
  } // end of property Complex::Real
  .property /*1700000A*/ instance callconv(8) float64
          Imaginary()
  {
    .get instance float64 System.Numerics.Complex/*02000003*/::get_Imaginary() /* 0600007B */
  } // end of property Complex::Imaginary
  .property /*1700000B*/ instance callconv(8) float64
          Magnitude()
  {
    .get instance float64 System.Numerics.Complex/*02000003*/::get_Magnitude() /* 0600007C */
  } // end of property Complex::Magnitude
  .property /*1700000C*/ instance callconv(8) float64
          Phase()
  {
    .get instance float64 System.Numerics.Complex/*02000003*/::get_Phase() /* 0600007D */
  } // end of property Complex::Phase
} // end of class System.Numerics.Complex

.class /*02000004*/ private auto ansi beforefieldinit System.Numerics.JitIntrinsicAttribute
       extends [mscorlib/*23000001*/]System.Attribute/*0100000A*/
{
  .custom /*0C000018:0A000018*/ instance void [mscorlib/*23000001*/]System.AttributeUsageAttribute/*01000025*/::.ctor(valuetype [mscorlib/*23000001*/]System.AttributeTargets/*01000026*/) /* 0A000018 */ = ( 01 00 E0 00 00 00 00 00 ) 
  .method /*060000B3*/ public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x2102
    // Code size       0 (0x0)
  } // end of method JitIntrinsicAttribute::.ctor

} // end of class System.Numerics.JitIntrinsicAttribute

.class /*02000005*/ public sequential ansi sealed beforefieldinit System.Numerics.Matrix3x2
       extends [mscorlib/*23000001*/]System.ValueType/*01000001*/
       implements class [mscorlib/*23000001*/]System.IEquatable`1/*01000005*/<valuetype System.Numerics.Matrix3x2/*02000005*/>/*1B000004*/
{
  .field /*0400000F*/ public float32 M11
  .field /*04000010*/ public float32 M12
  .field /*04000011*/ public float32 M21
  .field /*04000012*/ public float32 M22
  .field /*04000013*/ public float32 M31
  .field /*04000014*/ public float32 M32
  .method /*060000B4*/ public hidebysig specialname static 
          valuetype System.Numerics.Matrix3x2/*02000005*/ 
          get_Identity() cil managed
  // SIG: 00 00 11 14
  {
    // Method begins at RVA 0x2103
    // Code size       0 (0x0)
  } // end of method Matrix3x2::get_Identity

  .method /*060000B5*/ public hidebysig specialname 
          instance bool  get_IsIdentity() cil managed
  // SIG: 20 00 02
  {
    // Method begins at RVA 0x2104
    // Code size       0 (0x0)
  } // end of method Matrix3x2::get_IsIdentity

  .method /*060000B6*/ public hidebysig specialname 
          instance valuetype System.Numerics.Vector2/*02000009*/ 
          get_Translation() cil managed
  // SIG: 20 00 11 24
  {
    // Method begins at RVA 0x2105
    // Code size       0 (0x0)
  } // end of method Matrix3x2::get_Translation

  .method /*060000B7*/ public hidebysig specialname 
          instance void  set_Translation(valuetype System.Numerics.Vector2/*02000009*/ 'value') cil managed
  // SIG: 20 01 01 11 24
  {
    // Method begins at RVA 0x2106
    // Code size       0 (0x0)
  } // end of method Matrix3x2::set_Translation

  .method /*060000B8*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(float32 m11,
                               float32 m12,
                               float32 m21,
                               float32 m22,
                               float32 m31,
                               float32 m32) cil managed
  // SIG: 20 06 01 0C 0C 0C 0C 0C 0C
  {
    // Method begins at RVA 0x2107
    // Code size       0 (0x0)
  } // end of method Matrix3x2::.ctor

  .method /*060000B9*/ public hidebysig static 
          valuetype System.Numerics.Matrix3x2/*02000005*/ 
          CreateTranslation(valuetype System.Numerics.Vector2/*02000009*/ position) cil managed
  // SIG: 00 01 11 14 11 24
  {
    // Method begins at RVA 0x2108
    // Code size       0 (0x0)
  } // end of method Matrix3x2::CreateTranslation

  .method /*060000BA*/ public hidebysig static 
          valuetype System.Numerics.Matrix3x2/*02000005*/ 
          CreateTranslation(float32 xPosition,
                            float32 yPosition) cil managed
  // SIG: 00 02 11 14 0C 0C
  {
    // Method begins at RVA 0x2109
    // Code size       0 (0x0)
  } // end of method Matrix3x2::CreateTranslation

  .method /*060000BB*/ public hidebysig static 
          valuetype System.Numerics.Matrix3x2/*02000005*/ 
          CreateScale(float32 xScale,
                      float32 yScale) cil managed
  // SIG: 00 02 11 14 0C 0C
  {
    // Method begins at RVA 0x210a
    // Code size       0 (0x0)
  } // end of method Matrix3x2::CreateScale

  .method /*060000BC*/ public hidebysig static 
          valuetype System.Numerics.Matrix3x2/*02000005*/ 
          CreateScale(float32 xScale,
                      float32 yScale,
                      valuetype System.Numerics.Vector2/*02000009*/ centerPoint) cil managed
  // SIG: 00 03 11 14 0C 0C 11 24
  {
    // Method begins at RVA 0x210b
    // Code size       0 (0x0)
  } // end of method Matrix3x2::CreateScale

  .method /*060000BD*/ public hidebysig static 
          valuetype System.Numerics.Matrix3x2/*02000005*/ 
          CreateScale(valuetype System.Numerics.Vector2/*02000009*/ scales) cil managed
  // SIG: 00 01 11 14 11 24
  {
    // Method begins at RVA 0x210c
    // Code size       0 (0x0)
  } // end of method Matrix3x2::CreateScale

  .method /*060000BE*/ public hidebysig static 
          valuetype System.Numerics.Matrix3x2/*02000005*/ 
          CreateScale(valuetype System.Numerics.Vector2/*02000009*/ scales,
                      valuetype System.Numerics.Vector2/*02000009*/ centerPoint) cil managed
  // SIG: 00 02 11 14 11 24 11 24
  {
    // Method begins at RVA 0x210d
    // Code size       0 (0x0)
  } // end of method Matrix3x2::CreateScale

  .method /*060000BF*/ public hidebysig static 
          valuetype System.Numerics.Matrix3x2/*02000005*/ 
          CreateScale(float32 scale) cil managed
  // SIG: 00 01 11 14 0C
  {
    // Method begins at RVA 0x210e
    // Code size       0 (0x0)
  } // end of method Matrix3x2::CreateScale

  .method /*060000C0*/ public hidebysig static 
          valuetype System.Numerics.Matrix3x2/*02000005*/ 
          CreateScale(float32 scale,
                      valuetype System.Numerics.Vector2/*02000009*/ centerPoint) cil managed
  // SIG: 00 02 11 14 0C 11 24
  {
    // Method begins at RVA 0x210f
    // Code size       0 (0x0)
  } // end of method Matrix3x2::CreateScale

  .method /*060000C1*/ public hidebysig static 
          valuetype System.Numerics.Matrix3x2/*02000005*/ 
          CreateSkew(float32 radiansX,
                     float32 radiansY) cil managed
  // SIG: 00 02 11 14 0C 0C
  {
    // Method begins at RVA 0x2110
    // Code size       0 (0x0)
  } // end of method Matrix3x2::CreateSkew

  .method /*060000C2*/ public hidebysig static 
          valuetype System.Numerics.Matrix3x2/*02000005*/ 
          CreateSkew(float32 radiansX,
                     float32 radiansY,
                     valuetype System.Numerics.Vector2/*02000009*/ centerPoint) cil managed
  // SIG: 00 03 11 14 0C 0C 11 24
  {
    // Method begins at RVA 0x2111
    // Code size       0 (0x0)
  } // end of method Matrix3x2::CreateSkew

  .method /*060000C3*/ public hidebysig static 
          valuetype System.Numerics.Matrix3x2/*02000005*/ 
          CreateRotation(float32 radians) cil managed
  // SIG: 00 01 11 14 0C
  {
    // Method begins at RVA 0x2112
    // Code size       0 (0x0)
  } // end of method Matrix3x2::CreateRotation

  .method /*060000C4*/ public hidebysig static 
          valuetype System.Numerics.Matrix3x2/*02000005*/ 
          CreateRotation(float32 radians,
                         valuetype System.Numerics.Vector2/*02000009*/ centerPoint) cil managed
  // SIG: 00 02 11 14 0C 11 24
  {
    // Method begins at RVA 0x2113
    // Code size       0 (0x0)
  } // end of method Matrix3x2::CreateRotation

  .method /*060000C5*/ public hidebysig instance float32 
          GetDeterminant() cil managed
  // SIG: 20 00 0C
  {
    // Method begins at RVA 0x2114
    // Code size       0 (0x0)
  } // end of method Matrix3x2::GetDeterminant

  .method /*060000C6*/ public hidebysig static 
          bool  Invert(valuetype System.Numerics.Matrix3x2/*02000005*/ matrix,
                       [out] valuetype System.Numerics.Matrix3x2/*02000005*/& result) cil managed
  // SIG: 00 02 02 11 14 10 11 14
  {
    // Method begins at RVA 0x2115
    // Code size       0 (0x0)
  } // end of method Matrix3x2::Invert

  .method /*060000C7*/ public hidebysig static 
          valuetype System.Numerics.Matrix3x2/*02000005*/ 
          Lerp(valuetype System.Numerics.Matrix3x2/*02000005*/ matrix1,
               valuetype System.Numerics.Matrix3x2/*02000005*/ matrix2,
               float32 amount) cil managed
  // SIG: 00 03 11 14 11 14 11 14 0C
  {
    // Method begins at RVA 0x2116
    // Code size       0 (0x0)
  } // end of method Matrix3x2::Lerp

  .method /*060000C8*/ public hidebysig static 
          valuetype System.Numerics.Matrix3x2/*02000005*/ 
          Negate(valuetype System.Numerics.Matrix3x2/*02000005*/ 'value') cil managed
  // SIG: 00 01 11 14 11 14
  {
    // Method begins at RVA 0x2117
    // Code size       0 (0x0)
  } // end of method Matrix3x2::Negate

  .method /*060000C9*/ public hidebysig static 
          valuetype System.Numerics.Matrix3x2/*02000005*/ 
          Add(valuetype System.Numerics.Matrix3x2/*02000005*/ value1,
              valuetype System.Numerics.Matrix3x2/*02000005*/ value2) cil managed
  // SIG: 00 02 11 14 11 14 11 14
  {
    // Method begins at RVA 0x2118
    // Code size       0 (0x0)
  } // end of method Matrix3x2::Add

  .method /*060000CA*/ public hidebysig static 
          valuetype System.Numerics.Matrix3x2/*02000005*/ 
          Subtract(valuetype System.Numerics.Matrix3x2/*02000005*/ value1,
                   valuetype System.Numerics.Matrix3x2/*02000005*/ value2) cil managed
  // SIG: 00 02 11 14 11 14 11 14
  {
    // Method begins at RVA 0x2119
    // Code size       0 (0x0)
  } // end of method Matrix3x2::Subtract

  .method /*060000CB*/ public hidebysig static 
          valuetype System.Numerics.Matrix3x2/*02000005*/ 
          Multiply(valuetype System.Numerics.Matrix3x2/*02000005*/ value1,
                   valuetype System.Numerics.Matrix3x2/*02000005*/ value2) cil managed
  // SIG: 00 02 11 14 11 14 11 14
  {
    // Method begins at RVA 0x211a
    // Code size       0 (0x0)
  } // end of method Matrix3x2::Multiply

  .method /*060000CC*/ public hidebysig static 
          valuetype System.Numerics.Matrix3x2/*02000005*/ 
          Multiply(valuetype System.Numerics.Matrix3x2/*02000005*/ value1,
                   float32 value2) cil managed
  // SIG: 00 02 11 14 11 14 0C
  {
    // Method begins at RVA 0x211b
    // Code size       0 (0x0)
  } // end of method Matrix3x2::Multiply

  .method /*060000CD*/ public hidebysig specialname static 
          valuetype System.Numerics.Matrix3x2/*02000005*/ 
          op_UnaryNegation(valuetype System.Numerics.Matrix3x2/*02000005*/ 'value') cil managed
  // SIG: 00 01 11 14 11 14
  {
    // Method begins at RVA 0x211c
    // Code size       0 (0x0)
  } // end of method Matrix3x2::op_UnaryNegation

  .method /*060000CE*/ public hidebysig specialname static 
          valuetype System.Numerics.Matrix3x2/*02000005*/ 
          op_Addition(valuetype System.Numerics.Matrix3x2/*02000005*/ value1,
                      valuetype System.Numerics.Matrix3x2/*02000005*/ value2) cil managed
  // SIG: 00 02 11 14 11 14 11 14
  {
    // Method begins at RVA 0x211d
    // Code size       0 (0x0)
  } // end of method Matrix3x2::op_Addition

  .method /*060000CF*/ public hidebysig specialname static 
          valuetype System.Numerics.Matrix3x2/*02000005*/ 
          op_Subtraction(valuetype System.Numerics.Matrix3x2/*02000005*/ value1,
                         valuetype System.Numerics.Matrix3x2/*02000005*/ value2) cil managed
  // SIG: 00 02 11 14 11 14 11 14
  {
    // Method begins at RVA 0x211e
    // Code size       0 (0x0)
  } // end of method Matrix3x2::op_Subtraction

  .method /*060000D0*/ public hidebysig specialname static 
          valuetype System.Numerics.Matrix3x2/*02000005*/ 
          op_Multiply(valuetype System.Numerics.Matrix3x2/*02000005*/ value1,
                      valuetype System.Numerics.Matrix3x2/*02000005*/ value2) cil managed
  // SIG: 00 02 11 14 11 14 11 14
  {
    // Method begins at RVA 0x211f
    // Code size       0 (0x0)
  } // end of method Matrix3x2::op_Multiply

  .method /*060000D1*/ public hidebysig specialname static 
          valuetype System.Numerics.Matrix3x2/*02000005*/ 
          op_Multiply(valuetype System.Numerics.Matrix3x2/*02000005*/ value1,
                      float32 value2) cil managed
  // SIG: 00 02 11 14 11 14 0C
  {
    // Method begins at RVA 0x2120
    // Code size       0 (0x0)
  } // end of method Matrix3x2::op_Multiply

  .method /*060000D2*/ public hidebysig specialname static 
          bool  op_Equality(valuetype System.Numerics.Matrix3x2/*02000005*/ value1,
                            valuetype System.Numerics.Matrix3x2/*02000005*/ value2) cil managed
  // SIG: 00 02 02 11 14 11 14
  {
    // Method begins at RVA 0x2121
    // Code size       0 (0x0)
  } // end of method Matrix3x2::op_Equality

  .method /*060000D3*/ public hidebysig specialname static 
          bool  op_Inequality(valuetype System.Numerics.Matrix3x2/*02000005*/ value1,
                              valuetype System.Numerics.Matrix3x2/*02000005*/ value2) cil managed
  // SIG: 00 02 02 11 14 11 14
  {
    // Method begins at RVA 0x2122
    // Code size       0 (0x0)
  } // end of method Matrix3x2::op_Inequality

  .method /*060000D4*/ public hidebysig newslot virtual final 
          instance bool  Equals(valuetype System.Numerics.Matrix3x2/*02000005*/ other) cil managed
  // SIG: 20 01 02 11 14
  {
    // Method begins at RVA 0x2123
    // Code size       0 (0x0)
  } // end of method Matrix3x2::Equals

  .method /*060000D5*/ public hidebysig virtual 
          instance bool  Equals(object obj) cil managed
  // SIG: 20 01 02 1C
  {
    // Method begins at RVA 0x2124
    // Code size       0 (0x0)
  } // end of method Matrix3x2::Equals

  .method /*060000D6*/ public hidebysig virtual 
          instance string  ToString() cil managed
  // SIG: 20 00 0E
  {
    // Method begins at RVA 0x2125
    // Code size       0 (0x0)
  } // end of method Matrix3x2::ToString

  .method /*060000D7*/ public hidebysig virtual 
          instance int32  GetHashCode() cil managed
  // SIG: 20 00 08
  {
    // Method begins at RVA 0x2126
    // Code size       0 (0x0)
  } // end of method Matrix3x2::GetHashCode

  .method /*060000D8*/ private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  // SIG: 00 00 01
  {
    // Method begins at RVA 0x2127
    // Code size       0 (0x0)
  } // end of method Matrix3x2::.cctor

  .property /*1700000D*/ callconv(8) valuetype System.Numerics.Matrix3x2/*02000005*/
          Identity()
  {
    .get valuetype System.Numerics.Matrix3x2/*02000005*/ System.Numerics.Matrix3x2/*02000005*/::get_Identity() /* 060000B4 */
  } // end of property Matrix3x2::Identity
  .property /*1700000E*/ instance callconv(8) bool
          IsIdentity()
  {
    .get instance bool System.Numerics.Matrix3x2/*02000005*/::get_IsIdentity() /* 060000B5 */
  } // end of property Matrix3x2::IsIdentity
  .property /*1700000F*/ instance callconv(8) valuetype System.Numerics.Vector2/*02000009*/
          Translation()
  {
    .get instance valuetype System.Numerics.Vector2/*02000009*/ System.Numerics.Matrix3x2/*02000005*/::get_Translation() /* 060000B6 */
    .set instance void System.Numerics.Matrix3x2/*02000005*/::set_Translation(valuetype System.Numerics.Vector2/*02000009*/) /* 060000B7 */
  } // end of property Matrix3x2::Translation
} // end of class System.Numerics.Matrix3x2

.class /*02000006*/ public sequential ansi sealed beforefieldinit System.Numerics.Matrix4x4
       extends [mscorlib/*23000001*/]System.ValueType/*01000001*/
       implements class [mscorlib/*23000001*/]System.IEquatable`1/*01000005*/<valuetype System.Numerics.Matrix4x4/*02000006*/>/*1B000005*/
{
  .field /*04000015*/ public float32 M11
  .field /*04000016*/ public float32 M12
  .field /*04000017*/ public float32 M13
  .field /*04000018*/ public float32 M14
  .field /*04000019*/ public float32 M21
  .field /*0400001A*/ public float32 M22
  .field /*0400001B*/ public float32 M23
  .field /*0400001C*/ public float32 M24
  .field /*0400001D*/ public float32 M31
  .field /*0400001E*/ public float32 M32
  .field /*0400001F*/ public float32 M33
  .field /*04000020*/ public float32 M34
  .field /*04000021*/ public float32 M41
  .field /*04000022*/ public float32 M42
  .field /*04000023*/ public float32 M43
  .field /*04000024*/ public float32 M44
  .method /*060000D9*/ public hidebysig specialname static 
          valuetype System.Numerics.Matrix4x4/*02000006*/ 
          get_Identity() cil managed
  // SIG: 00 00 11 18
  {
    // Method begins at RVA 0x2128
    // Code size       0 (0x0)
  } // end of method Matrix4x4::get_Identity

  .method /*060000DA*/ public hidebysig specialname 
          instance bool  get_IsIdentity() cil managed
  // SIG: 20 00 02
  {
    // Method begins at RVA 0x2129
    // Code size       0 (0x0)
  } // end of method Matrix4x4::get_IsIdentity

  .method /*060000DB*/ public hidebysig specialname 
          instance valuetype System.Numerics.Vector3/*0200000A*/ 
          get_Translation() cil managed
  // SIG: 20 00 11 28
  {
    // Method begins at RVA 0x212a
    // Code size       0 (0x0)
  } // end of method Matrix4x4::get_Translation

  .method /*060000DC*/ public hidebysig specialname 
          instance void  set_Translation(valuetype System.Numerics.Vector3/*0200000A*/ 'value') cil managed
  // SIG: 20 01 01 11 28
  {
    // Method begins at RVA 0x212b
    // Code size       0 (0x0)
  } // end of method Matrix4x4::set_Translation

  .method /*060000DD*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(float32 m11,
                               float32 m12,
                               float32 m13,
                               float32 m14,
                               float32 m21,
                               float32 m22,
                               float32 m23,
                               float32 m24,
                               float32 m31,
                               float32 m32,
                               float32 m33,
                               float32 m34,
                               float32 m41,
                               float32 m42,
                               float32 m43,
                               float32 m44) cil managed
  // SIG: 20 10 01 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C
  {
    // Method begins at RVA 0x212c
    // Code size       0 (0x0)
  } // end of method Matrix4x4::.ctor

  .method /*060000DE*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(valuetype System.Numerics.Matrix3x2/*02000005*/ 'value') cil managed
  // SIG: 20 01 01 11 14
  {
    // Method begins at RVA 0x212d
    // Code size       0 (0x0)
  } // end of method Matrix4x4::.ctor

  .method /*060000DF*/ public hidebysig static 
          valuetype System.Numerics.Matrix4x4/*02000006*/ 
          CreateBillboard(valuetype System.Numerics.Vector3/*0200000A*/ objectPosition,
                          valuetype System.Numerics.Vector3/*0200000A*/ cameraPosition,
                          valuetype System.Numerics.Vector3/*0200000A*/ cameraUpVector,
                          valuetype System.Numerics.Vector3/*0200000A*/ cameraForwardVector) cil managed
  // SIG: 00 04 11 18 11 28 11 28 11 28 11 28
  {
    // Method begins at RVA 0x212e
    // Code size       0 (0x0)
  } // end of method Matrix4x4::CreateBillboard

  .method /*060000E0*/ public hidebysig static 
          valuetype System.Numerics.Matrix4x4/*02000006*/ 
          CreateConstrainedBillboard(valuetype System.Numerics.Vector3/*0200000A*/ objectPosition,
                                     valuetype System.Numerics.Vector3/*0200000A*/ cameraPosition,
                                     valuetype System.Numerics.Vector3/*0200000A*/ rotateAxis,
                                     valuetype System.Numerics.Vector3/*0200000A*/ cameraForwardVector,
                                     valuetype System.Numerics.Vector3/*0200000A*/ objectForwardVector) cil managed
  // SIG: 00 05 11 18 11 28 11 28 11 28 11 28 11 28
  {
    // Method begins at RVA 0x212f
    // Code size       0 (0x0)
  } // end of method Matrix4x4::CreateConstrainedBillboard

  .method /*060000E1*/ public hidebysig static 
          valuetype System.Numerics.Matrix4x4/*02000006*/ 
          CreateTranslation(valuetype System.Numerics.Vector3/*0200000A*/ position) cil managed
  // SIG: 00 01 11 18 11 28
  {
    // Method begins at RVA 0x2130
    // Code size       0 (0x0)
  } // end of method Matrix4x4::CreateTranslation

  .method /*060000E2*/ public hidebysig static 
          valuetype System.Numerics.Matrix4x4/*02000006*/ 
          CreateTranslation(float32 xPosition,
                            float32 yPosition,
                            float32 zPosition) cil managed
  // SIG: 00 03 11 18 0C 0C 0C
  {
    // Method begins at RVA 0x2131
    // Code size       0 (0x0)
  } // end of method Matrix4x4::CreateTranslation

  .method /*060000E3*/ public hidebysig static 
          valuetype System.Numerics.Matrix4x4/*02000006*/ 
          CreateScale(float32 xScale,
                      float32 yScale,
                      float32 zScale) cil managed
  // SIG: 00 03 11 18 0C 0C 0C
  {
    // Method begins at RVA 0x2132
    // Code size       0 (0x0)
  } // end of method Matrix4x4::CreateScale

  .method /*060000E4*/ public hidebysig static 
          valuetype System.Numerics.Matrix4x4/*02000006*/ 
          CreateScale(float32 xScale,
                      float32 yScale,
                      float32 zScale,
                      valuetype System.Numerics.Vector3/*0200000A*/ centerPoint) cil managed
  // SIG: 00 04 11 18 0C 0C 0C 11 28
  {
    // Method begins at RVA 0x2133
    // Code size       0 (0x0)
  } // end of method Matrix4x4::CreateScale

  .method /*060000E5*/ public hidebysig static 
          valuetype System.Numerics.Matrix4x4/*02000006*/ 
          CreateScale(valuetype System.Numerics.Vector3/*0200000A*/ scales) cil managed
  // SIG: 00 01 11 18 11 28
  {
    // Method begins at RVA 0x2134
    // Code size       0 (0x0)
  } // end of method Matrix4x4::CreateScale

  .method /*060000E6*/ public hidebysig static 
          valuetype System.Numerics.Matrix4x4/*02000006*/ 
          CreateScale(valuetype System.Numerics.Vector3/*0200000A*/ scales,
                      valuetype System.Numerics.Vector3/*0200000A*/ centerPoint) cil managed
  // SIG: 00 02 11 18 11 28 11 28
  {
    // Method begins at RVA 0x2135
    // Code size       0 (0x0)
  } // end of method Matrix4x4::CreateScale

  .method /*060000E7*/ public hidebysig static 
          valuetype System.Numerics.Matrix4x4/*02000006*/ 
          CreateScale(float32 scale) cil managed
  // SIG: 00 01 11 18 0C
  {
    // Method begins at RVA 0x2136
    // Code size       0 (0x0)
  } // end of method Matrix4x4::CreateScale

  .method /*060000E8*/ public hidebysig static 
          valuetype System.Numerics.Matrix4x4/*02000006*/ 
          CreateScale(float32 scale,
                      valuetype System.Numerics.Vector3/*0200000A*/ centerPoint) cil managed
  // SIG: 00 02 11 18 0C 11 28
  {
    // Method begins at RVA 0x2137
    // Code size       0 (0x0)
  } // end of method Matrix4x4::CreateScale

  .method /*060000E9*/ public hidebysig static 
          valuetype System.Numerics.Matrix4x4/*02000006*/ 
          CreateRotationX(float32 radians) cil managed
  // SIG: 00 01 11 18 0C
  {
    // Method begins at RVA 0x2138
    // Code size       0 (0x0)
  } // end of method Matrix4x4::CreateRotationX

  .method /*060000EA*/ public hidebysig static 
          valuetype System.Numerics.Matrix4x4/*02000006*/ 
          CreateRotationX(float32 radians,
                          valuetype System.Numerics.Vector3/*0200000A*/ centerPoint) cil managed
  // SIG: 00 02 11 18 0C 11 28
  {
    // Method begins at RVA 0x2139
    // Code size       0 (0x0)
  } // end of method Matrix4x4::CreateRotationX

  .method /*060000EB*/ public hidebysig static 
          valuetype System.Numerics.Matrix4x4/*02000006*/ 
          CreateRotationY(float32 radians) cil managed
  // SIG: 00 01 11 18 0C
  {
    // Method begins at RVA 0x213a
    // Code size       0 (0x0)
  } // end of method Matrix4x4::CreateRotationY

  .method /*060000EC*/ public hidebysig static 
          valuetype System.Numerics.Matrix4x4/*02000006*/ 
          CreateRotationY(float32 radians,
                          valuetype System.Numerics.Vector3/*0200000A*/ centerPoint) cil managed
  // SIG: 00 02 11 18 0C 11 28
  {
    // Method begins at RVA 0x213b
    // Code size       0 (0x0)
  } // end of method Matrix4x4::CreateRotationY

  .method /*060000ED*/ public hidebysig static 
          valuetype System.Numerics.Matrix4x4/*02000006*/ 
          CreateRotationZ(float32 radians) cil managed
  // SIG: 00 01 11 18 0C
  {
    // Method begins at RVA 0x213c
    // Code size       0 (0x0)
  } // end of method Matrix4x4::CreateRotationZ

  .method /*060000EE*/ public hidebysig static 
          valuetype System.Numerics.Matrix4x4/*02000006*/ 
          CreateRotationZ(float32 radians,
                          valuetype System.Numerics.Vector3/*0200000A*/ centerPoint) cil managed
  // SIG: 00 02 11 18 0C 11 28
  {
    // Method begins at RVA 0x213d
    // Code size       0 (0x0)
  } // end of method Matrix4x4::CreateRotationZ

  .method /*060000EF*/ public hidebysig static 
          valuetype System.Numerics.Matrix4x4/*02000006*/ 
          CreateFromAxisAngle(valuetype System.Numerics.Vector3/*0200000A*/ axis,
                              float32 angle) cil managed
  // SIG: 00 02 11 18 11 28 0C
  {
    // Method begins at RVA 0x213e
    // Code size       0 (0x0)
  } // end of method Matrix4x4::CreateFromAxisAngle

  .method /*060000F0*/ public hidebysig static 
          valuetype System.Numerics.Matrix4x4/*02000006*/ 
          CreatePerspectiveFieldOfView(float32 fieldOfView,
                                       float32 aspectRatio,
                                       float32 nearPlaneDistance,
                                       float32 farPlaneDistance) cil managed
  // SIG: 00 04 11 18 0C 0C 0C 0C
  {
    // Method begins at RVA 0x213f
    // Code size       0 (0x0)
  } // end of method Matrix4x4::CreatePerspectiveFieldOfView

  .method /*060000F1*/ public hidebysig static 
          valuetype System.Numerics.Matrix4x4/*02000006*/ 
          CreatePerspective(float32 width,
                            float32 height,
                            float32 nearPlaneDistance,
                            float32 farPlaneDistance) cil managed
  // SIG: 00 04 11 18 0C 0C 0C 0C
  {
    // Method begins at RVA 0x2140
    // Code size       0 (0x0)
  } // end of method Matrix4x4::CreatePerspective

  .method /*060000F2*/ public hidebysig static 
          valuetype System.Numerics.Matrix4x4/*02000006*/ 
          CreatePerspectiveOffCenter(float32 left,
                                     float32 right,
                                     float32 bottom,
                                     float32 top,
                                     float32 nearPlaneDistance,
                                     float32 farPlaneDistance) cil managed
  // SIG: 00 06 11 18 0C 0C 0C 0C 0C 0C
  {
    // Method begins at RVA 0x2141
    // Code size       0 (0x0)
  } // end of method Matrix4x4::CreatePerspectiveOffCenter

  .method /*060000F3*/ public hidebysig static 
          valuetype System.Numerics.Matrix4x4/*02000006*/ 
          CreateOrthographic(float32 width,
                             float32 height,
                             float32 zNearPlane,
                             float32 zFarPlane) cil managed
  // SIG: 00 04 11 18 0C 0C 0C 0C
  {
    // Method begins at RVA 0x2142
    // Code size       0 (0x0)
  } // end of method Matrix4x4::CreateOrthographic

  .method /*060000F4*/ public hidebysig static 
          valuetype System.Numerics.Matrix4x4/*02000006*/ 
          CreateOrthographicOffCenter(float32 left,
                                      float32 right,
                                      float32 bottom,
                                      float32 top,
                                      float32 zNearPlane,
                                      float32 zFarPlane) cil managed
  // SIG: 00 06 11 18 0C 0C 0C 0C 0C 0C
  {
    // Method begins at RVA 0x2143
    // Code size       0 (0x0)
  } // end of method Matrix4x4::CreateOrthographicOffCenter

  .method /*060000F5*/ public hidebysig static 
          valuetype System.Numerics.Matrix4x4/*02000006*/ 
          CreateLookAt(valuetype System.Numerics.Vector3/*0200000A*/ cameraPosition,
                       valuetype System.Numerics.Vector3/*0200000A*/ cameraTarget,
                       valuetype System.Numerics.Vector3/*0200000A*/ cameraUpVector) cil managed
  // SIG: 00 03 11 18 11 28 11 28 11 28
  {
    // Method begins at RVA 0x2144
    // Code size       0 (0x0)
  } // end of method Matrix4x4::CreateLookAt

  .method /*060000F6*/ public hidebysig static 
          valuetype System.Numerics.Matrix4x4/*02000006*/ 
          CreateWorld(valuetype System.Numerics.Vector3/*0200000A*/ position,
                      valuetype System.Numerics.Vector3/*0200000A*/ forward,
                      valuetype System.Numerics.Vector3/*0200000A*/ up) cil managed
  // SIG: 00 03 11 18 11 28 11 28 11 28
  {
    // Method begins at RVA 0x2145
    // Code size       0 (0x0)
  } // end of method Matrix4x4::CreateWorld

  .method /*060000F7*/ public hidebysig static 
          valuetype System.Numerics.Matrix4x4/*02000006*/ 
          CreateFromQuaternion(valuetype System.Numerics.Quaternion/*02000008*/ quaternion) cil managed
  // SIG: 00 01 11 18 11 20
  {
    // Method begins at RVA 0x2146
    // Code size       0 (0x0)
  } // end of method Matrix4x4::CreateFromQuaternion

  .method /*060000F8*/ public hidebysig static 
          valuetype System.Numerics.Matrix4x4/*02000006*/ 
          CreateFromYawPitchRoll(float32 yaw,
                                 float32 pitch,
                                 float32 roll) cil managed
  // SIG: 00 03 11 18 0C 0C 0C
  {
    // Method begins at RVA 0x2147
    // Code size       0 (0x0)
  } // end of method Matrix4x4::CreateFromYawPitchRoll

  .method /*060000F9*/ public hidebysig static 
          valuetype System.Numerics.Matrix4x4/*02000006*/ 
          CreateShadow(valuetype System.Numerics.Vector3/*0200000A*/ lightDirection,
                       valuetype System.Numerics.Plane/*02000007*/ plane) cil managed
  // SIG: 00 02 11 18 11 28 11 1C
  {
    // Method begins at RVA 0x2148
    // Code size       0 (0x0)
  } // end of method Matrix4x4::CreateShadow

  .method /*060000FA*/ public hidebysig static 
          valuetype System.Numerics.Matrix4x4/*02000006*/ 
          CreateReflection(valuetype System.Numerics.Plane/*02000007*/ 'value') cil managed
  // SIG: 00 01 11 18 11 1C
  {
    // Method begins at RVA 0x2149
    // Code size       0 (0x0)
  } // end of method Matrix4x4::CreateReflection

  .method /*060000FB*/ public hidebysig instance float32 
          GetDeterminant() cil managed
  // SIG: 20 00 0C
  {
    // Method begins at RVA 0x214a
    // Code size       0 (0x0)
  } // end of method Matrix4x4::GetDeterminant

  .method /*060000FC*/ public hidebysig static 
          bool  Invert(valuetype System.Numerics.Matrix4x4/*02000006*/ matrix,
                       [out] valuetype System.Numerics.Matrix4x4/*02000006*/& result) cil managed
  // SIG: 00 02 02 11 18 10 11 18
  {
    // Method begins at RVA 0x214c
    // Code size       0 (0x0)
  } // end of method Matrix4x4::Invert

  .method /*060000FD*/ public hidebysig static 
          bool  Decompose(valuetype System.Numerics.Matrix4x4/*02000006*/ matrix,
                          [out] valuetype System.Numerics.Vector3/*0200000A*/& scale,
                          [out] valuetype System.Numerics.Quaternion/*02000008*/& rotation,
                          [out] valuetype System.Numerics.Vector3/*0200000A*/& translation) cil managed
  // SIG: 00 04 02 11 18 10 11 28 10 11 20 10 11 28
  {
    .custom /*0C000037:0A000019*/ instance void [mscorlib/*23000001*/]System.Security.SecuritySafeCriticalAttribute/*01000027*/::.ctor() /* 0A000019 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x2158
    // Code size       0 (0x0)
  } // end of method Matrix4x4::Decompose

  .method /*060000FE*/ public hidebysig static 
          valuetype System.Numerics.Matrix4x4/*02000006*/ 
          Transform(valuetype System.Numerics.Matrix4x4/*02000006*/ 'value',
                    valuetype System.Numerics.Quaternion/*02000008*/ rotation) cil managed
  // SIG: 00 02 11 18 11 18 11 20
  {
    // Method begins at RVA 0x2159
    // Code size       0 (0x0)
  } // end of method Matrix4x4::Transform

  .method /*060000FF*/ public hidebysig static 
          valuetype System.Numerics.Matrix4x4/*02000006*/ 
          Transpose(valuetype System.Numerics.Matrix4x4/*02000006*/ matrix) cil managed
  // SIG: 00 01 11 18 11 18
  {
    // Method begins at RVA 0x215a
    // Code size       0 (0x0)
  } // end of method Matrix4x4::Transpose

  .method /*06000100*/ public hidebysig static 
          valuetype System.Numerics.Matrix4x4/*02000006*/ 
          Lerp(valuetype System.Numerics.Matrix4x4/*02000006*/ matrix1,
               valuetype System.Numerics.Matrix4x4/*02000006*/ matrix2,
               float32 amount) cil managed
  // SIG: 00 03 11 18 11 18 11 18 0C
  {
    // Method begins at RVA 0x215b
    // Code size       0 (0x0)
  } // end of method Matrix4x4::Lerp

  .method /*06000101*/ public hidebysig static 
          valuetype System.Numerics.Matrix4x4/*02000006*/ 
          Negate(valuetype System.Numerics.Matrix4x4/*02000006*/ 'value') cil managed
  // SIG: 00 01 11 18 11 18
  {
    // Method begins at RVA 0x215c
    // Code size       0 (0x0)
  } // end of method Matrix4x4::Negate

  .method /*06000102*/ public hidebysig static 
          valuetype System.Numerics.Matrix4x4/*02000006*/ 
          Add(valuetype System.Numerics.Matrix4x4/*02000006*/ value1,
              valuetype System.Numerics.Matrix4x4/*02000006*/ value2) cil managed
  // SIG: 00 02 11 18 11 18 11 18
  {
    // Method begins at RVA 0x215d
    // Code size       0 (0x0)
  } // end of method Matrix4x4::Add

  .method /*06000103*/ public hidebysig static 
          valuetype System.Numerics.Matrix4x4/*02000006*/ 
          Subtract(valuetype System.Numerics.Matrix4x4/*02000006*/ value1,
                   valuetype System.Numerics.Matrix4x4/*02000006*/ value2) cil managed
  // SIG: 00 02 11 18 11 18 11 18
  {
    // Method begins at RVA 0x215e
    // Code size       0 (0x0)
  } // end of method Matrix4x4::Subtract

  .method /*06000104*/ public hidebysig static 
          valuetype System.Numerics.Matrix4x4/*02000006*/ 
          Multiply(valuetype System.Numerics.Matrix4x4/*02000006*/ value1,
                   valuetype System.Numerics.Matrix4x4/*02000006*/ value2) cil managed
  // SIG: 00 02 11 18 11 18 11 18
  {
    // Method begins at RVA 0x215f
    // Code size       0 (0x0)
  } // end of method Matrix4x4::Multiply

  .method /*06000105*/ public hidebysig static 
          valuetype System.Numerics.Matrix4x4/*02000006*/ 
          Multiply(valuetype System.Numerics.Matrix4x4/*02000006*/ value1,
                   float32 value2) cil managed
  // SIG: 00 02 11 18 11 18 0C
  {
    // Method begins at RVA 0x2160
    // Code size       0 (0x0)
  } // end of method Matrix4x4::Multiply

  .method /*06000106*/ public hidebysig specialname static 
          valuetype System.Numerics.Matrix4x4/*02000006*/ 
          op_UnaryNegation(valuetype System.Numerics.Matrix4x4/*02000006*/ 'value') cil managed
  // SIG: 00 01 11 18 11 18
  {
    // Method begins at RVA 0x2161
    // Code size       0 (0x0)
  } // end of method Matrix4x4::op_UnaryNegation

  .method /*06000107*/ public hidebysig specialname static 
          valuetype System.Numerics.Matrix4x4/*02000006*/ 
          op_Addition(valuetype System.Numerics.Matrix4x4/*02000006*/ value1,
                      valuetype System.Numerics.Matrix4x4/*02000006*/ value2) cil managed
  // SIG: 00 02 11 18 11 18 11 18
  {
    // Method begins at RVA 0x2162
    // Code size       0 (0x0)
  } // end of method Matrix4x4::op_Addition

  .method /*06000108*/ public hidebysig specialname static 
          valuetype System.Numerics.Matrix4x4/*02000006*/ 
          op_Subtraction(valuetype System.Numerics.Matrix4x4/*02000006*/ value1,
                         valuetype System.Numerics.Matrix4x4/*02000006*/ value2) cil managed
  // SIG: 00 02 11 18 11 18 11 18
  {
    // Method begins at RVA 0x2163
    // Code size       0 (0x0)
  } // end of method Matrix4x4::op_Subtraction

  .method /*06000109*/ public hidebysig specialname static 
          valuetype System.Numerics.Matrix4x4/*02000006*/ 
          op_Multiply(valuetype System.Numerics.Matrix4x4/*02000006*/ value1,
                      valuetype System.Numerics.Matrix4x4/*02000006*/ value2) cil managed
  // SIG: 00 02 11 18 11 18 11 18
  {
    // Method begins at RVA 0x2164
    // Code size       0 (0x0)
  } // end of method Matrix4x4::op_Multiply

  .method /*0600010A*/ public hidebysig specialname static 
          valuetype System.Numerics.Matrix4x4/*02000006*/ 
          op_Multiply(valuetype System.Numerics.Matrix4x4/*02000006*/ value1,
                      float32 value2) cil managed
  // SIG: 00 02 11 18 11 18 0C
  {
    // Method begins at RVA 0x2165
    // Code size       0 (0x0)
  } // end of method Matrix4x4::op_Multiply

  .method /*0600010B*/ public hidebysig specialname static 
          bool  op_Equality(valuetype System.Numerics.Matrix4x4/*02000006*/ value1,
                            valuetype System.Numerics.Matrix4x4/*02000006*/ value2) cil managed
  // SIG: 00 02 02 11 18 11 18
  {
    // Method begins at RVA 0x2166
    // Code size       0 (0x0)
  } // end of method Matrix4x4::op_Equality

  .method /*0600010C*/ public hidebysig specialname static 
          bool  op_Inequality(valuetype System.Numerics.Matrix4x4/*02000006*/ value1,
                              valuetype System.Numerics.Matrix4x4/*02000006*/ value2) cil managed
  // SIG: 00 02 02 11 18 11 18
  {
    // Method begins at RVA 0x2167
    // Code size       0 (0x0)
  } // end of method Matrix4x4::op_Inequality

  .method /*0600010D*/ public hidebysig newslot virtual final 
          instance bool  Equals(valuetype System.Numerics.Matrix4x4/*02000006*/ other) cil managed
  // SIG: 20 01 02 11 18
  {
    // Method begins at RVA 0x2168
    // Code size       0 (0x0)
  } // end of method Matrix4x4::Equals

  .method /*0600010E*/ public hidebysig virtual 
          instance bool  Equals(object obj) cil managed
  // SIG: 20 01 02 1C
  {
    // Method begins at RVA 0x2169
    // Code size       0 (0x0)
  } // end of method Matrix4x4::Equals

  .method /*0600010F*/ public hidebysig virtual 
          instance string  ToString() cil managed
  // SIG: 20 00 0E
  {
    // Method begins at RVA 0x216a
    // Code size       0 (0x0)
  } // end of method Matrix4x4::ToString

  .method /*06000110*/ public hidebysig virtual 
          instance int32  GetHashCode() cil managed
  // SIG: 20 00 08
  {
    // Method begins at RVA 0x216b
    // Code size       0 (0x0)
  } // end of method Matrix4x4::GetHashCode

  .method /*06000111*/ private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  // SIG: 00 00 01
  {
    // Method begins at RVA 0x216c
    // Code size       0 (0x0)
  } // end of method Matrix4x4::.cctor

  .property /*17000010*/ callconv(8) valuetype System.Numerics.Matrix4x4/*02000006*/
          Identity()
  {
    .get valuetype System.Numerics.Matrix4x4/*02000006*/ System.Numerics.Matrix4x4/*02000006*/::get_Identity() /* 060000D9 */
  } // end of property Matrix4x4::Identity
  .property /*17000011*/ instance callconv(8) bool
          IsIdentity()
  {
    .get instance bool System.Numerics.Matrix4x4/*02000006*/::get_IsIdentity() /* 060000DA */
  } // end of property Matrix4x4::IsIdentity
  .property /*17000012*/ instance callconv(8) valuetype System.Numerics.Vector3/*0200000A*/
          Translation()
  {
    .get instance valuetype System.Numerics.Vector3/*0200000A*/ System.Numerics.Matrix4x4/*02000006*/::get_Translation() /* 060000DB */
    .set instance void System.Numerics.Matrix4x4/*02000006*/::set_Translation(valuetype System.Numerics.Vector3/*0200000A*/) /* 060000DC */
  } // end of property Matrix4x4::Translation
} // end of class System.Numerics.Matrix4x4

.class /*02000007*/ public sequential ansi sealed beforefieldinit System.Numerics.Plane
       extends [mscorlib/*23000001*/]System.ValueType/*01000001*/
       implements class [mscorlib/*23000001*/]System.IEquatable`1/*01000005*/<valuetype System.Numerics.Plane/*02000007*/>/*1B000006*/
{
  .field /*04000025*/ public valuetype System.Numerics.Vector3/*0200000A*/ Normal
  .field /*04000026*/ public float32 D
  .method /*06000112*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(float32 x,
                               float32 y,
                               float32 z,
                               float32 d) cil managed
  // SIG: 20 04 01 0C 0C 0C 0C
  {
    // Method begins at RVA 0x2178
    // Code size       0 (0x0)
  } // end of method Plane::.ctor

  .method /*06000113*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(valuetype System.Numerics.Vector3/*0200000A*/ normal,
                               float32 d) cil managed
  // SIG: 20 02 01 11 28 0C
  {
    // Method begins at RVA 0x2179
    // Code size       0 (0x0)
  } // end of method Plane::.ctor

  .method /*06000114*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(valuetype System.Numerics.Vector4/*0200000B*/ 'value') cil managed
  // SIG: 20 01 01 11 2C
  {
    // Method begins at RVA 0x217a
    // Code size       0 (0x0)
  } // end of method Plane::.ctor

  .method /*06000115*/ public hidebysig static 
          valuetype System.Numerics.Plane/*02000007*/ 
          CreateFromVertices(valuetype System.Numerics.Vector3/*0200000A*/ point1,
                             valuetype System.Numerics.Vector3/*0200000A*/ point2,
                             valuetype System.Numerics.Vector3/*0200000A*/ point3) cil managed aggressiveinlining
  // SIG: 00 03 11 1C 11 28 11 28 11 28
  {
    // Method begins at RVA 0x217b
    // Code size       0 (0x0)
  } // end of method Plane::CreateFromVertices

  .method /*06000116*/ public hidebysig static 
          valuetype System.Numerics.Plane/*02000007*/ 
          Normalize(valuetype System.Numerics.Plane/*02000007*/ 'value') cil managed aggressiveinlining
  // SIG: 00 01 11 1C 11 1C
  {
    // Method begins at RVA 0x217c
    // Code size       0 (0x0)
  } // end of method Plane::Normalize

  .method /*06000117*/ public hidebysig static 
          valuetype System.Numerics.Plane/*02000007*/ 
          Transform(valuetype System.Numerics.Plane/*02000007*/ plane,
                    valuetype System.Numerics.Matrix4x4/*02000006*/ matrix) cil managed aggressiveinlining
  // SIG: 00 02 11 1C 11 1C 11 18
  {
    // Method begins at RVA 0x217d
    // Code size       0 (0x0)
  } // end of method Plane::Transform

  .method /*06000118*/ public hidebysig static 
          valuetype System.Numerics.Plane/*02000007*/ 
          Transform(valuetype System.Numerics.Plane/*02000007*/ plane,
                    valuetype System.Numerics.Quaternion/*02000008*/ rotation) cil managed aggressiveinlining
  // SIG: 00 02 11 1C 11 1C 11 20
  {
    // Method begins at RVA 0x217e
    // Code size       0 (0x0)
  } // end of method Plane::Transform

  .method /*06000119*/ public hidebysig static 
          float32  Dot(valuetype System.Numerics.Plane/*02000007*/ plane,
                       valuetype System.Numerics.Vector4/*0200000B*/ 'value') cil managed aggressiveinlining
  // SIG: 00 02 0C 11 1C 11 2C
  {
    // Method begins at RVA 0x217f
    // Code size       0 (0x0)
  } // end of method Plane::Dot

  .method /*0600011A*/ public hidebysig static 
          float32  DotCoordinate(valuetype System.Numerics.Plane/*02000007*/ plane,
                                 valuetype System.Numerics.Vector3/*0200000A*/ 'value') cil managed aggressiveinlining
  // SIG: 00 02 0C 11 1C 11 28
  {
    // Method begins at RVA 0x2180
    // Code size       0 (0x0)
  } // end of method Plane::DotCoordinate

  .method /*0600011B*/ public hidebysig static 
          float32  DotNormal(valuetype System.Numerics.Plane/*02000007*/ plane,
                             valuetype System.Numerics.Vector3/*0200000A*/ 'value') cil managed aggressiveinlining
  // SIG: 00 02 0C 11 1C 11 28
  {
    // Method begins at RVA 0x2181
    // Code size       0 (0x0)
  } // end of method Plane::DotNormal

  .method /*0600011C*/ public hidebysig specialname static 
          bool  op_Equality(valuetype System.Numerics.Plane/*02000007*/ value1,
                            valuetype System.Numerics.Plane/*02000007*/ value2) cil managed aggressiveinlining
  // SIG: 00 02 02 11 1C 11 1C
  {
    // Method begins at RVA 0x2182
    // Code size       0 (0x0)
  } // end of method Plane::op_Equality

  .method /*0600011D*/ public hidebysig specialname static 
          bool  op_Inequality(valuetype System.Numerics.Plane/*02000007*/ value1,
                              valuetype System.Numerics.Plane/*02000007*/ value2) cil managed aggressiveinlining
  // SIG: 00 02 02 11 1C 11 1C
  {
    // Method begins at RVA 0x2183
    // Code size       0 (0x0)
  } // end of method Plane::op_Inequality

  .method /*0600011E*/ public hidebysig newslot virtual final 
          instance bool  Equals(valuetype System.Numerics.Plane/*02000007*/ other) cil managed aggressiveinlining
  // SIG: 20 01 02 11 1C
  {
    // Method begins at RVA 0x2184
    // Code size       0 (0x0)
  } // end of method Plane::Equals

  .method /*0600011F*/ public hidebysig virtual 
          instance bool  Equals(object obj) cil managed aggressiveinlining
  // SIG: 20 01 02 1C
  {
    // Method begins at RVA 0x2185
    // Code size       0 (0x0)
  } // end of method Plane::Equals

  .method /*06000120*/ public hidebysig virtual 
          instance string  ToString() cil managed
  // SIG: 20 00 0E
  {
    // Method begins at RVA 0x2186
    // Code size       0 (0x0)
  } // end of method Plane::ToString

  .method /*06000121*/ public hidebysig virtual 
          instance int32  GetHashCode() cil managed
  // SIG: 20 00 08
  {
    // Method begins at RVA 0x2187
    // Code size       0 (0x0)
  } // end of method Plane::GetHashCode

} // end of class System.Numerics.Plane

.class /*02000008*/ public sequential ansi sealed beforefieldinit System.Numerics.Quaternion
       extends [mscorlib/*23000001*/]System.ValueType/*01000001*/
       implements class [mscorlib/*23000001*/]System.IEquatable`1/*01000005*/<valuetype System.Numerics.Quaternion/*02000008*/>/*1B000007*/
{
  .field /*04000027*/ public float32 X
  .field /*04000028*/ public float32 Y
  .field /*04000029*/ public float32 Z
  .field /*0400002A*/ public float32 W
  .method /*06000122*/ public hidebysig specialname static 
          valuetype System.Numerics.Quaternion/*02000008*/ 
          get_Identity() cil managed
  // SIG: 00 00 11 20
  {
    // Method begins at RVA 0x2188
    // Code size       0 (0x0)
  } // end of method Quaternion::get_Identity

  .method /*06000123*/ public hidebysig specialname 
          instance bool  get_IsIdentity() cil managed
  // SIG: 20 00 02
  {
    // Method begins at RVA 0x2189
    // Code size       0 (0x0)
  } // end of method Quaternion::get_IsIdentity

  .method /*06000124*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(float32 x,
                               float32 y,
                               float32 z,
                               float32 w) cil managed
  // SIG: 20 04 01 0C 0C 0C 0C
  {
    // Method begins at RVA 0x218a
    // Code size       0 (0x0)
  } // end of method Quaternion::.ctor

  .method /*06000125*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(valuetype System.Numerics.Vector3/*0200000A*/ vectorPart,
                               float32 scalarPart) cil managed
  // SIG: 20 02 01 11 28 0C
  {
    // Method begins at RVA 0x218b
    // Code size       0 (0x0)
  } // end of method Quaternion::.ctor

  .method /*06000126*/ public hidebysig instance float32 
          Length() cil managed
  // SIG: 20 00 0C
  {
    // Method begins at RVA 0x218c
    // Code size       0 (0x0)
  } // end of method Quaternion::Length

  .method /*06000127*/ public hidebysig instance float32 
          LengthSquared() cil managed
  // SIG: 20 00 0C
  {
    // Method begins at RVA 0x218d
    // Code size       0 (0x0)
  } // end of method Quaternion::LengthSquared

  .method /*06000128*/ public hidebysig static 
          valuetype System.Numerics.Quaternion/*02000008*/ 
          Normalize(valuetype System.Numerics.Quaternion/*02000008*/ 'value') cil managed
  // SIG: 00 01 11 20 11 20
  {
    // Method begins at RVA 0x218e
    // Code size       0 (0x0)
  } // end of method Quaternion::Normalize

  .method /*06000129*/ public hidebysig static 
          valuetype System.Numerics.Quaternion/*02000008*/ 
          Conjugate(valuetype System.Numerics.Quaternion/*02000008*/ 'value') cil managed
  // SIG: 00 01 11 20 11 20
  {
    // Method begins at RVA 0x218f
    // Code size       0 (0x0)
  } // end of method Quaternion::Conjugate

  .method /*0600012A*/ public hidebysig static 
          valuetype System.Numerics.Quaternion/*02000008*/ 
          Inverse(valuetype System.Numerics.Quaternion/*02000008*/ 'value') cil managed
  // SIG: 00 01 11 20 11 20
  {
    // Method begins at RVA 0x2190
    // Code size       0 (0x0)
  } // end of method Quaternion::Inverse

  .method /*0600012B*/ public hidebysig static 
          valuetype System.Numerics.Quaternion/*02000008*/ 
          CreateFromAxisAngle(valuetype System.Numerics.Vector3/*0200000A*/ axis,
                              float32 angle) cil managed
  // SIG: 00 02 11 20 11 28 0C
  {
    // Method begins at RVA 0x2191
    // Code size       0 (0x0)
  } // end of method Quaternion::CreateFromAxisAngle

  .method /*0600012C*/ public hidebysig static 
          valuetype System.Numerics.Quaternion/*02000008*/ 
          CreateFromYawPitchRoll(float32 yaw,
                                 float32 pitch,
                                 float32 roll) cil managed
  // SIG: 00 03 11 20 0C 0C 0C
  {
    // Method begins at RVA 0x2192
    // Code size       0 (0x0)
  } // end of method Quaternion::CreateFromYawPitchRoll

  .method /*0600012D*/ public hidebysig static 
          valuetype System.Numerics.Quaternion/*02000008*/ 
          CreateFromRotationMatrix(valuetype System.Numerics.Matrix4x4/*02000006*/ matrix) cil managed
  // SIG: 00 01 11 20 11 18
  {
    // Method begins at RVA 0x2193
    // Code size       0 (0x0)
  } // end of method Quaternion::CreateFromRotationMatrix

  .method /*0600012E*/ public hidebysig static 
          float32  Dot(valuetype System.Numerics.Quaternion/*02000008*/ quaternion1,
                       valuetype System.Numerics.Quaternion/*02000008*/ quaternion2) cil managed
  // SIG: 00 02 0C 11 20 11 20
  {
    // Method begins at RVA 0x2194
    // Code size       0 (0x0)
  } // end of method Quaternion::Dot

  .method /*0600012F*/ public hidebysig static 
          valuetype System.Numerics.Quaternion/*02000008*/ 
          Slerp(valuetype System.Numerics.Quaternion/*02000008*/ quaternion1,
                valuetype System.Numerics.Quaternion/*02000008*/ quaternion2,
                float32 amount) cil managed
  // SIG: 00 03 11 20 11 20 11 20 0C
  {
    // Method begins at RVA 0x2195
    // Code size       0 (0x0)
  } // end of method Quaternion::Slerp

  .method /*06000130*/ public hidebysig static 
          valuetype System.Numerics.Quaternion/*02000008*/ 
          Lerp(valuetype System.Numerics.Quaternion/*02000008*/ quaternion1,
               valuetype System.Numerics.Quaternion/*02000008*/ quaternion2,
               float32 amount) cil managed
  // SIG: 00 03 11 20 11 20 11 20 0C
  {
    // Method begins at RVA 0x2196
    // Code size       0 (0x0)
  } // end of method Quaternion::Lerp

  .method /*06000131*/ public hidebysig static 
          valuetype System.Numerics.Quaternion/*02000008*/ 
          Concatenate(valuetype System.Numerics.Quaternion/*02000008*/ value1,
                      valuetype System.Numerics.Quaternion/*02000008*/ value2) cil managed
  // SIG: 00 02 11 20 11 20 11 20
  {
    // Method begins at RVA 0x2197
    // Code size       0 (0x0)
  } // end of method Quaternion::Concatenate

  .method /*06000132*/ public hidebysig static 
          valuetype System.Numerics.Quaternion/*02000008*/ 
          Negate(valuetype System.Numerics.Quaternion/*02000008*/ 'value') cil managed
  // SIG: 00 01 11 20 11 20
  {
    // Method begins at RVA 0x2198
    // Code size       0 (0x0)
  } // end of method Quaternion::Negate

  .method /*06000133*/ public hidebysig static 
          valuetype System.Numerics.Quaternion/*02000008*/ 
          Add(valuetype System.Numerics.Quaternion/*02000008*/ value1,
              valuetype System.Numerics.Quaternion/*02000008*/ value2) cil managed
  // SIG: 00 02 11 20 11 20 11 20
  {
    // Method begins at RVA 0x2199
    // Code size       0 (0x0)
  } // end of method Quaternion::Add

  .method /*06000134*/ public hidebysig static 
          valuetype System.Numerics.Quaternion/*02000008*/ 
          Subtract(valuetype System.Numerics.Quaternion/*02000008*/ value1,
                   valuetype System.Numerics.Quaternion/*02000008*/ value2) cil managed
  // SIG: 00 02 11 20 11 20 11 20
  {
    // Method begins at RVA 0x219a
    // Code size       0 (0x0)
  } // end of method Quaternion::Subtract

  .method /*06000135*/ public hidebysig static 
          valuetype System.Numerics.Quaternion/*02000008*/ 
          Multiply(valuetype System.Numerics.Quaternion/*02000008*/ value1,
                   valuetype System.Numerics.Quaternion/*02000008*/ value2) cil managed
  // SIG: 00 02 11 20 11 20 11 20
  {
    // Method begins at RVA 0x219b
    // Code size       0 (0x0)
  } // end of method Quaternion::Multiply

  .method /*06000136*/ public hidebysig static 
          valuetype System.Numerics.Quaternion/*02000008*/ 
          Multiply(valuetype System.Numerics.Quaternion/*02000008*/ value1,
                   float32 value2) cil managed
  // SIG: 00 02 11 20 11 20 0C
  {
    // Method begins at RVA 0x219c
    // Code size       0 (0x0)
  } // end of method Quaternion::Multiply

  .method /*06000137*/ public hidebysig static 
          valuetype System.Numerics.Quaternion/*02000008*/ 
          Divide(valuetype System.Numerics.Quaternion/*02000008*/ value1,
                 valuetype System.Numerics.Quaternion/*02000008*/ value2) cil managed
  // SIG: 00 02 11 20 11 20 11 20
  {
    // Method begins at RVA 0x219d
    // Code size       0 (0x0)
  } // end of method Quaternion::Divide

  .method /*06000138*/ public hidebysig specialname static 
          valuetype System.Numerics.Quaternion/*02000008*/ 
          op_UnaryNegation(valuetype System.Numerics.Quaternion/*02000008*/ 'value') cil managed
  // SIG: 00 01 11 20 11 20
  {
    // Method begins at RVA 0x219e
    // Code size       0 (0x0)
  } // end of method Quaternion::op_UnaryNegation

  .method /*06000139*/ public hidebysig specialname static 
          valuetype System.Numerics.Quaternion/*02000008*/ 
          op_Addition(valuetype System.Numerics.Quaternion/*02000008*/ value1,
                      valuetype System.Numerics.Quaternion/*02000008*/ value2) cil managed
  // SIG: 00 02 11 20 11 20 11 20
  {
    // Method begins at RVA 0x219f
    // Code size       0 (0x0)
  } // end of method Quaternion::op_Addition

  .method /*0600013A*/ public hidebysig specialname static 
          valuetype System.Numerics.Quaternion/*02000008*/ 
          op_Subtraction(valuetype System.Numerics.Quaternion/*02000008*/ value1,
                         valuetype System.Numerics.Quaternion/*02000008*/ value2) cil managed
  // SIG: 00 02 11 20 11 20 11 20
  {
    // Method begins at RVA 0x21a0
    // Code size       0 (0x0)
  } // end of method Quaternion::op_Subtraction

  .method /*0600013B*/ public hidebysig specialname static 
          valuetype System.Numerics.Quaternion/*02000008*/ 
          op_Multiply(valuetype System.Numerics.Quaternion/*02000008*/ value1,
                      valuetype System.Numerics.Quaternion/*02000008*/ value2) cil managed
  // SIG: 00 02 11 20 11 20 11 20
  {
    // Method begins at RVA 0x21a1
    // Code size       0 (0x0)
  } // end of method Quaternion::op_Multiply

  .method /*0600013C*/ public hidebysig specialname static 
          valuetype System.Numerics.Quaternion/*02000008*/ 
          op_Multiply(valuetype System.Numerics.Quaternion/*02000008*/ value1,
                      float32 value2) cil managed
  // SIG: 00 02 11 20 11 20 0C
  {
    // Method begins at RVA 0x21a2
    // Code size       0 (0x0)
  } // end of method Quaternion::op_Multiply

  .method /*0600013D*/ public hidebysig specialname static 
          valuetype System.Numerics.Quaternion/*02000008*/ 
          op_Division(valuetype System.Numerics.Quaternion/*02000008*/ value1,
                      valuetype System.Numerics.Quaternion/*02000008*/ value2) cil managed
  // SIG: 00 02 11 20 11 20 11 20
  {
    // Method begins at RVA 0x21a3
    // Code size       0 (0x0)
  } // end of method Quaternion::op_Division

  .method /*0600013E*/ public hidebysig specialname static 
          bool  op_Equality(valuetype System.Numerics.Quaternion/*02000008*/ value1,
                            valuetype System.Numerics.Quaternion/*02000008*/ value2) cil managed
  // SIG: 00 02 02 11 20 11 20
  {
    // Method begins at RVA 0x21a4
    // Code size       0 (0x0)
  } // end of method Quaternion::op_Equality

  .method /*0600013F*/ public hidebysig specialname static 
          bool  op_Inequality(valuetype System.Numerics.Quaternion/*02000008*/ value1,
                              valuetype System.Numerics.Quaternion/*02000008*/ value2) cil managed
  // SIG: 00 02 02 11 20 11 20
  {
    // Method begins at RVA 0x21a5
    // Code size       0 (0x0)
  } // end of method Quaternion::op_Inequality

  .method /*06000140*/ public hidebysig newslot virtual final 
          instance bool  Equals(valuetype System.Numerics.Quaternion/*02000008*/ other) cil managed
  // SIG: 20 01 02 11 20
  {
    // Method begins at RVA 0x21a6
    // Code size       0 (0x0)
  } // end of method Quaternion::Equals

  .method /*06000141*/ public hidebysig virtual 
          instance bool  Equals(object obj) cil managed
  // SIG: 20 01 02 1C
  {
    // Method begins at RVA 0x21a7
    // Code size       0 (0x0)
  } // end of method Quaternion::Equals

  .method /*06000142*/ public hidebysig virtual 
          instance string  ToString() cil managed
  // SIG: 20 00 0E
  {
    // Method begins at RVA 0x21a8
    // Code size       0 (0x0)
  } // end of method Quaternion::ToString

  .method /*06000143*/ public hidebysig virtual 
          instance int32  GetHashCode() cil managed
  // SIG: 20 00 08
  {
    // Method begins at RVA 0x21a9
    // Code size       0 (0x0)
  } // end of method Quaternion::GetHashCode

  .property /*17000013*/ callconv(8) valuetype System.Numerics.Quaternion/*02000008*/
          Identity()
  {
    .get valuetype System.Numerics.Quaternion/*02000008*/ System.Numerics.Quaternion/*02000008*/::get_Identity() /* 06000122 */
  } // end of property Quaternion::Identity
  .property /*17000014*/ instance callconv(8) bool
          IsIdentity()
  {
    .get instance bool System.Numerics.Quaternion/*02000008*/::get_IsIdentity() /* 06000123 */
  } // end of property Quaternion::IsIdentity
} // end of class System.Numerics.Quaternion

.class /*02000009*/ public sequential ansi sealed beforefieldinit System.Numerics.Vector2
       extends [mscorlib/*23000001*/]System.ValueType/*01000001*/
       implements class [mscorlib/*23000001*/]System.IEquatable`1/*01000005*/<valuetype System.Numerics.Vector2/*02000009*/>/*1B000008*/,
                  [mscorlib/*23000001*/]System.IFormattable/*01000002*/
{
  .field /*0400002B*/ public float32 X
  .field /*0400002C*/ public float32 Y
  .method /*06000144*/ public hidebysig specialname static 
          valuetype System.Numerics.Vector2/*02000009*/ 
          get_Zero() cil managed
  // SIG: 00 00 11 24
  {
    // Method begins at RVA 0x21aa
    // Code size       0 (0x0)
  } // end of method Vector2::get_Zero

  .method /*06000145*/ public hidebysig specialname static 
          valuetype System.Numerics.Vector2/*02000009*/ 
          get_One() cil managed
  // SIG: 00 00 11 24
  {
    // Method begins at RVA 0x21ab
    // Code size       0 (0x0)
  } // end of method Vector2::get_One

  .method /*06000146*/ public hidebysig specialname static 
          valuetype System.Numerics.Vector2/*02000009*/ 
          get_UnitX() cil managed
  // SIG: 00 00 11 24
  {
    // Method begins at RVA 0x21ac
    // Code size       0 (0x0)
  } // end of method Vector2::get_UnitX

  .method /*06000147*/ public hidebysig specialname static 
          valuetype System.Numerics.Vector2/*02000009*/ 
          get_UnitY() cil managed
  // SIG: 00 00 11 24
  {
    // Method begins at RVA 0x21ad
    // Code size       0 (0x0)
  } // end of method Vector2::get_UnitY

  .method /*06000148*/ public hidebysig virtual 
          instance int32  GetHashCode() cil managed
  // SIG: 20 00 08
  {
    // Method begins at RVA 0x21ae
    // Code size       0 (0x0)
  } // end of method Vector2::GetHashCode

  .method /*06000149*/ public hidebysig virtual 
          instance bool  Equals(object obj) cil managed aggressiveinlining
  // SIG: 20 01 02 1C
  {
    // Method begins at RVA 0x21af
    // Code size       0 (0x0)
  } // end of method Vector2::Equals

  .method /*0600014A*/ public hidebysig virtual 
          instance string  ToString() cil managed
  // SIG: 20 00 0E
  {
    // Method begins at RVA 0x21b0
    // Code size       0 (0x0)
  } // end of method Vector2::ToString

  .method /*0600014B*/ public hidebysig instance string 
          ToString(string format) cil managed
  // SIG: 20 01 0E 0E
  {
    // Method begins at RVA 0x21b1
    // Code size       0 (0x0)
  } // end of method Vector2::ToString

  .method /*0600014C*/ public hidebysig newslot virtual final 
          instance string  ToString(string format,
                                    class [mscorlib/*23000001*/]System.IFormatProvider/*01000007*/ formatProvider) cil managed
  // SIG: 20 02 0E 0E 12 1D
  {
    // Method begins at RVA 0x21b2
    // Code size       0 (0x0)
  } // end of method Vector2::ToString

  .method /*0600014D*/ public hidebysig instance float32 
          Length() cil managed aggressiveinlining
  // SIG: 20 00 0C
  {
    // Method begins at RVA 0x21b3
    // Code size       0 (0x0)
  } // end of method Vector2::Length

  .method /*0600014E*/ public hidebysig instance float32 
          LengthSquared() cil managed aggressiveinlining
  // SIG: 20 00 0C
  {
    // Method begins at RVA 0x21b4
    // Code size       0 (0x0)
  } // end of method Vector2::LengthSquared

  .method /*0600014F*/ public hidebysig static 
          float32  Distance(valuetype System.Numerics.Vector2/*02000009*/ value1,
                            valuetype System.Numerics.Vector2/*02000009*/ value2) cil managed aggressiveinlining
  // SIG: 00 02 0C 11 24 11 24
  {
    // Method begins at RVA 0x21b5
    // Code size       0 (0x0)
  } // end of method Vector2::Distance

  .method /*06000150*/ public hidebysig static 
          float32  DistanceSquared(valuetype System.Numerics.Vector2/*02000009*/ value1,
                                   valuetype System.Numerics.Vector2/*02000009*/ value2) cil managed aggressiveinlining
  // SIG: 00 02 0C 11 24 11 24
  {
    // Method begins at RVA 0x21b6
    // Code size       0 (0x0)
  } // end of method Vector2::DistanceSquared

  .method /*06000151*/ public hidebysig static 
          valuetype System.Numerics.Vector2/*02000009*/ 
          Normalize(valuetype System.Numerics.Vector2/*02000009*/ 'value') cil managed aggressiveinlining
  // SIG: 00 01 11 24 11 24
  {
    // Method begins at RVA 0x21b7
    // Code size       0 (0x0)
  } // end of method Vector2::Normalize

  .method /*06000152*/ public hidebysig static 
          valuetype System.Numerics.Vector2/*02000009*/ 
          Reflect(valuetype System.Numerics.Vector2/*02000009*/ 'vector',
                  valuetype System.Numerics.Vector2/*02000009*/ normal) cil managed aggressiveinlining
  // SIG: 00 02 11 24 11 24 11 24
  {
    // Method begins at RVA 0x21b8
    // Code size       0 (0x0)
  } // end of method Vector2::Reflect

  .method /*06000153*/ public hidebysig static 
          valuetype System.Numerics.Vector2/*02000009*/ 
          Clamp(valuetype System.Numerics.Vector2/*02000009*/ value1,
                valuetype System.Numerics.Vector2/*02000009*/ min,
                valuetype System.Numerics.Vector2/*02000009*/ max) cil managed aggressiveinlining
  // SIG: 00 03 11 24 11 24 11 24 11 24
  {
    // Method begins at RVA 0x21b9
    // Code size       0 (0x0)
  } // end of method Vector2::Clamp

  .method /*06000154*/ public hidebysig static 
          valuetype System.Numerics.Vector2/*02000009*/ 
          Lerp(valuetype System.Numerics.Vector2/*02000009*/ value1,
               valuetype System.Numerics.Vector2/*02000009*/ value2,
               float32 amount) cil managed aggressiveinlining
  // SIG: 00 03 11 24 11 24 11 24 0C
  {
    // Method begins at RVA 0x21ba
    // Code size       0 (0x0)
  } // end of method Vector2::Lerp

  .method /*06000155*/ public hidebysig static 
          valuetype System.Numerics.Vector2/*02000009*/ 
          Transform(valuetype System.Numerics.Vector2/*02000009*/ position,
                    valuetype System.Numerics.Matrix3x2/*02000005*/ matrix) cil managed aggressiveinlining
  // SIG: 00 02 11 24 11 24 11 14
  {
    // Method begins at RVA 0x21bb
    // Code size       0 (0x0)
  } // end of method Vector2::Transform

  .method /*06000156*/ public hidebysig static 
          valuetype System.Numerics.Vector2/*02000009*/ 
          Transform(valuetype System.Numerics.Vector2/*02000009*/ position,
                    valuetype System.Numerics.Matrix4x4/*02000006*/ matrix) cil managed aggressiveinlining
  // SIG: 00 02 11 24 11 24 11 18
  {
    // Method begins at RVA 0x21bc
    // Code size       0 (0x0)
  } // end of method Vector2::Transform

  .method /*06000157*/ public hidebysig static 
          valuetype System.Numerics.Vector2/*02000009*/ 
          TransformNormal(valuetype System.Numerics.Vector2/*02000009*/ normal,
                          valuetype System.Numerics.Matrix3x2/*02000005*/ matrix) cil managed aggressiveinlining
  // SIG: 00 02 11 24 11 24 11 14
  {
    // Method begins at RVA 0x21bd
    // Code size       0 (0x0)
  } // end of method Vector2::TransformNormal

  .method /*06000158*/ public hidebysig static 
          valuetype System.Numerics.Vector2/*02000009*/ 
          TransformNormal(valuetype System.Numerics.Vector2/*02000009*/ normal,
                          valuetype System.Numerics.Matrix4x4/*02000006*/ matrix) cil managed aggressiveinlining
  // SIG: 00 02 11 24 11 24 11 18
  {
    // Method begins at RVA 0x21be
    // Code size       0 (0x0)
  } // end of method Vector2::TransformNormal

  .method /*06000159*/ public hidebysig static 
          valuetype System.Numerics.Vector2/*02000009*/ 
          Transform(valuetype System.Numerics.Vector2/*02000009*/ 'value',
                    valuetype System.Numerics.Quaternion/*02000008*/ rotation) cil managed aggressiveinlining
  // SIG: 00 02 11 24 11 24 11 20
  {
    // Method begins at RVA 0x21bf
    // Code size       0 (0x0)
  } // end of method Vector2::Transform

  .method /*0600015A*/ public hidebysig static 
          valuetype System.Numerics.Vector2/*02000009*/ 
          Add(valuetype System.Numerics.Vector2/*02000009*/ left,
              valuetype System.Numerics.Vector2/*02000009*/ right) cil managed aggressiveinlining
  // SIG: 00 02 11 24 11 24 11 24
  {
    // Method begins at RVA 0x21c0
    // Code size       0 (0x0)
  } // end of method Vector2::Add

  .method /*0600015B*/ public hidebysig static 
          valuetype System.Numerics.Vector2/*02000009*/ 
          Subtract(valuetype System.Numerics.Vector2/*02000009*/ left,
                   valuetype System.Numerics.Vector2/*02000009*/ right) cil managed aggressiveinlining
  // SIG: 00 02 11 24 11 24 11 24
  {
    // Method begins at RVA 0x21c1
    // Code size       0 (0x0)
  } // end of method Vector2::Subtract

  .method /*0600015C*/ public hidebysig static 
          valuetype System.Numerics.Vector2/*02000009*/ 
          Multiply(valuetype System.Numerics.Vector2/*02000009*/ left,
                   valuetype System.Numerics.Vector2/*02000009*/ right) cil managed aggressiveinlining
  // SIG: 00 02 11 24 11 24 11 24
  {
    // Method begins at RVA 0x21c2
    // Code size       0 (0x0)
  } // end of method Vector2::Multiply

  .method /*0600015D*/ public hidebysig static 
          valuetype System.Numerics.Vector2/*02000009*/ 
          Multiply(valuetype System.Numerics.Vector2/*02000009*/ left,
                   float32 right) cil managed aggressiveinlining
  // SIG: 00 02 11 24 11 24 0C
  {
    // Method begins at RVA 0x21c3
    // Code size       0 (0x0)
  } // end of method Vector2::Multiply

  .method /*0600015E*/ public hidebysig static 
          valuetype System.Numerics.Vector2/*02000009*/ 
          Multiply(float32 left,
                   valuetype System.Numerics.Vector2/*02000009*/ right) cil managed aggressiveinlining
  // SIG: 00 02 11 24 0C 11 24
  {
    // Method begins at RVA 0x21c4
    // Code size       0 (0x0)
  } // end of method Vector2::Multiply

  .method /*0600015F*/ public hidebysig static 
          valuetype System.Numerics.Vector2/*02000009*/ 
          Divide(valuetype System.Numerics.Vector2/*02000009*/ left,
                 valuetype System.Numerics.Vector2/*02000009*/ right) cil managed aggressiveinlining
  // SIG: 00 02 11 24 11 24 11 24
  {
    // Method begins at RVA 0x21c5
    // Code size       0 (0x0)
  } // end of method Vector2::Divide

  .method /*06000160*/ public hidebysig static 
          valuetype System.Numerics.Vector2/*02000009*/ 
          Divide(valuetype System.Numerics.Vector2/*02000009*/ left,
                 float32 divisor) cil managed aggressiveinlining
  // SIG: 00 02 11 24 11 24 0C
  {
    // Method begins at RVA 0x21c6
    // Code size       0 (0x0)
  } // end of method Vector2::Divide

  .method /*06000161*/ public hidebysig static 
          valuetype System.Numerics.Vector2/*02000009*/ 
          Negate(valuetype System.Numerics.Vector2/*02000009*/ 'value') cil managed aggressiveinlining
  // SIG: 00 01 11 24 11 24
  {
    // Method begins at RVA 0x21c7
    // Code size       0 (0x0)
  } // end of method Vector2::Negate

  .method /*06000162*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(float32 'value') cil managed
  // SIG: 20 01 01 0C
  {
    .custom /*0C000038:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x21c8
    // Code size       0 (0x0)
  } // end of method Vector2::.ctor

  .method /*06000163*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(float32 x,
                               float32 y) cil managed
  // SIG: 20 02 01 0C 0C
  {
    .custom /*0C000039:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x21c9
    // Code size       0 (0x0)
  } // end of method Vector2::.ctor

  .method /*06000164*/ public hidebysig instance void 
          CopyTo(float32[] 'array') cil managed aggressiveinlining
  // SIG: 20 01 01 1D 0C
  {
    // Method begins at RVA 0x21ca
    // Code size       0 (0x0)
  } // end of method Vector2::CopyTo

  .method /*06000165*/ public hidebysig instance void 
          CopyTo(float32[] 'array',
                 int32 index) cil managed
  // SIG: 20 02 01 1D 0C 08
  {
    // Method begins at RVA 0x21cb
    // Code size       0 (0x0)
  } // end of method Vector2::CopyTo

  .method /*06000166*/ public hidebysig newslot virtual final 
          instance bool  Equals(valuetype System.Numerics.Vector2/*02000009*/ other) cil managed
  // SIG: 20 01 02 11 24
  {
    .custom /*0C00003A:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x21cc
    // Code size       0 (0x0)
  } // end of method Vector2::Equals

  .method /*06000167*/ public hidebysig static 
          float32  Dot(valuetype System.Numerics.Vector2/*02000009*/ value1,
                       valuetype System.Numerics.Vector2/*02000009*/ value2) cil managed aggressiveinlining
  // SIG: 00 02 0C 11 24 11 24
  {
    .custom /*0C00003B:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x21cd
    // Code size       0 (0x0)
  } // end of method Vector2::Dot

  .method /*06000168*/ public hidebysig static 
          valuetype System.Numerics.Vector2/*02000009*/ 
          Min(valuetype System.Numerics.Vector2/*02000009*/ value1,
              valuetype System.Numerics.Vector2/*02000009*/ value2) cil managed aggressiveinlining
  // SIG: 00 02 11 24 11 24 11 24
  {
    .custom /*0C00003C:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x21ce
    // Code size       0 (0x0)
  } // end of method Vector2::Min

  .method /*06000169*/ public hidebysig static 
          valuetype System.Numerics.Vector2/*02000009*/ 
          Max(valuetype System.Numerics.Vector2/*02000009*/ value1,
              valuetype System.Numerics.Vector2/*02000009*/ value2) cil managed aggressiveinlining
  // SIG: 00 02 11 24 11 24 11 24
  {
    .custom /*0C00003D:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x21cf
    // Code size       0 (0x0)
  } // end of method Vector2::Max

  .method /*0600016A*/ public hidebysig static 
          valuetype System.Numerics.Vector2/*02000009*/ 
          Abs(valuetype System.Numerics.Vector2/*02000009*/ 'value') cil managed aggressiveinlining
  // SIG: 00 01 11 24 11 24
  {
    .custom /*0C00003E:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x21d0
    // Code size       0 (0x0)
  } // end of method Vector2::Abs

  .method /*0600016B*/ public hidebysig static 
          valuetype System.Numerics.Vector2/*02000009*/ 
          SquareRoot(valuetype System.Numerics.Vector2/*02000009*/ 'value') cil managed aggressiveinlining
  // SIG: 00 01 11 24 11 24
  {
    .custom /*0C00003F:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x21d1
    // Code size       0 (0x0)
  } // end of method Vector2::SquareRoot

  .method /*0600016C*/ public hidebysig specialname static 
          valuetype System.Numerics.Vector2/*02000009*/ 
          op_Addition(valuetype System.Numerics.Vector2/*02000009*/ left,
                      valuetype System.Numerics.Vector2/*02000009*/ right) cil managed aggressiveinlining
  // SIG: 00 02 11 24 11 24 11 24
  {
    .custom /*0C000040:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x21d2
    // Code size       0 (0x0)
  } // end of method Vector2::op_Addition

  .method /*0600016D*/ public hidebysig specialname static 
          valuetype System.Numerics.Vector2/*02000009*/ 
          op_Subtraction(valuetype System.Numerics.Vector2/*02000009*/ left,
                         valuetype System.Numerics.Vector2/*02000009*/ right) cil managed aggressiveinlining
  // SIG: 00 02 11 24 11 24 11 24
  {
    .custom /*0C000041:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x21d3
    // Code size       0 (0x0)
  } // end of method Vector2::op_Subtraction

  .method /*0600016E*/ public hidebysig specialname static 
          valuetype System.Numerics.Vector2/*02000009*/ 
          op_Multiply(valuetype System.Numerics.Vector2/*02000009*/ left,
                      valuetype System.Numerics.Vector2/*02000009*/ right) cil managed aggressiveinlining
  // SIG: 00 02 11 24 11 24 11 24
  {
    .custom /*0C000042:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x21d4
    // Code size       0 (0x0)
  } // end of method Vector2::op_Multiply

  .method /*0600016F*/ public hidebysig specialname static 
          valuetype System.Numerics.Vector2/*02000009*/ 
          op_Multiply(float32 left,
                      valuetype System.Numerics.Vector2/*02000009*/ right) cil managed aggressiveinlining
  // SIG: 00 02 11 24 0C 11 24
  {
    .custom /*0C000043:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x21d5
    // Code size       0 (0x0)
  } // end of method Vector2::op_Multiply

  .method /*06000170*/ public hidebysig specialname static 
          valuetype System.Numerics.Vector2/*02000009*/ 
          op_Multiply(valuetype System.Numerics.Vector2/*02000009*/ left,
                      float32 right) cil managed aggressiveinlining
  // SIG: 00 02 11 24 11 24 0C
  {
    .custom /*0C000044:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x21d6
    // Code size       0 (0x0)
  } // end of method Vector2::op_Multiply

  .method /*06000171*/ public hidebysig specialname static 
          valuetype System.Numerics.Vector2/*02000009*/ 
          op_Division(valuetype System.Numerics.Vector2/*02000009*/ left,
                      valuetype System.Numerics.Vector2/*02000009*/ right) cil managed aggressiveinlining
  // SIG: 00 02 11 24 11 24 11 24
  {
    .custom /*0C000045:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x21d7
    // Code size       0 (0x0)
  } // end of method Vector2::op_Division

  .method /*06000172*/ public hidebysig specialname static 
          valuetype System.Numerics.Vector2/*02000009*/ 
          op_Division(valuetype System.Numerics.Vector2/*02000009*/ value1,
                      float32 value2) cil managed aggressiveinlining
  // SIG: 00 02 11 24 11 24 0C
  {
    .custom /*0C000046:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x21d8
    // Code size       0 (0x0)
  } // end of method Vector2::op_Division

  .method /*06000173*/ public hidebysig specialname static 
          valuetype System.Numerics.Vector2/*02000009*/ 
          op_UnaryNegation(valuetype System.Numerics.Vector2/*02000009*/ 'value') cil managed aggressiveinlining
  // SIG: 00 01 11 24 11 24
  {
    // Method begins at RVA 0x21d9
    // Code size       0 (0x0)
  } // end of method Vector2::op_UnaryNegation

  .method /*06000174*/ public hidebysig specialname static 
          bool  op_Equality(valuetype System.Numerics.Vector2/*02000009*/ left,
                            valuetype System.Numerics.Vector2/*02000009*/ right) cil managed aggressiveinlining
  // SIG: 00 02 02 11 24 11 24
  {
    // Method begins at RVA 0x21da
    // Code size       0 (0x0)
  } // end of method Vector2::op_Equality

  .method /*06000175*/ public hidebysig specialname static 
          bool  op_Inequality(valuetype System.Numerics.Vector2/*02000009*/ left,
                              valuetype System.Numerics.Vector2/*02000009*/ right) cil managed aggressiveinlining
  // SIG: 00 02 02 11 24 11 24
  {
    // Method begins at RVA 0x21db
    // Code size       0 (0x0)
  } // end of method Vector2::op_Inequality

  .property /*17000015*/ callconv(8) valuetype System.Numerics.Vector2/*02000009*/
          Zero()
  {
    .get valuetype System.Numerics.Vector2/*02000009*/ System.Numerics.Vector2/*02000009*/::get_Zero() /* 06000144 */
  } // end of property Vector2::Zero
  .property /*17000016*/ callconv(8) valuetype System.Numerics.Vector2/*02000009*/
          One()
  {
    .get valuetype System.Numerics.Vector2/*02000009*/ System.Numerics.Vector2/*02000009*/::get_One() /* 06000145 */
  } // end of property Vector2::One
  .property /*17000017*/ callconv(8) valuetype System.Numerics.Vector2/*02000009*/
          UnitX()
  {
    .get valuetype System.Numerics.Vector2/*02000009*/ System.Numerics.Vector2/*02000009*/::get_UnitX() /* 06000146 */
  } // end of property Vector2::UnitX
  .property /*17000018*/ callconv(8) valuetype System.Numerics.Vector2/*02000009*/
          UnitY()
  {
    .get valuetype System.Numerics.Vector2/*02000009*/ System.Numerics.Vector2/*02000009*/::get_UnitY() /* 06000147 */
  } // end of property Vector2::UnitY
} // end of class System.Numerics.Vector2

.class /*0200000A*/ public sequential ansi sealed beforefieldinit System.Numerics.Vector3
       extends [mscorlib/*23000001*/]System.ValueType/*01000001*/
       implements class [mscorlib/*23000001*/]System.IEquatable`1/*01000005*/<valuetype System.Numerics.Vector3/*0200000A*/>/*1B000009*/,
                  [mscorlib/*23000001*/]System.IFormattable/*01000002*/
{
  .field /*0400002D*/ public float32 X
  .field /*0400002E*/ public float32 Y
  .field /*0400002F*/ public float32 Z
  .method /*06000176*/ public hidebysig specialname static 
          valuetype System.Numerics.Vector3/*0200000A*/ 
          get_Zero() cil managed
  // SIG: 00 00 11 28
  {
    // Method begins at RVA 0x21dc
    // Code size       0 (0x0)
  } // end of method Vector3::get_Zero

  .method /*06000177*/ public hidebysig specialname static 
          valuetype System.Numerics.Vector3/*0200000A*/ 
          get_One() cil managed
  // SIG: 00 00 11 28
  {
    // Method begins at RVA 0x21dd
    // Code size       0 (0x0)
  } // end of method Vector3::get_One

  .method /*06000178*/ public hidebysig specialname static 
          valuetype System.Numerics.Vector3/*0200000A*/ 
          get_UnitX() cil managed
  // SIG: 00 00 11 28
  {
    // Method begins at RVA 0x21de
    // Code size       0 (0x0)
  } // end of method Vector3::get_UnitX

  .method /*06000179*/ public hidebysig specialname static 
          valuetype System.Numerics.Vector3/*0200000A*/ 
          get_UnitY() cil managed
  // SIG: 00 00 11 28
  {
    // Method begins at RVA 0x21df
    // Code size       0 (0x0)
  } // end of method Vector3::get_UnitY

  .method /*0600017A*/ public hidebysig specialname static 
          valuetype System.Numerics.Vector3/*0200000A*/ 
          get_UnitZ() cil managed
  // SIG: 00 00 11 28
  {
    // Method begins at RVA 0x21e0
    // Code size       0 (0x0)
  } // end of method Vector3::get_UnitZ

  .method /*0600017B*/ public hidebysig virtual 
          instance int32  GetHashCode() cil managed
  // SIG: 20 00 08
  {
    // Method begins at RVA 0x21e1
    // Code size       0 (0x0)
  } // end of method Vector3::GetHashCode

  .method /*0600017C*/ public hidebysig virtual 
          instance bool  Equals(object obj) cil managed aggressiveinlining
  // SIG: 20 01 02 1C
  {
    // Method begins at RVA 0x21e2
    // Code size       0 (0x0)
  } // end of method Vector3::Equals

  .method /*0600017D*/ public hidebysig virtual 
          instance string  ToString() cil managed
  // SIG: 20 00 0E
  {
    // Method begins at RVA 0x21e3
    // Code size       0 (0x0)
  } // end of method Vector3::ToString

  .method /*0600017E*/ public hidebysig instance string 
          ToString(string format) cil managed
  // SIG: 20 01 0E 0E
  {
    // Method begins at RVA 0x21e4
    // Code size       0 (0x0)
  } // end of method Vector3::ToString

  .method /*0600017F*/ public hidebysig newslot virtual final 
          instance string  ToString(string format,
                                    class [mscorlib/*23000001*/]System.IFormatProvider/*01000007*/ formatProvider) cil managed
  // SIG: 20 02 0E 0E 12 1D
  {
    // Method begins at RVA 0x21e5
    // Code size       0 (0x0)
  } // end of method Vector3::ToString

  .method /*06000180*/ public hidebysig instance float32 
          Length() cil managed aggressiveinlining
  // SIG: 20 00 0C
  {
    // Method begins at RVA 0x21e6
    // Code size       0 (0x0)
  } // end of method Vector3::Length

  .method /*06000181*/ public hidebysig instance float32 
          LengthSquared() cil managed aggressiveinlining
  // SIG: 20 00 0C
  {
    // Method begins at RVA 0x21e7
    // Code size       0 (0x0)
  } // end of method Vector3::LengthSquared

  .method /*06000182*/ public hidebysig static 
          float32  Distance(valuetype System.Numerics.Vector3/*0200000A*/ value1,
                            valuetype System.Numerics.Vector3/*0200000A*/ value2) cil managed aggressiveinlining
  // SIG: 00 02 0C 11 28 11 28
  {
    // Method begins at RVA 0x21e8
    // Code size       0 (0x0)
  } // end of method Vector3::Distance

  .method /*06000183*/ public hidebysig static 
          float32  DistanceSquared(valuetype System.Numerics.Vector3/*0200000A*/ value1,
                                   valuetype System.Numerics.Vector3/*0200000A*/ value2) cil managed aggressiveinlining
  // SIG: 00 02 0C 11 28 11 28
  {
    // Method begins at RVA 0x21e9
    // Code size       0 (0x0)
  } // end of method Vector3::DistanceSquared

  .method /*06000184*/ public hidebysig static 
          valuetype System.Numerics.Vector3/*0200000A*/ 
          Normalize(valuetype System.Numerics.Vector3/*0200000A*/ 'value') cil managed aggressiveinlining
  // SIG: 00 01 11 28 11 28
  {
    // Method begins at RVA 0x21ea
    // Code size       0 (0x0)
  } // end of method Vector3::Normalize

  .method /*06000185*/ public hidebysig static 
          valuetype System.Numerics.Vector3/*0200000A*/ 
          Cross(valuetype System.Numerics.Vector3/*0200000A*/ vector1,
                valuetype System.Numerics.Vector3/*0200000A*/ vector2) cil managed aggressiveinlining
  // SIG: 00 02 11 28 11 28 11 28
  {
    // Method begins at RVA 0x21eb
    // Code size       0 (0x0)
  } // end of method Vector3::Cross

  .method /*06000186*/ public hidebysig static 
          valuetype System.Numerics.Vector3/*0200000A*/ 
          Reflect(valuetype System.Numerics.Vector3/*0200000A*/ 'vector',
                  valuetype System.Numerics.Vector3/*0200000A*/ normal) cil managed aggressiveinlining
  // SIG: 00 02 11 28 11 28 11 28
  {
    // Method begins at RVA 0x21ec
    // Code size       0 (0x0)
  } // end of method Vector3::Reflect

  .method /*06000187*/ public hidebysig static 
          valuetype System.Numerics.Vector3/*0200000A*/ 
          Clamp(valuetype System.Numerics.Vector3/*0200000A*/ value1,
                valuetype System.Numerics.Vector3/*0200000A*/ min,
                valuetype System.Numerics.Vector3/*0200000A*/ max) cil managed aggressiveinlining
  // SIG: 00 03 11 28 11 28 11 28 11 28
  {
    // Method begins at RVA 0x21ed
    // Code size       0 (0x0)
  } // end of method Vector3::Clamp

  .method /*06000188*/ public hidebysig static 
          valuetype System.Numerics.Vector3/*0200000A*/ 
          Lerp(valuetype System.Numerics.Vector3/*0200000A*/ value1,
               valuetype System.Numerics.Vector3/*0200000A*/ value2,
               float32 amount) cil managed aggressiveinlining
  // SIG: 00 03 11 28 11 28 11 28 0C
  {
    // Method begins at RVA 0x21ee
    // Code size       0 (0x0)
  } // end of method Vector3::Lerp

  .method /*06000189*/ public hidebysig static 
          valuetype System.Numerics.Vector3/*0200000A*/ 
          Transform(valuetype System.Numerics.Vector3/*0200000A*/ position,
                    valuetype System.Numerics.Matrix4x4/*02000006*/ matrix) cil managed aggressiveinlining
  // SIG: 00 02 11 28 11 28 11 18
  {
    // Method begins at RVA 0x21ef
    // Code size       0 (0x0)
  } // end of method Vector3::Transform

  .method /*0600018A*/ public hidebysig static 
          valuetype System.Numerics.Vector3/*0200000A*/ 
          TransformNormal(valuetype System.Numerics.Vector3/*0200000A*/ normal,
                          valuetype System.Numerics.Matrix4x4/*02000006*/ matrix) cil managed aggressiveinlining
  // SIG: 00 02 11 28 11 28 11 18
  {
    // Method begins at RVA 0x21f0
    // Code size       0 (0x0)
  } // end of method Vector3::TransformNormal

  .method /*0600018B*/ public hidebysig static 
          valuetype System.Numerics.Vector3/*0200000A*/ 
          Transform(valuetype System.Numerics.Vector3/*0200000A*/ 'value',
                    valuetype System.Numerics.Quaternion/*02000008*/ rotation) cil managed aggressiveinlining
  // SIG: 00 02 11 28 11 28 11 20
  {
    // Method begins at RVA 0x21f1
    // Code size       0 (0x0)
  } // end of method Vector3::Transform

  .method /*0600018C*/ public hidebysig static 
          valuetype System.Numerics.Vector3/*0200000A*/ 
          Add(valuetype System.Numerics.Vector3/*0200000A*/ left,
              valuetype System.Numerics.Vector3/*0200000A*/ right) cil managed aggressiveinlining
  // SIG: 00 02 11 28 11 28 11 28
  {
    // Method begins at RVA 0x21f2
    // Code size       0 (0x0)
  } // end of method Vector3::Add

  .method /*0600018D*/ public hidebysig static 
          valuetype System.Numerics.Vector3/*0200000A*/ 
          Subtract(valuetype System.Numerics.Vector3/*0200000A*/ left,
                   valuetype System.Numerics.Vector3/*0200000A*/ right) cil managed aggressiveinlining
  // SIG: 00 02 11 28 11 28 11 28
  {
    // Method begins at RVA 0x21f3
    // Code size       0 (0x0)
  } // end of method Vector3::Subtract

  .method /*0600018E*/ public hidebysig static 
          valuetype System.Numerics.Vector3/*0200000A*/ 
          Multiply(valuetype System.Numerics.Vector3/*0200000A*/ left,
                   valuetype System.Numerics.Vector3/*0200000A*/ right) cil managed aggressiveinlining
  // SIG: 00 02 11 28 11 28 11 28
  {
    // Method begins at RVA 0x21f4
    // Code size       0 (0x0)
  } // end of method Vector3::Multiply

  .method /*0600018F*/ public hidebysig static 
          valuetype System.Numerics.Vector3/*0200000A*/ 
          Multiply(valuetype System.Numerics.Vector3/*0200000A*/ left,
                   float32 right) cil managed aggressiveinlining
  // SIG: 00 02 11 28 11 28 0C
  {
    // Method begins at RVA 0x21f5
    // Code size       0 (0x0)
  } // end of method Vector3::Multiply

  .method /*06000190*/ public hidebysig static 
          valuetype System.Numerics.Vector3/*0200000A*/ 
          Multiply(float32 left,
                   valuetype System.Numerics.Vector3/*0200000A*/ right) cil managed aggressiveinlining
  // SIG: 00 02 11 28 0C 11 28
  {
    // Method begins at RVA 0x21f6
    // Code size       0 (0x0)
  } // end of method Vector3::Multiply

  .method /*06000191*/ public hidebysig static 
          valuetype System.Numerics.Vector3/*0200000A*/ 
          Divide(valuetype System.Numerics.Vector3/*0200000A*/ left,
                 valuetype System.Numerics.Vector3/*0200000A*/ right) cil managed aggressiveinlining
  // SIG: 00 02 11 28 11 28 11 28
  {
    // Method begins at RVA 0x21f7
    // Code size       0 (0x0)
  } // end of method Vector3::Divide

  .method /*06000192*/ public hidebysig static 
          valuetype System.Numerics.Vector3/*0200000A*/ 
          Divide(valuetype System.Numerics.Vector3/*0200000A*/ left,
                 float32 divisor) cil managed aggressiveinlining
  // SIG: 00 02 11 28 11 28 0C
  {
    // Method begins at RVA 0x21f8
    // Code size       0 (0x0)
  } // end of method Vector3::Divide

  .method /*06000193*/ public hidebysig static 
          valuetype System.Numerics.Vector3/*0200000A*/ 
          Negate(valuetype System.Numerics.Vector3/*0200000A*/ 'value') cil managed aggressiveinlining
  // SIG: 00 01 11 28 11 28
  {
    // Method begins at RVA 0x21f9
    // Code size       0 (0x0)
  } // end of method Vector3::Negate

  .method /*06000194*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(float32 'value') cil managed
  // SIG: 20 01 01 0C
  {
    .custom /*0C000047:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x21fa
    // Code size       0 (0x0)
  } // end of method Vector3::.ctor

  .method /*06000195*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(valuetype System.Numerics.Vector2/*02000009*/ 'value',
                               float32 z) cil managed
  // SIG: 20 02 01 11 24 0C
  {
    // Method begins at RVA 0x21fb
    // Code size       0 (0x0)
  } // end of method Vector3::.ctor

  .method /*06000196*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(float32 x,
                               float32 y,
                               float32 z) cil managed
  // SIG: 20 03 01 0C 0C 0C
  {
    .custom /*0C000048:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x21fc
    // Code size       0 (0x0)
  } // end of method Vector3::.ctor

  .method /*06000197*/ public hidebysig instance void 
          CopyTo(float32[] 'array') cil managed aggressiveinlining
  // SIG: 20 01 01 1D 0C
  {
    // Method begins at RVA 0x21fd
    // Code size       0 (0x0)
  } // end of method Vector3::CopyTo

  .method /*06000198*/ public hidebysig instance void 
          CopyTo(float32[] 'array',
                 int32 index) cil managed aggressiveinlining
  // SIG: 20 02 01 1D 0C 08
  {
    .custom /*0C000049:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x21fe
    // Code size       0 (0x0)
  } // end of method Vector3::CopyTo

  .method /*06000199*/ public hidebysig newslot virtual final 
          instance bool  Equals(valuetype System.Numerics.Vector3/*0200000A*/ other) cil managed
  // SIG: 20 01 02 11 28
  {
    .custom /*0C00004A:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x21ff
    // Code size       0 (0x0)
  } // end of method Vector3::Equals

  .method /*0600019A*/ public hidebysig static 
          float32  Dot(valuetype System.Numerics.Vector3/*0200000A*/ vector1,
                       valuetype System.Numerics.Vector3/*0200000A*/ vector2) cil managed aggressiveinlining
  // SIG: 00 02 0C 11 28 11 28
  {
    .custom /*0C00004B:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x2200
    // Code size       0 (0x0)
  } // end of method Vector3::Dot

  .method /*0600019B*/ public hidebysig static 
          valuetype System.Numerics.Vector3/*0200000A*/ 
          Min(valuetype System.Numerics.Vector3/*0200000A*/ value1,
              valuetype System.Numerics.Vector3/*0200000A*/ value2) cil managed
  // SIG: 00 02 11 28 11 28 11 28
  {
    .custom /*0C00004C:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x2201
    // Code size       0 (0x0)
  } // end of method Vector3::Min

  .method /*0600019C*/ public hidebysig static 
          valuetype System.Numerics.Vector3/*0200000A*/ 
          Max(valuetype System.Numerics.Vector3/*0200000A*/ value1,
              valuetype System.Numerics.Vector3/*0200000A*/ value2) cil managed aggressiveinlining
  // SIG: 00 02 11 28 11 28 11 28
  {
    .custom /*0C00004D:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x2202
    // Code size       0 (0x0)
  } // end of method Vector3::Max

  .method /*0600019D*/ public hidebysig static 
          valuetype System.Numerics.Vector3/*0200000A*/ 
          Abs(valuetype System.Numerics.Vector3/*0200000A*/ 'value') cil managed aggressiveinlining
  // SIG: 00 01 11 28 11 28
  {
    .custom /*0C00004E:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x2203
    // Code size       0 (0x0)
  } // end of method Vector3::Abs

  .method /*0600019E*/ public hidebysig static 
          valuetype System.Numerics.Vector3/*0200000A*/ 
          SquareRoot(valuetype System.Numerics.Vector3/*0200000A*/ 'value') cil managed aggressiveinlining
  // SIG: 00 01 11 28 11 28
  {
    .custom /*0C00004F:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x2204
    // Code size       0 (0x0)
  } // end of method Vector3::SquareRoot

  .method /*0600019F*/ public hidebysig specialname static 
          valuetype System.Numerics.Vector3/*0200000A*/ 
          op_Addition(valuetype System.Numerics.Vector3/*0200000A*/ left,
                      valuetype System.Numerics.Vector3/*0200000A*/ right) cil managed aggressiveinlining
  // SIG: 00 02 11 28 11 28 11 28
  {
    .custom /*0C000050:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x2205
    // Code size       0 (0x0)
  } // end of method Vector3::op_Addition

  .method /*060001A0*/ public hidebysig specialname static 
          valuetype System.Numerics.Vector3/*0200000A*/ 
          op_Subtraction(valuetype System.Numerics.Vector3/*0200000A*/ left,
                         valuetype System.Numerics.Vector3/*0200000A*/ right) cil managed aggressiveinlining
  // SIG: 00 02 11 28 11 28 11 28
  {
    .custom /*0C000051:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x2206
    // Code size       0 (0x0)
  } // end of method Vector3::op_Subtraction

  .method /*060001A1*/ public hidebysig specialname static 
          valuetype System.Numerics.Vector3/*0200000A*/ 
          op_Multiply(valuetype System.Numerics.Vector3/*0200000A*/ left,
                      valuetype System.Numerics.Vector3/*0200000A*/ right) cil managed aggressiveinlining
  // SIG: 00 02 11 28 11 28 11 28
  {
    .custom /*0C000052:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x2207
    // Code size       0 (0x0)
  } // end of method Vector3::op_Multiply

  .method /*060001A2*/ public hidebysig specialname static 
          valuetype System.Numerics.Vector3/*0200000A*/ 
          op_Multiply(valuetype System.Numerics.Vector3/*0200000A*/ left,
                      float32 right) cil managed aggressiveinlining
  // SIG: 00 02 11 28 11 28 0C
  {
    .custom /*0C000053:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x2208
    // Code size       0 (0x0)
  } // end of method Vector3::op_Multiply

  .method /*060001A3*/ public hidebysig specialname static 
          valuetype System.Numerics.Vector3/*0200000A*/ 
          op_Multiply(float32 left,
                      valuetype System.Numerics.Vector3/*0200000A*/ right) cil managed aggressiveinlining
  // SIG: 00 02 11 28 0C 11 28
  {
    .custom /*0C000054:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x2209
    // Code size       0 (0x0)
  } // end of method Vector3::op_Multiply

  .method /*060001A4*/ public hidebysig specialname static 
          valuetype System.Numerics.Vector3/*0200000A*/ 
          op_Division(valuetype System.Numerics.Vector3/*0200000A*/ left,
                      valuetype System.Numerics.Vector3/*0200000A*/ right) cil managed aggressiveinlining
  // SIG: 00 02 11 28 11 28 11 28
  {
    .custom /*0C000055:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x220a
    // Code size       0 (0x0)
  } // end of method Vector3::op_Division

  .method /*060001A5*/ public hidebysig specialname static 
          valuetype System.Numerics.Vector3/*0200000A*/ 
          op_Division(valuetype System.Numerics.Vector3/*0200000A*/ value1,
                      float32 value2) cil managed aggressiveinlining
  // SIG: 00 02 11 28 11 28 0C
  {
    .custom /*0C000056:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x220b
    // Code size       0 (0x0)
  } // end of method Vector3::op_Division

  .method /*060001A6*/ public hidebysig specialname static 
          valuetype System.Numerics.Vector3/*0200000A*/ 
          op_UnaryNegation(valuetype System.Numerics.Vector3/*0200000A*/ 'value') cil managed aggressiveinlining
  // SIG: 00 01 11 28 11 28
  {
    // Method begins at RVA 0x220c
    // Code size       0 (0x0)
  } // end of method Vector3::op_UnaryNegation

  .method /*060001A7*/ public hidebysig specialname static 
          bool  op_Equality(valuetype System.Numerics.Vector3/*0200000A*/ left,
                            valuetype System.Numerics.Vector3/*0200000A*/ right) cil managed aggressiveinlining
  // SIG: 00 02 02 11 28 11 28
  {
    .custom /*0C000057:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x220d
    // Code size       0 (0x0)
  } // end of method Vector3::op_Equality

  .method /*060001A8*/ public hidebysig specialname static 
          bool  op_Inequality(valuetype System.Numerics.Vector3/*0200000A*/ left,
                              valuetype System.Numerics.Vector3/*0200000A*/ right) cil managed aggressiveinlining
  // SIG: 00 02 02 11 28 11 28
  {
    // Method begins at RVA 0x220e
    // Code size       0 (0x0)
  } // end of method Vector3::op_Inequality

  .property /*17000019*/ callconv(8) valuetype System.Numerics.Vector3/*0200000A*/
          Zero()
  {
    .get valuetype System.Numerics.Vector3/*0200000A*/ System.Numerics.Vector3/*0200000A*/::get_Zero() /* 06000176 */
  } // end of property Vector3::Zero
  .property /*1700001A*/ callconv(8) valuetype System.Numerics.Vector3/*0200000A*/
          One()
  {
    .get valuetype System.Numerics.Vector3/*0200000A*/ System.Numerics.Vector3/*0200000A*/::get_One() /* 06000177 */
  } // end of property Vector3::One
  .property /*1700001B*/ callconv(8) valuetype System.Numerics.Vector3/*0200000A*/
          UnitX()
  {
    .get valuetype System.Numerics.Vector3/*0200000A*/ System.Numerics.Vector3/*0200000A*/::get_UnitX() /* 06000178 */
  } // end of property Vector3::UnitX
  .property /*1700001C*/ callconv(8) valuetype System.Numerics.Vector3/*0200000A*/
          UnitY()
  {
    .get valuetype System.Numerics.Vector3/*0200000A*/ System.Numerics.Vector3/*0200000A*/::get_UnitY() /* 06000179 */
  } // end of property Vector3::UnitY
  .property /*1700001D*/ callconv(8) valuetype System.Numerics.Vector3/*0200000A*/
          UnitZ()
  {
    .get valuetype System.Numerics.Vector3/*0200000A*/ System.Numerics.Vector3/*0200000A*/::get_UnitZ() /* 0600017A */
  } // end of property Vector3::UnitZ
} // end of class System.Numerics.Vector3

.class /*0200000B*/ public sequential ansi sealed beforefieldinit System.Numerics.Vector4
       extends [mscorlib/*23000001*/]System.ValueType/*01000001*/
       implements class [mscorlib/*23000001*/]System.IEquatable`1/*01000005*/<valuetype System.Numerics.Vector4/*0200000B*/>/*1B00000A*/,
                  [mscorlib/*23000001*/]System.IFormattable/*01000002*/
{
  .field /*04000030*/ public float32 X
  .field /*04000031*/ public float32 Y
  .field /*04000032*/ public float32 Z
  .field /*04000033*/ public float32 W
  .method /*060001A9*/ public hidebysig specialname static 
          valuetype System.Numerics.Vector4/*0200000B*/ 
          get_Zero() cil managed
  // SIG: 00 00 11 2C
  {
    // Method begins at RVA 0x220f
    // Code size       0 (0x0)
  } // end of method Vector4::get_Zero

  .method /*060001AA*/ public hidebysig specialname static 
          valuetype System.Numerics.Vector4/*0200000B*/ 
          get_One() cil managed
  // SIG: 00 00 11 2C
  {
    // Method begins at RVA 0x2210
    // Code size       0 (0x0)
  } // end of method Vector4::get_One

  .method /*060001AB*/ public hidebysig specialname static 
          valuetype System.Numerics.Vector4/*0200000B*/ 
          get_UnitX() cil managed
  // SIG: 00 00 11 2C
  {
    // Method begins at RVA 0x2211
    // Code size       0 (0x0)
  } // end of method Vector4::get_UnitX

  .method /*060001AC*/ public hidebysig specialname static 
          valuetype System.Numerics.Vector4/*0200000B*/ 
          get_UnitY() cil managed
  // SIG: 00 00 11 2C
  {
    // Method begins at RVA 0x2212
    // Code size       0 (0x0)
  } // end of method Vector4::get_UnitY

  .method /*060001AD*/ public hidebysig specialname static 
          valuetype System.Numerics.Vector4/*0200000B*/ 
          get_UnitZ() cil managed
  // SIG: 00 00 11 2C
  {
    // Method begins at RVA 0x2213
    // Code size       0 (0x0)
  } // end of method Vector4::get_UnitZ

  .method /*060001AE*/ public hidebysig specialname static 
          valuetype System.Numerics.Vector4/*0200000B*/ 
          get_UnitW() cil managed
  // SIG: 00 00 11 2C
  {
    // Method begins at RVA 0x2214
    // Code size       0 (0x0)
  } // end of method Vector4::get_UnitW

  .method /*060001AF*/ public hidebysig virtual 
          instance int32  GetHashCode() cil managed
  // SIG: 20 00 08
  {
    // Method begins at RVA 0x2215
    // Code size       0 (0x0)
  } // end of method Vector4::GetHashCode

  .method /*060001B0*/ public hidebysig virtual 
          instance bool  Equals(object obj) cil managed aggressiveinlining
  // SIG: 20 01 02 1C
  {
    // Method begins at RVA 0x2216
    // Code size       0 (0x0)
  } // end of method Vector4::Equals

  .method /*060001B1*/ public hidebysig virtual 
          instance string  ToString() cil managed
  // SIG: 20 00 0E
  {
    // Method begins at RVA 0x2217
    // Code size       0 (0x0)
  } // end of method Vector4::ToString

  .method /*060001B2*/ public hidebysig instance string 
          ToString(string format) cil managed
  // SIG: 20 01 0E 0E
  {
    // Method begins at RVA 0x2218
    // Code size       0 (0x0)
  } // end of method Vector4::ToString

  .method /*060001B3*/ public hidebysig newslot virtual final 
          instance string  ToString(string format,
                                    class [mscorlib/*23000001*/]System.IFormatProvider/*01000007*/ formatProvider) cil managed
  // SIG: 20 02 0E 0E 12 1D
  {
    // Method begins at RVA 0x2219
    // Code size       0 (0x0)
  } // end of method Vector4::ToString

  .method /*060001B4*/ public hidebysig instance float32 
          Length() cil managed aggressiveinlining
  // SIG: 20 00 0C
  {
    // Method begins at RVA 0x221a
    // Code size       0 (0x0)
  } // end of method Vector4::Length

  .method /*060001B5*/ public hidebysig instance float32 
          LengthSquared() cil managed aggressiveinlining
  // SIG: 20 00 0C
  {
    // Method begins at RVA 0x221b
    // Code size       0 (0x0)
  } // end of method Vector4::LengthSquared

  .method /*060001B6*/ public hidebysig static 
          float32  Distance(valuetype System.Numerics.Vector4/*0200000B*/ value1,
                            valuetype System.Numerics.Vector4/*0200000B*/ value2) cil managed aggressiveinlining
  // SIG: 00 02 0C 11 2C 11 2C
  {
    // Method begins at RVA 0x221c
    // Code size       0 (0x0)
  } // end of method Vector4::Distance

  .method /*060001B7*/ public hidebysig static 
          float32  DistanceSquared(valuetype System.Numerics.Vector4/*0200000B*/ value1,
                                   valuetype System.Numerics.Vector4/*0200000B*/ value2) cil managed aggressiveinlining
  // SIG: 00 02 0C 11 2C 11 2C
  {
    // Method begins at RVA 0x221d
    // Code size       0 (0x0)
  } // end of method Vector4::DistanceSquared

  .method /*060001B8*/ public hidebysig static 
          valuetype System.Numerics.Vector4/*0200000B*/ 
          Normalize(valuetype System.Numerics.Vector4/*0200000B*/ 'vector') cil managed aggressiveinlining
  // SIG: 00 01 11 2C 11 2C
  {
    // Method begins at RVA 0x221e
    // Code size       0 (0x0)
  } // end of method Vector4::Normalize

  .method /*060001B9*/ public hidebysig static 
          valuetype System.Numerics.Vector4/*0200000B*/ 
          Clamp(valuetype System.Numerics.Vector4/*0200000B*/ value1,
                valuetype System.Numerics.Vector4/*0200000B*/ min,
                valuetype System.Numerics.Vector4/*0200000B*/ max) cil managed aggressiveinlining
  // SIG: 00 03 11 2C 11 2C 11 2C 11 2C
  {
    // Method begins at RVA 0x221f
    // Code size       0 (0x0)
  } // end of method Vector4::Clamp

  .method /*060001BA*/ public hidebysig static 
          valuetype System.Numerics.Vector4/*0200000B*/ 
          Lerp(valuetype System.Numerics.Vector4/*0200000B*/ value1,
               valuetype System.Numerics.Vector4/*0200000B*/ value2,
               float32 amount) cil managed aggressiveinlining
  // SIG: 00 03 11 2C 11 2C 11 2C 0C
  {
    // Method begins at RVA 0x2220
    // Code size       0 (0x0)
  } // end of method Vector4::Lerp

  .method /*060001BB*/ public hidebysig static 
          valuetype System.Numerics.Vector4/*0200000B*/ 
          Transform(valuetype System.Numerics.Vector2/*02000009*/ position,
                    valuetype System.Numerics.Matrix4x4/*02000006*/ matrix) cil managed aggressiveinlining
  // SIG: 00 02 11 2C 11 24 11 18
  {
    // Method begins at RVA 0x2221
    // Code size       0 (0x0)
  } // end of method Vector4::Transform

  .method /*060001BC*/ public hidebysig static 
          valuetype System.Numerics.Vector4/*0200000B*/ 
          Transform(valuetype System.Numerics.Vector3/*0200000A*/ position,
                    valuetype System.Numerics.Matrix4x4/*02000006*/ matrix) cil managed aggressiveinlining
  // SIG: 00 02 11 2C 11 28 11 18
  {
    // Method begins at RVA 0x2222
    // Code size       0 (0x0)
  } // end of method Vector4::Transform

  .method /*060001BD*/ public hidebysig static 
          valuetype System.Numerics.Vector4/*0200000B*/ 
          Transform(valuetype System.Numerics.Vector4/*0200000B*/ 'vector',
                    valuetype System.Numerics.Matrix4x4/*02000006*/ matrix) cil managed aggressiveinlining
  // SIG: 00 02 11 2C 11 2C 11 18
  {
    // Method begins at RVA 0x2223
    // Code size       0 (0x0)
  } // end of method Vector4::Transform

  .method /*060001BE*/ public hidebysig static 
          valuetype System.Numerics.Vector4/*0200000B*/ 
          Transform(valuetype System.Numerics.Vector2/*02000009*/ 'value',
                    valuetype System.Numerics.Quaternion/*02000008*/ rotation) cil managed aggressiveinlining
  // SIG: 00 02 11 2C 11 24 11 20
  {
    // Method begins at RVA 0x2224
    // Code size       0 (0x0)
  } // end of method Vector4::Transform

  .method /*060001BF*/ public hidebysig static 
          valuetype System.Numerics.Vector4/*0200000B*/ 
          Transform(valuetype System.Numerics.Vector3/*0200000A*/ 'value',
                    valuetype System.Numerics.Quaternion/*02000008*/ rotation) cil managed aggressiveinlining
  // SIG: 00 02 11 2C 11 28 11 20
  {
    // Method begins at RVA 0x2225
    // Code size       0 (0x0)
  } // end of method Vector4::Transform

  .method /*060001C0*/ public hidebysig static 
          valuetype System.Numerics.Vector4/*0200000B*/ 
          Transform(valuetype System.Numerics.Vector4/*0200000B*/ 'value',
                    valuetype System.Numerics.Quaternion/*02000008*/ rotation) cil managed aggressiveinlining
  // SIG: 00 02 11 2C 11 2C 11 20
  {
    // Method begins at RVA 0x2226
    // Code size       0 (0x0)
  } // end of method Vector4::Transform

  .method /*060001C1*/ public hidebysig static 
          valuetype System.Numerics.Vector4/*0200000B*/ 
          Add(valuetype System.Numerics.Vector4/*0200000B*/ left,
              valuetype System.Numerics.Vector4/*0200000B*/ right) cil managed aggressiveinlining
  // SIG: 00 02 11 2C 11 2C 11 2C
  {
    // Method begins at RVA 0x2227
    // Code size       0 (0x0)
  } // end of method Vector4::Add

  .method /*060001C2*/ public hidebysig static 
          valuetype System.Numerics.Vector4/*0200000B*/ 
          Subtract(valuetype System.Numerics.Vector4/*0200000B*/ left,
                   valuetype System.Numerics.Vector4/*0200000B*/ right) cil managed aggressiveinlining
  // SIG: 00 02 11 2C 11 2C 11 2C
  {
    // Method begins at RVA 0x2228
    // Code size       0 (0x0)
  } // end of method Vector4::Subtract

  .method /*060001C3*/ public hidebysig static 
          valuetype System.Numerics.Vector4/*0200000B*/ 
          Multiply(valuetype System.Numerics.Vector4/*0200000B*/ left,
                   valuetype System.Numerics.Vector4/*0200000B*/ right) cil managed aggressiveinlining
  // SIG: 00 02 11 2C 11 2C 11 2C
  {
    // Method begins at RVA 0x2229
    // Code size       0 (0x0)
  } // end of method Vector4::Multiply

  .method /*060001C4*/ public hidebysig static 
          valuetype System.Numerics.Vector4/*0200000B*/ 
          Multiply(valuetype System.Numerics.Vector4/*0200000B*/ left,
                   float32 right) cil managed aggressiveinlining
  // SIG: 00 02 11 2C 11 2C 0C
  {
    // Method begins at RVA 0x222a
    // Code size       0 (0x0)
  } // end of method Vector4::Multiply

  .method /*060001C5*/ public hidebysig static 
          valuetype System.Numerics.Vector4/*0200000B*/ 
          Multiply(float32 left,
                   valuetype System.Numerics.Vector4/*0200000B*/ right) cil managed aggressiveinlining
  // SIG: 00 02 11 2C 0C 11 2C
  {
    // Method begins at RVA 0x222b
    // Code size       0 (0x0)
  } // end of method Vector4::Multiply

  .method /*060001C6*/ public hidebysig static 
          valuetype System.Numerics.Vector4/*0200000B*/ 
          Divide(valuetype System.Numerics.Vector4/*0200000B*/ left,
                 valuetype System.Numerics.Vector4/*0200000B*/ right) cil managed aggressiveinlining
  // SIG: 00 02 11 2C 11 2C 11 2C
  {
    // Method begins at RVA 0x222c
    // Code size       0 (0x0)
  } // end of method Vector4::Divide

  .method /*060001C7*/ public hidebysig static 
          valuetype System.Numerics.Vector4/*0200000B*/ 
          Divide(valuetype System.Numerics.Vector4/*0200000B*/ left,
                 float32 divisor) cil managed aggressiveinlining
  // SIG: 00 02 11 2C 11 2C 0C
  {
    // Method begins at RVA 0x222d
    // Code size       0 (0x0)
  } // end of method Vector4::Divide

  .method /*060001C8*/ public hidebysig static 
          valuetype System.Numerics.Vector4/*0200000B*/ 
          Negate(valuetype System.Numerics.Vector4/*0200000B*/ 'value') cil managed aggressiveinlining
  // SIG: 00 01 11 2C 11 2C
  {
    // Method begins at RVA 0x222e
    // Code size       0 (0x0)
  } // end of method Vector4::Negate

  .method /*060001C9*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(float32 'value') cil managed
  // SIG: 20 01 01 0C
  {
    .custom /*0C000058:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x222f
    // Code size       0 (0x0)
  } // end of method Vector4::.ctor

  .method /*060001CA*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(float32 x,
                               float32 y,
                               float32 z,
                               float32 w) cil managed
  // SIG: 20 04 01 0C 0C 0C 0C
  {
    .custom /*0C000059:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x2230
    // Code size       0 (0x0)
  } // end of method Vector4::.ctor

  .method /*060001CB*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(valuetype System.Numerics.Vector2/*02000009*/ 'value',
                               float32 z,
                               float32 w) cil managed
  // SIG: 20 03 01 11 24 0C 0C
  {
    // Method begins at RVA 0x2231
    // Code size       0 (0x0)
  } // end of method Vector4::.ctor

  .method /*060001CC*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(valuetype System.Numerics.Vector3/*0200000A*/ 'value',
                               float32 w) cil managed
  // SIG: 20 02 01 11 28 0C
  {
    // Method begins at RVA 0x2232
    // Code size       0 (0x0)
  } // end of method Vector4::.ctor

  .method /*060001CD*/ public hidebysig instance void 
          CopyTo(float32[] 'array') cil managed aggressiveinlining
  // SIG: 20 01 01 1D 0C
  {
    // Method begins at RVA 0x2233
    // Code size       0 (0x0)
  } // end of method Vector4::CopyTo

  .method /*060001CE*/ public hidebysig instance void 
          CopyTo(float32[] 'array',
                 int32 index) cil managed aggressiveinlining
  // SIG: 20 02 01 1D 0C 08
  {
    .custom /*0C00005A:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x2234
    // Code size       0 (0x0)
  } // end of method Vector4::CopyTo

  .method /*060001CF*/ public hidebysig newslot virtual final 
          instance bool  Equals(valuetype System.Numerics.Vector4/*0200000B*/ other) cil managed
  // SIG: 20 01 02 11 2C
  {
    .custom /*0C00005B:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x2235
    // Code size       0 (0x0)
  } // end of method Vector4::Equals

  .method /*060001D0*/ public hidebysig static 
          float32  Dot(valuetype System.Numerics.Vector4/*0200000B*/ vector1,
                       valuetype System.Numerics.Vector4/*0200000B*/ vector2) cil managed aggressiveinlining
  // SIG: 00 02 0C 11 2C 11 2C
  {
    .custom /*0C00005C:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x2236
    // Code size       0 (0x0)
  } // end of method Vector4::Dot

  .method /*060001D1*/ public hidebysig static 
          valuetype System.Numerics.Vector4/*0200000B*/ 
          Min(valuetype System.Numerics.Vector4/*0200000B*/ value1,
              valuetype System.Numerics.Vector4/*0200000B*/ value2) cil managed aggressiveinlining
  // SIG: 00 02 11 2C 11 2C 11 2C
  {
    .custom /*0C00005D:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x2237
    // Code size       0 (0x0)
  } // end of method Vector4::Min

  .method /*060001D2*/ public hidebysig static 
          valuetype System.Numerics.Vector4/*0200000B*/ 
          Max(valuetype System.Numerics.Vector4/*0200000B*/ value1,
              valuetype System.Numerics.Vector4/*0200000B*/ value2) cil managed aggressiveinlining
  // SIG: 00 02 11 2C 11 2C 11 2C
  {
    .custom /*0C00005E:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x2238
    // Code size       0 (0x0)
  } // end of method Vector4::Max

  .method /*060001D3*/ public hidebysig static 
          valuetype System.Numerics.Vector4/*0200000B*/ 
          Abs(valuetype System.Numerics.Vector4/*0200000B*/ 'value') cil managed aggressiveinlining
  // SIG: 00 01 11 2C 11 2C
  {
    .custom /*0C00005F:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x2239
    // Code size       0 (0x0)
  } // end of method Vector4::Abs

  .method /*060001D4*/ public hidebysig static 
          valuetype System.Numerics.Vector4/*0200000B*/ 
          SquareRoot(valuetype System.Numerics.Vector4/*0200000B*/ 'value') cil managed aggressiveinlining
  // SIG: 00 01 11 2C 11 2C
  {
    .custom /*0C000060:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x223a
    // Code size       0 (0x0)
  } // end of method Vector4::SquareRoot

  .method /*060001D5*/ public hidebysig specialname static 
          valuetype System.Numerics.Vector4/*0200000B*/ 
          op_Addition(valuetype System.Numerics.Vector4/*0200000B*/ left,
                      valuetype System.Numerics.Vector4/*0200000B*/ right) cil managed aggressiveinlining
  // SIG: 00 02 11 2C 11 2C 11 2C
  {
    .custom /*0C000061:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x223b
    // Code size       0 (0x0)
  } // end of method Vector4::op_Addition

  .method /*060001D6*/ public hidebysig specialname static 
          valuetype System.Numerics.Vector4/*0200000B*/ 
          op_Subtraction(valuetype System.Numerics.Vector4/*0200000B*/ left,
                         valuetype System.Numerics.Vector4/*0200000B*/ right) cil managed aggressiveinlining
  // SIG: 00 02 11 2C 11 2C 11 2C
  {
    .custom /*0C000062:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x223c
    // Code size       0 (0x0)
  } // end of method Vector4::op_Subtraction

  .method /*060001D7*/ public hidebysig specialname static 
          valuetype System.Numerics.Vector4/*0200000B*/ 
          op_Multiply(valuetype System.Numerics.Vector4/*0200000B*/ left,
                      valuetype System.Numerics.Vector4/*0200000B*/ right) cil managed aggressiveinlining
  // SIG: 00 02 11 2C 11 2C 11 2C
  {
    .custom /*0C000063:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x223d
    // Code size       0 (0x0)
  } // end of method Vector4::op_Multiply

  .method /*060001D8*/ public hidebysig specialname static 
          valuetype System.Numerics.Vector4/*0200000B*/ 
          op_Multiply(valuetype System.Numerics.Vector4/*0200000B*/ left,
                      float32 right) cil managed aggressiveinlining
  // SIG: 00 02 11 2C 11 2C 0C
  {
    .custom /*0C000064:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x223e
    // Code size       0 (0x0)
  } // end of method Vector4::op_Multiply

  .method /*060001D9*/ public hidebysig specialname static 
          valuetype System.Numerics.Vector4/*0200000B*/ 
          op_Multiply(float32 left,
                      valuetype System.Numerics.Vector4/*0200000B*/ right) cil managed aggressiveinlining
  // SIG: 00 02 11 2C 0C 11 2C
  {
    .custom /*0C000065:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x223f
    // Code size       0 (0x0)
  } // end of method Vector4::op_Multiply

  .method /*060001DA*/ public hidebysig specialname static 
          valuetype System.Numerics.Vector4/*0200000B*/ 
          op_Division(valuetype System.Numerics.Vector4/*0200000B*/ left,
                      valuetype System.Numerics.Vector4/*0200000B*/ right) cil managed aggressiveinlining
  // SIG: 00 02 11 2C 11 2C 11 2C
  {
    .custom /*0C000066:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x2240
    // Code size       0 (0x0)
  } // end of method Vector4::op_Division

  .method /*060001DB*/ public hidebysig specialname static 
          valuetype System.Numerics.Vector4/*0200000B*/ 
          op_Division(valuetype System.Numerics.Vector4/*0200000B*/ value1,
                      float32 value2) cil managed aggressiveinlining
  // SIG: 00 02 11 2C 11 2C 0C
  {
    .custom /*0C000067:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x2241
    // Code size       0 (0x0)
  } // end of method Vector4::op_Division

  .method /*060001DC*/ public hidebysig specialname static 
          valuetype System.Numerics.Vector4/*0200000B*/ 
          op_UnaryNegation(valuetype System.Numerics.Vector4/*0200000B*/ 'value') cil managed aggressiveinlining
  // SIG: 00 01 11 2C 11 2C
  {
    // Method begins at RVA 0x2242
    // Code size       0 (0x0)
  } // end of method Vector4::op_UnaryNegation

  .method /*060001DD*/ public hidebysig specialname static 
          bool  op_Equality(valuetype System.Numerics.Vector4/*0200000B*/ left,
                            valuetype System.Numerics.Vector4/*0200000B*/ right) cil managed aggressiveinlining
  // SIG: 00 02 02 11 2C 11 2C
  {
    .custom /*0C000068:060000B3*/ instance void System.Numerics.JitIntrinsicAttribute/*02000004*/::.ctor() /* 060000B3 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x2243
    // Code size       0 (0x0)
  } // end of method Vector4::op_Equality

  .method /*060001DE*/ public hidebysig specialname static 
          bool  op_Inequality(valuetype System.Numerics.Vector4/*0200000B*/ left,
                              valuetype System.Numerics.Vector4/*0200000B*/ right) cil managed aggressiveinlining
  // SIG: 00 02 02 11 2C 11 2C
  {
    // Method begins at RVA 0x2244
    // Code size       0 (0x0)
  } // end of method Vector4::op_Inequality

  .property /*1700001E*/ callconv(8) valuetype System.Numerics.Vector4/*0200000B*/
          Zero()
  {
    .get valuetype System.Numerics.Vector4/*0200000B*/ System.Numerics.Vector4/*0200000B*/::get_Zero() /* 060001A9 */
  } // end of property Vector4::Zero
  .property /*1700001F*/ callconv(8) valuetype System.Numerics.Vector4/*0200000B*/
          One()
  {
    .get valuetype System.Numerics.Vector4/*0200000B*/ System.Numerics.Vector4/*0200000B*/::get_One() /* 060001AA */
  } // end of property Vector4::One
  .property /*17000020*/ callconv(8) valuetype System.Numerics.Vector4/*0200000B*/
          UnitX()
  {
    .get valuetype System.Numerics.Vector4/*0200000B*/ System.Numerics.Vector4/*0200000B*/::get_UnitX() /* 060001AB */
  } // end of property Vector4::UnitX
  .property /*17000021*/ callconv(8) valuetype System.Numerics.Vector4/*0200000B*/
          UnitY()
  {
    .get valuetype System.Numerics.Vector4/*0200000B*/ System.Numerics.Vector4/*0200000B*/::get_UnitY() /* 060001AC */
  } // end of property Vector4::UnitY
  .property /*17000022*/ callconv(8) valuetype System.Numerics.Vector4/*0200000B*/
          UnitZ()
  {
    .get valuetype System.Numerics.Vector4/*0200000B*/ System.Numerics.Vector4/*0200000B*/::get_UnitZ() /* 060001AD */
  } // end of property Vector4::UnitZ
  .property /*17000023*/ callconv(8) valuetype System.Numerics.Vector4/*0200000B*/
          UnitW()
  {
    .get valuetype System.Numerics.Vector4/*0200000B*/ System.Numerics.Vector4/*0200000B*/::get_UnitW() /* 060001AE */
  } // end of property Vector4::UnitW
} // end of class System.Numerics.Vector4

.class /*0200000C*/ private auto ansi sealed '<PrivateImplementationDetails>'
       extends [mscorlib/*23000001*/]System.Object/*01000006*/
{
  .custom /*0C00001A:0A00001A*/ instance void [mscorlib/*23000001*/]System.Runtime.CompilerServices.CompilerGeneratedAttribute/*01000028*/::.ctor() /* 0A00001A */ = ( 01 00 00 00 ) 
  .class /*0200000D*/ explicit ansi sealed nested private '__StaticArrayInitTypeSize=128'
         extends [mscorlib/*23000001*/]System.ValueType/*01000001*/
  {
    .pack 1
    .size 128
  } // end of class '__StaticArrayInitTypeSize=128'

  .field /*04000034*/ static assembly initonly valuetype '<PrivateImplementationDetails>'/*0200000C*//'__StaticArrayInitTypeSize=128'/*0200000D*/ '91A9773E7A0BA4700195CBFFFF935A24C674C3E0' at I_00007CB0
} // end of class '<PrivateImplementationDetails>'


// =============================================================

.data cil I_00007CB0 = bytearray (
                 01 AB CD B7 39 A3 C5 EF F1 1B 3D A7 29 13 35 DF  // ....9.....=.).5.
                 E1 8B AD 97 19 83 A5 CF D1 FB 1D 87 09 F3 15 BF
                 C1 6B 8D 77 F9 63 85 AF B1 DB FD 67 E9 D3 F5 9F  // .k.w.c.....g....
                 A1 4B 6D 57 D9 43 65 8F 91 BB DD 47 C9 B3 D5 7F  // .KmW.Ce....G....
                 81 2B 4D 37 B9 23 45 6F 71 9B BD 27 A9 93 B5 5F  // .+M7.#Eoq..'..._
                 61 0B 2D 17 99 03 25 4F 51 7B 9D 07 89 73 95 3F  // a.-...%OQ{...s.?
                 41 EB 0D F7 79 E3 05 2F 31 5B 7D E7 69 53 75 1F  // A...y../1[}.iSu.
                 21 CB ED D7 59 C3 E5 0F 11 3B 5D C7 49 33 55 FF) // !...Y....;].I3U.
// *********** DISASSEMBLY COMPLETE ***********************
