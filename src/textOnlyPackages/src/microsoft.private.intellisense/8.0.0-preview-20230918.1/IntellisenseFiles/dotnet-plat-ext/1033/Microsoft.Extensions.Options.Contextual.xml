<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Extensions.Options.Contextual</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Extensions.Options.Contextual.ContextualOptionsServiceCollectionExtensions">
      <summary>
            Extension methods for adding contextual options services to the DI container.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Options.Contextual.ContextualOptionsServiceCollectionExtensions.AddContextualOptions(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
      <summary>
            Adds services required for using contextual options.</summary>
      <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the services to.</param>
      <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> so that additional calls can be chained.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Options.Contextual.ContextualOptionsServiceCollectionExtensions.Configure``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.Options.Contextual.IOptionsContext,``0})">
      <summary>
            Registers an action used to configure a particular type of options.</summary>
      <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the services to.</param>
      <param name="configureOptions">The action used to configure the options.</param>
      <typeparam name="TOptions">The options type to be configured.</typeparam>
      <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> so that additional calls can be chained.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Options.Contextual.ContextualOptionsServiceCollectionExtensions.Configure``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{Microsoft.Extensions.Options.Contextual.IOptionsContext,System.Threading.CancellationToken,System.Threading.Tasks.ValueTask{Microsoft.Extensions.Options.Contextual.IConfigureContextualOptions{``0}}})">
      <summary>
            Registers an action used to configure a particular type of options.</summary>
      <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the services to.</param>
      <param name="loadOptions">The action used to configure the options.</param>
      <typeparam name="TOptions">The options type to be configured.</typeparam>
      <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> so that additional calls can be chained.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Options.Contextual.ContextualOptionsServiceCollectionExtensions.Configure``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{Microsoft.Extensions.Options.Contextual.IOptionsContext,``0})">
      <summary>
            Registers an action used to configure a particular type of options.</summary>
      <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the services to.</param>
      <param name="name">The name of the options to configure.</param>
      <param name="configureOptions">The action used to configure the options.</param>
      <typeparam name="TOptions">The options type to be configured.</typeparam>
      <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> so that additional calls can be chained.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Options.Contextual.ContextualOptionsServiceCollectionExtensions.Configure``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Func{Microsoft.Extensions.Options.Contextual.IOptionsContext,System.Threading.CancellationToken,System.Threading.Tasks.ValueTask{Microsoft.Extensions.Options.Contextual.IConfigureContextualOptions{``0}}})">
      <summary>
            Registers an action used to configure a particular type of options.</summary>
      <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the services to.</param>
      <param name="name">The name of the options to configure.</param>
      <param name="loadOptions">The action used to configure the options.</param>
      <typeparam name="TOptions">The options type to be configured.</typeparam>
      <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> so that additional calls can be chained.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Options.Contextual.ContextualOptionsServiceCollectionExtensions.PostConfigure``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.Options.Contextual.IOptionsContext,``0})">
      <summary>
            Registers an action used to initialize a particular type of options.</summary>
      <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the services to.</param>
      <param name="configureOptions">The action used to configure the options.</param>
      <typeparam name="TOptions">The options type to be configured.</typeparam>
      <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> so that additional calls can be chained.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Options.Contextual.ContextualOptionsServiceCollectionExtensions.PostConfigure``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{Microsoft.Extensions.Options.Contextual.IOptionsContext,``0})">
      <summary>
            Registers an action used to initialize a particular type of options.</summary>
      <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the services to.</param>
      <param name="name">The name of the options instance.</param>
      <param name="configureOptions">The action used to configure the options.</param>
      <typeparam name="TOptions">The options type to be configured.</typeparam>
      <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> so that additional calls can be chained.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Options.Contextual.ContextualOptionsServiceCollectionExtensions.PostConfigureAll``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.Options.Contextual.IOptionsContext,``0})">
      <summary>
            Registers an action used to initialize all instances of a particular type of options.</summary>
      <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the services to.</param>
      <param name="configureOptions">The action used to configure the options.</param>
      <typeparam name="TOptions">The options type to be configured.</typeparam>
      <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> so that additional calls can be chained.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Options.Contextual.ContextualOptionsServiceCollectionExtensions.ValidateContextualOptions``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{``0,System.Boolean},System.String)">
      <summary>
            Register a validation action for an options type.</summary>
      <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the services to.</param>
      <param name="validate">The validation function.</param>
      <param name="failureMessage">The failure message to use when validation fails.</param>
      <typeparam name="TOptions">The options type to be validated.</typeparam>
      <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> so that additional calls can be chained.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Options.Contextual.ContextualOptionsServiceCollectionExtensions.ValidateContextualOptions``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Func{``0,System.Boolean},System.String)">
      <summary>
            Register a validation action for an options type.</summary>
      <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the services to.</param>
      <param name="name">The name of the options instance.</param>
      <param name="validate">The validation function.</param>
      <param name="failureMessage">The failure message to use when validation fails.</param>
      <typeparam name="TOptions">The options type to be validated.</typeparam>
      <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> so that additional calls can be chained.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Options.Contextual.IConfigureContextualOptions`1">
      <summary>
            Represents something that configures the <typeparamref name="TOptions" /> type.</summary>
      <typeparam name="TOptions">The type of options configured.</typeparam>
    </member>
    <member name="M:Microsoft.Extensions.Options.Contextual.IConfigureContextualOptions`1.Configure(`0)">
      <summary>
            Invoked to configure a <typeparamref name="TOptions" /> instance.</summary>
      <param name="options">The options instance to configure.</param>
    </member>
    <member name="T:Microsoft.Extensions.Options.Contextual.IContextualOptions`1">
      <summary>
            Used to retrieve configured <typeparamref name="TOptions" /> instances.</summary>
      <typeparam name="TOptions">The type of options being requested.</typeparam>
    </member>
    <member name="M:Microsoft.Extensions.Options.Contextual.IContextualOptions`1.GetAsync``1(``0@|System.Runtime.InteropServices.InAttribute,System.Threading.CancellationToken)">
      <summary>
            Gets the configured <typeparamref name="TOptions" /> instance.</summary>
      <param name="context">The context that will be used to create the options.</param>
      <param name="cancellationToken">The token to monitor for cancellation requests.</param>
      <typeparam name="TContext">A type defining the context for this request.</typeparam>
      <returns>A configured instance of <typeparamref name="TOptions" />.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Options.Contextual.IContextualOptionsFactory`1">
      <summary>
            A factory to create instances of <typeparamref name="TOptions" />.</summary>
      <typeparam name="TOptions">The type of options being created.</typeparam>
    </member>
    <member name="M:Microsoft.Extensions.Options.Contextual.IContextualOptionsFactory`1.CreateAsync``1(System.String,``0@|System.Runtime.InteropServices.InAttribute,System.Threading.CancellationToken)">
      <summary>
            Creates the configured <typeparamref name="TOptions" /> instance.</summary>
      <param name="name">The name of the options to create.</param>
      <param name="context">The context that will be used to create the options.</param>
      <param name="cancellationToken">The token to monitor for cancellation requests.</param>
      <typeparam name="TContext">A type defining the context for this request.</typeparam>
      <returns>A configured instance of <typeparamref name="TOptions" />.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Options.Contextual.ILoadContextualOptions`1">
      <summary>
            Used to retrieve named configuration data from a contextual options provider implementation.</summary>
      <typeparam name="TOptions">The type of options configured.</typeparam>
    </member>
    <member name="M:Microsoft.Extensions.Options.Contextual.ILoadContextualOptions`1.LoadAsync``1(System.String,``0@|System.Runtime.InteropServices.InAttribute,System.Threading.CancellationToken)">
      <summary>
            Gets the data to configure an instance of <typeparamref name="TOptions" />.</summary>
      <param name="name">The name of the options to configure.</param>
      <param name="context">The context that will be used to configure the options.</param>
      <param name="cancellationToken">The token to monitor for cancellation requests.</param>
      <typeparam name="TContext">A type defining the context for this request.</typeparam>
      <returns>An object to configure an instance of <typeparamref name="TOptions" />.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Options.Contextual.INamedContextualOptions`1">
      <summary>
            Used to retrieve named configured <typeparamref name="TOptions" /> instances.</summary>
      <typeparam name="TOptions">The type of options being requested.</typeparam>
    </member>
    <member name="M:Microsoft.Extensions.Options.Contextual.INamedContextualOptions`1.GetAsync``1(System.String,``0@|System.Runtime.InteropServices.InAttribute,System.Threading.CancellationToken)">
      <summary>
            Gets the named configured <typeparamref name="TOptions" /> instance.</summary>
      <param name="name">The name of the options to get.</param>
      <param name="context">The context that will be used to create the options.</param>
      <param name="cancellationToken">The token to monitor for cancellation requests.</param>
      <typeparam name="TContext">A type defining the context for this request.</typeparam>
      <returns>A configured instance of <typeparamref name="TOptions" />.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Options.Contextual.IOptionsContext">
      <summary>
            The context used to configure contextual options.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Options.Contextual.IOptionsContext.PopulateReceiver``1(``0)">
      <summary>
            Passes context data to a contextual options provider.</summary>
      <param name="receiver">The object that the contextual options provider uses to collect the context.</param>
      <typeparam name="T">The type that the contextual options provider uses to collect context.</typeparam>
    </member>
    <member name="T:Microsoft.Extensions.Options.Contextual.IOptionsContextReceiver">
      <summary>
            Used by contextual options providers to collect context data.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Options.Contextual.IOptionsContextReceiver.Receive``1(System.String,``0)">
      <summary>
            Add a key-value pair to the context.</summary>
      <param name="key">The name of the data.</param>
      <param name="value">The data used to determine how to populate contextual options.</param>
      <typeparam name="T">The type of the data.</typeparam>
    </member>
    <member name="T:Microsoft.Extensions.Options.Contextual.IPostConfigureContextualOptions`1">
      <summary>
            Represents something that configures the <typeparamref name="TOptions" /> type.</summary>
      <typeparam name="TOptions">Options type being configured.</typeparam>
    </member>
    <member name="M:Microsoft.Extensions.Options.Contextual.IPostConfigureContextualOptions`1.PostConfigure``1(System.String,``0@|System.Runtime.InteropServices.InAttribute,`0)">
      <summary>
            Invoked to configure a <typeparamref name="TOptions" /> instance.</summary>
      <param name="name">The name of the options instance being configured.</param>
      <param name="context">The context that will be used to configure the options.</param>
      <param name="options">The options instance to configured.</param>
      <typeparam name="TContext">Options type being configured.</typeparam>
    </member>
    <member name="T:Microsoft.Extensions.Options.Contextual.IValidateContextualOptions`1">
      <summary>
            Interface used to validate options.</summary>
      <typeparam name="TOptions">The options type to validate.</typeparam>
    </member>
    <member name="M:Microsoft.Extensions.Options.Contextual.IValidateContextualOptions`1.Validate(System.String,`0)">
      <summary>
            Validates a specific named options instance (or all when name is null).</summary>
      <param name="name">The name of the options instance being validated.</param>
      <param name="options">The options instance.</param>
      <returns>The <see cref="T:Microsoft.Extensions.Options.ValidateOptionsResult" /> result.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Options.Contextual.NullConfigureContextualOptions">
      <summary>
            Helper class.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Options.Contextual.NullConfigureContextualOptions.GetInstance``1">
      <summary>
            Gets a singleton instance of <see cref="T:Microsoft.Extensions.Options.Contextual.NullConfigureContextualOptions`1" />.</summary>
      <typeparam name="TOptions">The options type to configure.</typeparam>
      <returns>A do-nothing instance of <see cref="T:Microsoft.Extensions.Options.Contextual.IConfigureContextualOptions`1" />.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Options.Contextual.OptionsContextAttribute">
      <summary>
            Generates an implementation of <see cref="T:Microsoft.Extensions.Options.Contextual.IOptionsContext" /> for the annotated type.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Options.Contextual.OptionsContextAttribute.#ctor" />
  </members>
</doc>