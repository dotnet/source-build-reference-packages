<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Extensions.Http.Resilience</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Extensions.Http.Resilience.Endpoint">
      <summary>
            Represents an URI based endpoint.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.Endpoint.#ctor" />
    <member name="P:Microsoft.Extensions.Http.Resilience.Endpoint.Uri">
      <summary>
            Gets or sets the URL of the endpoint.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Http.Resilience.EndpointGroup">
      <summary>
            Represents a collection of <see cref="T:Microsoft.Extensions.Http.Resilience.WeightedEndpoint" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.EndpointGroup.#ctor" />
    <member name="P:Microsoft.Extensions.Http.Resilience.EndpointGroup.Endpoints">
      <summary>
            Gets or sets the endpoints in this endpoint group.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Http.Resilience.FaultInjection.ContextExtensions">
      <summary>
            Provides extension methods for <see cref="T:Polly.Context" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.FaultInjection.ContextExtensions.WithCallingRequestMessage(Polly.Context,System.Net.Http.HttpRequestMessage)">
      <summary>
            Associates the given <see cref="T:Polly.Context" /> instance to the <paramref name="request" />.</summary>
      <param name="context">The context instance.</param>
      <param name="request">The calling request.</param>
      <returns>
            The <see cref="T:Polly.Context" /> so that additional calls can be chained.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Http.Resilience.FaultInjection.HttpClientFaultInjectionExtensions">
      <summary>
            Provides extension methods for Fault-Injection library specifically for HttpClient usages.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.FaultInjection.HttpClientFaultInjectionExtensions.AddFaultInjectionPolicyHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.String)">
      <summary>
            Adds a chaos policy handler identified by the chaos policy options group name to the given <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</summary>
      <param name="httpClientBuilder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</param>
      <param name="chaosPolicyOptionsGroupName">The chaos policy options group name.</param>
      <returns>
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> so that additional calls can be chained.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.FaultInjection.HttpClientFaultInjectionExtensions.AddHttpClientFaultInjection(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
      <summary>
            Registers default implementations for <see cref="T:Microsoft.Extensions.Resilience.FaultInjection.IFaultInjectionOptionsProvider" />, <see cref="T:Microsoft.Extensions.Resilience.FaultInjection.IChaosPolicyFactory" /> and <see cref="T:Microsoft.Extensions.Http.Resilience.FaultInjection.IHttpClientChaosPolicyFactory" />;
            adds fault-injection policies to all <see cref="T:System.Net.Http.HttpClient" />.</summary>
      <param name="services">The services collection.</param>
      <exception cref="T:System.ArgumentNullException">
            Any parameter is <see langword="null" />.</exception>
      <returns>
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> so that additional calls can be chained.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.FaultInjection.HttpClientFaultInjectionExtensions.AddHttpClientFaultInjection(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
      <summary>
            Configures <see cref="T:Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptions" /> and registers default implementations for <see cref="T:Microsoft.Extensions.Resilience.FaultInjection.IFaultInjectionOptionsProvider" />,
            <see cref="T:Microsoft.Extensions.Resilience.FaultInjection.IChaosPolicyFactory" /> and <see cref="T:Microsoft.Extensions.Http.Resilience.FaultInjection.IHttpClientChaosPolicyFactory" />;
            adds fault-injection policies to all <see cref="T:System.Net.Http.HttpClient" />.</summary>
      <param name="services">The services collection.</param>
      <param name="section">The configuration section to bind to <see cref="T:Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptions" />.</param>
      <exception cref="T:System.ArgumentNullException">
            Any parameter is <see langword="null" />.</exception>
      <returns>
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> so that additional calls can be chained.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.FaultInjection.HttpClientFaultInjectionExtensions.AddHttpClientFaultInjection(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.Http.Resilience.FaultInjection.HttpFaultInjectionOptionsBuilder})">
      <summary>
            Calls the given action to configure options with <see cref="T:Microsoft.Extensions.Http.Resilience.FaultInjection.HttpFaultInjectionOptionsBuilder" /> and registers default implementations for
            <see cref="T:Microsoft.Extensions.Resilience.FaultInjection.IFaultInjectionOptionsProvider" />, <see cref="T:Microsoft.Extensions.Resilience.FaultInjection.IChaosPolicyFactory" /> and <see cref="T:Microsoft.Extensions.Http.Resilience.FaultInjection.IHttpClientChaosPolicyFactory" />;
            adds fault-injection policies to all <see cref="T:System.Net.Http.HttpClient" />.</summary>
      <param name="services">The services collection.</param>
      <param name="configure">Action to configure options with <see cref="T:Microsoft.Extensions.Http.Resilience.FaultInjection.HttpFaultInjectionOptionsBuilder" />.</param>
      <exception cref="T:System.ArgumentNullException">
            Any parameter is <see langword="null" />.</exception>
      <returns>
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> so that additional calls can be chained.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.FaultInjection.HttpClientFaultInjectionExtensions.AddWeightedFaultInjectionPolicyHandlers(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,Microsoft.Extensions.Configuration.IConfigurationSection)">
      <summary>
            Adds a chaos policy handler to the given <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />
            using weight assignments denoted in <paramref name="weightAssignmentsConfigSection" /> to determine which chaos policy options group to
            use at each run of fault-injection.</summary>
      <param name="httpClientBuilder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</param>
      <param name="weightAssignmentsConfigSection">The configuration section to bind to <see cref="T:Microsoft.Extensions.Resilience.FaultInjection.FaultPolicyWeightAssignmentsOptions" />.</param>
      <returns>
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> so that additional calls can be chained.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.FaultInjection.HttpClientFaultInjectionExtensions.AddWeightedFaultInjectionPolicyHandlers(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Action{Microsoft.Extensions.Resilience.FaultInjection.FaultPolicyWeightAssignmentsOptions})">
      <summary>
            Adds a chaos policy handler to the given <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />
            using weight assignments denoted in <paramref name="weightAssignmentsConfig" /> to determine which chaos policy options group to
            use at each run of fault-injection.</summary>
      <param name="httpClientBuilder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</param>
      <param name="weightAssignmentsConfig">Function to configure <see cref="T:Microsoft.Extensions.Resilience.FaultInjection.FaultPolicyWeightAssignmentsOptions" />.</param>
      <returns>
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> so that additional calls can be chained.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Http.Resilience.FaultInjection.HttpFaultInjectionOptionsBuilder">
      <summary>
            Builder class that inherits <see cref="T:Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptionsBuilder" /> to provide options configuration methods for
            <see cref="T:Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptions" />, <see cref="T:Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionExceptionOptions" /> and <see cref="T:Microsoft.Extensions.Http.Resilience.FaultInjection.Internal.HttpContentOptions" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.FaultInjection.HttpFaultInjectionOptionsBuilder.#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Http.Resilience.FaultInjection.HttpFaultInjectionOptionsBuilder" /> class.</summary>
      <param name="services">The services collection.</param>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.FaultInjection.HttpFaultInjectionOptionsBuilder.AddException(System.String,System.Exception)">
      <summary>
            Add an exception instance to <see cref="T:Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionExceptionOptions" />.</summary>
      <param name="key">The identifier for the exception instance to be added.</param>
      <param name="exception">The exception instance to be added.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="exception" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> is an empty string or <see langword="null" />.</exception>
      <returns>The builder object itself so that additional calls can be chained.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.FaultInjection.HttpFaultInjectionOptionsBuilder.AddHttpContent(System.String,System.Net.Http.HttpContent)">
      <summary>
            Adds a <see cref="T:Microsoft.Extensions.Http.Resilience.FaultInjection.Internal.HttpContentOptions" /> with the provided <see cref="T:System.Net.Http.HttpContent" />.</summary>
      <param name="key">The identifier for the options instance to be added.</param>
      <param name="content">The http content.</param>
      <returns>The builder object itself so that additional calls can be chained.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.FaultInjection.HttpFaultInjectionOptionsBuilder.Configure">
      <summary>
            Configures default <see cref="T:Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptions" />.</summary>
      <returns>
            The builder object itself so that additional calls can be chained.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.FaultInjection.HttpFaultInjectionOptionsBuilder.Configure(Microsoft.Extensions.Configuration.IConfiguration)">
      <summary>
            Configures <see cref="T:Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptions" /> through
            the provided <see cref="T:Microsoft.Extensions.Configuration.IConfigurationSection" />.</summary>
      <param name="section">
            The configuration section to bind to <see cref="T:Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptions" />.</param>
      <exception cref="T:System.ArgumentNullException">
            Any parameter is <see langword="null" />.</exception>
      <returns>The builder object itself so that additional calls can be chained.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.FaultInjection.HttpFaultInjectionOptionsBuilder.Configure(System.Action{Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptions})">
      <summary>
            Configures <see cref="T:Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptions" /> through
            the provided configure.</summary>
      <param name="configureOptions">
            The function to be registered to configure <see cref="T:Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptions" />.</param>
      <exception cref="T:System.ArgumentNullException">
            Any parameter is <see langword="null" />.</exception>
      <returns>The builder object itself so that additional calls can be chained.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Http.Resilience.FaultInjection.IHttpClientChaosPolicyFactory">
      <summary>
            Factory for HTTP response chaos policy creation.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.FaultInjection.IHttpClientChaosPolicyFactory.CreateHttpResponsePolicy">
      <summary>
            Creates an async HTTP response fault injection policy with delegate functions
            to fetch fault injection settings from <see cref="T:Polly.Context" />.</summary>
      <returns>
            An HTTP response fault injection policy.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Http.Resilience.HedgingEndpointOptions">
      <summary>
            Options for the pipeline of resilience strategies assigned to a particular endpoint.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.HedgingEndpointOptions.#ctor" />
    <member name="P:Microsoft.Extensions.Http.Resilience.HedgingEndpointOptions.CircuitBreakerOptions">
      <summary>
            Gets or sets the circuit breaker options for the endpoint.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Http.Resilience.HedgingEndpointOptions.RateLimiterOptions">
      <summary>
            Gets or sets the bulkhead options for the endpoint.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Http.Resilience.HedgingEndpointOptions.TimeoutOptions">
      <summary>
            Gets or sets the options for the timeout resilience strategy applied per each request attempt.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Http.Resilience.HttpCircuitBreakerStrategyOptions">
      <summary>
            Implementation of the <see cref="T:Polly.CircuitBreaker.CircuitBreakerStrategyOptions`1" /> for <see cref="T:System.Net.Http.HttpResponseMessage" /> results.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.HttpCircuitBreakerStrategyOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Http.Resilience.HttpCircuitBreakerStrategyOptions" /> class.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Http.Resilience.HttpClientBuilderExtensions">
      <summary>
            Extensions for <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.HttpClientBuilderExtensions.AddResilienceHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.String,System.Action{Polly.CompositeStrategyBuilder{System.Net.Http.HttpResponseMessage},Microsoft.Extensions.Http.Resilience.ResilienceHandlerContext})">
      <summary>
            Adds a resilience strategy handler that uses a named inline resilience strategy.</summary>
      <param name="builder">The builder instance.</param>
      <param name="strategyName">The custom identifier for the resilience strategy, used in the name of the strategy.</param>
      <param name="configure">The callback that configures the strategy.</param>
      <returns>The HTTP strategy builder instance.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.HttpClientBuilderExtensions.AddResilienceHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.String,System.Action{Polly.CompositeStrategyBuilder{System.Net.Http.HttpResponseMessage}})">
      <summary>
            Adds a resilience strategy handler that uses a named inline resilience strategy.</summary>
      <param name="builder">The builder instance.</param>
      <param name="strategyName">The custom identifier for the resilience strategy, used in the name of the strategy.</param>
      <param name="configure">The callback that configures the strategy.</param>
      <returns>The HTTP strategy builder instance.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.HttpClientBuilderExtensions.AddStandardHedgingHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder)">
      <summary>
            Adds a standard hedging handler that wraps the execution of the request with a standard hedging mechanism.</summary>
      <param name="builder">The HTTP client builder.</param>
      <returns>
            A <see cref="T:Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder" /> builder that can be used to configure the standard hedging behavior.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.HttpClientBuilderExtensions.AddStandardHedgingHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Action{Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder})">
      <summary>
            Adds a standard hedging handler that wraps the execution of the request with a standard hedging mechanism.</summary>
      <param name="builder">The HTTP client builder.</param>
      <param name="configure">Configures the routing strategy associated with this handler.</param>
      <returns>
            A <see cref="T:Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder" /> builder that can be used to configure the standard hedging behavior.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.HttpClientBuilderExtensions.AddStandardResilienceHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder)">
      <summary>
            Adds a standard resilience handler that uses multiple resilience strategies with default options to send the requests and handle any transient errors.</summary>
      <param name="builder">The builder instance.</param>
      <returns>The HTTP resilience handler builder instance.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.HttpClientBuilderExtensions.AddStandardResilienceHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,Microsoft.Extensions.Configuration.IConfigurationSection)">
      <summary>
            Adds a standard resilience handler that uses multiple resilience strategies with default options to send the requests and handle any transient errors.</summary>
      <param name="builder">The builder instance.</param>
      <param name="section">The section that the options will bind against.</param>
      <returns>The HTTP resilience handler builder instance.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.HttpClientBuilderExtensions.AddStandardResilienceHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Action{Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions})">
      <summary>
            Adds a standard resilience handler that uses multiple resilience strategies with default options to send the requests and handle any transient errors.</summary>
      <param name="builder">The builder instance.</param>
      <param name="configure">The callback that configures the options.</param>
      <returns>The HTTP resilience handler builder instance.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Http.Resilience.HttpClientHedgingResiliencePredicates">
      <summary>
            Static predicates used within the current package.</summary>
    </member>
    <member name="F:Microsoft.Extensions.Http.Resilience.HttpClientHedgingResiliencePredicates.IsTransientHttpException">
      <summary>
            Determines whether an exception should be treated by hedging as a transient failure.</summary>
    </member>
    <member name="F:Microsoft.Extensions.Http.Resilience.HttpClientHedgingResiliencePredicates.IsTransientHttpOutcome">
      <summary>
            Determines whether an outcome should be treated by hedging as a transient failure.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Http.Resilience.HttpClientResiliencePredicates">
      <summary>
            Provides static predicates used within the current package.</summary>
    </member>
    <member name="F:Microsoft.Extensions.Http.Resilience.HttpClientResiliencePredicates.IsTransientHttpException">
      <summary>
            Determines whether an exception should be treated by resilience strategies as a transient failure.</summary>
    </member>
    <member name="F:Microsoft.Extensions.Http.Resilience.HttpClientResiliencePredicates.IsTransientHttpFailure">
      <summary>
            Determines whether a response contains a transient failure.</summary>
    </member>
    <member name="F:Microsoft.Extensions.Http.Resilience.HttpClientResiliencePredicates.IsTransientHttpOutcome">
      <summary>
            Determines whether an outcome should be treated by resilience strategies as a transient failure.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Http.Resilience.HttpHedgingStrategyOptions">
      <summary>
            Implementation of the <see cref="T:Polly.Hedging.HedgingStrategyOptions`1" /> for <see cref="T:System.Net.Http.HttpResponseMessage" /> results.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.HttpHedgingStrategyOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Http.Resilience.HttpHedgingStrategyOptions" /> class.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Http.Resilience.HttpRateLimiterStrategyOptions">
      <summary>
            Implementation of the <see cref="T:Polly.RateLimiting.RateLimiterStrategyOptions" /> for HTTP scenarios.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.HttpRateLimiterStrategyOptions.#ctor" />
    <member name="T:Microsoft.Extensions.Http.Resilience.HttpRequestMessageExtensions">
      <summary>
            The resilience extensions for <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.HttpRequestMessageExtensions.GetResilienceContext(System.Net.Http.HttpRequestMessage)">
      <summary>
            Gets the <see cref="T:Polly.ResilienceContext" /> from the request message.</summary>
      <param name="requestMessage">The request.</param>
      <returns>An instance of <see cref="T:Polly.ResilienceContext" /> or <see langword="null" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.HttpRequestMessageExtensions.SetResilienceContext(System.Net.Http.HttpRequestMessage,Polly.ResilienceContext)">
      <summary>
            Sets the <see cref="T:Polly.ResilienceContext" /> on the request message.</summary>
      <param name="requestMessage">The request.</param>
      <param name="resilienceContext">An instance of <see cref="T:Polly.ResilienceContext" />.</param>
    </member>
    <member name="T:Microsoft.Extensions.Http.Resilience.HttpResilienceStrategyBuilderExtensions">
      <summary>
            Extensions for <see cref="T:Microsoft.Extensions.Http.Resilience.IHttpResilienceStrategyBuilder" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.HttpResilienceStrategyBuilderExtensions.SelectStrategyBy(Microsoft.Extensions.Http.Resilience.IHttpResilienceStrategyBuilder,System.Func{System.IServiceProvider,System.Func{System.Net.Http.HttpRequestMessage,System.String}})">
      <summary>
            Instructs the underlying builder to select the strategy instance by custom selector.</summary>
      <param name="builder">The builder instance.</param>
      <param name="selectorFactory">The factory that returns a key selector.</param>
      <returns>The same builder instance.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.HttpResilienceStrategyBuilderExtensions.SelectStrategyByAuthority(Microsoft.Extensions.Http.Resilience.IHttpResilienceStrategyBuilder,Microsoft.Extensions.Compliance.Classification.DataClassification)">
      <summary>
            Instructs the underlying builder to select the strategy instance by redacted authority (scheme + host + port).</summary>
      <param name="builder">The builder instance.</param>
      <param name="classification">The data class associated with the authority.</param>
      <returns>The same builder instance.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Http.Resilience.HttpRetryStrategyOptions">
      <summary>
            Implementation of the <see cref="T:Polly.Retry.RetryStrategyOptions`1" /> for <see cref="T:System.Net.Http.HttpResponseMessage" /> results.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.HttpRetryStrategyOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Http.Resilience.HttpRetryStrategyOptions" /> class.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Http.Resilience.HttpRetryStrategyOptions.ShouldRetryAfterHeader">
      <summary>
            Gets or sets a value indicating whether to use the <c>Retry-After</c> header for the retry delays.</summary>
      <returns>
            Defaults to <see langword="true" />.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Http.Resilience.HttpStandardHedgingResilienceOptions">
      <summary>
            Options for the pipeline of resilience strategies for usage in hedging HTTP scenarios.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.HttpStandardHedgingResilienceOptions.#ctor" />
    <member name="P:Microsoft.Extensions.Http.Resilience.HttpStandardHedgingResilienceOptions.EndpointOptions">
      <summary>
            Gets or sets the hedging endpoint options.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Http.Resilience.HttpStandardHedgingResilienceOptions.HedgingOptions">
      <summary>
            Gets or sets the hedging strategy options.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Http.Resilience.HttpStandardHedgingResilienceOptions.TotalRequestTimeoutOptions">
      <summary>
            Gets or sets the timeout strategy options for the total timeout applied on the request execution.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Http.Resilience.HttpStandardResilienceBuilderBuilderExtensions">
      <summary>
            Extensions for <see cref="T:Microsoft.Extensions.Http.Resilience.IHttpStandardResilienceStrategyBuilder" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.HttpStandardResilienceBuilderBuilderExtensions.Configure(Microsoft.Extensions.Http.Resilience.IHttpStandardResilienceStrategyBuilder,Microsoft.Extensions.Configuration.IConfigurationSection)">
      <summary>
            Configures the <see cref="T:Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions" /> for the standard resilience strategy.</summary>
      <param name="builder">The strategy builder.</param>
      <param name="section">The section that the options will bind against.</param>
      <returns>The same builder instance.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.HttpStandardResilienceBuilderBuilderExtensions.Configure(Microsoft.Extensions.Http.Resilience.IHttpStandardResilienceStrategyBuilder,System.Action{Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions,System.IServiceProvider})">
      <summary>
            Configures the <see cref="T:Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions" /> for the standard resilience strategy.</summary>
      <param name="builder">The strategy builder.</param>
      <param name="configure">The configure method.</param>
      <returns>The same builder instance.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.HttpStandardResilienceBuilderBuilderExtensions.Configure(Microsoft.Extensions.Http.Resilience.IHttpStandardResilienceStrategyBuilder,System.Action{Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions})">
      <summary>
            Configures the <see cref="T:Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions" /> for the standard resilience strategy.</summary>
      <param name="builder">The strategy builder.</param>
      <param name="configure">The configure method.</param>
      <returns>The same builder instance.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.HttpStandardResilienceBuilderBuilderExtensions.SelectStrategyBy(Microsoft.Extensions.Http.Resilience.IHttpStandardResilienceStrategyBuilder,System.Func{System.IServiceProvider,System.Func{System.Net.Http.HttpRequestMessage,System.String}})">
      <summary>
            Instructs the underlying builder to select the strategy instance by custom selector.</summary>
      <param name="builder">The strategy builder.</param>
      <param name="selectorFactory">The factory that returns a key selector.</param>
      <returns>The same builder instance.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.HttpStandardResilienceBuilderBuilderExtensions.SelectStrategyByAuthority(Microsoft.Extensions.Http.Resilience.IHttpStandardResilienceStrategyBuilder,Microsoft.Extensions.Compliance.Classification.DataClassification)">
      <summary>
            Instructs the underlying builder to select the strategy instance by redacted authority (scheme + host + port).</summary>
      <param name="builder">The strategy builder.</param>
      <param name="classification">The data class associated with the authority.</param>
      <returns>The same builder instance.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions">
      <summary>
            Options for resilience strategies for usage in HTTP scenarios.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions.#ctor" />
    <member name="P:Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions.AttemptTimeoutOptions">
      <summary>
            Gets or sets the options for the timeout strategy applied per each request attempt.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions.CircuitBreakerOptions">
      <summary>
            Gets or sets the circuit breaker options.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions.RateLimiterOptions">
      <summary>
            Gets or sets the bulkhead options.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions.RetryOptions">
      <summary>
            Gets or sets the retry strategy options.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions.TotalRequestTimeoutOptions">
      <summary>
            Gets or sets the timeout Strategy options for the total timeout applied on the request's execution.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Http.Resilience.HttpTimeoutStrategyOptions">
      <summary>
            Implementation of the <see cref="T:Polly.Timeout.TimeoutStrategyOptions" /> for HTTP scenarios.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.HttpTimeoutStrategyOptions.#ctor" />
    <member name="T:Microsoft.Extensions.Http.Resilience.IHttpResilienceStrategyBuilder">
      <summary>
            The builder for configuring the HTTP client resilience strategy.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Http.Resilience.IHttpResilienceStrategyBuilder.Services">
      <summary>
            Gets the application service collection.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Http.Resilience.IHttpResilienceStrategyBuilder.StrategyName">
      <summary>
            Gets the name of the resilience strategy configured by this builder.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Http.Resilience.IHttpStandardResilienceStrategyBuilder">
      <summary>
            The builder for the standard HTTP resilience strategy.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Http.Resilience.IHttpStandardResilienceStrategyBuilder.Services">
      <summary>
            Gets the application service collection.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Http.Resilience.IHttpStandardResilienceStrategyBuilder.StrategyName">
      <summary>
            Gets the name of the resilience strategy configured by this builder.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder">
      <summary>
            Builder for configuring the routing strategies associated with hedging handler.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder.Name">
      <summary>
            Gets the routing strategy name being configured.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder.Services">
      <summary>
            Gets the service collection.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder">
      <summary>
            Defines the builder used to configure the standard hedging handler.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder.Name">
      <summary>
            Gets the name of standard hedging handler being configured.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder.RoutingStrategyBuilder">
      <summary>
            Gets the builder for the routing strategy.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder.Services">
      <summary>
            Gets the service collection.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Http.Resilience.OrderedGroupsRoutingOptions">
      <summary>
            Represents the options for collection of endpoint groups that have fixed order.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.OrderedGroupsRoutingOptions.#ctor" />
    <member name="P:Microsoft.Extensions.Http.Resilience.OrderedGroupsRoutingOptions.Groups">
      <summary>
            Gets or sets the collection of ordered endpoints groups.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Http.Resilience.ResilienceHandlerContext">
      <summary>
            The context used when building a resilience strategy HTTP handler.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.ResilienceHandlerContext.EnableReloads``1(System.String)">
      <summary>
            Enables dynamic reloading of the resilience strategy whenever the <typeparamref name="TOptions" /> options are changed.</summary>
      <param name="name">The named options, if any.</param>
      <typeparam name="TOptions">The options type to listen to.</typeparam>
    </member>
    <member name="P:Microsoft.Extensions.Http.Resilience.ResilienceHandlerContext.BuilderName">
      <summary>
            Gets the name of the builder being built.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Http.Resilience.ResilienceHandlerContext.InstanceName">
      <summary>
            Gets the instance name of resilience strategy being built.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Http.Resilience.ResilienceHandlerContext.ServiceProvider">
      <summary>
            Gets the service provider.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Http.Resilience.RoutingStrategyBuilderExtensions">
      <summary>
            Extensions for <see cref="T:Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.RoutingStrategyBuilderExtensions.ConfigureOrderedGroups(Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder,Microsoft.Extensions.Configuration.IConfigurationSection)">
      <summary>
            Configures ordered groups routing using <see cref="T:Microsoft.Extensions.Http.Resilience.OrderedGroupsRoutingOptions" />.</summary>
      <param name="builder">The routing builder.</param>
      <param name="section">The section that the <see cref="T:Microsoft.Extensions.Http.Resilience.OrderedGroupsRoutingOptions" /> will bind against.</param>
      <returns>
            The same routing builder instance.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.RoutingStrategyBuilderExtensions.ConfigureOrderedGroups(Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder,System.Action{Microsoft.Extensions.Http.Resilience.OrderedGroupsRoutingOptions,System.IServiceProvider})">
      <summary>
            Configures ordered groups routing using <see cref="T:Microsoft.Extensions.Http.Resilience.OrderedGroupsRoutingOptions" />.</summary>
      <param name="builder">The routing builder.</param>
      <param name="configure">The callback that configures <see cref="T:Microsoft.Extensions.Http.Resilience.OrderedGroupsRoutingOptions" />.</param>
      <returns>
            The same routing builder instance.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.RoutingStrategyBuilderExtensions.ConfigureOrderedGroups(Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder,System.Action{Microsoft.Extensions.Http.Resilience.OrderedGroupsRoutingOptions})">
      <summary>
            Configures ordered groups routing using <see cref="T:Microsoft.Extensions.Http.Resilience.OrderedGroupsRoutingOptions" />.</summary>
      <param name="builder">The routing builder.</param>
      <param name="configure">The callback that configures <see cref="T:Microsoft.Extensions.Http.Resilience.OrderedGroupsRoutingOptions" />.</param>
      <returns>
            The same routing builder instance.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.RoutingStrategyBuilderExtensions.ConfigureWeightedGroups(Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder,Microsoft.Extensions.Configuration.IConfigurationSection)">
      <summary>
            Configures weighted groups routing using <see cref="T:Microsoft.Extensions.Http.Resilience.WeightedGroupsRoutingOptions" />.</summary>
      <param name="builder">The routing builder.</param>
      <param name="section">The section that the <see cref="T:Microsoft.Extensions.Http.Resilience.WeightedGroupsRoutingOptions" /> will bind against.</param>
      <returns>
            The same routing builder instance.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.RoutingStrategyBuilderExtensions.ConfigureWeightedGroups(Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder,System.Action{Microsoft.Extensions.Http.Resilience.WeightedGroupsRoutingOptions,System.IServiceProvider})">
      <summary>
            Configures weighted groups routing using <see cref="T:Microsoft.Extensions.Http.Resilience.WeightedGroupsRoutingOptions" />.</summary>
      <param name="builder">The routing builder.</param>
      <param name="configure">The callback that configures <see cref="T:Microsoft.Extensions.Http.Resilience.WeightedGroupsRoutingOptions" />.</param>
      <returns>
            The same routing builder instance.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.RoutingStrategyBuilderExtensions.ConfigureWeightedGroups(Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder,System.Action{Microsoft.Extensions.Http.Resilience.WeightedGroupsRoutingOptions})">
      <summary>
            Configures weighted groups routing using <see cref="T:Microsoft.Extensions.Http.Resilience.WeightedGroupsRoutingOptions" />.</summary>
      <param name="builder">The routing builder.</param>
      <param name="configure">The callback that configures <see cref="T:Microsoft.Extensions.Http.Resilience.WeightedGroupsRoutingOptions" />.</param>
      <returns>
            The same routing builder instance.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Http.Resilience.StandardHedgingHandlerBuilderExtensions">
      <summary>
            Extensions for <see cref="T:Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.StandardHedgingHandlerBuilderExtensions.Configure(Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder,Microsoft.Extensions.Configuration.IConfigurationSection)">
      <summary>
            Configures the <see cref="T:Microsoft.Extensions.Http.Resilience.HttpStandardHedgingResilienceOptions" /> for the standard hedging strategy.</summary>
      <param name="builder">The strategy builder.</param>
      <param name="section">The section that the options will bind against.</param>
      <returns>The same builder instance.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.StandardHedgingHandlerBuilderExtensions.Configure(Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder,System.Action{Microsoft.Extensions.Http.Resilience.HttpStandardHedgingResilienceOptions,System.IServiceProvider})">
      <summary>
            Configures the <see cref="T:Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions" /> for the standard hedging strategy.</summary>
      <param name="builder">The strategy builder.</param>
      <param name="configure">The configure method.</param>
      <returns>The same builder instance.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.StandardHedgingHandlerBuilderExtensions.Configure(Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder,System.Action{Microsoft.Extensions.Http.Resilience.HttpStandardHedgingResilienceOptions})">
      <summary>
            Configures the <see cref="T:Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions" /> for the standard hedging strategy.</summary>
      <param name="builder">The strategy builder.</param>
      <param name="configure">The configure method.</param>
      <returns>The same builder instance.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.StandardHedgingHandlerBuilderExtensions.SelectStrategyBy(Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder,System.Func{System.IServiceProvider,System.Func{System.Net.Http.HttpRequestMessage,System.String}})">
      <summary>
            Instructs the underlying strategy builder to select the strategy instance by custom selector.</summary>
      <param name="builder">The builder instance.</param>
      <param name="selectorFactory">The factory that returns key selector.</param>
      <returns>The same builder instance.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.StandardHedgingHandlerBuilderExtensions.SelectStrategyByAuthority(Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder,Microsoft.Extensions.Compliance.Classification.DataClassification)">
      <summary>
            Instructs the underlying strategy builder to select the strategy instance by redacted authority (scheme + host + port).</summary>
      <param name="builder">The builder instance.</param>
      <param name="classification">The data class associated with the authority.</param>
      <returns>The same builder instance.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Http.Resilience.WeightedEndpoint">
      <summary>
            Represents an URI based endpoint with a weight assigned.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.WeightedEndpoint.#ctor" />
    <member name="P:Microsoft.Extensions.Http.Resilience.WeightedEndpoint.Uri">
      <summary>
            Gets or sets the URL of the endpoint.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Http.Resilience.WeightedEndpoint.Weight">
      <summary>
            Gets or sets the weight of the endpoint.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Http.Resilience.WeightedEndpointGroup">
      <summary>
            Represents a collection of <see cref="T:Microsoft.Extensions.Http.Resilience.Endpoint" /> with a weight assigned.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.WeightedEndpointGroup.#ctor" />
    <member name="P:Microsoft.Extensions.Http.Resilience.WeightedEndpointGroup.Weight">
      <summary>
            Gets or sets the weight of the group.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Http.Resilience.WeightedGroupSelectionMode">
      <summary>
            Represents the selection mode used in <see cref="T:Microsoft.Extensions.Http.Resilience.WeightedGroupsRoutingOptions" />.</summary>
    </member>
    <member name="F:Microsoft.Extensions.Http.Resilience.WeightedGroupSelectionMode.EveryAttempt">
      <summary>
            In this selection mode the weight is used for every pick of <see cref="T:Microsoft.Extensions.Http.Resilience.WeightedEndpointGroup" />.</summary>
    </member>
    <member name="F:Microsoft.Extensions.Http.Resilience.WeightedGroupSelectionMode.InitialAttempt">
      <summary>
            In this selection mode the weight is only used to pick initial <see cref="T:Microsoft.Extensions.Http.Resilience.WeightedEndpointGroup" />.
            Remaining groups are picked in order, starting from the first, finishing with last and skipping already picked group.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Http.Resilience.WeightedGroupsRoutingOptions">
      <summary>
            Represents the options for collection of endpoint groups that have a weight assigned.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Http.Resilience.WeightedGroupsRoutingOptions.#ctor" />
    <member name="P:Microsoft.Extensions.Http.Resilience.WeightedGroupsRoutingOptions.Groups">
      <summary>
            Gets or sets the collection of weighted endpoints groups.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Http.Resilience.WeightedGroupsRoutingOptions.SelectionMode">
      <summary>
            Gets or sets the selection mode that determines the behavior of underlying routing strategy.</summary>
    </member>
  </members>
</doc>