<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Extensions.Logging.Console</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings">
      <summary>Specifies settings for a <see cref="T:Microsoft.Extensions.Logging.Console.ConsoleLogger" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
      <summary>Creates a new instance of <see cref="T:Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings" />.</summary>
      <param name="configuration">The configuration values.</param>
    </member>
    <member name="M:Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.Reload">
      <summary>Reloads the settings from the configuration.</summary>
      <returns>The reloaded settings.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.TryGetSwitch(System.String,Microsoft.Extensions.Logging.LogLevel@)">
      <summary>Gets the log level for the specified switch.</summary>
      <param name="name">The name of the switch to look up.</param>
      <param name="level">When this method returns, contains the value of the switch if it is found. If the switch is not found, this parameter is set to <see cref="T:Microsoft.Extensions.Logging.LogLevel.None" />.</param>
      <exception cref="T:System.InvalidOperationException" />
      <returns>
        <see langword="true" /> if the switch was found, otherwise <see langword="false" />.</returns>
    </member>
    <member name="P:Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.ChangeToken">
      <summary>Gets the <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" /> that propagates notifications that a change has occurred.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.IncludeScopes">
      <summary>Gets a value indicating whether scopes are included in the message.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Logging.Console.ConsoleFormatter">
      <summary>Allows custom log message formatting.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Logging.Console.ConsoleFormatter.#ctor(System.String)">
      <summary>Initializes a new instance of <see cref="T:Microsoft.Extensions.Logging.Console.ConsoleFormatter" />.</summary>
      <param name="name" />
    </member>
    <member name="M:Microsoft.Extensions.Logging.Console.ConsoleFormatter.Write``1(Microsoft.Extensions.Logging.Abstractions.LogEntry{``0}@|System.Runtime.InteropServices.InAttribute,Microsoft.Extensions.Logging.IExternalScopeProvider,System.IO.TextWriter)">
      <param name="logEntry" />
      <param name="scopeProvider" />
      <param name="textWriter" />
      <typeparam name="TState" />
    </member>
    <member name="P:Microsoft.Extensions.Logging.Console.ConsoleFormatter.Name">
      <summary>Gets the name associated with the console log formatter.</summary>
      <returns>A string that represents the name associated with the console log formatter.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Logging.Console.ConsoleFormatterNames">
      <summary>Reserved formatter names for the built-in console formatters.</summary>
    </member>
    <member name="F:Microsoft.Extensions.Logging.Console.ConsoleFormatterNames.Json">
      <summary>Reserved name for Json console formatter.</summary>
    </member>
    <member name="F:Microsoft.Extensions.Logging.Console.ConsoleFormatterNames.Simple">
      <summary>Reserved name for simple console formatter.</summary>
    </member>
    <member name="F:Microsoft.Extensions.Logging.Console.ConsoleFormatterNames.Systemd">
      <summary>Reserved name for systemd console formatter.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Logging.Console.ConsoleFormatterOptions">
      <summary>Options for the built-in console log formatter.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Logging.Console.ConsoleFormatterOptions.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.Logging.Console.ConsoleFormatterOptions" /> class.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Logging.Console.ConsoleFormatterOptions.IncludeScopes">
      <summary>Gets or sets whether scopes should be included or not.</summary>
      <returns>
        <see langword="true" /> when scopes should be included; <see langword="false" /> otherwise.</returns>
    </member>
    <member name="P:Microsoft.Extensions.Logging.Console.ConsoleFormatterOptions.TimestampFormat">
      <summary>Gets or sets the format string used to format timestamp in logging messages.</summary>
      <returns>A string representing the timestamp format. The default is <see langword="null" />.</returns>
    </member>
    <member name="P:Microsoft.Extensions.Logging.Console.ConsoleFormatterOptions.UseUtcTimestamp">
      <summary>Gets or sets a value indicating whether or not the UTC time zone should be used for timestamps in logging messages.</summary>
      <returns>
        <see langword="true" /> if the UTC time zone is used; otherwise <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Logging.Console.ConsoleLoggerFormat">
      <summary>Format of <see cref="T:Microsoft.Extensions.Logging.Console.ConsoleLogger" /> messages.</summary>
    </member>
    <member name="F:Microsoft.Extensions.Logging.Console.ConsoleLoggerFormat.Default">
      <summary>Produces messages in the default console format.</summary>
    </member>
    <member name="F:Microsoft.Extensions.Logging.Console.ConsoleLoggerFormat.Systemd">
      <summary>Produces messages in a format suitable for console output to the systemd journal.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions">
      <summary>Options for a <see cref="T:Microsoft.Extensions.Logging.Console.ConsoleLogger" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.#ctor" />
    <member name="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.DisableColors">
      <summary>Disables colors when <see langword="true" />.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.Format">
      <summary>Gets or sets the log message format.</summary>
      <returns>The default is <see cref="F:Microsoft.Extensions.Logging.Console.ConsoleLoggerFormat.Default" />.</returns>
    </member>
    <member name="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.FormatterName">
      <summary>The name of the log message formatter to use.</summary>
      <returns>A string that represents the formatter name. The default is "simple".</returns>
    </member>
    <member name="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.IncludeScopes">
      <summary>Includes scopes when <see langword="true" />.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.LogToStandardErrorThreshold">
      <summary>Gets or sets value indicating the minimum level of messages that would get written to <c>Console.Error</c>.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.MaxQueueLength">
      <summary>Gets or sets the maximum number of enqueued messages.</summary>
      <returns>The default is 2500.</returns>
    </member>
    <member name="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.QueueFullMode">
      <summary>Gets or sets the desired console logger behavior when the queue becomes full.</summary>
      <returns>The default is <c>Wait</c>.</returns>
    </member>
    <member name="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.TimestampFormat">
      <summary>Gets or sets the format string used to format timestamps in logging messages.</summary>
      <returns>The default is <see langword="null" />.</returns>
    </member>
    <member name="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.UseUtcTimestamp">
      <summary>Gets or sets a value that indicates whether or not the UTC time zone should be used to for timestamps in logging messages.</summary>
      <returns>
        <see langword="true" /> to use the UTC time zone; <see langword="false" /> otherwise. The default is <see langword="false" />.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider">
      <summary>A provider of <see cref="T:Microsoft.Extensions.Logging.Console.ConsoleLogger" /> instances.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions})">
      <summary>Creates an instance of <see cref="T:Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider" />.</summary>
      <param name="options">The options to create <see cref="T:Microsoft.Extensions.Logging.Console.ConsoleLogger" /> instances with.</param>
    </member>
    <member name="M:Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions},System.Collections.Generic.IEnumerable{Microsoft.Extensions.Logging.Console.ConsoleFormatter})">
      <summary>Creates an instance of <see cref="T:Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider" />.</summary>
      <param name="options">The options to create <see cref="T:Microsoft.Extensions.Logging.Console.ConsoleLogger" /> instances with.</param>
      <param name="formatters">Log formatters added for <see cref="T:Microsoft.Extensions.Logging.Console.ConsoleLogger" /> insteaces.</param>
    </member>
    <member name="M:Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.CreateLogger(System.String)">
      <summary>Creates a new <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.Logging.ILogger"></xref> instance.</summary>
      <param name="name" />
      <returns>The instance of <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.Logging.ILogger"></xref> that was created.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.SetScopeProvider(Microsoft.Extensions.Logging.IExternalScopeProvider)">
      <summary>Sets external scope information source for logger provider.</summary>
      <param name="scopeProvider">The provider of scope data.</param>
    </member>
    <member name="T:Microsoft.Extensions.Logging.Console.ConsoleLoggerQueueFullMode">
      <summary>Determines the console logger behavior when the queue becomes full.</summary>
    </member>
    <member name="F:Microsoft.Extensions.Logging.Console.ConsoleLoggerQueueFullMode.DropWrite">
      <summary>Drops new log messages when the queue is full.</summary>
    </member>
    <member name="F:Microsoft.Extensions.Logging.Console.ConsoleLoggerQueueFullMode.Wait">
      <summary>Blocks the logging threads once the queue limit is reached.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings">
      <summary>This type is retained only for compatibility. The recommended alternative is ConsoleLoggerOptions.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.#ctor" />
    <member name="M:Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.Reload">
      <summary>This method is retained only for compatibility.</summary>
      <returns>This method is retained only for compatibility.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.TryGetSwitch(System.String,Microsoft.Extensions.Logging.LogLevel@)">
      <summary>This method is retained only for compatibility.</summary>
      <param name="name">This method is retained only for compatibility.</param>
      <param name="level">This method is retained only for compatibility.</param>
      <returns>This method is retained only for compatibility.</returns>
    </member>
    <member name="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.ChangeToken">
      <summary>This property is retained only for compatibility.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.DisableColors">
      <summary>This property is retained only for compatibility.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.IncludeScopes">
      <summary>This property is retained only for compatibility.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.Switches">
      <summary>This property is retained only for compatibility.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings">
      <summary>This type is retained only for compatibility. The recommended alternative is ConsoleLoggerOptions.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.Reload">
      <summary>This method is retained only for compatibility.</summary>
      <returns>This method is retained only for compatibility.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.TryGetSwitch(System.String,Microsoft.Extensions.Logging.LogLevel@)">
      <summary>This method is retained only for compatibility.</summary>
      <param name="name">This method is retained only for compatibility.</param>
      <param name="level">This method is retained only for compatibility.</param>
      <returns>This method is retained only for compatibility.</returns>
    </member>
    <member name="P:Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.ChangeToken">
      <summary>This property is retained only for compatibility.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.IncludeScopes">
      <summary>This property is retained only for compatibility.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Logging.Console.JsonConsoleFormatterOptions">
      <summary>Options for the built-in json console log formatter.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Logging.Console.JsonConsoleFormatterOptions.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.Logging.Console.JsonConsoleFormatterOptions" /> class.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Logging.Console.JsonConsoleFormatterOptions.JsonWriterOptions">
      <summary>Gets or sets a Json writer options instance.</summary>
      <returns>A <see cref="T:System.Text.Json.JsonWriterOptions" /> instance.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Logging.Console.LoggerColorBehavior">
      <summary>Determines when to use color when logging messages.</summary>
    </member>
    <member name="F:Microsoft.Extensions.Logging.Console.LoggerColorBehavior.Default">
      <summary>
        <para>Use the default color behavior.</para>
        <para>Color is not enabled when the console output is redirected.</para>
      </summary>
    </member>
    <member name="F:Microsoft.Extensions.Logging.Console.LoggerColorBehavior.Disabled">
      <summary>Disable color for logging.</summary>
    </member>
    <member name="F:Microsoft.Extensions.Logging.Console.LoggerColorBehavior.Enabled">
      <summary>Enable color for logging.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Logging.Console.SimpleConsoleFormatterOptions">
      <summary>Options for the built-in default console log formatter.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Logging.Console.SimpleConsoleFormatterOptions.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.Logging.Console.SimpleConsoleFormatterOptions" /> class.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Logging.Console.SimpleConsoleFormatterOptions.ColorBehavior">
      <summary>Determines when to use color when logging messages.</summary>
      <returns>An object that determines the logger color behavior.</returns>
    </member>
    <member name="P:Microsoft.Extensions.Logging.Console.SimpleConsoleFormatterOptions.SingleLine">
      <summary>Indicates whether the entire message gets logged in a single line or not.</summary>
      <returns>
        <see langword="true" /> to log the entire message in a single line; <see langword="false" /> otherwise.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Logging.ConsoleLoggerExtensions">
      <summary>Provides extension methods for the <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> and <see cref="T:Microsoft.Extensions.Logging.Configuration.ILoggerProviderConfiguration`1" /> classes.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory)">
      <summary>Adds a console logger that is enabled for <see cref="T:Microsoft.Extensions.Logging.LogLevel" />.Information or higher.</summary>
      <param name="factory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory" /> to use.</param>
      <returns>This method is retained only for compatibility.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Configuration.IConfiguration)">
      <summary>This method is retained only for compatibility.</summary>
      <param name="factory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory" /> to use.</param>
      <param name="configuration">The <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" /> to use for <see cref="T:Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings" />.</param>
      <returns>This method is retained only for compatibility.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings)">
      <summary>This method is retained only for compatibility.</summary>
      <param name="factory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory" /> to use.</param>
      <param name="settings">The settings to apply to created <see cref="T:Microsoft.Extensions.Logging.Console.ConsoleLogger" />'s.</param>
      <returns>This method is retained only for compatibility.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)">
      <summary>Adds a console logger that is enabled for <see cref="T:Microsoft.Extensions.Logging.LogLevel" />s of minLevel or higher.</summary>
      <param name="factory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory" /> to use.</param>
      <param name="minLevel">The minimum <see cref="T:Microsoft.Extensions.Logging.LogLevel" /> to be logged.</param>
      <returns>This method is retained only for compatibility.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel,System.Boolean)">
      <summary>Adds a console logger that is enabled for <see cref="T:Microsoft.Extensions.Logging.LogLevel" />s of minLevel or higher.</summary>
      <param name="factory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory" /> to use.</param>
      <param name="minLevel">The minimum <see cref="T:Microsoft.Extensions.Logging.LogLevel" /> to be logged.</param>
      <param name="includeScopes">A value which indicates whether log scope information should be displayed
            in the output.</param>
      <returns>This method is retained only for compatibility.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Boolean)">
      <summary>Adds a console logger that is enabled for <see cref="T:Microsoft.Extensions.Logging.LogLevel" />.Information or higher.</summary>
      <param name="factory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory" /> to use.</param>
      <param name="includeScopes">A value which indicates whether log scope information should be displayed
            in the output.</param>
      <returns>This method is retained only for compatibility.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})">
      <summary>Adds a console logger that is enabled as defined by the filter function.</summary>
      <param name="factory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory" /> to use.</param>
      <param name="filter">The category filter to apply to logs.</param>
      <returns>This method is retained only for compatibility.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean},System.Boolean)">
      <summary>Adds a console logger that is enabled as defined by the filter function.</summary>
      <param name="factory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory" /> to use.</param>
      <param name="filter">The category filter to apply to logs.</param>
      <param name="includeScopes">A value which indicates whether log scope information should be displayed
            in the output.</param>
      <returns>This method is retained only for compatibility.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggingBuilder)">
      <summary>Adds a console logger named 'Console' to the factory.</summary>
      <param name="builder">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to use.</param>
    </member>
    <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggingBuilder,System.Action{Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions})">
      <summary>Adds a console logger named 'Console' to the factory.</summary>
      <param name="builder">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to use.</param>
      <param name="configure">A delegate to configure the <see cref="T:Microsoft.Extensions.Logging.Console.ConsoleLogger" />.</param>
    </member>
    <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsoleFormatter``2(Microsoft.Extensions.Logging.ILoggingBuilder)">
      <summary>Adds a custom console logger formatter.</summary>
      <param name="builder">The current logging builder instance to use.</param>
      <typeparam name="TFormatter">The custom console logger formatter.</typeparam>
      <typeparam name="TOptions">The configuration options.</typeparam>
      <returns>The current logging builder instance so that additional calls can be chained.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsoleFormatter``2(Microsoft.Extensions.Logging.ILoggingBuilder,System.Action{``1})">
      <summary>Adds a custom console logger formatter to be configured with the specified options.</summary>
      <param name="builder">The current logging builder instance to use.</param>
      <param name="configure">A delegate to configure <paramref name="TOptions" /> for the custom formatter <paramref name="TFormatter" />.</param>
      <typeparam name="TFormatter">The custom console logger formatter.</typeparam>
      <typeparam name="TOptions">The configuration options.</typeparam>
      <returns>The current logging builder instance so that additional calls can be chained.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddJsonConsole(Microsoft.Extensions.Logging.ILoggingBuilder)">
      <summary>Adds a console log formatter named 'json' to the factory with default properties.</summary>
      <param name="builder">The current logging builder instance to use.</param>
      <returns>The current logging builder instance so that additional calls can be chained.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddJsonConsole(Microsoft.Extensions.Logging.ILoggingBuilder,System.Action{Microsoft.Extensions.Logging.Console.JsonConsoleFormatterOptions})">
      <summary>Adds a console log formatter named 'json'  to the factory configured with the specified Json console formatter options.</summary>
      <param name="builder">The current logging builder instance to use.</param>
      <param name="configure">A delegate to configure the console logger options for the built-in json log formatter.</param>
      <returns>The current logging builder instance so that additional calls can be chained.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddSimpleConsole(Microsoft.Extensions.Logging.ILoggingBuilder)">
      <summary>Adds the default console log formatter named 'simple' to the factory with default properties.</summary>
      <param name="builder">The current logging builder instance to use.</param>
      <returns>The current logging builder instance so that additional calls can be chained.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddSimpleConsole(Microsoft.Extensions.Logging.ILoggingBuilder,System.Action{Microsoft.Extensions.Logging.Console.SimpleConsoleFormatterOptions})">
      <summary>Adds a console log formatter named 'simple' to the factory configured with the specified simple console formatter options.</summary>
      <param name="builder">The current logging builder instance to use.</param>
      <param name="configure">A delegate to configure the console logger options for the built-in default log formatter.</param>
      <returns>The current logging builder instance so that additional calls can be chained.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddSystemdConsole(Microsoft.Extensions.Logging.ILoggingBuilder)">
      <summary>Adds a console log formatter named 'systemd' to the factory with default properties.</summary>
      <param name="builder">The current logging builder instance to use.</param>
      <returns>The current logging builder instance so that additional calls can be chained.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddSystemdConsole(Microsoft.Extensions.Logging.ILoggingBuilder,System.Action{Microsoft.Extensions.Logging.Console.ConsoleFormatterOptions})">
      <summary>Adds a console log formatter named 'systemd' to the factory configured with the specified console formatter options.</summary>
      <param name="builder">The current logging builder instance to use.</param>
      <param name="configure">A delegate to configure the console logger options for the built-in systemd log formatter.</param>
      <returns>The current logging builder instance so that additional calls can be chained.</returns>
    </member>
  </members>
</doc>