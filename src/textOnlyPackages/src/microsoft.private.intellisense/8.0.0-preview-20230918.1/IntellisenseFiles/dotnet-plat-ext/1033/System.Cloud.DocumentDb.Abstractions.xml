<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Cloud.DocumentDb.Abstractions</name>
  </assembly>
  <members>
    <member name="T:System.Cloud.DocumentDb.BatchItem`1">
      <summary>
            Batch operation item to be used in transactional operations like <see cref="M:System.Cloud.DocumentDb.IDocumentWriter`1.ExecuteTransactionalBatchAsync(System.Cloud.DocumentDb.RequestOptions{`0},System.Collections.Generic.IReadOnlyList{System.Cloud.DocumentDb.BatchItem{`0}},System.Threading.CancellationToken)" />.</summary>
      <typeparam name="T">The type of the item the response contains.</typeparam>
    </member>
    <member name="M:System.Cloud.DocumentDb.BatchItem`1.#ctor(System.Cloud.DocumentDb.BatchOperation,`0,System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Cloud.DocumentDb.BatchItem`1" /> struct.</summary>
      <param name="operation">The operation.</param>
      <param name="item">The document.</param>
      <param name="id">The document id.</param>
      <param name="itemVersion">The item version.</param>
    </member>
    <member name="P:System.Cloud.DocumentDb.BatchItem`1.Id">
      <summary>
            Gets the item id required for operation.</summary>
    </member>
    <member name="P:System.Cloud.DocumentDb.BatchItem`1.Item">
      <summary>
            Gets the batch item payload.</summary>
    </member>
    <member name="P:System.Cloud.DocumentDb.BatchItem`1.ItemVersion">
      <summary>
            Gets the item version for if match condition.</summary>
    </member>
    <member name="P:System.Cloud.DocumentDb.BatchItem`1.Operation">
      <summary>
            Gets the operation for this item.</summary>
    </member>
    <member name="T:System.Cloud.DocumentDb.BatchOperation">
      <summary>
            The operation used in <see cref="T:System.Cloud.DocumentDb.BatchItem`1" /> to indicate the action to perform.</summary>
    </member>
    <member name="F:System.Cloud.DocumentDb.BatchOperation.Create">
      <summary>
            Create item.</summary>
    </member>
    <member name="F:System.Cloud.DocumentDb.BatchOperation.Delete">
      <summary>
            Delete item.</summary>
    </member>
    <member name="F:System.Cloud.DocumentDb.BatchOperation.Read">
      <summary>
            Read item.</summary>
    </member>
    <member name="F:System.Cloud.DocumentDb.BatchOperation.Replace">
      <summary>
            Replace item.</summary>
    </member>
    <member name="F:System.Cloud.DocumentDb.BatchOperation.Upsert">
      <summary>
            Upsert item.</summary>
    </member>
    <member name="T:System.Cloud.DocumentDb.ConsistencyLevel">
      <summary>
            Define possible consistency levels.</summary>
    </member>
    <member name="F:System.Cloud.DocumentDb.ConsistencyLevel.BoundedStaleness">
      <summary>
            Defines a Bounded Staleness Consistency for operation.</summary>
    </member>
    <member name="F:System.Cloud.DocumentDb.ConsistencyLevel.ConsistentPrefix">
      <summary>
            Defines a Consistent Prefix Consistency for operation.</summary>
    </member>
    <member name="F:System.Cloud.DocumentDb.ConsistencyLevel.Eventual">
      <summary>
            Defines a Eventual Consistency for operation.</summary>
    </member>
    <member name="F:System.Cloud.DocumentDb.ConsistencyLevel.Session">
      <summary>
            Defines a Session Consistency for operation.</summary>
    </member>
    <member name="F:System.Cloud.DocumentDb.ConsistencyLevel.Strong">
      <summary>
            Defines a Strong Consistency for operation.</summary>
    </member>
    <member name="T:System.Cloud.DocumentDb.DatabaseClientException">
      <summary>
            The exception that's thrown when the operation failed with a specific reason and should not retry.</summary>
    </member>
    <member name="M:System.Cloud.DocumentDb.DatabaseClientException.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:System.Cloud.DocumentDb.DatabaseClientException" /> class.</summary>
    </member>
    <member name="M:System.Cloud.DocumentDb.DatabaseClientException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Cloud.DocumentDb.DatabaseClientException" /> class.</summary>
      <param name="message">The exception message.</param>
    </member>
    <member name="M:System.Cloud.DocumentDb.DatabaseClientException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Cloud.DocumentDb.DatabaseClientException" /> class.</summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The exception related to the missing data.</param>
    </member>
    <member name="T:System.Cloud.DocumentDb.DatabaseException">
      <summary>
            Base type for exceptions thrown by storage adapter.</summary>
    </member>
    <member name="M:System.Cloud.DocumentDb.DatabaseException.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:System.Cloud.DocumentDb.DatabaseException" /> class.</summary>
    </member>
    <member name="M:System.Cloud.DocumentDb.DatabaseException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Cloud.DocumentDb.DatabaseException" /> class.</summary>
      <param name="message">The exception message.</param>
    </member>
    <member name="M:System.Cloud.DocumentDb.DatabaseException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Cloud.DocumentDb.DatabaseException" /> class.</summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The inner exception causing this exception.</param>
    </member>
    <member name="M:System.Cloud.DocumentDb.DatabaseException.#ctor(System.String,System.Exception,System.Int32,System.Int32,System.Cloud.DocumentDb.RequestInfo)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Cloud.DocumentDb.DatabaseException" /> class.</summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The inner exception causing this exception.</param>
      <param name="statusCode">Exception status code.</param>
      <param name="subStatusCode">Exception sub status code.</param>
      <param name="requestInfo">The request.</param>
    </member>
    <member name="M:System.Cloud.DocumentDb.DatabaseException.#ctor(System.String,System.Int32,System.Int32,System.Cloud.DocumentDb.RequestInfo)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Cloud.DocumentDb.DatabaseException" /> class.</summary>
      <param name="message">The exception message.</param>
      <param name="statusCode">Exception status code.</param>
      <param name="subStatusCode">Exception sub status code.</param>
      <param name="requestInfo">The request.</param>
    </member>
    <member name="P:System.Cloud.DocumentDb.DatabaseException.HttpStatusCode">
      <summary>
            Gets the status code indicating the exception root cause.</summary>
    </member>
    <member name="P:System.Cloud.DocumentDb.DatabaseException.RequestInfo">
      <summary>
            Gets the request information.</summary>
    </member>
    <member name="P:System.Cloud.DocumentDb.DatabaseException.StatusCode">
      <summary>
            Gets the status code indicating the exception root cause.</summary>
    </member>
    <member name="P:System.Cloud.DocumentDb.DatabaseException.SubStatusCode">
      <summary>
            Gets the status code indicating the exception root cause.</summary>
    </member>
    <member name="T:System.Cloud.DocumentDb.DatabaseOptions">
      <summary>
            Represents configuration options for a database.</summary>
    </member>
    <member name="M:System.Cloud.DocumentDb.DatabaseOptions.#ctor" />
    <member name="P:System.Cloud.DocumentDb.DatabaseOptions.DatabaseName">
      <summary>
            Gets or sets the global database name.</summary>
      <returns>
            The default is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="P:System.Cloud.DocumentDb.DatabaseOptions.DefaultRegionalDatabaseName">
      <summary>
            Gets or sets the default name for a regional database.</summary>
      <returns>
            The default is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Cloud.DocumentDb.DatabaseOptions.Endpoint">
      <summary>
            Gets or sets the global database endpoint uri.</summary>
      <returns>
            The default is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Cloud.DocumentDb.DatabaseOptions.FailoverRegions">
      <summary>
            Gets or sets a list of preferred regions used for SDK to define failover order for global database.</summary>
      <returns>
            The default value is empty <see cref="T:System.Collections.Generic.List`1" />.</returns>
    </member>
    <member name="P:System.Cloud.DocumentDb.DatabaseOptions.IdleTcpConnectionTimeout">
      <summary>
            Gets or sets the timeout before an unused connection is closed.</summary>
      <returns>
            The default is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Cloud.DocumentDb.DatabaseOptions.JsonSerializerOptions">
      <summary>
            Gets or sets JSON serializer options.</summary>
      <returns>
            The default is the default <see cref="P:System.Cloud.DocumentDb.DatabaseOptions.JsonSerializerOptions" />.</returns>
    </member>
    <member name="P:System.Cloud.DocumentDb.DatabaseOptions.OverrideSerialization">
      <summary>
            Gets or sets a value indicating whether serialization overridden.</summary>
      <returns>
            The default is <see langword="true" />.</returns>
    </member>
    <member name="P:System.Cloud.DocumentDb.DatabaseOptions.PrimaryKey">
      <summary>
            Gets or sets the key to the account or resource token.</summary>
      <returns>
            The default is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Cloud.DocumentDb.DatabaseOptions.RegionalDatabaseOptions">
      <summary>
            Gets or sets a list of region specific configurations for the database.</summary>
      <returns>
            The default value is empty <see cref="T:System.Collections.Generic.Dictionary`2" />.</returns>
    </member>
    <member name="P:System.Cloud.DocumentDb.DatabaseOptions.Throughput">
      <summary>
            Gets or sets the throughput value.</summary>
      <returns>
            The default is <see cref="F:System.Cloud.DocumentDb.Throughput.Unlimited" />.</returns>
    </member>
    <member name="T:System.Cloud.DocumentDb.DatabaseRetryableException">
      <summary>
            The exception that's thrown when the operation failed with a specific reason and it's eligible to retry in the future.</summary>
    </member>
    <member name="M:System.Cloud.DocumentDb.DatabaseRetryableException.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:System.Cloud.DocumentDb.DatabaseRetryableException" /> class.</summary>
    </member>
    <member name="M:System.Cloud.DocumentDb.DatabaseRetryableException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Cloud.DocumentDb.DatabaseRetryableException" /> class.</summary>
      <param name="message">The exception message.</param>
    </member>
    <member name="M:System.Cloud.DocumentDb.DatabaseRetryableException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Cloud.DocumentDb.DatabaseRetryableException" /> class.</summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The exception related to the missing data.</param>
    </member>
    <member name="M:System.Cloud.DocumentDb.DatabaseRetryableException.#ctor(System.String,System.Exception,System.Int32,System.Int32,System.Nullable{System.TimeSpan},System.Cloud.DocumentDb.RequestInfo)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Cloud.DocumentDb.DatabaseRetryableException" /> class.</summary>
      <param name="message">The exception message.</param>
      <param name="innerException">Exception related to the missing data.</param>
      <param name="statusCode">Exception status code.</param>
      <param name="subStatusCode">Exception sub status code.</param>
      <param name="retryAfter">Retry-after timespan.</param>
      <param name="requestInfo">The request.</param>
    </member>
    <member name="P:System.Cloud.DocumentDb.DatabaseRetryableException.RetryAfter">
      <summary>
            Gets the retry-after time.</summary>
    </member>
    <member name="T:System.Cloud.DocumentDb.DatabaseServerException">
      <summary>
            The exception that's thrown when the operation failed without a specific reason.</summary>
    </member>
    <member name="M:System.Cloud.DocumentDb.DatabaseServerException.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:System.Cloud.DocumentDb.DatabaseServerException" /> class.</summary>
    </member>
    <member name="M:System.Cloud.DocumentDb.DatabaseServerException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Cloud.DocumentDb.DatabaseServerException" /> class.</summary>
      <param name="message">The exception message.</param>
    </member>
    <member name="M:System.Cloud.DocumentDb.DatabaseServerException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Cloud.DocumentDb.DatabaseServerException" /> class.</summary>
      <param name="message">The exception message.</param>
      <param name="innerException">Exception related to the missing data.</param>
    </member>
    <member name="M:System.Cloud.DocumentDb.DatabaseServerException.#ctor(System.String,System.Exception,System.Int32,System.Int32,System.Cloud.DocumentDb.RequestInfo)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Cloud.DocumentDb.DatabaseServerException" /> class.</summary>
      <param name="message">The exception message.</param>
      <param name="innerException">Exception related to the missing data.</param>
      <param name="statusCode">Exception status code.</param>
      <param name="subStatusCode">Exception sub status code.</param>
      <param name="requestInfo">The request info.</param>
    </member>
    <member name="M:System.Cloud.DocumentDb.DatabaseServerException.#ctor(System.String,System.Int32,System.Int32,System.Cloud.DocumentDb.RequestInfo)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Cloud.DocumentDb.DatabaseServerException" /> class.</summary>
      <param name="message">The exception message.</param>
      <param name="statusCode">Exception status code.</param>
      <param name="subStatusCode">Exception sub status code.</param>
      <param name="requestInfo">The request info.</param>
    </member>
    <member name="T:System.Cloud.DocumentDb.FetchMode">
      <summary>
            Fetch condition of query.</summary>
    </member>
    <member name="F:System.Cloud.DocumentDb.FetchMode.FetchAll">
      <summary>
            Indicating whether we should fetch all documents.</summary>
    </member>
    <member name="F:System.Cloud.DocumentDb.FetchMode.FetchMaxResults">
      <summary>
            Indicating whether we should ensure fetching at least the number of max item count.</summary>
    </member>
    <member name="F:System.Cloud.DocumentDb.FetchMode.FetchSinglePage">
      <summary>
            Indicating whether we should fetch only one page of results.</summary>
    </member>
    <member name="T:System.Cloud.DocumentDb.IDatabaseResponse">
      <summary>
            The result interface for document storage responses.</summary>
    </member>
    <member name="P:System.Cloud.DocumentDb.IDatabaseResponse.ContinuationToken">
      <summary>
            Gets a value indicate the start point of next batch read.</summary>
    </member>
    <member name="P:System.Cloud.DocumentDb.IDatabaseResponse.ItemCount">
      <summary>
            Gets count of items in result.</summary>
    </member>
    <member name="P:System.Cloud.DocumentDb.IDatabaseResponse.ItemVersion">
      <summary>
            Gets the item version string.</summary>
    </member>
    <member name="P:System.Cloud.DocumentDb.IDatabaseResponse.RequestInfo">
      <summary>
            Gets the request information.</summary>
    </member>
    <member name="P:System.Cloud.DocumentDb.IDatabaseResponse.Status">
      <summary>
            Gets the response status code.</summary>
    </member>
    <member name="P:System.Cloud.DocumentDb.IDatabaseResponse.Succeeded">
      <summary>
            Gets a value indicating whether an operation succeeded.</summary>
    </member>
    <member name="T:System.Cloud.DocumentDb.IDatabaseResponse`1">
      <summary>
            The result interface including item for document storage responses.</summary>
      <typeparam name="T">The type of the item the response contains.</typeparam>
    </member>
    <member name="P:System.Cloud.DocumentDb.IDatabaseResponse`1.Item">
      <summary>
            Gets response item.</summary>
    </member>
    <member name="T:System.Cloud.DocumentDb.IDocumentDatabase">
      <summary>
            An interface for managing a document database.</summary>
    </member>
    <member name="M:System.Cloud.DocumentDb.IDocumentDatabase.ConnectAsync(System.Boolean,System.Threading.CancellationToken)">
      <summary>
            Initializes connections and optionally creates the database if it doesn't exist.</summary>
      <param name="createIfNotExists">
        <see langword="true" /> to create the database if it doesn't exist; otherwise, <see langword="false" /> .</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the result of the asynchronous operation.</returns>
    </member>
    <member name="M:System.Cloud.DocumentDb.IDocumentDatabase.CreateTableAsync(System.Cloud.DocumentDb.TableOptions,System.Cloud.DocumentDb.RequestOptions,System.Threading.CancellationToken)">
      <summary>
            Creates a table using provided parameters.</summary>
      <param name="tableOptions">The table options.</param>
      <param name="requestOptions">The request options.</param>
      <param name="cancellationToken">The token represents request cancellation.</param>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseClientException">An error occurred on the client side,
            for example, on a bad request, permissions error, or client timeout.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseServerException">An error occurred on the database server side,
            including internal server error.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseRetryableException">The request failed but can be retried.
            This includes throttling and when the server is unavailable.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseException">A general failure occurred.</exception>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Cloud.DocumentDb.IDatabaseResponse`1" /> that wraps the table information.</returns>
    </member>
    <member name="M:System.Cloud.DocumentDb.IDocumentDatabase.DeleteDatabaseAsync(System.Threading.CancellationToken)">
      <summary>
            Deletes the database this instance is responsible for.</summary>
      <param name="cancellationToken">The cancellation token.</param>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseClientException">An error occurred on the client side,
            for example, on a bad request, permissions error, or client timeout.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseServerException">An error occurred on the database server side,
            including an internal server error.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseRetryableException">The request failed but can be retried.
            This includes throttling and when the server is unavailable.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseException">A general failure occurred.</exception>
      <returns>
            A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Cloud.DocumentDb.IDatabaseResponse`1" /> with
            <see langword="true" /> value if successfully deleted and <see langword="false" /> otherwise.</returns>
    </member>
    <member name="M:System.Cloud.DocumentDb.IDocumentDatabase.DeleteTableAsync(System.Cloud.DocumentDb.TableOptions,System.Cloud.DocumentDb.RequestOptions,System.Threading.CancellationToken)">
      <summary>
            Deletes table using provided parameters.</summary>
      <param name="tableOptions">The table options with <see cref="P:System.Cloud.DocumentDb.TableOptions.TableName" /> and region information provided.</param>
      <param name="requestOptions">The request options.</param>
      <param name="cancellationToken">The token that represents request cancellation.</param>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseClientException">An error occurred on the client side,
            for example, on a bad request, permissions error, or client timeout.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseServerException">An error occurred on the database server side,
            including internal server error.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseRetryableException">The request failed but can be retried.
            This includes throttling and when the server is unavailable.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseException">A general failure occurred.</exception>
      <returns>
            A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Cloud.DocumentDb.IDatabaseResponse`1" /> with
            <see langword="true" /> value if table successfully deleted and <see langword="false" /> otherwise.</returns>
    </member>
    <member name="M:System.Cloud.DocumentDb.IDocumentDatabase.GetDocumentReader``1(System.Cloud.DocumentDb.TableOptions)">
      <summary>
            Gets a document reader for the specified table and document type.</summary>
      <param name="options">The table options.</param>
      <typeparam name="TDocument">
            The document entity type to be used as a table schema.
            The results of the request are mapped to an instance of this type.</typeparam>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseClientException">An error occurred on the client side,
            for example, on a bad request, permissions error, or client timeout.</exception>
      <returns>The document reader.</returns>
    </member>
    <member name="M:System.Cloud.DocumentDb.IDocumentDatabase.GetDocumentWriter``1(System.Cloud.DocumentDb.TableOptions)">
      <summary>
            Gets a document writer for the specified table and document type.</summary>
      <param name="options">The table options.</param>
      <typeparam name="TDocument">
            The document entity type to be used as a table schema.
            The results of the request are mapped to an instance of this type.</typeparam>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseClientException">An error occurred on the client side,
            for example, on a bad request, permissions error, or client timeout.</exception>
      <returns>The document writer.</returns>
    </member>
    <member name="M:System.Cloud.DocumentDb.IDocumentDatabase.ReadTableSettingsAsync(System.Cloud.DocumentDb.TableOptions,System.Cloud.DocumentDb.RequestOptions,System.Threading.CancellationToken)">
      <summary>
            Reads the provided table settings.</summary>
      <param name="tableOptions">The table options with <see cref="P:System.Cloud.DocumentDb.TableOptions.TableName" /> and region information provided.</param>
      <param name="requestOptions">The request options.</param>
      <param name="cancellationToken">The token represents the request cancellation.</param>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseClientException">An error occurred on the client side,
            for example, on a bad request, permissions error, or client timeout.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseServerException">An error occurred on the database server side,
            including internal server error.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseRetryableException">The request failed but can be retried.
            This includes throttling and when the server is unavailable.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseException">A general failure occurred.</exception>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Cloud.DocumentDb.IDatabaseResponse`1" /> that wraps the table information.</returns>
    </member>
    <member name="M:System.Cloud.DocumentDb.IDocumentDatabase.UpdateTableSettingsAsync(System.Cloud.DocumentDb.TableOptions,System.Cloud.DocumentDb.RequestOptions,System.Threading.CancellationToken)">
      <summary>
            Updates the existing table settings.</summary>
      <param name="tableOptions">The table options with <see cref="P:System.Cloud.DocumentDb.TableOptions.TableName" /> and region information provided.</param>
      <param name="requestOptions">The request options.</param>
      <param name="cancellationToken">The token represents request cancellation.</param>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseClientException">An error occurred on the client side,
            for example, on a bad request, permissions error, or client timeout.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseServerException">An error occurred on the database server side,
            including internal server error.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseRetryableException">The request failed but can be retried.
            This includes throttling and when the server is unavailable.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseException">A general failure occurred.</exception>
      <returns>
            A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Cloud.DocumentDb.IDatabaseResponse`1" /> that wraps the asynchronous operation result.
            The result is <see langword="true" /> when the throughput replaced successfully.
            The <see langword="false" /> indicating the operation is pending.</returns>
    </member>
    <member name="T:System.Cloud.DocumentDb.IDocumentDatabase`1">
      <summary>
            An interface for injecting <see cref="T:System.Cloud.DocumentDb.IDocumentDatabase" /> to a specific context.</summary>
      <typeparam name="TContext">The context type, indicating injection preferences.</typeparam>
    </member>
    <member name="T:System.Cloud.DocumentDb.IDocumentReader`1">
      <summary>
            An interface to clients for all document oriented (or NoSQL) databases for document read operations.
            https://en.wikipedia.org/wiki/Document-oriented_database.</summary>
      <typeparam name="TDocument">
            The document entity type to be used as a table schema.
            Request results will be mapped to instance of this type.</typeparam>
    </member>
    <member name="M:System.Cloud.DocumentDb.IDocumentReader`1.CountDocumentsAsync(System.Cloud.DocumentDb.QueryRequestOptions{`0},System.Func{System.Linq.IQueryable{`0},System.Linq.IQueryable{`0}},System.Threading.CancellationToken)">
      <summary>
            Counts documents which satisfy a query conditions in a table.</summary>
      <param name="options">The query request options.</param>
      <param name="condition">The condition function.</param>
      <param name="cancellationToken">The token represents request cancellation.</param>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseClientException">Thrown when an error occurred on a client side.
            For example on a bad request, permissions error or client timeout.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseServerException">Thrown when an error occurred on a database server side,
            including internal server error.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseRetryableException">Thrown when a request failed but can be retried.
            This includes throttling and server not available cases.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseException">A generic exception thrown in all other not covered above cases.</exception>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a count of documents.</returns>
    </member>
    <member name="M:System.Cloud.DocumentDb.IDocumentReader`1.FetchDocumentsAsync``1(System.Cloud.DocumentDb.QueryRequestOptions{`0},System.Func{System.Linq.IQueryable{`0},System.Linq.IQueryable{``0}},System.Threading.CancellationToken)">
      <summary>
            Fetches a collection of documents.</summary>
      <param name="options">The request options.</param>
      <param name="condition">The fetch condition function.</param>
      <param name="cancellationToken">The token represents request cancellation.</param>
      <typeparam name="TOutputDocument">The type used to map results from <typeparamref name="TDocument" /> after condition is applied.</typeparam>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseClientException">Thrown when an error occurred on a client side.
            For example on a bad request, permissions error or client timeout.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseServerException">Thrown when an error occurred on a database server side,
            including internal server error.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseRetryableException">Thrown when a request failed but can be retried.
            This includes throttling and server not available cases.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseException">A generic exception thrown in all other not covered above cases.</exception>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Cloud.DocumentDb.IDatabaseResponse`1" /> that wraps enumerable of fetched documents.</returns>
    </member>
    <member name="M:System.Cloud.DocumentDb.IDocumentReader`1.QueryDocumentsAsync(System.Cloud.DocumentDb.QueryRequestOptions{`0},System.Cloud.DocumentDb.Query,System.Threading.CancellationToken)">
      <summary>
            Fetches a collection of documents using a custom query provided.</summary>
      <param name="options">The query request options.</param>
      <param name="query">The query to fetch items.</param>
      <param name="cancellationToken">The token represents request cancellation.</param>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseClientException">Thrown when an error occurred on a client side.
            For example on a bad request, permissions error or client timeout.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseServerException">Thrown when an error occurred on a database server side,
            including internal server error.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseRetryableException">Thrown when a request failed but can be retried.
            This includes throttling and server not available cases.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseException">A generic exception thrown in all other not covered above cases.</exception>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Cloud.DocumentDb.IDatabaseResponse`1" /> that wraps enumerable of fetched documents.</returns>
    </member>
    <member name="M:System.Cloud.DocumentDb.IDocumentReader`1.ReadDocumentAsync(System.Cloud.DocumentDb.RequestOptions{`0},System.String,System.Threading.CancellationToken)">
      <summary>
            Reads a document.</summary>
      <param name="requestOptions">The request options.</param>
      <param name="id">The document id requested to read.</param>
      <param name="cancellationToken">The token represents request cancellation.</param>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseClientException">Thrown when an error occurred on a client side.
            For example on a bad request, permissions error or client timeout.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseServerException">Thrown when an error occurred on a database server side,
            including internal server error.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseRetryableException">Thrown when a request failed but can be retried.
            This includes throttling and server not available cases.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseException">A generic exception thrown in all other not covered above cases.</exception>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Cloud.DocumentDb.IDatabaseResponse`1" /> that wraps the result document.</returns>
    </member>
    <member name="T:System.Cloud.DocumentDb.IDocumentWriter`1">
      <summary>
            An interface to clients for all document oriented (or NoSQL) databases for document write operations.
            https://en.wikipedia.org/wiki/Document-oriented_database.</summary>
      <typeparam name="TDocument">
            The document entity type to be used as a table schema.
            Request results will be mapped to instance of this type.</typeparam>
    </member>
    <member name="M:System.Cloud.DocumentDb.IDocumentWriter`1.CreateDocumentAsync(System.Cloud.DocumentDb.RequestOptions{`0},System.Threading.CancellationToken)">
      <summary>
            Creates a document provided at <see cref="P:System.Cloud.DocumentDb.RequestOptions`1.Document" />.</summary>
      <param name="options">The request options.</param>
      <param name="cancellationToken">The token represents request cancellation.</param>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseClientException">Thrown when an error occurred on a client side.
            For example on a bad request, permissions error or client timeout.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseServerException">Thrown when an error occurred on a database server side,
            including internal server error.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseRetryableException">Thrown when a request failed but can be retried.
            This includes throttling and server not available cases.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseException">A generic exception thrown in all other not covered above cases.</exception>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Cloud.DocumentDb.IDatabaseResponse`1" /> that wraps the created document.</returns>
    </member>
    <member name="M:System.Cloud.DocumentDb.IDocumentWriter`1.DeleteDocumentAsync(System.Cloud.DocumentDb.RequestOptions{`0},System.String,System.Threading.CancellationToken)">
      <summary>
            Deletes a document associated with the id.</summary>
      <param name="options">The request options.</param>
      <param name="id">The id of the document to be deleted.</param>
      <param name="cancellationToken">The token represents request cancellation.</param>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseClientException">Thrown when an error occurred on a client side.
            For example on a bad request, permissions error or client timeout.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseServerException">Thrown when an error occurred on a database server side,
            including internal server error.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseRetryableException">Thrown when a request failed but can be retried.
            This includes throttling and server not available cases.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseException">A generic exception thrown in all other not covered above cases.</exception>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Cloud.DocumentDb.IDatabaseResponse`1" /> that wraps the asynchronous operation result.
            Result of the operation is true when deletion succeed, false if failed.</returns>
    </member>
    <member name="M:System.Cloud.DocumentDb.IDocumentWriter`1.ExecuteTransactionalBatchAsync(System.Cloud.DocumentDb.RequestOptions{`0},System.Collections.Generic.IReadOnlyList{System.Cloud.DocumentDb.BatchItem{`0}},System.Threading.CancellationToken)">
      <summary>
            Transactionally executes a set of operations.</summary>
      <param name="requestOptions">The request options.</param>
      <param name="itemsToPerformTransactionalBatch">
        <see cref="T:System.Collections.Generic.IList`1" /> to perform transaction batch.</param>
      <param name="cancellationToken">The token represents request cancellation.</param>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseClientException">Thrown when an error occurred on a client side.
            For example on a bad request, permissions error or client timeout.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseServerException">Thrown when an error occurred on a database server side,
            including internal server error.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseRetryableException">Thrown when a request failed but can be retried.
            This includes throttling and server not available cases.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseException">A generic exception thrown in all other not covered above cases.</exception>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Collections.Generic.IList`1" /> of <see cref="T:System.Cloud.DocumentDb.IDatabaseResponse`1" /> that wraps transaction operation response.</returns>
    </member>
    <member name="M:System.Cloud.DocumentDb.IDocumentWriter`1.InsertOrUpdateDocumentAsync(System.Cloud.DocumentDb.RequestOptions{`0},System.String,System.Func{`0,`0},System.Threading.CancellationToken)">
      <summary>
            Tries to insert or update a document with provided document id with value provided in <see cref="P:System.Cloud.DocumentDb.RequestOptions`1.Document" />.</summary>
      <param name="options">The request options.</param>
      <param name="id">The document id.</param>
      <param name="conflictResolveFunc">Func used to resolve conflict if there are documents in DB.</param>
      <param name="cancellationToken">The token represents request cancellation.</param>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseClientException">Thrown when an error occurred on a client side.
            For example on a bad request, permissions error or client timeout.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseServerException">Thrown when an error occurred on a database server side,
            including internal server error.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseRetryableException">Thrown when a request failed but can be retried.
            This includes throttling and server not available cases.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseException">A generic exception thrown in all other not covered above cases.</exception>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Cloud.DocumentDb.IDatabaseResponse`1" /> that wraps the updated document.</returns>
    </member>
    <member name="M:System.Cloud.DocumentDb.IDocumentWriter`1.PatchDocumentAsync(System.Cloud.DocumentDb.RequestOptions{`0},System.String,System.Collections.Generic.IReadOnlyList{System.Cloud.DocumentDb.PatchOperation},System.String,System.Threading.CancellationToken)">
      <summary>
            Patches a document.</summary>
      <param name="options">The request options.</param>
      <param name="id">The document id requested to patched.</param>
      <param name="patchOperations">The patch operations to be applied.</param>
      <param name="filter">The predicate filter to be checked before patch applied.</param>
      <param name="cancellationToken">The token represents request cancellation.</param>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseClientException">Thrown when an error occurred on a client side.
            For example on a bad request, permissions error or client timeout.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseServerException">Thrown when an error occurred on a database server side,
            including internal server error.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseRetryableException">Thrown when a request failed but can be retried.
            This includes throttling and server not available cases.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseException">A generic exception thrown in all other not covered above cases.</exception>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Cloud.DocumentDb.IDatabaseResponse`1" /> that wraps the result document.</returns>
    </member>
    <member name="M:System.Cloud.DocumentDb.IDocumentWriter`1.ReplaceDocumentAsync(System.Cloud.DocumentDb.RequestOptions{`0},System.String,System.Threading.CancellationToken)">
      <summary>
            Replaces a document having provided id with <see cref="P:System.Cloud.DocumentDb.RequestOptions`1.Document" />.</summary>
      <param name="options">The request options.</param>
      <param name="id">Id of the document to replace.</param>
      <param name="cancellationToken">The token represents request cancellation.</param>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseClientException">Thrown when an error occurred on a client side.
            For example on a bad request, permissions error or client timeout.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseServerException">Thrown when an error occurred on a database server side,
            including internal server error.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseRetryableException">Thrown when a request failed but can be retried.
            This includes throttling and server not available cases.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseException">A generic exception thrown in all other not covered above cases.</exception>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Cloud.DocumentDb.IDatabaseResponse`1" /> that wraps the updated document.</returns>
    </member>
    <member name="M:System.Cloud.DocumentDb.IDocumentWriter`1.UpsertDocumentAsync(System.Cloud.DocumentDb.RequestOptions{`0},System.Threading.CancellationToken)">
      <summary>
            Upserts a document provided in <see cref="P:System.Cloud.DocumentDb.RequestOptions`1.Document" />.</summary>
      <param name="options">The request options.</param>
      <param name="cancellationToken">The token represents request cancellation.</param>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseClientException">Thrown when an error occurred on a client side.
            For example on a bad request, permissions error or client timeout.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseServerException">Thrown when an error occurred on a database server side,
            including internal server error.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseRetryableException">Thrown when a request failed but can be retried.
            This includes throttling and server not available cases.</exception>
      <exception cref="T:System.Cloud.DocumentDb.DatabaseException">A generic exception thrown in all other not covered above cases.</exception>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Cloud.DocumentDb.IDatabaseResponse`1" /> that wraps the updated document.</returns>
    </member>
    <member name="T:System.Cloud.DocumentDb.ITableLocator">
      <summary>
            Provides a way to adjust table parameters based on a specific document.</summary>
    </member>
    <member name="M:System.Cloud.DocumentDb.ITableLocator.LocateTable(System.Cloud.DocumentDb.TableInfo@|System.Runtime.InteropServices.InAttribute,System.Cloud.DocumentDb.RequestOptions)">
      <summary>
            Provides a way to adjust table and request parameters for a specified request.</summary>
      <param name="options">The original table options.</param>
      <param name="request">The target request.</param>
      <returns>A new table options, or the input options if no adjustments are needed.</returns>
    </member>
    <member name="T:System.Cloud.DocumentDb.PatchOperation">
      <summary>
            Describes patch operation details.</summary>
    </member>
    <member name="M:System.Cloud.DocumentDb.PatchOperation.Add``1(System.String,``0)">
      <summary>
            Creates patch details for add operation.</summary>
      <param name="path">The path to be patched.</param>
      <param name="value">The value to be patched.</param>
      <typeparam name="T">The type of value to be patched.</typeparam>
      <returns>Created patch operation.</returns>
    </member>
    <member name="M:System.Cloud.DocumentDb.PatchOperation.Increment(System.String,System.Double)">
      <summary>
            Creates patch details for increment by double operation.</summary>
      <param name="path">The path to be patched.</param>
      <param name="value">The double value to be incremented by.</param>
      <returns>Created patch operation.</returns>
    </member>
    <member name="M:System.Cloud.DocumentDb.PatchOperation.Increment(System.String,System.Int64)">
      <summary>
            Creates patch details for increment by long operation.</summary>
      <param name="path">The path to be patched.</param>
      <param name="value">The long value to be incremented by.</param>
      <returns>Created patch operation.</returns>
    </member>
    <member name="M:System.Cloud.DocumentDb.PatchOperation.Remove(System.String)">
      <summary>
            Creates patch details for remove operation.</summary>
      <param name="path">The path to be patched.</param>
      <returns>Created patch operation.</returns>
    </member>
    <member name="M:System.Cloud.DocumentDb.PatchOperation.Replace``1(System.String,``0)">
      <summary>
            Creates patch details for replace operation.</summary>
      <param name="path">The path to be patched.</param>
      <param name="value">The value to be patched.</param>
      <typeparam name="T">The type of value to be patched.</typeparam>
      <returns>Created patch operation.</returns>
    </member>
    <member name="M:System.Cloud.DocumentDb.PatchOperation.Set``1(System.String,``0)">
      <summary>
            Creates patch details for set operation.</summary>
      <param name="path">The path to be patched.</param>
      <param name="value">The value to be patched.</param>
      <typeparam name="T">The type of value to be patched.</typeparam>
      <returns>Created patch operation.</returns>
    </member>
    <member name="P:System.Cloud.DocumentDb.PatchOperation.OperationType">
      <summary>
            Gets the patch operation type.</summary>
    </member>
    <member name="P:System.Cloud.DocumentDb.PatchOperation.Path">
      <summary>
            Gets the patch operation path.</summary>
    </member>
    <member name="P:System.Cloud.DocumentDb.PatchOperation.Value">
      <summary>
            Gets the patch operation value.</summary>
    </member>
    <member name="T:System.Cloud.DocumentDb.PatchOperationType">
      <summary>
            Enum representing patch operation type.</summary>
    </member>
    <member name="F:System.Cloud.DocumentDb.PatchOperationType.Add">
      <summary>
            Represents add operation.</summary>
    </member>
    <member name="F:System.Cloud.DocumentDb.PatchOperationType.Increment">
      <summary>
            Represents increment operation.</summary>
    </member>
    <member name="F:System.Cloud.DocumentDb.PatchOperationType.Remove">
      <summary>
            Represents remove operation.</summary>
    </member>
    <member name="F:System.Cloud.DocumentDb.PatchOperationType.Replace">
      <summary>
            Represents replace operation.</summary>
    </member>
    <member name="F:System.Cloud.DocumentDb.PatchOperationType.Set">
      <summary>
            Represents set operation.</summary>
    </member>
    <member name="T:System.Cloud.DocumentDb.Query">
      <summary>
            Represents a query with parameters.</summary>
    </member>
    <member name="M:System.Cloud.DocumentDb.Query.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Cloud.DocumentDb.Query" /> struct.</summary>
      <param name="queryText">The query text.</param>
    </member>
    <member name="M:System.Cloud.DocumentDb.Query.#ctor(System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
      <summary>
            Initializes a new instance of the <see cref="T:System.Cloud.DocumentDb.Query" /> struct.</summary>
      <param name="queryText">The query text.</param>
      <param name="parameters">The query parameters.</param>
    </member>
    <member name="P:System.Cloud.DocumentDb.Query.Parameters">
      <summary>
            Gets the query parameters.</summary>
    </member>
    <member name="P:System.Cloud.DocumentDb.Query.QueryText">
      <summary>
            Gets the query text.</summary>
    </member>
    <member name="T:System.Cloud.DocumentDb.QueryRequestOptions`1">
      <summary>
            Defines parameters to be used by store engine for queries.</summary>
      <typeparam name="TDocument">
            The document entity type to be used as a table schema.
            Request results will be mapped to instance of this type.</typeparam>
    </member>
    <member name="M:System.Cloud.DocumentDb.QueryRequestOptions`1.#ctor" />
    <member name="P:System.Cloud.DocumentDb.QueryRequestOptions`1.ContinuationToken">
      <summary>
            Gets or sets continuation token to continue reading from a breakpoint.</summary>
    </member>
    <member name="P:System.Cloud.DocumentDb.QueryRequestOptions`1.EnableLowPrecisionOrderBy">
      <summary>
            Gets or sets the option to enable low precision order by.</summary>
    </member>
    <member name="P:System.Cloud.DocumentDb.QueryRequestOptions`1.EnableScan">
      <summary>
            Gets or sets the option to enable scans on the queries which couldn't be served
            as indexing was opted out on the requested paths.</summary>
    </member>
    <member name="P:System.Cloud.DocumentDb.QueryRequestOptions`1.FetchCondition">
      <summary>
            Gets or sets the fetch condition.</summary>
    </member>
    <member name="P:System.Cloud.DocumentDb.QueryRequestOptions`1.MaxBufferedItemCount">
      <summary>
            Gets or sets the maximum number of items that can be buffered client side during parallel query execution.</summary>
    </member>
    <member name="P:System.Cloud.DocumentDb.QueryRequestOptions`1.MaxConcurrency">
      <summary>
            Gets or sets the number of concurrent operations run client side during parallel query execution.</summary>
    </member>
    <member name="P:System.Cloud.DocumentDb.QueryRequestOptions`1.MaxResults">
      <summary>
            Gets or sets the maximum number of items to be returned.</summary>
    </member>
    <member name="P:System.Cloud.DocumentDb.QueryRequestOptions`1.ResponseContinuationTokenLimitInKb">
      <summary>
            Gets or sets the continuation token size limit.</summary>
    </member>
    <member name="T:System.Cloud.DocumentDb.RegionalDatabaseOptions">
      <summary>
            Represents region-specific configurations for databases.</summary>
    </member>
    <member name="M:System.Cloud.DocumentDb.RegionalDatabaseOptions.#ctor" />
    <member name="P:System.Cloud.DocumentDb.RegionalDatabaseOptions.DatabaseName">
      <summary>
            Gets or sets the regional database name.</summary>
      <returns>The default value is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Cloud.DocumentDb.RegionalDatabaseOptions.Endpoint">
      <summary>
            Gets or sets the regional database endpoint.</summary>
    </member>
    <member name="P:System.Cloud.DocumentDb.RegionalDatabaseOptions.FailoverRegions">
      <summary>
            Gets or sets a list of preferred regions used for SDK to define failover order for regional database.</summary>
      <returns>
            The default value is an empty <see cref="T:System.Collections.Generic.Dictionary`2" />.</returns>
    </member>
    <member name="P:System.Cloud.DocumentDb.RegionalDatabaseOptions.PrimaryKey">
      <summary>
            Gets or sets the key to the account or resource token.</summary>
      <returns>The default value is <see langword="null" />.</returns>
    </member>
    <member name="T:System.Cloud.DocumentDb.RequestInfo">
      <summary>
            Describes the request information.</summary>
    </member>
    <member name="M:System.Cloud.DocumentDb.RequestInfo.#ctor(System.String,System.String,System.Nullable{System.Double},System.Uri)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Cloud.DocumentDb.RequestInfo" /> struct.</summary>
      <param name="region">The request region.</param>
      <param name="tableName">The request table name.</param>
      <param name="cost">The request cost.</param>
      <param name="endpoint">The endpoint used for request.</param>
    </member>
    <member name="P:System.Cloud.DocumentDb.RequestInfo.Cost">
      <summary>
            Gets the cost of the request in database defined units if available.</summary>
    </member>
    <member name="P:System.Cloud.DocumentDb.RequestInfo.Endpoint">
      <summary>
            Gets the endpoint used for request.</summary>
    </member>
    <member name="P:System.Cloud.DocumentDb.RequestInfo.Region">
      <summary>
            Gets target region, if available.</summary>
    </member>
    <member name="P:System.Cloud.DocumentDb.RequestInfo.TableName">
      <summary>
            Gets target table name, if available.</summary>
    </member>
    <member name="T:System.Cloud.DocumentDb.RequestOptions">
      <summary>
            Defines parameters to be used by store engine.</summary>
    </member>
    <member name="M:System.Cloud.DocumentDb.RequestOptions.#ctor" />
    <member name="P:System.Cloud.DocumentDb.RequestOptions.ConsistencyLevel">
      <summary>
            Gets or sets the consistency level required for the request.</summary>
      <returns>
            The default is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Cloud.DocumentDb.RequestOptions.ContentResponseOnWrite">
      <summary>
            Gets or sets a value indicating whether written object should be returned back after write operations.</summary>
      <returns>
            The default value is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Cloud.DocumentDb.RequestOptions.ItemVersion">
      <summary>
            Gets or sets the item version parameter to control item version for concurrent modifications.</summary>
      <returns>
            The default is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Cloud.DocumentDb.RequestOptions.PartitionKey">
      <summary>
            Gets or sets the partition key elements for the current request.</summary>
      <returns>
            The default is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Cloud.DocumentDb.RequestOptions.Region">
      <summary>
            Gets or sets the region ID.</summary>
      <returns>
            The default is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Cloud.DocumentDb.RequestOptions.SessionToken">
      <summary>
            Gets or sets the token for use with session consistency.</summary>
      <returns>
            The default is <see langword="null" />.</returns>
    </member>
    <member name="T:System.Cloud.DocumentDb.RequestOptions`1">
      <summary>
            Defines parameters to be used by store engine.</summary>
      <typeparam name="TDocument">
            The document entity type to be used as a table schema.
            Operation results from database will be mapped to instance of this type.</typeparam>
    </member>
    <member name="M:System.Cloud.DocumentDb.RequestOptions`1.#ctor" />
    <member name="P:System.Cloud.DocumentDb.RequestOptions`1.Document">
      <summary>
            Gets or sets the document value.</summary>
    </member>
    <member name="T:System.Cloud.DocumentDb.TableInfo">
      <summary>
            Represents read-only table configurations.</summary>
    </member>
    <member name="M:System.Cloud.DocumentDb.TableInfo.#ctor(System.Cloud.DocumentDb.TableInfo@,System.String,System.Nullable{System.Boolean})">
      <summary>
            Initializes a new instance of the <see cref="T:System.Cloud.DocumentDb.TableInfo" /> struct.</summary>
      <param name="info">The source table info.</param>
      <param name="tableNameOverride">The table name.</param>
      <param name="isRegionalOverride">
        <see langword="true" /> to mark the table as regional; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Cloud.DocumentDb.TableInfo.#ctor(System.Cloud.DocumentDb.TableOptions)">
      <summary>
            Initializes a new instance of the <see cref="T:System.Cloud.DocumentDb.TableInfo" /> struct.</summary>
      <param name="options">The table options.</param>
    </member>
    <member name="P:System.Cloud.DocumentDb.TableInfo.IsLocatorRequired">
      <summary>
            Gets a value indicating whether a <see cref="T:System.Cloud.DocumentDb.ITableLocator" /> is required to be used with this table.</summary>
      <returns>
        <see langword="true" /> to use a locator;
            <see langword="false" /> if a locator isn't used even if configured.
            The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Cloud.DocumentDb.TableInfo.IsRegional">
      <summary>
            Gets a value indicating whether table is regionally replicated or a global.</summary>
      <returns>
        <see langword="true" /> if the table is regional;
            <see langword="false" /> if it's global.
            The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Cloud.DocumentDb.TableInfo.PartitionIdPath">
      <summary>
            Gets the partition ID path for store.</summary>
      <returns>
            The default is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Cloud.DocumentDb.TableInfo.TableName">
      <summary>
            Gets the table name.</summary>
      <returns>
            The default is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="P:System.Cloud.DocumentDb.TableInfo.Throughput">
      <summary>
            Gets the table throughput value.</summary>
      <returns>
            The default is <see cref="F:System.Cloud.DocumentDb.Throughput.Unlimited" />.</returns>
    </member>
    <member name="P:System.Cloud.DocumentDb.TableInfo.TimeToLive">
      <summary>
            Gets the time to live for table items.</summary>
      <returns>
            The default is <see langword="null" />.</returns>
    </member>
    <member name="T:System.Cloud.DocumentDb.TableOptions">
      <summary>
            Represents table configurations.</summary>
    </member>
    <member name="M:System.Cloud.DocumentDb.TableOptions.#ctor" />
    <member name="P:System.Cloud.DocumentDb.TableOptions.IsLocatorRequired">
      <summary>
            Gets or sets a value indicating whether a <see cref="T:System.Cloud.DocumentDb.ITableLocator" /> required to be used with this table.</summary>
      <returns>
            The default is <see langword="false" />, which means a locator will not be used even if configured.</returns>
    </member>
    <member name="P:System.Cloud.DocumentDb.TableOptions.IsRegional">
      <summary>
            Gets or sets a value indicating whether table is regionally replicated or a global.</summary>
    </member>
    <member name="P:System.Cloud.DocumentDb.TableOptions.PartitionIdPath">
      <summary>
            Gets or sets the partition id path for store.</summary>
    </member>
    <member name="P:System.Cloud.DocumentDb.TableOptions.TableName">
      <summary>
            Gets or sets the table name.</summary>
    </member>
    <member name="P:System.Cloud.DocumentDb.TableOptions.Throughput">
      <summary>
            Gets or sets the table throughput value.</summary>
      <returns>
            The default is <see cref="F:System.Cloud.DocumentDb.Throughput.Unlimited" />.</returns>
    </member>
    <member name="P:System.Cloud.DocumentDb.TableOptions.TimeToLive">
      <summary>
            Gets or sets the time to live for table items.</summary>
    </member>
    <member name="T:System.Cloud.DocumentDb.Throughput">
      <summary>
            The structure to define throughput.</summary>
    </member>
    <member name="F:System.Cloud.DocumentDb.Throughput.Unlimited">
      <summary>
            The constant for unlimited throughput.</summary>
    </member>
    <member name="M:System.Cloud.DocumentDb.Throughput.#ctor(System.Nullable{System.Int32})">
      <summary>
            Initializes a new instance of the <see cref="T:System.Cloud.DocumentDb.Throughput" /> struct.</summary>
      <param name="throughput">The throughput.</param>
    </member>
    <member name="P:System.Cloud.DocumentDb.Throughput.Value">
      <summary>
            Gets throughput value.</summary>
    </member>
  </members>
</doc>