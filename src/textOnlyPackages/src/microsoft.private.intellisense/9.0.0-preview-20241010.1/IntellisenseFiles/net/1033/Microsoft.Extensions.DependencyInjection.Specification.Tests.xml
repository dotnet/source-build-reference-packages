<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Extensions.DependencyInjection.Specification.Tests</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Extensions.DependencyInjection.ClassWithInternalConstructor" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor.#ctor(System.String)">
      <param name="whatever" />
    </member>
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtor.Whatever" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtorWithStructs" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtorWithStructs.#ctor(System.DateTime,System.DateTime,System.TimeSpan,System.TimeSpan,System.DateTimeOffset,System.DateTimeOffset,System.Guid,System.Guid,Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtorWithStructs.CustomStruct,Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtorWithStructs.CustomStruct,System.Nullable{System.ConsoleColor},System.Nullable{System.ConsoleColor},System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtorWithStructs.StructWithPublicDefaultConstructor)">
      <param name="dateTime" />
      <param name="dateTimeDefault" />
      <param name="timeSpan" />
      <param name="timeSpanDefault" />
      <param name="dateTimeOffset" />
      <param name="dateTimeOffsetDefault" />
      <param name="guid" />
      <param name="guidDefault" />
      <param name="customStruct" />
      <param name="customStructDefault" />
      <param name="color" />
      <param name="colorNull" />
      <param name="integer" />
      <param name="integerNull" />
      <param name="structWithConstructor" />
    </member>
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtorWithStructs.Color" />
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtorWithStructs.ColorNull" />
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtorWithStructs.Integer" />
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtorWithStructs.IntegerNull" />
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtorWithStructs.StructWithConstructor" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtorWithStructs.CustomStruct" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtorWithStructs.StructWithPublicDefaultConstructor" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtorWithStructs.StructWithPublicDefaultConstructor.#ctor" />
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.ClassWithOptionalArgsCtorWithStructs.StructWithPublicDefaultConstructor.ConstructorInvoked" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.AbstractClass" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.AbstractClass.#ctor" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClass" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClass.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService)">
      <param name="fakeService" />
    </member>
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClass.FakeService" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,System.String,System.String)">
      <param name="fakeService" />
      <param name="one" />
      <param name="two" />
    </member>
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData.FakeService" />
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData.One" />
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.AnotherClassAcceptingData.Two" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassAlsoInheritingAbstractClass" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassAlsoInheritingAbstractClass.#ctor" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassImplementingIComparable" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassImplementingIComparable.#ctor" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassImplementingIComparable.CompareTo(Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassImplementingIComparable)">
      <param name="other" />
    </member>
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassImplementingIEnumerable" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassImplementingIEnumerable.#ctor" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassImplementingIEnumerable.GetEnumerator" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassInheritingAbstractClass" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassInheritingAbstractClass.#ctor" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassInheritingClassInheritingAbstractClass" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassInheritingClassInheritingAbstractClass.#ctor" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAbstractClassConstraint`1">
      <typeparam name="T" />
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAbstractClassConstraint`1.#ctor(`0)">
      <param name="value" />
    </member>
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAbstractClassConstraint`1.Value" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,System.Int32)">
      <param name="service" />
      <param name="data" />
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,System.String,System.Int32)">
      <param name="service" />
      <param name="data1" />
      <param name="data2" />
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,System.String)">
      <param name="service" />
      <param name="data" />
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.#ctor(System.String)">
      <param name="data" />
    </member>
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.CtorUsed" />
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.Data1" />
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.Data2" />
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtors.FakeService" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtorsAndAttribute" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtorsAndAttribute.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOuterService,System.String)">
      <param name="service" />
      <param name="service2" />
      <param name="data" />
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtorsAndAttribute.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,System.String)">
      <param name="service" />
      <param name="data" />
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtorsAndAttribute.#ctor(System.String)">
      <param name="data" />
    </member>
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithAmbiguousCtorsAndAttribute.CtorUsed" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithClassConstraint`1">
      <typeparam name="T" />
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithClassConstraint`1.#ctor" />
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithClassConstraint`1.Value" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithInterfaceConstraint`1">
      <typeparam name="T" />
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithInterfaceConstraint`1.#ctor(`0)">
      <param name="value" />
    </member>
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithInterfaceConstraint`1.Value" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithMultipleMarkedCtors" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithMultipleMarkedCtors.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,System.String)">
      <param name="service" />
      <param name="data" />
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithMultipleMarkedCtors.#ctor(System.String)">
      <param name="data" />
    </member>
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithNestedReferencesToProvider" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithNestedReferencesToProvider.#ctor(System.IServiceProvider)">
      <param name="serviceProvider" />
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithNestedReferencesToProvider.Dispose" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithNewConstraint`1">
      <typeparam name="T" />
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithNewConstraint`1.#ctor" />
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithNewConstraint`1.Value" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithNoConstraints`1">
      <typeparam name="T" />
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithNoConstraints`1.#ctor" />
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithNoConstraints`1.Value" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithPrivateCtor" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithProtectedConstructor" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithSelfReferencingConstraint`1">
      <typeparam name="T" />
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithSelfReferencingConstraint`1.#ctor(`0)">
      <param name="value" />
    </member>
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithSelfReferencingConstraint`1.Value" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithServiceProvider" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithServiceProvider.#ctor(System.IServiceProvider)">
      <param name="serviceProvider" />
    </member>
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithServiceProvider.ServiceProvider" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithStaticCtor" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithStaticCtor.#ctor" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithStructConstraint`1">
      <typeparam name="T" />
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithStructConstraint`1.#ctor" />
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithStructConstraint`1.Value" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithThrowingCtor" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithThrowingCtor.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService)">
      <param name="service" />
    </member>
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithThrowingEmptyCtor" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ClassWithThrowingEmptyCtor.#ctor" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ConstrainedFakeOpenGenericService`1">
      <typeparam name="TVal" />
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ConstrainedFakeOpenGenericService`1.#ctor(`0)">
      <param name="value" />
    </member>
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ConstrainedFakeOpenGenericService`1.Value" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.CreationCountFakeService" />
    <member name="F:Microsoft.Extensions.DependencyInjection.Specification.Fakes.CreationCountFakeService.InstanceLock" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.CreationCountFakeService.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService)">
      <param name="dependency" />
    </member>
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.CreationCountFakeService.InstanceCount" />
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.CreationCountFakeService.InstanceId" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeDisposableCallbackInnerService" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeDisposableCallbackInnerService.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeDisposeCallback)">
      <param name="callback" />
    </member>
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeDisposableCallbackOuterService" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeDisposableCallbackOuterService.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,System.Collections.Generic.IEnumerable{Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeMultipleService},Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeDisposeCallback)">
      <param name="singleService" />
      <param name="multipleServices" />
      <param name="callback" />
    </member>
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeDisposableCallbackOuterService.MultipleServices" />
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeDisposableCallbackOuterService.SingleService" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeDisposableCallbackService" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeDisposableCallbackService.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeDisposeCallback)">
      <param name="callback" />
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeDisposableCallbackService.Dispose" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeDisposableCallbackService.ToString" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeDisposeCallback" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeDisposeCallback.#ctor" />
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeDisposeCallback.Disposed" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeOneMultipleService" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeOneMultipleService.#ctor" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeOpenGenericService`1">
      <typeparam name="TVal" />
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeOpenGenericService`1.#ctor(`0)">
      <param name="value" />
    </member>
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeOpenGenericService`1.Value" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeOuterService" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeOuterService.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,System.Collections.Generic.IEnumerable{Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeMultipleService})">
      <param name="singleService" />
      <param name="multipleServices" />
    </member>
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeOuterService.MultipleServices" />
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeOuterService.SingleService" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeService" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeService.#ctor" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeService.Dispose" />
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeService.Disposed" />
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeService.Value" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeTwoMultipleService" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.FakeTwoMultipleService.#ctor" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService" />
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService.FakeService" />
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService.Value" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeEveryService" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeMultipleService" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService`1">
      <typeparam name="TValue" />
    </member>
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOpenGenericService`1.Value" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOuterService" />
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOuterService.MultipleServices" />
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeOuterService.SingleService" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeScopedService" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeServiceInstance" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeSingletonService" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.INonexistentService" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.PocoClass" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.PocoClass.#ctor" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ScopedFactoryService" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ScopedFactoryService.#ctor" />
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ScopedFactoryService.FakeService" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.ScopedFactoryService,Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService)">
      <param name="scopedService" />
      <param name="transientService" />
    </member>
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService.ScopedService" />
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.ServiceAcceptingFactoryService.TransientService" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.TransientFactoryService" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.TransientFactoryService.#ctor" />
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.TransientFactoryService.FakeService" />
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.TransientFactoryService.Value" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService)">
      <param name="factoryService" />
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeMultipleService,Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService,Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeScopedService)">
      <param name="multipleService" />
      <param name="factoryService" />
      <param name="fakeService" />
      <param name="scopedService" />
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService)">
      <param name="fakeService" />
      <param name="factoryService" />
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService,Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeMultipleService,Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFactoryService)">
      <param name="fakeService" />
      <param name="multipleService" />
      <param name="factoryService" />
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.#ctor(Microsoft.Extensions.DependencyInjection.Specification.Fakes.IFakeService)">
      <param name="fakeService" />
    </member>
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.FactoryService" />
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.MultipleService" />
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.ScopedService" />
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.Fakes.TypeWithSupersetConstructors.Service" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.#ctor" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.ClosedGenericsWithIsKeyedService" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.CreateServiceProvider(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
      <param name="collection" />
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.CreateServiceWithKeyedParameter" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.ExplicitServiceRegistrationWithIsKeyedService" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.IEnumerableWithIsKeyedServiceAlwaysReturnsTrue" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.NonKeyedServiceWithIsKeyedService" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.OpenGenericsWithIsKeyedService" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.ResolveKeyedGenericServices" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.ResolveKeyedOpenGenericService" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.ResolveKeyedScopedFromScopeServiceProvider" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.ResolveKeyedService" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.ResolveKeyedServices" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.ResolveKeyedServicesAnyKey" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.ResolveKeyedServicesAnyKeyWithAnyKeyRegistration" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.ResolveKeyedServiceSingletonFactory" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.ResolveKeyedServiceSingletonFactoryWithAnyKey" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.ResolveKeyedServiceSingletonFactoryWithAnyKeyIgnoreWrongType" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.ResolveKeyedServiceSingletonInstance" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.ResolveKeyedServiceSingletonInstanceWithAnyKey" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.ResolveKeyedServiceSingletonInstanceWithKeyedParameter" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.ResolveKeyedServiceSingletonInstanceWithKeyInjection" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.ResolveKeyedServiceSingletonType" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.ResolveKeyedServicesSingletonInstanceWithAnyKey" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.ResolveKeyedServiceTransientFactory" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.ResolveKeyedServiceTransientType" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.ResolveKeyedServiceTransientTypeWithAnyKey" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.ResolveKeyedServiceWithKeyedParameter_MissingRegistration_FirstParameter" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.ResolveKeyedServiceWithKeyedParameter_MissingRegistration_SecondParameter" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.ResolveKeyedServiceWithKeyedParameter_MissingRegistrationButWithDefaults" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.ResolveKeyedServiceWithKeyedParameter_MissingRegistrationButWithUnkeyedService" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.ResolveKeyedSingletonFromInjectedServiceProvider" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.ResolveKeyedSingletonFromScopeServiceProvider" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.ResolveKeyedTransientFromInjectedServiceProvider" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.ResolveKeyedTransientFromScopeServiceProvider" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.ResolveNonKeyedService" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.ResolveNullKeyedService" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.SimpleServiceKeyedResolution" />
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.SupportsIServiceProviderIsKeyedService" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.AnotherSimpleService" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.AnotherSimpleService.#ctor" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.IService" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.ISimpleService" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.OtherService" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.OtherService.#ctor(Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.IService,Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.IService)">
      <param name="service1" />
      <param name="service2" />
    </member>
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.OtherService.Service1" />
    <member name="P:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.OtherService.Service2" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.Service" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.Service.#ctor" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.Service.#ctor(System.String)">
      <param name="id" />
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.Service.ToString" />
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.SimpleParentWithDynamicKeyedService" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.SimpleParentWithDynamicKeyedService.#ctor(System.IServiceProvider)">
      <param name="serviceProvider" />
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.SimpleParentWithDynamicKeyedService.GetService(System.String)">
      <param name="name" />
    </member>
    <member name="T:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.SimpleService" />
    <member name="M:Microsoft.Extensions.DependencyInjection.Specification.KeyedDependencyInjectionSpecificationTests.SimpleService.#ctor" />
  </members>
</doc>